// Generated by dart2js (, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.9.2.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback, loadId, loadPriority):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error. The loadId argument is the deferred import that resulted in
//    this uri being loaded. The loadPriority argument is an arbitrary argument
//    string forwarded from the 'dart2js:load-priority' pragma option.
// dartDeferredLibraryMultiLoader(uris, successCallback, errorCallback, loadId, loadPriority):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of every URI in `uris`,
//    and call successCallback. If it fails to do so, it should call
//    errorCallback with an error. The loadId argument is the deferred import
//    that resulted in this uri being loaded. The loadPriority argument is an
//    arbitrary argument string forwarded from the 'dart2js:load-priority'
//    pragma option.
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  function mixinPropertiesHard(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (!to.hasOwnProperty(key)) {
        to[key] = from[key];
      }
    }
  }
  function mixinPropertiesEasy(from, to) {
    Object.assign(to, from);
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(Object.getPrototypeOf(object) && Object.getPrototypeOf(object).p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        Object.setPrototypeOf(cls.prototype, sup.prototype);
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++) {
      inherit(classes[i], sup);
    }
  }
  function mixinEasy(cls, mixin) {
    mixinPropertiesEasy(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function mixinHard(cls, mixin) {
    mixinPropertiesHard(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        holder[name] = initializer();
      }
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function lazyFinal(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        var value = initializer();
        if (holder[name] !== uninitializedSentinel) {
          A.throwLateFieldADI(name);
        }
        holder[name] = value;
      }
      var finalValue = holder[name];
      holder[getterName] = function() {
        return finalValue;
      };
      return finalValue;
    };
  }
  function makeConstList(list, rti) {
    if (rti != null)
      A._setArrayType(list, rti);
    list.$flags = 7;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i) {
      convertToFastObject(arrayOfObjects[i]);
    }
  }
  var functionCounter = 0;
  function instanceTearOffGetter(isIntercepted, parameters) {
    var cache = null;
    return isIntercepted ? function(receiver) {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(receiver, this);
    } : function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(this, null);
    };
  }
  function staticTearOffGetter(parameters) {
    var cache = null;
    return function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters).prototype;
      return cache;
    };
  }
  var typesOffset = 0;
  function tearOffParameters(container, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    if (typeof funType == "number") {
      funType += typesOffset;
    }
    return {co: container, iS: isStatic, iI: isIntercepted, rC: requiredParameterCount, dV: optionalParameterDefaultValues, cs: callNames, fs: funsOrNames, fT: funType, aI: applyIndex || 0, nDA: needsDirectAccess};
  }
  function installStaticTearOff(holder, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var parameters = tearOffParameters(holder, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, false);
    var getterFunction = staticTearOffGetter(parameters);
    holder[getterName] = getterFunction;
  }
  function installInstanceTearOff(prototype, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    isIntercepted = !!isIntercepted;
    var parameters = tearOffParameters(prototype, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, !!needsDirectAccess);
    var getterFunction = instanceTearOffGetter(isIntercepted, parameters);
    prototype[getterName] = getterFunction;
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex, false);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixinEasy, mixinHard: mixinHard, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, lazyFinal: lazyFinal, updateHolder: updateHolder, convertToFastObject: convertToFastObject, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  var J = {
    makeDispatchRecord(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor(object) {
      var proto, objectProto, $constructor, interceptor, t1,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          A.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw A.wrapException(A.UnimplementedError$("Return interceptor for " + A.S(proto(object, record))));
      }
      $constructor = object.constructor;
      if ($constructor == null)
        interceptor = null;
      else {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        interceptor = $constructor[t1];
      }
      if (interceptor != null)
        return interceptor;
      interceptor = A.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return B.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return B.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return B.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        Object.defineProperty($constructor, t1, {value: B.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return B.UnknownJavaScriptObject_methods;
      }
      return B.UnknownJavaScriptObject_methods;
    },
    JSArray_JSArray$fixed($length, $E) {
      if ($length < 0 || $length > 4294967295)
        throw A.wrapException(A.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$allocateFixed($length, $E) {
      if ($length > 4294967295)
        throw A.wrapException(A.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$growable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$allocateGrowable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$markFixed(allocation, $E) {
      var t1 = A._setArrayType(allocation, $E._eval$1("JSArray<0>"));
      t1.$flags = 1;
      return t1;
    },
    JSArray__compareAny(a, b) {
      var t1 = type$.Comparable_dynamic;
      return J.compareTo$1$ns(t1._as(a), t1._as(b));
    },
    JSString__isWhitespace(codeUnit) {
      if (codeUnit < 256)
        switch (codeUnit) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (codeUnit) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    JSString__skipLeadingWhitespace(string, index) {
      var t1, codeUnit;
      for (t1 = string.length; index < t1;) {
        codeUnit = string.charCodeAt(index);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
        ++index;
      }
      return index;
    },
    JSString__skipTrailingWhitespace(string, index) {
      var t1, index0, codeUnit;
      for (t1 = string.length; index > 0; index = index0) {
        index0 = index - 1;
        if (!(index0 < t1))
          return A.ioore(string, index0);
        codeUnit = string.charCodeAt(index0);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
      }
      return index;
    },
    getInterceptor$(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax(receiver) {
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ns(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    set$length$asx(receiver, value) {
      return J.getInterceptor$asx(receiver).set$length(receiver, value);
    },
    get$first$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$first(receiver);
    },
    get$hashCode$(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$isEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$isNotEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
    },
    get$iterator$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$length$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$reversed$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$reversed(receiver);
    },
    get$runtimeType$(receiver) {
      return J.getInterceptor$(receiver).get$runtimeType(receiver);
    },
    $eq$(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $index$asx(receiver, a0) {
      if (typeof a0 === "number")
        if (Array.isArray(receiver) || typeof receiver == "string" || A.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    add$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    allMatches$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).allMatches$1(receiver, a0);
    },
    any$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).any$1(receiver, a0);
    },
    asByteData$0$x(receiver) {
      return J.getInterceptor$x(receiver).asByteData$0(receiver);
    },
    asByteData$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).asByteData$2(receiver, a0, a1);
    },
    asFloat32List$0$x(receiver) {
      return J.getInterceptor$x(receiver).asFloat32List$0(receiver);
    },
    asUint8List$0$x(receiver) {
      return J.getInterceptor$x(receiver).asUint8List$0(receiver);
    },
    asUint8List$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).asUint8List$2(receiver, a0, a1);
    },
    cast$1$0$ax(receiver, $T1) {
      return J.getInterceptor$ax(receiver).cast$1$0(receiver, $T1);
    },
    compareTo$1$ns(receiver, a0) {
      return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
    },
    elementAt$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    every$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).every$1(receiver, a0);
    },
    join$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).join$1(receiver, a0);
    },
    map$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).map$1(receiver, a0);
    },
    map$1$1$ax(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    matchAsPrefix$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);
    },
    skip$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).skip$1(receiver, a0);
    },
    take$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).take$1(receiver, a0);
    },
    toList$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).toList$0(receiver);
    },
    toList$1$growable$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).toList$1$growable(receiver, a0);
    },
    toString$0$(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    where$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).where$1(receiver, a0);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    LegacyJavaScriptObject: function LegacyJavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JavaScriptBigInt: function JavaScriptBigInt() {
    },
    JavaScriptSymbol: function JavaScriptSymbol() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSArraySafeToStringHook: function JSArraySafeToStringHook() {
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _._length = t1;
      _._index = 0;
      _._current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSNumNotInt: function JSNumNotInt() {
    },
    JSString: function JSString() {
    }
  },
  A = {JS_CONST: function JS_CONST() {
    },
    CastIterable_CastIterable(source, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(source))
        return new A._EfficientLengthCastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("_EfficientLengthCastIterable<1,2>"));
      return new A.CastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("CastIterable<1,2>"));
    },
    LateError$fieldADI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has been assigned during initialization.");
    },
    LateError$fieldNI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has not been initialized.");
    },
    LateError$localNI(localName) {
      return new A.LateError("Local '" + localName + "' has not been initialized.");
    },
    LateError$fieldAI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has already been initialized.");
    },
    hexDigitValue(char) {
      var letter,
        digit = char ^ 48;
      if (digit <= 9)
        return digit;
      letter = char | 32;
      if (97 <= letter && letter <= 102)
        return letter - 87;
      return -1;
    },
    SystemHash_combine(hash, value) {
      hash = hash + value & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    SystemHash_finish(hash) {
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    checkNotNullable(value, $name, $T) {
      return value;
    },
    isToStringVisiting(object) {
      var t1, i;
      for (t1 = $.toStringVisiting.length, i = 0; i < t1; ++i)
        if (object === $.toStringVisiting[i])
          return true;
      return false;
    },
    SubListIterable$(_iterable, _start, _endOrLength, $E) {
      A.RangeError_checkNotNegative(_start, "start");
      if (_endOrLength != null) {
        A.RangeError_checkNotNegative(_endOrLength, "end");
        if (_start > _endOrLength)
          A.throwExpression(A.RangeError$range(_start, 0, _endOrLength, "start", null));
      }
      return new A.SubListIterable(_iterable, _start, _endOrLength, $E._eval$1("SubListIterable<0>"));
    },
    MappedIterable_MappedIterable(iterable, $function, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthMappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
      return new A.MappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    },
    TakeIterable_TakeIterable(iterable, takeCount, $E) {
      var _s9_ = "takeCount";
      A.ArgumentError_checkNotNull(takeCount, _s9_, type$.int);
      A.RangeError_checkNotNegative(takeCount, _s9_);
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthTakeIterable(iterable, takeCount, $E._eval$1("EfficientLengthTakeIterable<0>"));
      return new A.TakeIterable(iterable, takeCount, $E._eval$1("TakeIterable<0>"));
    },
    SkipIterable_SkipIterable(iterable, count, $E) {
      var _s5_ = "count";
      if (type$.EfficientLengthIterable_dynamic._is(iterable)) {
        A.ArgumentError_checkNotNull(count, _s5_, type$.int);
        A.RangeError_checkNotNegative(count, _s5_);
        return new A.EfficientLengthSkipIterable(iterable, count, $E._eval$1("EfficientLengthSkipIterable<0>"));
      }
      A.ArgumentError_checkNotNull(count, _s5_, type$.int);
      A.RangeError_checkNotNegative(count, _s5_);
      return new A.SkipIterable(iterable, count, $E._eval$1("SkipIterable<0>"));
    },
    IterableElementError_noElement() {
      return new A.StateError("No element");
    },
    IterableElementError_tooMany() {
      return new A.StateError("Too many elements");
    },
    IterableElementError_tooFew() {
      return new A.StateError("Too few elements");
    },
    _CastIterableBase: function _CastIterableBase() {
    },
    CastIterator: function CastIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastIterable: function CastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _EfficientLengthCastIterable: function _EfficientLengthCastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _CastListBase: function _CastListBase() {
    },
    CastList: function CastList(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastSet: function CastSet(t0, t1, t2) {
      this._source = t0;
      this._emptySet = t1;
      this.$ti = t2;
    },
    LateError: function LateError(t0) {
      this._message = t0;
    },
    CodeUnits: function CodeUnits(t0) {
      this._string = t0;
    },
    nullFuture_closure: function nullFuture_closure() {
    },
    SentinelValue: function SentinelValue() {
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _.__internal$_iterable = t0;
      _._start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_length = t1;
      _.__internal$_index = 0;
      _.__internal$_current = null;
      _.$ti = t2;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_current = null;
      _._iterator = t0;
      _._f = t1;
      _.$ti = t2;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterable: function WhereIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterator: function WhereIterator(t0, t1, t2) {
      this._iterator = t0;
      this._f = t1;
      this.$ti = t2;
    },
    TakeIterable: function TakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    EfficientLengthTakeIterable: function EfficientLengthTakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    TakeIterator: function TakeIterator(t0, t1, t2) {
      this._iterator = t0;
      this._remaining = t1;
      this.$ti = t2;
    },
    SkipIterable: function SkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipIterator: function SkipIterator(t0, t1, t2) {
      this._iterator = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EmptyIterable: function EmptyIterable(t0) {
      this.$ti = t0;
    },
    EmptyIterator: function EmptyIterator(t0) {
      this.$ti = t0;
    },
    WhereTypeIterable: function WhereTypeIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    WhereTypeIterator: function WhereTypeIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    NonNullsIterable: function NonNullsIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    NonNullsIterator: function NonNullsIterator(t0, t1) {
      this._source = t0;
      this.__internal$_current = null;
      this.$ti = t1;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    UnmodifiableListMixin: function UnmodifiableListMixin() {
    },
    UnmodifiableListBase: function UnmodifiableListBase() {
    },
    _ListIndicesIterable: function _ListIndicesIterable(t0) {
      this._backedList = t0;
    },
    ListMapView: function ListMapView(t0, t1) {
      this._values = t0;
      this.$ti = t1;
    },
    ReversedListIterable: function ReversedListIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    Symbol: function Symbol() {
    },
    __CastListBase__CastIterableBase_ListMixin: function __CastListBase__CastIterableBase_ListMixin() {
    },
    instantiate1(f, $T1) {
      var t1 = new A.Instantiation1(f, $T1._eval$1("Instantiation1<0>"));
      t1.Instantiation$1(f);
      return t1;
    },
    unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    isJsIndexable(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S(value) {
      var result;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      result = J.toString$0$(value);
      return result;
    },
    Primitives_objectHashCode(object) {
      var hash,
        property = $.Primitives__identityHashCodeProperty;
      if (property == null)
        property = $.Primitives__identityHashCodeProperty = Symbol("identityHashCode");
      hash = object[property];
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object[property] = hash;
      }
      return hash;
    },
    Primitives_parseInt(source, radix) {
      var decimalMatch, maxCharCode, digitsPart, t1, i, _null = null,
        match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return _null;
      if (3 >= match.length)
        return A.ioore(match, 3);
      decimalMatch = match[3];
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return _null;
      }
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", _null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((digitsPart.charCodeAt(i) | 32) > maxCharCode)
            return _null;
      }
      return parseInt(source, radix);
    },
    Primitives_objectTypeName(object) {
      var interceptor, dispatchName, $constructor, constructorName;
      if (object instanceof A.Object)
        return A._rtiToString(A.instanceType(object), null);
      interceptor = J.getInterceptor$(object);
      if (interceptor === B.Interceptor_methods || interceptor === B.JavaScriptObject_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = B.C_JS_CONST(object);
        if (dispatchName !== "Object" && dispatchName !== "")
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string" && constructorName !== "Object" && constructorName !== "")
            return constructorName;
        }
      }
      return A._rtiToString(A.instanceType(object), null);
    },
    Primitives_safeToString(object) {
      var hooks, i, hookResult;
      if (object == null || typeof object == "number" || A._isBool(object))
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      if (object instanceof A.Closure)
        return object.toString$0(0);
      if (object instanceof A._Record)
        return object._toString$1(true);
      hooks = $.$get$_safeToStringHooks();
      for (i = 0; i < 1; ++i) {
        hookResult = hooks[i].tryFormat$1(object);
        if (hookResult != null)
          return hookResult;
      }
      return "Instance of '" + A.Primitives_objectTypeName(object) + "'";
    },
    Primitives__fromCharCodeApply(array) {
      var result, i, i0, chunkEnd,
        end = array.length;
      if (end <= 500)
        return String.fromCharCode.apply(null, array);
      for (result = "", i = 0; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, array.slice(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCodePoints(codePoints) {
      var t1, _i, i,
        a = A._setArrayType([], type$.JSArray_int);
      for (t1 = codePoints.length, _i = 0; _i < codePoints.length; codePoints.length === t1 || (0, A.throwConcurrentModificationError)(codePoints), ++_i) {
        i = codePoints[_i];
        if (!A._isInt(i))
          throw A.wrapException(A.argumentErrorValue(i));
        if (i <= 65535)
          B.JSArray_methods.add$1(a, i);
        else if (i <= 1114111) {
          B.JSArray_methods.add$1(a, 55296 + (B.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
          B.JSArray_methods.add$1(a, 56320 + (i & 1023));
        } else
          throw A.wrapException(A.argumentErrorValue(i));
      }
      return A.Primitives__fromCharCodeApply(a);
    },
    Primitives_stringFromCharCodes(charCodes) {
      var t1, _i, i;
      for (t1 = charCodes.length, _i = 0; _i < t1; ++_i) {
        i = charCodes[_i];
        if (!A._isInt(i))
          throw A.wrapException(A.argumentErrorValue(i));
        if (i < 0)
          throw A.wrapException(A.argumentErrorValue(i));
        if (i > 65535)
          return A.Primitives_stringFromCodePoints(charCodes);
      }
      return A.Primitives__fromCharCodeApply(charCodes);
    },
    Primitives_stringFromNativeUint8List(charCodes, start, end) {
      var i, result, i0, chunkEnd;
      if (end <= 500 && start === 0 && end === charCodes.length)
        return String.fromCharCode.apply(null, charCodes);
      for (i = start, result = ""; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCharCode(charCode) {
      var bits;
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((B.JSInt_methods._shrOtherPositive$1(bits, 10) | 55296) >>> 0, bits & 1023 | 56320);
        }
      }
      throw A.wrapException(A.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_valueFromDecomposedDate(years, month, day, hours, minutes, seconds, milliseconds, microseconds, isUtc) {
      var remainder, value, t1,
        jsMonth = month - 1;
      if (years < 100) {
        years += 400;
        jsMonth -= 4800;
      }
      remainder = B.JSInt_methods.$mod(microseconds, 1000);
      value = Date.UTC(years, jsMonth, day, hours, minutes, seconds, milliseconds + B.JSInt_methods._tdivFast$1(microseconds - remainder, 1000));
      t1 = true;
      if (!isNaN(value))
        if (!(value < -864e13))
          if (!(value > 864e13))
            t1 = value === 864e13 && remainder !== 0;
      if (t1)
        return null;
      return value;
    },
    Primitives_lazyAsJsDate(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._core$_value);
      return receiver.date;
    },
    Primitives_getYear(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : A.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : A.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : A.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : A.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : A.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : A.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : A.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    Primitives_extractStackTrace(error) {
      var jsError = error.$thrownJsError;
      if (jsError == null)
        return null;
      return A.getTraceFromException(jsError);
    },
    Primitives_trySetStackTrace(error, stackTrace) {
      var jsError;
      if (error.$thrownJsError == null) {
        jsError = new Error();
        A.initializeExceptionWrapper(error, jsError);
        error.$thrownJsError = jsError;
        jsError.stack = stackTrace.toString$0(0);
      }
    },
    iae(argument) {
      throw A.wrapException(A.argumentErrorValue(argument));
    },
    ioore(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw A.wrapException(A.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError(indexable, index) {
      var $length, _s5_ = "index";
      if (!A._isInt(index))
        return new A.ArgumentError(true, index, _s5_, null);
      $length = A._asInt(J.get$length$asx(indexable));
      if (index < 0 || index >= $length)
        return A.IndexError$withLength(index, $length, indexable, null, _s5_);
      return A.RangeError$value(index, _s5_);
    },
    diagnoseRangeError(start, end, $length) {
      if (start < 0 || start > $length)
        return A.RangeError$range(start, 0, $length, "start", null);
      if (end != null)
        if (end < start || end > $length)
          return A.RangeError$range(end, start, $length, "end", null);
      return new A.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue(object) {
      return new A.ArgumentError(true, object, null, null);
    },
    wrapException(ex) {
      return A.initializeExceptionWrapper(ex, new Error());
    },
    initializeExceptionWrapper(ex, wrapper) {
      var t1;
      if (ex == null)
        ex = new A.TypeError();
      wrapper.dartException = ex;
      t1 = A.toStringWrapper;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: t1});
        wrapper.name = "";
      } else
        wrapper.toString = t1;
      return wrapper;
    },
    toStringWrapper() {
      return J.toString$0$(this.dartException);
    },
    throwExpression(ex, wrapper) {
      throw A.initializeExceptionWrapper(ex, wrapper == null ? new Error() : wrapper);
    },
    throwUnsupportedOperation(o, operation, verb) {
      var wrapper;
      if (operation == null)
        operation = 0;
      if (verb == null)
        verb = 0;
      wrapper = Error();
      A.throwExpression(A._diagnoseUnsupportedOperation(o, operation, verb), wrapper);
    },
    _diagnoseUnsupportedOperation(o, encodedOperation, encodedVerb) {
      var operation, table, tableLength, index, verb, object, flags, article, adjective;
      if (typeof encodedOperation == "string")
        operation = encodedOperation;
      else {
        table = "[]=;add;removeWhere;retainWhere;removeRange;setRange;setInt8;setInt16;setInt32;setUint8;setUint16;setUint32;setFloat32;setFloat64".split(";");
        tableLength = table.length;
        index = encodedOperation;
        if (index > tableLength) {
          encodedVerb = index / tableLength | 0;
          index %= tableLength;
        }
        operation = table[index];
      }
      verb = typeof encodedVerb == "string" ? encodedVerb : "modify;remove from;add to".split(";")[encodedVerb];
      object = type$.List_dynamic._is(o) ? "list" : "ByteData";
      flags = o.$flags | 0;
      article = "a ";
      if ((flags & 4) !== 0)
        adjective = "constant ";
      else if ((flags & 2) !== 0) {
        adjective = "unmodifiable ";
        article = "an ";
      } else
        adjective = (flags & 1) !== 0 ? "fixed-length " : "";
      return new A.UnsupportedError("'" + operation + "': Cannot " + verb + " " + article + adjective + object);
    },
    throwConcurrentModificationError(collection) {
      throw A.wrapException(A.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = A.quoteStringForRegExp(message.replace(String({}), "$receiver$"));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = A._setArrayType([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new A.TypeErrorDecoder(message.replace(new RegExp("\\\\\\$arguments\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$argumentsExpr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$expr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$method\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$receiver\\\\\\$", "g"), "((?:x|[^x])*)"), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn(expression) {
      return function($expr$) {
        var $argumentsExpr$ = "$arguments$";
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    JsNoSuchMethodError$(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new A.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException(ex) {
      var t1;
      if (ex == null)
        return new A.NullThrownFromJavaScriptException(ex);
      if (ex instanceof A.ExceptionAndStackTrace) {
        t1 = ex.dartException;
        return A.saveStackTrace(ex, t1 == null ? A._asObject(t1) : t1);
      }
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return A.saveStackTrace(ex, ex.dartException);
      return A._unwrapNonDartException(ex);
    },
    saveStackTrace(ex, error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = ex;
      return error;
    },
    _unwrapNonDartException(ex) {
      var message, number, ieErrorCode, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match;
      if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((B.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A.S(message) + " (Error " + ieErrorCode + ")", null));
            case 445:
            case 5007:
              A.S(message);
              return A.saveStackTrace(ex, new A.NullError());
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
          } else if (nullCall.matchTypeError$1(message) != null || nullLiteralCall.matchTypeError$1(message) != null || undefCall.matchTypeError$1(message) != null || undefLiteralCall.matchTypeError$1(message) != null || nullProperty.matchTypeError$1(message) != null || nullLiteralCall.matchTypeError$1(message) != null || undefProperty.matchTypeError$1(message) != null || undefLiteralProperty.matchTypeError$1(message) != null) {
            A._asString(message);
            return A.saveStackTrace(ex, new A.NullError());
          }
        }
        return A.saveStackTrace(ex, new A.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new A.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return A.saveStackTrace(ex, new A.ArgumentError(false, null, null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new A.StackOverflowError();
      return ex;
    },
    getTraceFromException(exception) {
      var trace;
      if (exception instanceof A.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new A._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      trace = new A._StackTrace(exception);
      if (typeof exception === "object")
        exception.$cachedTrace = trace;
      return trace;
    },
    objectHashCode(object) {
      if (object == null)
        return J.get$hashCode$(object);
      if (typeof object == "object")
        return A.Primitives_objectHashCode(object);
      return J.get$hashCode$(object);
    },
    constantHashCode(key) {
      if (typeof key == "number")
        return B.JSNumber_methods.get$hashCode(key);
      if (key instanceof A._Type)
        return A.Primitives_objectHashCode(key);
      if (key instanceof A._Record)
        return key.get$hashCode(key);
      if (key instanceof A.Symbol)
        return key.get$hashCode(0);
      return A.objectHashCode(key);
    },
    fillLiteralMap(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    fillLiteralSet(values, result) {
      var index,
        $length = values.length;
      for (index = 0; index < $length; ++index)
        result.add$1(0, values[index]);
      return result;
    },
    _invokeClosure(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      type$.Function._as(closure);
      switch (A._asInt(numberOfArguments)) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw A.wrapException(A.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS(closure, arity) {
      var $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = A.convertDartClosureToJSUncached(closure, arity);
      closure.$identity = $function;
      return $function;
    },
    convertDartClosureToJSUncached(closure, arity) {
      var entry;
      switch (arity) {
        case 0:
          entry = closure.call$0;
          break;
        case 1:
          entry = closure.call$1;
          break;
        case 2:
          entry = closure.call$2;
          break;
        case 3:
          entry = closure.call$3;
          break;
        case 4:
          entry = closure.call$4;
          break;
        default:
          entry = null;
      }
      if (entry != null)
        return entry.bind(closure);
      return function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, A._invokeClosure);
    },
    Closure_fromTearOff(parameters) {
      var $prototype, $constructor, t2, trampoline, applyTrampoline, i, stub, stub0, stubName, stubCallName,
        container = parameters.co,
        isStatic = parameters.iS,
        isIntercepted = parameters.iI,
        needsDirectAccess = parameters.nDA,
        applyTrampolineIndex = parameters.aI,
        funsOrNames = parameters.fs,
        callNames = parameters.cs,
        $name = funsOrNames[0],
        callName = callNames[0],
        $function = container[$name],
        t1 = parameters.fT;
      t1.toString;
      $prototype = isStatic ? Object.create(new A.StaticClosure().constructor.prototype) : Object.create(new A.BoundClosure(null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      $constructor = isStatic ? function static_tear_off() {
        this.$initialize();
      } : function tear_off(a, b) {
        this.$initialize(a, b);
      };
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      $prototype.$_name = $name;
      $prototype.$_target = $function;
      t2 = !isStatic;
      if (t2)
        trampoline = A.Closure_forwardCallTo($name, $function, isIntercepted, needsDirectAccess);
      else {
        $prototype.$static_name = $name;
        trampoline = $function;
      }
      $prototype.$signature = A.Closure__computeSignatureFunction(t1, isStatic, isIntercepted);
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < funsOrNames.length; ++i) {
        stub = funsOrNames[i];
        if (typeof stub == "string") {
          stub0 = container[stub];
          stubName = stub;
          stub = stub0;
        } else
          stubName = "";
        stubCallName = callNames[i];
        if (stubCallName != null) {
          if (t2)
            stub = A.Closure_forwardCallTo(stubName, stub, isIntercepted, needsDirectAccess);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex)
          applyTrampoline = stub;
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = parameters.rC;
      $prototype.$defaultValues = parameters.dV;
      return $constructor;
    },
    Closure__computeSignatureFunction(functionType, isStatic, isIntercepted) {
      if (typeof functionType == "number")
        return functionType;
      if (typeof functionType == "string") {
        if (isStatic)
          throw A.wrapException("Cannot compute signature for static tearoff.");
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, A.BoundClosure_evalRecipe);
      }
      throw A.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          return function(entry, receiverOf) {
            return function() {
              return receiverOf(this)[entry]();
            };
          }(stubName, getReceiver);
        case 1:
          return function(entry, receiverOf) {
            return function(a) {
              return receiverOf(this)[entry](a);
            };
          }(stubName, getReceiver);
        case 2:
          return function(entry, receiverOf) {
            return function(a, b) {
              return receiverOf(this)[entry](a, b);
            };
          }(stubName, getReceiver);
        case 3:
          return function(entry, receiverOf) {
            return function(a, b, c) {
              return receiverOf(this)[entry](a, b, c);
            };
          }(stubName, getReceiver);
        case 4:
          return function(entry, receiverOf) {
            return function(a, b, c, d) {
              return receiverOf(this)[entry](a, b, c, d);
            };
          }(stubName, getReceiver);
        case 5:
          return function(entry, receiverOf) {
            return function(a, b, c, d, e) {
              return receiverOf(this)[entry](a, b, c, d, e);
            };
          }(stubName, getReceiver);
        default:
          return function(f, receiverOf) {
            return function() {
              return f.apply(receiverOf(this), arguments);
            };
          }($function, getReceiver);
      }
    },
    Closure_forwardCallTo(stubName, $function, isIntercepted, needsDirectAccess) {
      if (isIntercepted)
        return A.Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess);
      return A.Closure_cspForwardCall($function.length, needsDirectAccess, stubName, $function);
    },
    Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf,
        getInterceptor = A.BoundClosure_interceptorOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          throw A.wrapException(new A.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(entry, interceptorOf, receiverOf) {
            return function() {
              return interceptorOf(this)[entry](receiverOf(this));
            };
          }(stubName, getInterceptor, getReceiver);
        case 2:
          return function(entry, interceptorOf, receiverOf) {
            return function(a) {
              return interceptorOf(this)[entry](receiverOf(this), a);
            };
          }(stubName, getInterceptor, getReceiver);
        case 3:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b) {
              return interceptorOf(this)[entry](receiverOf(this), a, b);
            };
          }(stubName, getInterceptor, getReceiver);
        case 4:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c);
            };
          }(stubName, getInterceptor, getReceiver);
        case 5:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d);
            };
          }(stubName, getInterceptor, getReceiver);
        case 6:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d, e) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d, e);
            };
          }(stubName, getInterceptor, getReceiver);
        default:
          return function(f, interceptorOf, receiverOf) {
            return function() {
              var a = [receiverOf(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(interceptorOf(this), a);
            };
          }($function, getInterceptor, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess) {
      var arity, t1;
      if ($.BoundClosure__interceptorFieldNameCache == null)
        $.BoundClosure__interceptorFieldNameCache = A.BoundClosure__computeFieldNamed("interceptor");
      if ($.BoundClosure__receiverFieldNameCache == null)
        $.BoundClosure__receiverFieldNameCache = A.BoundClosure__computeFieldNamed("receiver");
      arity = $function.length;
      t1 = A.Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    closureFromTearOff(parameters) {
      return A.Closure_fromTearOff(parameters);
    },
    BoundClosure_evalRecipe(closure, recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, A.instanceType(closure._receiver), recipe);
    },
    BoundClosure_receiverOf(closure) {
      return closure._receiver;
    },
    BoundClosure_interceptorOf(closure) {
      return closure._interceptor;
    },
    BoundClosure__computeFieldNamed(fieldName) {
      var names, i, $name,
        template = new A.BoundClosure("receiver", "interceptor"),
        t1 = Object.getOwnPropertyNames(template);
      t1.$flags = 1;
      names = t1;
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
      throw A.wrapException(A.ArgumentError$("Field name " + fieldName + " not found.", null));
    },
    getIsolateAffinityTag($name) {
      return init.getIsolateTag($name);
    },
    defineProperty(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor(obj) {
      var interceptor, interceptorClass, altTag, mark, t1,
        tag = A._asString($.getTagFunction.call$1(obj)),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        altTag = A._asStringQ($.alternateTagFunction.call$2(obj, tag));
        if (altTag != null) {
          record = $.dispatchRecordsForInstanceTags[altTag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[altTag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[altTag];
          tag = altTag;
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = A.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return A.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw A.wrapException(A.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return A.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return A.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      A.initNativeDispatchContinue();
    },
    initNativeDispatchContinue() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      A.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = A.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = B.C_JS_CONST0();
      hooks = A.applyHooksTransformer(B.C_JS_CONST1, A.applyHooksTransformer(B.C_JS_CONST2, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST4, A.applyHooksTransformer(B.C_JS_CONST5, A.applyHooksTransformer(B.C_JS_CONST6(B.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (Array.isArray(transformers))
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new A.initHooks_closure(getTag);
      $.alternateTagFunction = new A.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new A.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    createRecordTypePredicate(shape, fieldRtis) {
      var $length = fieldRtis.length,
        $function = init.rttc["" + $length + ";" + shape];
      if ($function == null)
        return null;
      if ($length === 0)
        return $function;
      if ($length === $function.length)
        return $function.apply(null, fieldRtis);
      return $function(fieldRtis);
    },
    JSSyntaxRegExp_makeNative(source, multiLine, caseSensitive, unicode, dotAll, extraFlags) {
      var m = multiLine ? "m" : "",
        i = caseSensitive ? "" : "i",
        u = unicode ? "u" : "",
        s = dotAll ? "s" : "",
        regexp = function(source, modifiers) {
          try {
            return new RegExp(source, modifiers);
          } catch (e) {
            return e;
          }
        }(source, m + i + u + s + extraFlags);
      if (regexp instanceof RegExp)
        return regexp;
      throw A.wrapException(A.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
    },
    stringContainsUnchecked(receiver, other, startIndex) {
      var t1;
      if (typeof other == "string")
        return receiver.indexOf(other, startIndex) >= 0;
      else if (other instanceof A.JSSyntaxRegExp) {
        t1 = B.JSString_methods.substring$1(receiver, startIndex);
        return other._nativeRegExp.test(t1);
      } else
        return !J.allMatches$1$s(other, B.JSString_methods.substring$1(receiver, startIndex)).get$isEmpty(0);
    },
    escapeReplacement(replacement) {
      if (replacement.indexOf("$", 0) >= 0)
        return replacement.replace(/\$/g, "$$$$");
      return replacement;
    },
    quoteStringForRegExp(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    stringReplaceAllUnchecked(receiver, pattern, replacement) {
      var t1 = A.stringReplaceAllUncheckedString(receiver, pattern, replacement);
      return t1;
    },
    stringReplaceAllUncheckedString(receiver, pattern, replacement) {
      var $length, t1, i;
      if (pattern === "") {
        if (receiver === "")
          return replacement;
        $length = receiver.length;
        for (t1 = replacement, i = 0; i < $length; ++i)
          t1 = t1 + receiver[i] + replacement;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      if (receiver.indexOf(pattern, 0) < 0)
        return receiver;
      if (receiver.length < 500 || replacement.indexOf("$", 0) >= 0)
        return receiver.split(pattern).join(replacement);
      return receiver.replace(new RegExp(A.quoteStringForRegExp(pattern), "g"), A.escapeReplacement(replacement));
    },
    stringReplaceRangeUnchecked(receiver, start, end, replacement) {
      return receiver.substring(0, start) + replacement + receiver.substring(end);
    },
    _Record_3_addr_keyCred_scriptCred: function _Record_3_addr_keyCred_scriptCred(t0, t1, t2) {
      this._0 = t0;
      this._1 = t1;
      this._2 = t2;
    },
    _Record_3_keyId_requestedSigningAddressBytes_signingKeyPair: function _Record_3_keyId_requestedSigningAddressBytes_signingKeyPair(t0, t1, t2) {
      this._0 = t0;
      this._1 = t1;
      this._2 = t2;
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantMap_map_closure: function ConstantMap_map_closure(t0, t1, t2) {
      this.$this = t0;
      this.transform = t1;
      this.result = t2;
    },
    GeneralConstantMap: function GeneralConstantMap(t0, t1) {
      this._jsData = t0;
      this.$ti = t1;
    },
    Instantiation: function Instantiation() {
    },
    Instantiation1: function Instantiation1(t0, t1) {
      this._genericClosure = t0;
      this.$ti = t1;
    },
    SafeToStringHook: function SafeToStringHook() {
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError() {
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {
      this._irritant = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    Closure0Args: function Closure0Args() {
    },
    Closure2Args: function Closure2Args() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1) {
      this._receiver = t0;
      this._interceptor = t1;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _.__js_helper$_nums = _.__js_helper$_strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    JsLinkedHashMap_addAll_closure: function JsLinkedHashMap_addAll_closure(t0) {
      this.$this = t0;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _._previous = _._next = null;
    },
    LinkedHashMapKeysIterable: function LinkedHashMapKeysIterable(t0, t1) {
      this.__js_helper$_map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1, t2, t3) {
      var _ = this;
      _.__js_helper$_map = t0;
      _._modifications = t1;
      _._cell = t2;
      _.__js_helper$_current = null;
      _.$ti = t3;
    },
    LinkedHashMapValuesIterable: function LinkedHashMapValuesIterable(t0, t1) {
      this.__js_helper$_map = t0;
      this.$ti = t1;
    },
    LinkedHashMapValueIterator: function LinkedHashMapValueIterator(t0, t1, t2, t3) {
      var _ = this;
      _.__js_helper$_map = t0;
      _._modifications = t1;
      _._cell = t2;
      _.__js_helper$_current = null;
      _.$ti = t3;
    },
    LinkedHashMapEntriesIterable: function LinkedHashMapEntriesIterable(t0, t1) {
      this.__js_helper$_map = t0;
      this.$ti = t1;
    },
    LinkedHashMapEntryIterator: function LinkedHashMapEntryIterator(t0, t1, t2, t3) {
      var _ = this;
      _.__js_helper$_map = t0;
      _._modifications = t1;
      _._cell = t2;
      _.__js_helper$_current = null;
      _.$ti = t3;
    },
    JsConstantLinkedHashMap: function JsConstantLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _.__js_helper$_nums = _.__js_helper$_strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    _Record: function _Record() {
    },
    _Record3: function _Record3() {
    },
    JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {
      var _ = this;
      _.pattern = t0;
      _._nativeRegExp = t1;
      _._hasCapturesCache = _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;
    },
    _MatchImplementation: function _MatchImplementation(t0) {
      this._match = t0;
    },
    _AllMatchesIterable: function _AllMatchesIterable(t0, t1, t2) {
      this._re = t0;
      this.__js_helper$_string = t1;
      this.__js_helper$_start = t2;
    },
    _AllMatchesIterator: function _AllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._regExp = t0;
      _.__js_helper$_string = t1;
      _._nextIndex = t2;
      _.__js_helper$_current = null;
    },
    StringMatch: function StringMatch(t0, t1) {
      this.start = t0;
      this.pattern = t1;
    },
    _StringAllMatchesIterable: function _StringAllMatchesIterable(t0, t1, t2) {
      this._input = t0;
      this._pattern = t1;
      this.__js_helper$_index = t2;
    },
    _StringAllMatchesIterator: function _StringAllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._input = t0;
      _._pattern = t1;
      _.__js_helper$_index = t2;
      _.__js_helper$_current = null;
    },
    throwLateFieldNI(fieldName) {
      throw A.initializeExceptionWrapper(A.LateError$fieldNI(fieldName), new Error());
    },
    throwLateFieldAI(fieldName) {
      throw A.initializeExceptionWrapper(A.LateError$fieldAI(fieldName), new Error());
    },
    throwLateFieldADI(fieldName) {
      throw A.initializeExceptionWrapper(A.LateError$fieldADI(fieldName), new Error());
    },
    _Cell$named(_name) {
      var t1 = new A._Cell(_name);
      return t1._value = t1;
    },
    _Cell: function _Cell(t0) {
      this._name = t0;
      this._value = null;
    },
    _checkViewArguments(buffer, offsetInBytes, $length) {
    },
    _ensureNativeList(list) {
      var t1, result, i;
      if (type$.JSIndexable_dynamic._is(list))
        return list;
      t1 = J.getInterceptor$asx(list);
      result = A.List_List$filled(t1.get$length(list), null, false, type$.dynamic);
      for (i = 0; i < t1.get$length(list); ++i)
        B.JSArray_methods.$indexSet(result, i, t1.$index(list, i));
      return result;
    },
    NativeByteData_NativeByteData$view(buffer, offsetInBytes, $length) {
      var t1;
      A._checkViewArguments(buffer, offsetInBytes, $length);
      t1 = new DataView(buffer, offsetInBytes);
      return t1;
    },
    NativeFloat32List_NativeFloat32List$fromList(elements) {
      return new Float32Array(A._ensureNativeList(elements));
    },
    NativeFloat32List_NativeFloat32List$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      $length = B.JSInt_methods._tdivFast$1(buffer.byteLength - offsetInBytes, 4);
      return new Float32Array(buffer, offsetInBytes, $length);
    },
    NativeInt32List_NativeInt32List$fromList(elements) {
      return new Int32Array(A._ensureNativeList(elements));
    },
    NativeInt8List__create1(arg) {
      return new Int8Array(arg);
    },
    NativeUint16List__create1(arg) {
      return new Uint16Array(arg);
    },
    NativeUint8List_NativeUint8List($length) {
      return new Uint8Array($length);
    },
    NativeUint8List_NativeUint8List$fromList(elements) {
      return new Uint8Array(A._ensureNativeList(elements));
    },
    NativeUint8List_NativeUint8List$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new Uint8Array(buffer, offsetInBytes) : new Uint8Array(buffer, offsetInBytes, $length);
    },
    _checkValidIndex(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw A.wrapException(A.diagnoseIndexError(list, index));
    },
    _checkValidRange(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        if (end == null)
          t1 = start > $length;
        else
          t1 = end >>> 0 !== end || start > end || end > $length;
      else
        t1 = true;
      if (t1)
        throw A.wrapException(A.diagnoseRangeError(start, end, $length));
      if (end == null)
        return $length;
      return end;
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    _UnmodifiableNativeByteBufferView: function _UnmodifiableNativeByteBufferView(t0) {
      this._data = t0;
    },
    NativeByteData: function NativeByteData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeFloat32List: function NativeFloat32List() {
    },
    NativeFloat64List: function NativeFloat64List() {
    },
    NativeInt16List: function NativeInt16List() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint16List: function NativeUint16List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8ClampedList: function NativeUint8ClampedList() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getFutureFromFutureOr(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = A._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7)
        return A.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 11 || kind === 12;
    },
    Rti__getCanonicalRecipe(rti) {
      return rti._canonicalRecipe;
    },
    findType(recipe) {
      return A._Universe_eval(init.typeUniverse, recipe, false);
    },
    instantiatedGenericFunctionType(genericFunctionRti, instantiationRti) {
      var t1, cache, key, probe, rti;
      if (genericFunctionRti == null)
        return null;
      t1 = instantiationRti._rest;
      cache = genericFunctionRti._bindCache;
      if (cache == null)
        cache = genericFunctionRti._bindCache = new Map();
      key = instantiationRti._canonicalRecipe;
      probe = cache.get(key);
      if (probe != null)
        return probe;
      rti = A._substitute(init.typeUniverse, genericFunctionRti._primary, t1, 0);
      cache.set(key, rti);
      return rti;
    },
    _substitute(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, t1, fields, substitutedFields, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 8:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = A._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return A._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 9:
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = A._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return A._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 10:
          t1 = rti._primary;
          fields = rti._rest;
          substitutedFields = A._substituteArray(universe, fields, typeArguments, depth);
          if (substitutedFields === fields)
            return rti;
          return A._Universe__lookupRecordRti(universe, t1, substitutedFields);
        case 11:
          returnType = rti._primary;
          substitutedReturnType = A._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = A._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return A._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 12:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 13:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw A.wrapException(A.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result[i] = substitutedRti;
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, t2, rti, substitutedRti,
        $length = namedArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; i += 3) {
        t1 = namedArray[i];
        t2 = namedArray[i + 1];
        rti = namedArray[i + 2];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.splice(i, 3, t1, t2, substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = A._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = A._substituteArray(universe, optionalPositional, typeArguments, depth),
        named = functionParameters._named,
        substitutedNamed = A._substituteNamed(universe, named, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)
        return functionParameters;
      result = new A._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._named = substitutedNamed;
      return result;
    },
    _setArrayType(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    closureFunctionType(closure) {
      var signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return A.getTypeFromTypesTable(signature);
        return closure.$signature();
      }
      return null;
    },
    instanceOrFunctionType(object, testRti) {
      var rti;
      if (A.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof A.Closure) {
          rti = A.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return A.instanceType(object);
    },
    instanceType(object) {
      if (object instanceof A.Object)
        return A._instanceType(object);
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType(object) {
      var rti = object.$ti;
      return rti != null ? rti : A._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return A._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss(instance, $constructor) {
      var effectiveConstructor = instance instanceof A.Closure ? Object.getPrototypeOf(Object.getPrototypeOf(instance)).constructor : $constructor,
        rti = A._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable(index) {
      var rti,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = A._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    getRuntimeTypeOfDartObject(object) {
      return A.createRuntimeType(A._instanceType(object));
    },
    getRuntimeTypeOfClosure(closure) {
      var rti = A.closureFunctionType(closure);
      return A.createRuntimeType(rti == null ? A.instanceType(closure) : rti);
    },
    _structuralTypeOf(object) {
      var functionRti;
      if (object instanceof A._Record)
        return object._getRti$0();
      functionRti = object instanceof A.Closure ? A.closureFunctionType(object) : null;
      if (functionRti != null)
        return functionRti;
      if (type$.TrustedGetRuntimeType._is(object))
        return J.get$runtimeType$(object)._rti;
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A.instanceType(object);
    },
    createRuntimeType(rti) {
      var t1 = rti._cachedRuntimeType;
      return t1 == null ? rti._cachedRuntimeType = new A._Type(rti) : t1;
    },
    evaluateRtiForRecord(recordRecipe, valuesList) {
      var bindings, i,
        values = valuesList,
        $length = values.length;
      if ($length === 0)
        return type$.Record_0;
      if (0 >= $length)
        return A.ioore(values, 0);
      bindings = A._Universe_evalInEnvironment(init.typeUniverse, A._structuralTypeOf(values[0]), "@<0>");
      for (i = 1; i < $length; ++i) {
        if (!(i < values.length))
          return A.ioore(values, i);
        bindings = A._Universe_bind(init.typeUniverse, bindings, A._structuralTypeOf(values[i]));
      }
      return A._Universe_evalInEnvironment(init.typeUniverse, bindings, recordRecipe);
    },
    typeLiteral(recipe) {
      return A.createRuntimeType(A._Universe_eval(init.typeUniverse, recipe, false));
    },
    _installSpecializedIsTest(object) {
      var testRti = this;
      testRti._is = A._specializedIsTest(testRti);
      return testRti._is(object);
    },
    _specializedIsTest(testRti) {
      var kind, simpleIsFn, $name, predicate, t1;
      if (testRti === type$.Object)
        return A._isObject;
      if (A.isTopType(testRti))
        return A._isTop;
      kind = testRti._kind;
      if (kind === 6)
        return A._generalNullableIsTestImplementation;
      if (kind === 1)
        return A._isNever;
      if (kind === 7)
        return A._isFutureOr;
      simpleIsFn = A._simpleSpecializedIsTest(testRti);
      if (simpleIsFn != null)
        return simpleIsFn;
      if (kind === 8) {
        $name = testRti._primary;
        if (testRti._rest.every(A.isTopType)) {
          testRti._specializedTestResource = "$is" + $name;
          if ($name === "List")
            return A._isListTestViaProperty;
          if (testRti === type$.JSObject)
            return A._isJSObject;
          return A._isTestViaProperty;
        }
      } else if (kind === 10) {
        predicate = A.createRecordTypePredicate(testRti._primary, testRti._rest);
        t1 = predicate == null ? A._isNever : predicate;
        return t1 == null ? A._asObject(t1) : t1;
      }
      return A._generalIsTestImplementation;
    },
    _simpleSpecializedIsTest(testRti) {
      if (testRti._kind === 8) {
        if (testRti === type$.int)
          return A._isInt;
        if (testRti === type$.double || testRti === type$.num)
          return A._isNum;
        if (testRti === type$.String)
          return A._isString;
        if (testRti === type$.bool)
          return A._isBool;
      }
      return null;
    },
    _installSpecializedAsCheck(object) {
      var testRti = this,
        asFn = A._generalAsCheckImplementation;
      if (A.isTopType(testRti))
        asFn = A._asTop;
      else if (testRti === type$.Object)
        asFn = A._asObject;
      else if (A.isNullable(testRti)) {
        asFn = A._generalNullableAsCheckImplementation;
        if (testRti === type$.nullable_int)
          asFn = A._asIntQ;
        else if (testRti === type$.nullable_String)
          asFn = A._asStringQ;
        else if (testRti === type$.nullable_bool)
          asFn = A._asBoolQ;
        else if (testRti === type$.nullable_num)
          asFn = A._asNumQ;
        else if (testRti === type$.nullable_double)
          asFn = A._asDoubleQ;
        else if (testRti === type$.nullable_JSObject)
          asFn = A._asJSObjectQ;
      } else if (testRti === type$.int)
        asFn = A._asInt;
      else if (testRti === type$.String)
        asFn = A._asString;
      else if (testRti === type$.bool)
        asFn = A._asBool;
      else if (testRti === type$.num)
        asFn = A._asNum;
      else if (testRti === type$.double)
        asFn = A._asDouble;
      else if (testRti === type$.JSObject)
        asFn = A._asJSObject;
      testRti._as = asFn;
      return testRti._as(object);
    },
    _generalIsTestImplementation(object) {
      var testRti = this;
      if (object == null)
        return A.isNullable(testRti);
      return A.isSubtype(init.typeUniverse, A.instanceOrFunctionType(object, testRti), testRti);
    },
    _generalNullableIsTestImplementation(object) {
      if (object == null)
        return true;
      return this._primary._is(object);
    },
    _isTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A.isNullable(testRti);
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _isListTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A.isNullable(testRti);
      if (typeof object != "object")
        return false;
      if (Array.isArray(object))
        return true;
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _isJSObject(object) {
      var t1 = this;
      if (object == null)
        return false;
      if (typeof object == "object") {
        if (object instanceof A.Object)
          return !!object[t1._specializedTestResource];
        return true;
      }
      if (typeof object == "function")
        return true;
      return false;
    },
    _isJSObjectStandalone(object) {
      if (typeof object == "object") {
        if (object instanceof A.Object)
          return type$.JSObject._is(object);
        return true;
      }
      if (typeof object == "function")
        return true;
      return false;
    },
    _generalAsCheckImplementation(object) {
      var testRti = this;
      if (object == null) {
        if (A.isNullable(testRti))
          return object;
      } else if (testRti._is(object))
        return object;
      throw A.initializeExceptionWrapper(A._errorForAsCheck(object, testRti), new Error());
    },
    _generalNullableAsCheckImplementation(object) {
      var testRti = this;
      if (object == null || testRti._is(object))
        return object;
      throw A.initializeExceptionWrapper(A._errorForAsCheck(object, testRti), new Error());
    },
    _errorForAsCheck(object, testRti) {
      return new A._TypeError("TypeError: " + A._Error_compose(object, A._rtiToString(testRti, null)));
    },
    checkTypeBound(type, bound, variable, methodName) {
      if (A.isSubtype(init.typeUniverse, type, bound))
        return type;
      throw A.initializeExceptionWrapper(A._TypeError$fromMessage("The type argument '" + A._rtiToString(type, null) + "' is not a subtype of the type variable bound '" + A._rtiToString(bound, null) + "' of type variable '" + variable + "' in '" + methodName + "'."), new Error());
    },
    _Error_compose(object, checkedTypeDescription) {
      return A.Error_safeToString(object) + ": type '" + A._rtiToString(A._structuralTypeOf(object), null) + "' is not a subtype of type '" + checkedTypeDescription + "'";
    },
    _TypeError$fromMessage(message) {
      return new A._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType(object, type) {
      return new A._TypeError("TypeError: " + A._Error_compose(object, type));
    },
    _isFutureOr(object) {
      var testRti = this;
      return testRti._primary._is(object) || A.Rti__getFutureFromFutureOr(init.typeUniverse, testRti)._is(object);
    },
    _isObject(object) {
      return object != null;
    },
    _asObject(object) {
      if (object != null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "Object"), new Error());
    },
    _isTop(object) {
      return true;
    },
    _asTop(object) {
      return object;
    },
    _isNever(object) {
      return false;
    },
    _isBool(object) {
      return true === object || false === object;
    },
    _asBool(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "bool"), new Error());
    },
    _asBoolQ(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "bool?"), new Error());
    },
    _asDouble(object) {
      if (typeof object == "number")
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "double"), new Error());
    },
    _asDoubleQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "double?"), new Error());
    },
    _isInt(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asInt(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "int"), new Error());
    },
    _asIntQ(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "int?"), new Error());
    },
    _isNum(object) {
      return typeof object == "number";
    },
    _asNum(object) {
      if (typeof object == "number")
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "num"), new Error());
    },
    _asNumQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "num?"), new Error());
    },
    _isString(object) {
      return typeof object == "string";
    },
    _asString(object) {
      if (typeof object == "string")
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "String"), new Error());
    },
    _asStringQ(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "String?"), new Error());
    },
    _asJSObject(object) {
      if (A._isJSObjectStandalone(object))
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "JSObject"), new Error());
    },
    _asJSObjectQ(object) {
      if (object == null)
        return object;
      if (A._isJSObjectStandalone(object))
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "JSObject?"), new Error());
    },
    _rtiArrayToString(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += sep + A._rtiToString(array[i], genericContext);
      return s;
    },
    _recordRtiToString(recordType, genericContext) {
      var fieldCount, names, namesIndex, s, comma, i,
        partialShape = recordType._primary,
        fields = recordType._rest;
      if ("" === partialShape)
        return "(" + A._rtiArrayToString(fields, genericContext) + ")";
      fieldCount = fields.length;
      names = partialShape.split(",");
      namesIndex = names.length - fieldCount;
      for (s = "(", comma = "", i = 0; i < fieldCount; ++i, comma = ", ") {
        s += comma;
        if (namesIndex === 0)
          s += "{";
        s += A._rtiToString(fields[i], genericContext);
        if (namesIndex >= 0)
          s += " " + names[namesIndex];
        ++namesIndex;
      }
      return s + "})";
    },
    _functionRtiToString(functionType, genericContext, bounds) {
      var boundsLength, offset, i, t1, typeParametersText, typeSep, t2, t3, boundRti, kind, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = ", ", outerContextLength = null;
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null)
          genericContext = A._setArrayType([], type$.JSArray_String);
        else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          B.JSArray_methods.add$1(genericContext, "T" + (offset + i));
        for (t1 = type$.nullable_Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          t2 = genericContext.length;
          t3 = t2 - 1 - i;
          if (!(t3 >= 0))
            return A.ioore(genericContext, t3);
          typeParametersText = typeParametersText + typeSep + genericContext[t3];
          boundRti = bounds[i];
          kind = boundRti._kind;
          if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))
            typeParametersText += " extends " + A._rtiToString(boundRti, genericContext);
        }
        typeParametersText += ">";
      } else
        typeParametersText = "";
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      named = parameters._named;
      namedLength = named.length;
      returnTypeText = A._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += sep + A._rtiToString(requiredPositional[i], genericContext);
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += sep + A._rtiToString(optionalPositional[i], genericContext);
        argumentsText += "]";
      }
      if (namedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < namedLength; i += 3, sep = _s2_) {
          argumentsText += sep;
          if (named[i + 1])
            argumentsText += "required ";
          argumentsText += A._rtiToString(named[i + 2], genericContext) + " " + named[i];
        }
        argumentsText += "}";
      }
      if (outerContextLength != null) {
        genericContext.toString;
        genericContext.length = outerContextLength;
      }
      return typeParametersText + "(" + argumentsText + ") => " + returnTypeText;
    },
    _rtiToString(rti, genericContext) {
      var questionArgument, s, argumentKind, $name, $arguments, t1, t2,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6) {
        questionArgument = rti._primary;
        s = A._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return (argumentKind === 11 || argumentKind === 12 ? "(" + s + ")" : s) + "?";
      }
      if (kind === 7)
        return "FutureOr<" + A._rtiToString(rti._primary, genericContext) + ">";
      if (kind === 8) {
        $name = A._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length > 0 ? $name + ("<" + A._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 10)
        return A._recordRtiToString(rti, genericContext);
      if (kind === 11)
        return A._functionRtiToString(rti, genericContext, null);
      if (kind === 12)
        return A._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 13) {
        t1 = rti._primary;
        t2 = genericContext.length;
        t1 = t2 - 1 - t1;
        if (!(t1 >= 0 && t1 < t2))
          return A.ioore(genericContext, t1);
        return genericContext[t1];
      }
      return "?";
    },
    _unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        metadata = universe.eT,
        probe = metadata[cls];
      if (probe == null)
        return A._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = A._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = A._Utils_newArrayOrEmpty($length);
        for (i = 0; i < $length; ++i)
          $arguments[i] = erased;
        $interface = A._Universe__lookupInterfaceRti(universe, cls, $arguments);
        metadata[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules(universe, rules) {
      return A._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes(universe, types) {
      return A._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval(universe, recipe, normalize) {
      var rti,
        cache = universe.eC,
        probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, null, recipe, false));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, environment, recipe, true));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = A._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 9 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__installTypeTests(universe, rti) {
      rti._as = A._installSpecializedAsCheck;
      rti._is = A._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupQuestionRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti(universe, baseType, key, normalize) {
      var baseKind, t1, rti;
      if (normalize) {
        baseKind = baseType._kind;
        t1 = true;
        if (!A.isTopType(baseType))
          if (!(baseType === type$.Null || baseType === type$.JSNull))
            if (baseKind !== 6)
              t1 = baseKind === 7 && A.isNullable(baseType._primary);
        if (t1)
          return baseType;
        else if (baseKind === 1)
          return type$.Null;
      }
      rti = new A.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti(universe, baseType, key, normalize) {
      var t1, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (A.isTopType(baseType) || baseType === type$.Object)
          return baseType;
        else if (t1 === 1)
          return A._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null || baseType === type$.JSNull)
          return type$.nullable_Future_Null;
      }
      rti = new A.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 13;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed($arguments) {
      var s, sep, i, t1, nameSep,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 3, sep = ",") {
        t1 = $arguments[i];
        nameSep = $arguments[i + 1] ? "!" : ":";
        s += sep + t1 + nameSep + $arguments[i + 2]._canonicalRecipe;
      }
      return s;
    },
    _Universe__lookupInterfaceRti(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length > 0)
        s += "<" + A._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 8;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti(universe, base, $arguments) {
      var newBase, newArguments, key, probe, rti, t1;
      if (base._kind === 9) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      key = newBase._canonicalRecipe + (";<" + A._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 9;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupRecordRti(universe, partialShapeTag, fields) {
      var rti, t1,
        key = "+" + (partialShapeTag + "(" + A._Universe__canonicalRecipeJoin(fields) + ")"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 10;
      rti._primary = partialShapeTag;
      rti._rest = fields;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupFunctionRti(universe, returnType, parameters) {
      var sep, key, probe, rti, t1,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        named = parameters._named,
        namedLength = named.length,
        recipe = "(" + A._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "[" + A._Universe__canonicalRecipeJoin(optionalPositional) + "]";
      }
      if (namedLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "{" + A._Universe__canonicalRecipeJoinNamed(named) + "}";
      }
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 11;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + ("<" + A._Universe__canonicalRecipeJoin(bounds) + ">"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = A._Utils_newArrayOrEmpty($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = A._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, 0);
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 12;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Parser_create(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse(parser) {
      var t1, i, ch, u, array, end, item,
        source = parser.r,
        stack = parser.s;
      for (t1 = source.length, i = 0; i < t1;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = A._Parser_handleDigit(i + 1, ch, source, stack);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124)
          i = A._Parser_handleIdentifier(parser, i, source, stack, false);
        else if (ch === 46)
          i = A._Parser_handleIdentifier(parser, i, source, stack, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              stack.push(false);
              break;
            case 33:
              stack.push(true);
              break;
            case 59:
              stack.push(A._Parser_toType(parser.u, parser.e, stack.pop()));
              break;
            case 94:
              stack.push(A._Universe__lookupGenericFunctionParameterRti(parser.u, stack.pop()));
              break;
            case 35:
              stack.push(A._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              stack.push(A._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              stack.push(A._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 62:
              A._Parser_handleTypeArguments(parser, stack);
              break;
            case 38:
              A._Parser_handleExtendedOperations(parser, stack);
              break;
            case 63:
              u = parser.u;
              stack.push(A._Universe__lookupQuestionRti(u, A._Parser_toType(u, parser.e, stack.pop()), parser.n));
              break;
            case 47:
              u = parser.u;
              stack.push(A._Universe__lookupFutureOrRti(u, A._Parser_toType(u, parser.e, stack.pop()), parser.n));
              break;
            case 40:
              stack.push(-3);
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 41:
              A._Parser_handleArguments(parser, stack);
              break;
            case 91:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 93:
              array = stack.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = stack.pop();
              stack.push(array);
              stack.push(-1);
              break;
            case 123:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 125:
              array = stack.splice(parser.p);
              A._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = stack.pop();
              stack.push(array);
              stack.push(-2);
              break;
            case 43:
              end = source.indexOf("(", i);
              stack.push(source.substring(i, end));
              stack.push(-4);
              stack.push(parser.p);
              parser.p = stack.length;
              i = end + 1;
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = stack.pop();
      return A._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 9)
          environment = environment._primary;
        recipe = A._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          A.throwExpression('No "' + string + '" in "' + A.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(A._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleTypeArguments(parser, stack) {
      var base,
        universe = parser.u,
        $arguments = A._Parser_collectArray(parser, stack),
        head = stack.pop();
      if (typeof head == "string")
        stack.push(A._Universe__lookupInterfaceRti(universe, head, $arguments));
      else {
        base = A._Parser_toType(universe, parser.e, head);
        switch (base._kind) {
          case 11:
            stack.push(A._Universe__lookupGenericFunctionRti(universe, base, $arguments, parser.n));
            break;
          default:
            stack.push(A._Universe__lookupBindingRti(universe, base, $arguments));
            break;
        }
      }
    },
    _Parser_handleArguments(parser, stack) {
      var requiredPositional, returnType, parameters,
        universe = parser.u,
        head = stack.pop(),
        optionalPositional = null, named = null;
      if (typeof head == "number")
        switch (head) {
          case -1:
            optionalPositional = stack.pop();
            break;
          case -2:
            named = stack.pop();
            break;
          default:
            stack.push(head);
            break;
        }
      else
        stack.push(head);
      requiredPositional = A._Parser_collectArray(parser, stack);
      head = stack.pop();
      switch (head) {
        case -3:
          head = stack.pop();
          if (optionalPositional == null)
            optionalPositional = universe.sEA;
          if (named == null)
            named = universe.sEA;
          returnType = A._Parser_toType(universe, parser.e, head);
          parameters = new A._FunctionParameters();
          parameters._requiredPositional = requiredPositional;
          parameters._optionalPositional = optionalPositional;
          parameters._named = named;
          stack.push(A._Universe__lookupFunctionRti(universe, returnType, parameters));
          return;
        case -4:
          stack.push(A._Universe__lookupRecordRti(universe, stack.pop(), requiredPositional));
          return;
        default:
          throw A.wrapException(A.AssertionError$("Unexpected state under `()`: " + A.S(head)));
      }
    },
    _Parser_handleExtendedOperations(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw A.wrapException(A.AssertionError$("Unexpected extended operation " + A.S($top)));
    },
    _Parser_collectArray(parser, stack) {
      var array = stack.splice(parser.p);
      A._Parser_toTypes(parser.u, parser.e, array);
      parser.p = stack.pop();
      return array;
    },
    _Parser_toType(universe, environment, item) {
      if (typeof item == "string")
        return A._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number") {
        environment.toString;
        return A._Parser_indexToType(universe, environment, item);
      } else
        return item;
    },
    _Parser_toTypes(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 2; i < $length; i += 3)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 9) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 8)
        throw A.wrapException(A.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw A.wrapException(A.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    isSubtype(universe, s, t) {
      var result,
        sCache = s._isSubtypeCache;
      if (sCache == null)
        sCache = s._isSubtypeCache = new Map();
      result = sCache.get(t);
      if (result == null) {
        result = A._isSubtype(universe, s, null, t, null);
        sCache.set(t, result);
      }
      return result;
    },
    _isSubtype(universe, s, sEnv, t, tEnv) {
      var sKind, leftTypeVariable, tKind, t1, t2, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (A.isTopType(t))
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (A.isTopType(s))
        return false;
      if (s._kind === 1)
        return true;
      leftTypeVariable = sKind === 13;
      if (leftTypeVariable)
        if (A._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))
          return true;
      tKind = t._kind;
      t1 = type$.Null;
      if (s === t1 || s === type$.JSNull) {
        if (tKind === 7)
          return A._isSubtype(universe, s, sEnv, t._primary, tEnv);
        return t === t1 || t === type$.JSNull || tKind === 6;
      }
      if (t === type$.Object) {
        if (sKind === 7)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        return sKind !== 6;
      }
      if (sKind === 7) {
        if (!A._isSubtype(universe, s._primary, sEnv, t, tEnv))
          return false;
        return A._isSubtype(universe, A.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);
      }
      if (sKind === 6)
        return A._isSubtype(universe, t1, sEnv, t, tEnv) && A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      if (tKind === 7) {
        if (A._isSubtype(universe, s, sEnv, t._primary, tEnv))
          return true;
        return A._isSubtype(universe, s, sEnv, A.Rti__getFutureFromFutureOr(universe, t), tEnv);
      }
      if (tKind === 6)
        return A._isSubtype(universe, s, sEnv, t1, tEnv) || A._isSubtype(universe, s, sEnv, t._primary, tEnv);
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 11;
      if ((!t1 || sKind === 12) && t === type$.Function)
        return true;
      t2 = sKind === 10;
      if (t2 && t === type$.Record)
        return true;
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 12)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          if (!A._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !A._isSubtype(universe, tBound, tEnv, sBound, sEnv))
            return false;
        }
        return A._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);
      }
      if (tKind === 11) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return A._isFunctionSubtype(universe, s, sEnv, t, tEnv);
      }
      if (sKind === 8) {
        if (tKind !== 8)
          return false;
        return A._isInterfaceSubtype(universe, s, sEnv, t, tEnv);
      }
      if (t2 && tKind === 10)
        return A._isRecordSubtype(universe, s, sEnv, t, tEnv);
      return false;
    },
    _isFunctionSubtype(universe, s, sEnv, t, tEnv) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName, sIsRequired;
      if (!A._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!A._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))
          return false;
      }
      sNamed = sParameters._named;
      tNamed = tParameters._named;
      sNamedLength = sNamed.length;
      tNamedLength = tNamed.length;
      for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {
        tName = tNamed[tIndex];
        for (; true;) {
          if (sIndex >= sNamedLength)
            return false;
          sName = sNamed[sIndex];
          sIndex += 3;
          if (tName < sName)
            return false;
          sIsRequired = sNamed[sIndex - 2];
          if (sName < tName) {
            if (sIsRequired)
              return false;
            continue;
          }
          t1 = tNamed[tIndex + 1];
          if (sIsRequired && !t1)
            return false;
          t1 = sNamed[sIndex - 1];
          if (!A._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv))
            return false;
          break;
        }
      }
      for (; sIndex < sNamedLength;) {
        if (sNamed[sIndex + 1])
          return false;
        sIndex += 3;
      }
      return true;
    },
    _isInterfaceSubtype(universe, s, sEnv, t, tEnv) {
      var rule, recipes, $length, supertypeArgs, i,
        sName = s._primary,
        tName = t._primary;
      for (; sName !== tName;) {
        rule = universe.tR[sName];
        if (rule == null)
          return false;
        if (typeof rule == "string") {
          sName = rule;
          continue;
        }
        recipes = rule[tName];
        if (recipes == null)
          return false;
        $length = recipes.length;
        supertypeArgs = $length > 0 ? new Array($length) : init.typeUniverse.sEA;
        for (i = 0; i < $length; ++i)
          supertypeArgs[i] = A._Universe_evalInEnvironment(universe, s, recipes[i]);
        return A._areArgumentsSubtypes(universe, supertypeArgs, null, sEnv, t._rest, tEnv);
      }
      return A._areArgumentsSubtypes(universe, s._rest, null, sEnv, t._rest, tEnv);
    },
    _areArgumentsSubtypes(universe, sArgs, sVariances, sEnv, tArgs, tEnv) {
      var i,
        $length = sArgs.length;
      for (i = 0; i < $length; ++i)
        if (!A._isSubtype(universe, sArgs[i], sEnv, tArgs[i], tEnv))
          return false;
      return true;
    },
    _isRecordSubtype(universe, s, sEnv, t, tEnv) {
      var i,
        sFields = s._rest,
        tFields = t._rest,
        sCount = sFields.length;
      if (sCount !== tFields.length)
        return false;
      if (s._primary !== t._primary)
        return false;
      for (i = 0; i < sCount; ++i)
        if (!A._isSubtype(universe, sFields[i], sEnv, tFields[i], tEnv))
          return false;
      return true;
    },
    isNullable(t) {
      var kind = t._kind,
        t1 = true;
      if (!(t === type$.Null || t === type$.JSNull))
        if (!A.isTopType(t))
          if (kind !== 6)
            t1 = kind === 7 && A.isNullable(t._primary);
      return t1;
    },
    isTopType(t) {
      var kind = t._kind;
      return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;
    },
    _Utils_objectAssign(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    _Utils_newArrayOrEmpty($length) {
      return $length > 0 ? new Array($length) : init.typeUniverse.sEA;
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._isSubtypeCache = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._named = this._optionalPositional = this._requiredPositional = null;
    },
    _Type: function _Type(t0) {
      this._rti = t0;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this.__rti$_message = t0;
    },
    _AsyncRun__initializeScheduleImmediate() {
      var t1, div, span;
      if (self.scheduleImmediate != null)
        return A.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        t1 = {};
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(A.convertDartClosureToJS(new A._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new A._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return A.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return A.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride(callback) {
      self.scheduleImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateJsOverride_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate(callback) {
      self.setImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer(callback) {
      A.Timer__createTimer(B.Duration_0, type$.void_Function._as(callback));
    },
    Timer__createTimer(duration, callback) {
      var milliseconds = B.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return A._TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    _TimerImpl$(milliseconds, callback) {
      var t1 = new A._TimerImpl();
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter($T) {
      return new A._AsyncAwaitCompleter(new A._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncAwaitCompleter<0>"));
    },
    _asyncStartSync(bodyFunction, completer) {
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._future;
    },
    _asyncAwait(object, bodyFunction) {
      A._awaitOnObject(object, bodyFunction);
    },
    _asyncReturn(object, completer) {
      completer.complete$1(object);
    },
    _asyncRethrow(object, completer) {
      completer.completeError$2(A.unwrapException(object), A.getTraceFromException(object));
    },
    _awaitOnObject(object, bodyFunction) {
      var t1, future,
        thenCallback = new A._awaitOnObject_closure(bodyFunction),
        errorCallback = new A._awaitOnObject_closure0(bodyFunction);
      if (object instanceof A._Future)
        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);
      else {
        t1 = type$.dynamic;
        if (object instanceof A._Future)
          object.then$1$2$onError(thenCallback, errorCallback, t1);
        else {
          future = new A._Future($.Zone__current, type$._Future_dynamic);
          future._state = 8;
          future._resultOrListeners = object;
          future._thenAwait$1$2(thenCallback, errorCallback, t1);
        }
      }
    },
    _wrapJsFunctionForAsync($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true) {
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
          }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$3$1(new A._wrapJsFunctionForAsync_closure($protected), type$.void, type$.int, type$.dynamic);
    },
    _SyncStarIterator__terminatedBody(_1, _2, _3) {
      return 0;
    },
    AsyncError_defaultStackTrace(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return B._StringStackTrace_OdL;
    },
    Future_wait(futures, $T) {
      var handleError, future, pos, e, s, t1, t2, _i, t3, exception, t4, _box_0 = {}, cleanUp = null,
        eagerError = false,
        _future = new A._Future($.Zone__current, $T._eval$1("_Future<List<0>>"));
      _box_0.values = null;
      _box_0.remaining = 0;
      _box_0.stackTrace = _box_0.error = null;
      handleError = new A.Future_wait_handleError(_box_0, cleanUp, eagerError, _future);
      try {
        for (t1 = futures.length, t2 = type$.Null, _i = 0, t3 = 0; _i < futures.length; futures.length === t1 || (0, A.throwConcurrentModificationError)(futures), ++_i) {
          future = futures[_i];
          pos = t3;
          future.then$1$2$onError(new A.Future_wait_closure(_box_0, pos, _future, $T, cleanUp, eagerError), handleError, t2);
          t3 = ++_box_0.remaining;
        }
        if (t3 === 0) {
          t1 = _future;
          t1._completeWithValue$1(A._setArrayType([], $T._eval$1("JSArray<0>")));
          return t1;
        }
        _box_0.values = A.List_List$filled(t3, null, false, $T._eval$1("0?"));
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        if (_box_0.remaining === 0 || eagerError) {
          t1 = _future;
          t2 = e;
          t3 = s;
          t4 = A._interceptError(t2, t3);
          t2 = new A.AsyncError(t2, t3 == null ? A.AsyncError_defaultStackTrace(t2) : t3);
          t1._asyncCompleteErrorObject$1(t2);
          return t1;
        } else {
          _box_0.error = e;
          _box_0.stackTrace = s;
        }
      }
      return _future;
    },
    FutureExtensions_ignore(_this, $T) {
      _this._ignore$0();
    },
    Completer_Completer($T) {
      return new A._AsyncCompleter(new A._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncCompleter<0>"));
    },
    _interceptError(error, stackTrace) {
      if ($.Zone__current === B.C__RootZone)
        return null;
      return null;
    },
    _interceptUserError(error, stackTrace) {
      if ($.Zone__current !== B.C__RootZone)
        A._interceptError(error, stackTrace);
      if (stackTrace == null)
        if (type$.Error._is(error)) {
          stackTrace = error.get$stackTrace();
          if (stackTrace == null) {
            A.Primitives_trySetStackTrace(error, B._StringStackTrace_OdL);
            stackTrace = B._StringStackTrace_OdL;
          }
        } else
          stackTrace = B._StringStackTrace_OdL;
      else if (type$.Error._is(error))
        A.Primitives_trySetStackTrace(error, stackTrace);
      return new A.AsyncError(error, stackTrace);
    },
    _Future$value(value, $T) {
      var t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      $T._as(value);
      t1._state = 8;
      t1._resultOrListeners = value;
      return t1;
    },
    _Future__chainCoreFuture(source, target, sync) {
      var t2, t3, ignoreError, listeners, _box_0 = {},
        t1 = _box_0.source = source;
      for (t2 = type$._Future_dynamic; t3 = t1._state, (t3 & 4) !== 0; t1 = source) {
        source = t2._as(t1._resultOrListeners);
        _box_0.source = source;
      }
      if (t1 === target) {
        t2 = A.StackTrace_current();
        target._asyncCompleteErrorObject$1(new A.AsyncError(new A.ArgumentError(true, t1, null, "Cannot complete a future with itself"), t2));
        return;
      }
      ignoreError = target._state & 1;
      t2 = t1._state = t3 | ignoreError;
      if ((t2 & 24) === 0) {
        listeners = type$.nullable__FutureListener_dynamic_dynamic._as(target._resultOrListeners);
        target._state = target._state & 1 | 4;
        target._resultOrListeners = t1;
        t1._prependListeners$1(listeners);
        return;
      }
      if (!sync)
        if (target._resultOrListeners == null)
          t1 = (t2 & 16) === 0 || ignoreError !== 0;
        else
          t1 = false;
      else
        t1 = true;
      if (t1) {
        listeners = target._removeListeners$0();
        target._cloneResult$1(_box_0.source);
        A._Future__propagateToListeners(target, listeners);
        return;
      }
      target._state ^= 2;
      A._rootScheduleMicrotask(null, null, target._zone, type$.void_Function._as(new A._Future__chainCoreFuture_closure(_box_0, target)));
    },
    _Future__propagateToListeners(source, listeners) {
      var t2, t3, _box_0, t4, t5, hasError, asyncError, nextListener, nextListener0, sourceResult, t6, zone, oldZone, result, current, _box_1 = {},
        t1 = _box_1.source = source;
      for (t2 = type$.AsyncError, t3 = type$.nullable__FutureListener_dynamic_dynamic; true;) {
        _box_0 = {};
        t4 = t1._state;
        t5 = (t4 & 16) === 0;
        hasError = !t5;
        if (listeners == null) {
          if (hasError && (t4 & 1) === 0) {
            asyncError = t2._as(t1._resultOrListeners);
            A._rootHandleError(asyncError.error, asyncError.stackTrace);
          }
          return;
        }
        _box_0.listener = listeners;
        nextListener = listeners._nextListener;
        for (t1 = listeners; nextListener != null; t1 = nextListener, nextListener = nextListener0) {
          t1._nextListener = null;
          A._Future__propagateToListeners(_box_1.source, t1);
          _box_0.listener = nextListener;
          nextListener0 = nextListener._nextListener;
        }
        t4 = _box_1.source;
        sourceResult = t4._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        if (t5) {
          t6 = t1.state;
          t6 = (t6 & 1) !== 0 || (t6 & 15) === 8;
        } else
          t6 = true;
        if (t6) {
          zone = t1.result._zone;
          if (hasError) {
            t4 = t4._zone === zone;
            t4 = !(t4 || t4);
          } else
            t4 = false;
          if (t4) {
            t2._as(sourceResult);
            A._rootHandleError(sourceResult.error, sourceResult.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = null;
          t1 = t1.state;
          if ((t1 & 15) === 8)
            new A._Future__propagateToListeners_handleWhenCompleteCallback(_box_0, _box_1, hasError).call$0();
          else if (t5) {
            if ((t1 & 1) !== 0)
              new A._Future__propagateToListeners_handleValueCallback(_box_0, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new A._Future__propagateToListeners_handleError(_box_1, _box_0).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t1 instanceof A._Future) {
            t4 = _box_0.listener.$ti;
            t4 = t4._eval$1("Future<2>")._is(t1) || !t4._rest[1]._is(t1);
          } else
            t4 = false;
          if (t4) {
            result = _box_0.listener.result;
            if ((t1._state & 24) !== 0) {
              current = t3._as(result._resultOrListeners);
              result._resultOrListeners = null;
              listeners = result._reverseListeners$1(current);
              result._state = t1._state & 30 | result._state & 1;
              result._resultOrListeners = t1._resultOrListeners;
              _box_1.source = t1;
              continue;
            } else
              A._Future__chainCoreFuture(t1, result, true);
            return;
          }
        }
        result = _box_0.listener.result;
        current = t3._as(result._resultOrListeners);
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t4 = _box_0.listenerValueOrError;
        if (!t1) {
          result.$ti._precomputed1._as(t4);
          result._state = 8;
          result._resultOrListeners = t4;
        } else {
          t2._as(t4);
          result._state = result._state & 1 | 16;
          result._resultOrListeners = t4;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler(errorHandler, zone) {
      var t1;
      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))
        return zone.registerBinaryCallback$3$1(errorHandler, type$.dynamic, type$.Object, type$.StackTrace);
      t1 = type$.dynamic_Function_Object;
      if (t1._is(errorHandler))
        return t1._as(errorHandler);
      throw A.wrapException(A.ArgumentError$value(errorHandler, "onError", string$.Error_));
    },
    _microtaskLoop() {
      var entry, next;
      for (entry = $._nextCallback; entry != null; entry = $._nextCallback) {
        $._lastPriorityCallback = null;
        next = entry.next;
        $._nextCallback = next;
        if (next == null)
          $._lastCallback = null;
        entry.callback.call$0();
      }
    },
    _startMicrotaskLoop() {
      $._isInCallbackLoop = true;
      try {
        A._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback(callback) {
      var newEntry = new A._AsyncCallbackEntry(callback),
        lastCallback = $._lastCallback;
      if (lastCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback(callback) {
      var entry, lastPriorityCallback, next,
        t1 = $._nextCallback;
      if (t1 == null) {
        A._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new A._AsyncCallbackEntry(callback);
      lastPriorityCallback = $._lastPriorityCallback;
      if (lastPriorityCallback == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        next = lastPriorityCallback.next;
        entry.next = next;
        $._lastPriorityCallback = lastPriorityCallback.next = entry;
        if (next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask(callback) {
      var _null = null,
        currentZone = $.Zone__current;
      if (B.C__RootZone === currentZone) {
        A._rootScheduleMicrotask(_null, _null, B.C__RootZone, callback);
        return;
      }
      A._rootScheduleMicrotask(_null, _null, currentZone, type$.void_Function._as(currentZone.bindCallbackGuarded$1(callback)));
    },
    StreamIterator_StreamIterator(stream, $T) {
      A.checkNotNullable(stream, "stream", type$.Object);
      return new A._StreamIterator($T._eval$1("_StreamIterator<0>"));
    },
    StreamController_StreamController(onCancel, onListen, onPause, onResume, $T) {
      return new A._AsyncStreamController(onListen, onPause, onResume, onCancel, $T._eval$1("_AsyncStreamController<0>"));
    },
    _runGuarded(notificationHandler) {
      var e, s, exception;
      try {
        notificationHandler.call$0();
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(A._asObject(e), type$.StackTrace._as(s));
      }
    },
    _BufferingStreamSubscription__registerDataHandler(zone, handleData, $T) {
      var t1 = handleData == null ? A.async___nullDataHandler$closure() : handleData;
      return type$.$env_1_1_void._bind$1($T)._eval$1("1(2)")._as(t1);
    },
    _BufferingStreamSubscription__registerErrorHandler(zone, handleError) {
      if (handleError == null)
        handleError = A.async___nullErrorHandler$closure();
      if (type$.void_Function_Object_StackTrace._is(handleError))
        return zone.registerBinaryCallback$3$1(handleError, type$.dynamic, type$.Object, type$.StackTrace);
      if (type$.void_Function_Object._is(handleError))
        return type$.dynamic_Function_Object._as(handleError);
      throw A.wrapException(A.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace.", null));
    },
    _nullDataHandler(value) {
    },
    _nullErrorHandler(error, stackTrace) {
      A._rootHandleError(A._asObject(error), type$.StackTrace._as(stackTrace));
    },
    Timer_Timer(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return A.Timer__createTimer(duration, type$.void_Function._as(callback));
      return A.Timer__createTimer(duration, type$.void_Function._as(t1.bindCallbackGuarded$1(callback)));
    },
    _rootHandleError(error, stackTrace) {
      A._schedulePriorityAsyncCallback(new A._rootHandleError_closure(error, stackTrace));
    },
    _rootRun($self, $parent, zone, f, $R) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary($self, $parent, zone, f, arg, $R, $T) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary($self, $parent, zone, f, arg1, arg2, $R, $T1, $T2) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask($self, $parent, zone, f) {
      type$.void_Function._as(f);
      if (B.C__RootZone !== zone) {
        f = zone.bindCallbackGuarded$1(f);
        f = f;
      }
      A._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl() {
      this._handle = null;
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._future = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    _SyncStarIterator: function _SyncStarIterator(t0, t1) {
      var _ = this;
      _._body = t0;
      _._suspendedBodies = _._nestedIterator = _._datum = _._async$_current = null;
      _.$ti = t1;
    },
    _SyncStarIterable: function _SyncStarIterable(t0, t1) {
      this._outerHelper = t0;
      this.$ti = t1;
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    Future_wait_handleError: function Future_wait_handleError(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.cleanUp = t1;
      _.eagerError = t2;
      _._future = t3;
    },
    Future_wait_closure: function Future_wait_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._box_0 = t0;
      _.pos = t1;
      _._future = t2;
      _.T = t3;
      _.cleanUp = t4;
      _.eagerError = t5;
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainCoreFuture_closure: function _Future__chainCoreFuture_closure(t0, t1) {
      this._box_0 = t0;
      this.target = t1;
    },
    _Future__asyncCompleteWithValue_closure: function _Future__asyncCompleteWithValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteErrorObject_closure: function _Future__asyncCompleteErrorObject_closure(t0, t1) {
      this.$this = t0;
      this.error = t1;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2) {
      this._box_0 = t0;
      this._box_1 = t1;
      this.hasError = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0, t1) {
      this.joinedResult = t0;
      this.originalSource = t1;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure0: function _Future__propagateToListeners_handleWhenCompleteCallback_closure0(t0) {
      this.joinedResult = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1) {
      this._box_0 = t0;
      this.sourceResult = t1;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1) {
      this._box_1 = t0;
      this._box_0 = t1;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    _StreamController: function _StreamController() {
    },
    _StreamController__subscribe_closure: function _StreamController__subscribe_closure(t0) {
      this.$this = t0;
    },
    _StreamController__recordCancel_complete: function _StreamController__recordCancel_complete(t0) {
      this.$this = t0;
    },
    _AsyncStreamControllerDispatch: function _AsyncStreamControllerDispatch() {
    },
    _AsyncStreamController: function _AsyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _ControllerStream: function _ControllerStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _ControllerSubscription: function _ControllerSubscription(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._controller = t0;
      _._onData = t1;
      _._onError = t2;
      _._onDone = t3;
      _._zone = t4;
      _._state = t5;
      _._pending = _._cancelFuture = null;
      _.$ti = t6;
    },
    _BufferingStreamSubscription: function _BufferingStreamSubscription() {
    },
    _BufferingStreamSubscription__sendError_sendError: function _BufferingStreamSubscription__sendError_sendError(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _BufferingStreamSubscription__sendDone_sendDone: function _BufferingStreamSubscription__sendDone_sendDone(t0) {
      this.$this = t0;
    },
    _StreamImpl: function _StreamImpl() {
    },
    _DelayedEvent: function _DelayedEvent() {
    },
    _DelayedData: function _DelayedData(t0, t1) {
      this.value = t0;
      this.next = null;
      this.$ti = t1;
    },
    _DelayedError: function _DelayedError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
      this.next = null;
    },
    _DelayedDone: function _DelayedDone() {
    },
    _PendingEvents: function _PendingEvents(t0) {
      var _ = this;
      _._state = 0;
      _.lastPendingEvent = _.firstPendingEvent = null;
      _.$ti = t0;
    },
    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1) {
      this.$this = t0;
      this.dispatch = t1;
    },
    _StreamIterator: function _StreamIterator(t0) {
      this.$ti = t0;
    },
    _ForwardingStream: function _ForwardingStream() {
    },
    _ForwardingStreamSubscription: function _ForwardingStreamSubscription(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._stream = t0;
      _._subscription = null;
      _._onData = t1;
      _._onError = t2;
      _._onDone = t3;
      _._zone = t4;
      _._state = t5;
      _._pending = _._cancelFuture = null;
      _.$ti = t6;
    },
    _MapStream: function _MapStream(t0, t1, t2) {
      this._transform = t0;
      this._async$_source = t1;
      this.$ti = t2;
    },
    _Zone: function _Zone() {
    },
    _rootHandleError_closure: function _rootHandleError_closure(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    HashMap_HashMap(equals, hashCode, isValidKey, $K, $V) {
      if (isValidKey == null)
        if (hashCode == null) {
          if (equals == null)
            return new A._HashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_HashMap<1,2>"));
          hashCode = A.collection___defaultHashCode$closure();
        } else {
          if (A.core__identityHashCode$closure() === hashCode && A.core__identical$closure() === equals)
            return new A._IdentityHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_IdentityHashMap<1,2>"));
          if (equals == null)
            equals = A.collection___defaultEquals$closure();
        }
      else {
        if (hashCode == null)
          hashCode = A.collection___defaultHashCode$closure();
        if (equals == null)
          equals = A.collection___defaultEquals$closure();
      }
      return A._CustomHashMap$(equals, hashCode, isValidKey, $K, $V);
    },
    _HashMap__getTableEntry(table, key) {
      var entry = table[key];
      return entry === table ? null : entry;
    },
    _HashMap__setTableEntry(table, key, value) {
      if (value == null)
        table[key] = table;
      else
        table[key] = value;
    },
    _HashMap__newHashTable() {
      var table = Object.create(null);
      A._HashMap__setTableEntry(table, "<non-identifier-key>", table);
      delete table["<non-identifier-key>"];
      return table;
    },
    _CustomHashMap$(_equals, _hashCode, validKey, $K, $V) {
      var t1 = validKey != null ? validKey : new A._CustomHashMap_closure($K);
      return new A._CustomHashMap(_equals, _hashCode, t1, $K._eval$1("@<0>")._bind$1($V)._eval$1("_CustomHashMap<1,2>"));
    },
    LinkedHashMap_LinkedHashMap($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    LinkedHashMap_LinkedHashMap$_literal(keyValuePairs, $K, $V) {
      return $K._eval$1("@<0>")._bind$1($V)._eval$1("LinkedHashMap<1,2>")._as(A.fillLiteralMap(keyValuePairs, new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"))));
    },
    LinkedHashMap_LinkedHashMap$_empty($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    LinkedHashSet_LinkedHashSet($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_empty($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_literal(values, $E) {
      return $E._eval$1("LinkedHashSet<0>")._as(A.fillLiteralSet(values, new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"))));
    },
    _LinkedHashSet__newHashTable() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    _LinkedHashSetIterator$(_set, _modifications, $E) {
      var t1 = new A._LinkedHashSetIterator(_set, _modifications, $E._eval$1("_LinkedHashSetIterator<0>"));
      t1._collection$_cell = _set._collection$_first;
      return t1;
    },
    _defaultEquals(a, b) {
      return J.$eq$(a, b);
    },
    _defaultHashCode(a) {
      return J.get$hashCode$(a);
    },
    IterableExtensions_get_firstOrNull(_this, $T) {
      var iterator = J.get$iterator$ax(_this);
      if (iterator.moveNext$0())
        return iterator.get$current();
      return null;
    },
    IterableExtensions_get_lastOrNull(_this, $T) {
      if (_this.length === 0)
        return null;
      return B.JSArray_methods.get$last(_this);
    },
    LinkedHashMap_LinkedHashMap$from(other, $K, $V) {
      var result = A.LinkedHashMap_LinkedHashMap($K, $V);
      other.forEach$1(0, new A.LinkedHashMap_LinkedHashMap$from_closure(result, $K, $V));
      return result;
    },
    LinkedHashMap_LinkedHashMap$of(other, $K, $V) {
      var t1 = A.LinkedHashMap_LinkedHashMap($K, $V);
      t1.addAll$1(0, other);
      return t1;
    },
    LinkedHashSet_LinkedHashSet$from(elements, $E) {
      var t1, _i,
        result = A.LinkedHashSet_LinkedHashSet($E);
      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, A.throwConcurrentModificationError)(elements), ++_i)
        result.add$1(0, $E._as(elements[_i]));
      return result;
    },
    LinkedHashSet_LinkedHashSet$of(elements, $E) {
      var t1 = A.LinkedHashSet_LinkedHashSet($E);
      t1.addAll$1(0, elements);
      return t1;
    },
    MapBase_mapToString(m) {
      var result, t1;
      if (A.isToStringVisiting(m))
        return "{...}";
      result = new A.StringBuffer("");
      try {
        t1 = {};
        B.JSArray_methods.add$1($.toStringVisiting, m);
        result._contents += "{";
        t1.first = true;
        m.forEach$1(0, new A.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        if (0 >= $.toStringVisiting.length)
          return A.ioore($.toStringVisiting, -1);
        $.toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    ListQueue__calculateCapacity(initialCapacity) {
      return 8;
    },
    _HashMap: function _HashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._keys = _._collection$_rest = _._nums = _._strings = null;
      _.$ti = t0;
    },
    _IdentityHashMap: function _IdentityHashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._keys = _._collection$_rest = _._nums = _._strings = null;
      _.$ti = t0;
    },
    _CustomHashMap: function _CustomHashMap(t0, t1, t2, t3) {
      var _ = this;
      _._equals = t0;
      _._hashCode = t1;
      _._validKey = t2;
      _._collection$_length = 0;
      _._keys = _._collection$_rest = _._nums = _._strings = null;
      _.$ti = t3;
    },
    _CustomHashMap_closure: function _CustomHashMap_closure(t0) {
      this.K = t0;
    },
    _HashMapKeyIterable: function _HashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    _HashMapKeyIterator: function _HashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._map = t0;
      _._keys = t1;
      _._offset = 0;
      _._collection$_current = null;
      _.$ti = t2;
    },
    _LinkedHashSet: function _LinkedHashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_last = _._collection$_first = _._collection$_rest = _._nums = _._strings = null;
      _._collection$_modifications = 0;
      _.$ti = t0;
    },
    _LinkedHashSetCell: function _LinkedHashSetCell(t0) {
      this._element = t0;
      this._collection$_previous = this._collection$_next = null;
    },
    _LinkedHashSetIterator: function _LinkedHashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._collection$_modifications = t1;
      _._collection$_current = _._collection$_cell = null;
      _.$ti = t2;
    },
    UnmodifiableListView: function UnmodifiableListView(t0, t1) {
      this._collection$_source = t0;
      this.$ti = t1;
    },
    LinkedHashMap_LinkedHashMap$from_closure: function LinkedHashMap_LinkedHashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    ListBase: function ListBase() {
    },
    MapBase: function MapBase() {
    },
    MapBase_entries_closure: function MapBase_entries_closure(t0) {
      this.$this = t0;
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    UnmodifiableMapBase: function UnmodifiableMapBase() {
    },
    _UnmodifiableMapMixin: function _UnmodifiableMapMixin() {
    },
    MapView: function MapView() {
    },
    UnmodifiableMapView: function UnmodifiableMapView() {
    },
    ListQueue: function ListQueue(t0, t1) {
      var _ = this;
      _._table = t0;
      _._modificationCount = _._tail = _._head = 0;
      _.$ti = t1;
    },
    _ListQueueIterator: function _ListQueueIterator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._collection$_queue = t0;
      _._collection$_end = t1;
      _._modificationCount = t2;
      _._position = t3;
      _._collection$_current = null;
      _.$ti = t4;
    },
    SetBase: function SetBase() {
    },
    _SetBase: function _SetBase() {
    },
    _UnmodifiableMapView_MapView__UnmodifiableMapMixin: function _UnmodifiableMapView_MapView__UnmodifiableMapMixin() {
    },
    _parseJson(source, reviver) {
      var e, exception, t1, parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.FormatException$(String(e), null, null);
        throw A.wrapException(t1);
      }
      t1 = A._convertJsonToDartLazy(parsed);
      return t1;
    },
    _convertJsonToDartLazy(object) {
      var i;
      if (object == null)
        return null;
      if (typeof object != "object")
        return object;
      if (!Array.isArray(object))
        return new A._JsonMap(object, Object.create(null));
      for (i = 0; i < object.length; ++i)
        object[i] = A._convertJsonToDartLazy(object[i]);
      return object;
    },
    _Utf8Decoder__makeNativeUint8List(codeUnits, start, end) {
      var bytes, t1, i, b,
        $length = end - start;
      if ($length <= 4096)
        bytes = $.$get$_Utf8Decoder__reusableBuffer();
      else
        bytes = new Uint8Array($length);
      for (t1 = J.getInterceptor$asx(codeUnits), i = 0; i < $length; ++i) {
        b = t1.$index(codeUnits, start + i);
        if ((b & 255) !== b)
          b = 255;
        bytes[i] = b;
      }
      return bytes;
    },
    _Utf8Decoder__convertInterceptedUint8List(allowMalformed, codeUnits, start, end) {
      var decoder = allowMalformed ? $.$get$_Utf8Decoder__decoderNonfatal() : $.$get$_Utf8Decoder__decoder();
      if (decoder == null)
        return null;
      if (0 === start && end === codeUnits.length)
        return A._Utf8Decoder__useTextDecoder(decoder, codeUnits);
      return A._Utf8Decoder__useTextDecoder(decoder, codeUnits.subarray(start, end));
    },
    _Utf8Decoder__useTextDecoder(decoder, codeUnits) {
      var t1, exception;
      try {
        t1 = decoder.decode(codeUnits);
        return t1;
      } catch (exception) {
      }
      return null;
    },
    Base64Codec__checkPadding(source, sourceIndex, sourceEnd, firstPadding, paddingCount, $length) {
      if (B.JSInt_methods.$mod($length, 4) !== 0)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, padded length must be multiple of four, is " + $length, source, sourceEnd));
      if (firstPadding + paddingCount !== $length)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, '=' not at the end", source, sourceIndex));
      if (paddingCount > 2)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, more than two '=' characters", source, sourceIndex));
    },
    _Base64Encoder_encodeChunk(alphabet, bytes, start, end, isLast, output, outputIndex, state) {
      var t1, t2, t3, i, byteOr, byte, outputIndex0, t4, t5, outputIndex1,
        bits = state >>> 2,
        expectedChars = 3 - (state & 3);
      for (t1 = J.getInterceptor$asx(bytes), t2 = alphabet.length, t3 = output.$flags | 0, i = start, byteOr = 0; i < end; ++i) {
        byte = t1.$index(bytes, i);
        byteOr = (byteOr | byte) >>> 0;
        bits = (bits << 8 | byte) & 16777215;
        --expectedChars;
        if (expectedChars === 0) {
          outputIndex0 = outputIndex + 1;
          t4 = bits >>> 18 & 63;
          if (!(t4 < t2))
            return A.ioore(alphabet, t4);
          t3 & 2 && A.throwUnsupportedOperation(output);
          t5 = output.length;
          if (!(outputIndex < t5))
            return A.ioore(output, outputIndex);
          output[outputIndex] = alphabet.charCodeAt(t4);
          outputIndex = outputIndex0 + 1;
          t4 = bits >>> 12 & 63;
          if (!(t4 < t2))
            return A.ioore(alphabet, t4);
          if (!(outputIndex0 < t5))
            return A.ioore(output, outputIndex0);
          output[outputIndex0] = alphabet.charCodeAt(t4);
          outputIndex0 = outputIndex + 1;
          t4 = bits >>> 6 & 63;
          if (!(t4 < t2))
            return A.ioore(alphabet, t4);
          if (!(outputIndex < t5))
            return A.ioore(output, outputIndex);
          output[outputIndex] = alphabet.charCodeAt(t4);
          outputIndex = outputIndex0 + 1;
          t4 = bits & 63;
          if (!(t4 < t2))
            return A.ioore(alphabet, t4);
          if (!(outputIndex0 < t5))
            return A.ioore(output, outputIndex0);
          output[outputIndex0] = alphabet.charCodeAt(t4);
          bits = 0;
          expectedChars = 3;
        }
      }
      if (byteOr >= 0 && byteOr <= 255) {
        if (expectedChars < 3) {
          outputIndex0 = outputIndex + 1;
          outputIndex1 = outputIndex0 + 1;
          if (3 - expectedChars === 1) {
            t1 = bits >>> 2 & 63;
            if (!(t1 < t2))
              return A.ioore(alphabet, t1);
            t3 & 2 && A.throwUnsupportedOperation(output);
            t3 = output.length;
            if (!(outputIndex < t3))
              return A.ioore(output, outputIndex);
            output[outputIndex] = alphabet.charCodeAt(t1);
            t1 = bits << 4 & 63;
            if (!(t1 < t2))
              return A.ioore(alphabet, t1);
            if (!(outputIndex0 < t3))
              return A.ioore(output, outputIndex0);
            output[outputIndex0] = alphabet.charCodeAt(t1);
            outputIndex = outputIndex1 + 1;
            if (!(outputIndex1 < t3))
              return A.ioore(output, outputIndex1);
            output[outputIndex1] = 61;
            if (!(outputIndex < t3))
              return A.ioore(output, outputIndex);
            output[outputIndex] = 61;
          } else {
            t1 = bits >>> 10 & 63;
            if (!(t1 < t2))
              return A.ioore(alphabet, t1);
            t3 & 2 && A.throwUnsupportedOperation(output);
            t3 = output.length;
            if (!(outputIndex < t3))
              return A.ioore(output, outputIndex);
            output[outputIndex] = alphabet.charCodeAt(t1);
            t1 = bits >>> 4 & 63;
            if (!(t1 < t2))
              return A.ioore(alphabet, t1);
            if (!(outputIndex0 < t3))
              return A.ioore(output, outputIndex0);
            output[outputIndex0] = alphabet.charCodeAt(t1);
            outputIndex = outputIndex1 + 1;
            t1 = bits << 2 & 63;
            if (!(t1 < t2))
              return A.ioore(alphabet, t1);
            if (!(outputIndex1 < t3))
              return A.ioore(output, outputIndex1);
            output[outputIndex1] = alphabet.charCodeAt(t1);
            if (!(outputIndex < t3))
              return A.ioore(output, outputIndex);
            output[outputIndex] = 61;
          }
          return 0;
        }
        return (bits << 2 | 3 - expectedChars) >>> 0;
      }
      for (i = start; i < end;) {
        byte = t1.$index(bytes, i);
        if (byte < 0 || byte > 255)
          break;
        ++i;
      }
      throw A.wrapException(A.ArgumentError$value(bytes, "Not a byte value at index " + i + ": 0x" + B.JSInt_methods.toRadixString$1(t1.$index(bytes, i), 16), null));
    },
    JsonUnsupportedObjectError$(unsupportedObject, cause, partialResult) {
      return new A.JsonUnsupportedObjectError(unsupportedObject, cause);
    },
    _defaultToEncodable(object) {
      return object.toJson$0();
    },
    _JsonStringStringifier$(_sink, _toEncodable) {
      var t1 = _toEncodable == null ? A.convert___defaultToEncodable$closure() : _toEncodable;
      return new A._JsonStringStringifier(_sink, [], t1);
    },
    _JsonStringStringifier_stringify(object, toEncodable, indent) {
      var stringifier, t1,
        output = new A.StringBuffer("");
      if (indent == null)
        stringifier = A._JsonStringStringifier$(output, toEncodable);
      else {
        t1 = toEncodable == null ? A.convert___defaultToEncodable$closure() : toEncodable;
        stringifier = new A._JsonStringStringifierPretty(indent, 0, output, [], t1);
      }
      stringifier.writeObject$1(object);
      t1 = output._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Utf8Decoder_errorDescription(state) {
      switch (state) {
        case 65:
          return "Missing extension byte";
        case 67:
          return "Unexpected extension byte";
        case 69:
          return "Invalid UTF-8 byte";
        case 71:
          return "Overlong encoding";
        case 73:
          return "Out of unicode range";
        case 75:
          return "Encoded surrogate";
        case 77:
          return "Unfinished UTF-8 octet sequence";
        default:
          return "";
      }
    },
    _JsonMap: function _JsonMap(t0, t1) {
      this._original = t0;
      this._processed = t1;
      this._convert$_data = null;
    },
    _JsonMapKeyIterable: function _JsonMapKeyIterable(t0) {
      this._parent = t0;
    },
    _Utf8Decoder__decoder_closure: function _Utf8Decoder__decoder_closure() {
    },
    _Utf8Decoder__decoderNonfatal_closure: function _Utf8Decoder__decoderNonfatal_closure() {
    },
    Base64Codec: function Base64Codec(t0) {
      this._encoder = t0;
    },
    Base64Encoder: function Base64Encoder(t0) {
      this._urlSafe = t0;
    },
    _Base64Encoder: function _Base64Encoder(t0) {
      this._convert$_state = 0;
      this._alphabet = t0;
    },
    ByteConversionSink: function ByteConversionSink() {
    },
    _SimpleCallbackSink: function _SimpleCallbackSink(t0, t1, t2) {
      this._callback = t0;
      this._accumulated = t1;
      this.$ti = t2;
    },
    Codec: function Codec() {
    },
    Converter: function Converter() {
    },
    Encoding: function Encoding() {
    },
    JsonUnsupportedObjectError: function JsonUnsupportedObjectError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCyclicError: function JsonCyclicError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCodec: function JsonCodec() {
    },
    JsonEncoder: function JsonEncoder(t0, t1) {
      this.indent = t0;
      this._toEncodable = t1;
    },
    JsonDecoder: function JsonDecoder(t0) {
      this._reviver = t0;
    },
    _JsonStringifier: function _JsonStringifier() {
    },
    _JsonStringifier_writeMap_closure: function _JsonStringifier_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonPrettyPrintMixin: function _JsonPrettyPrintMixin() {
    },
    _JsonPrettyPrintMixin_writeMap_closure: function _JsonPrettyPrintMixin_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonStringStringifier: function _JsonStringStringifier(t0, t1, t2) {
      this._sink = t0;
      this._seen = t1;
      this._toEncodable = t2;
    },
    _JsonStringStringifierPretty: function _JsonStringStringifierPretty(t0, t1, t2, t3, t4) {
      var _ = this;
      _._indent = t0;
      _._JsonPrettyPrintMixin__indentLevel = t1;
      _._sink = t2;
      _._seen = t3;
      _._toEncodable = t4;
    },
    Utf8Codec: function Utf8Codec() {
    },
    Utf8Encoder: function Utf8Encoder() {
    },
    _Utf8Encoder: function _Utf8Encoder(t0) {
      this._bufferIndex = 0;
      this._convert$_buffer = t0;
    },
    Utf8Decoder: function Utf8Decoder(t0) {
      this._allowMalformed = t0;
    },
    _Utf8Decoder: function _Utf8Decoder(t0) {
      this.allowMalformed = t0;
      this._convert$_state = 16;
      this._charOrIndex = 0;
    },
    __JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin: function __JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin() {
    },
    _BigIntImpl__parseDecimal(source, isNegative) {
      var part, i,
        result = $.$get$_BigIntImpl_zero(),
        t1 = source.length,
        digitInPartCount = 4 - t1 % 4;
      if (digitInPartCount === 4)
        digitInPartCount = 0;
      for (part = 0, i = 0; i < t1; ++i) {
        part = part * 10 + source.charCodeAt(i) - 48;
        ++digitInPartCount;
        if (digitInPartCount === 4) {
          result = result.$mul(0, $.$get$_BigIntImpl__bigInt10000()).$add(0, A._BigIntImpl__BigIntImpl$_fromInt(part));
          part = 0;
          digitInPartCount = 0;
        }
      }
      if (isNegative)
        return result.$negate(0);
      return result;
    },
    _BigIntImpl__codeUnitToRadixValue(codeUnit) {
      if (48 <= codeUnit && codeUnit <= 57)
        return codeUnit - 48;
      return (codeUnit | 32) - 97 + 10;
    },
    _BigIntImpl__parseHex(source, startPos, isNegative) {
      var i, chunk, j, i0, digitValue, digitIndex, digitIndex0,
        t1 = source.length,
        sourceLength = t1 - startPos,
        chunkCount = B.JSNumber_methods.ceil$0(sourceLength / 4),
        digits = new Uint16Array(chunkCount),
        t2 = chunkCount - 1,
        lastDigitLength = sourceLength - t2 * 4;
      for (i = startPos, chunk = 0, j = 0; j < lastDigitLength; ++j, i = i0) {
        i0 = i + 1;
        if (!(i < t1))
          return A.ioore(source, i);
        digitValue = A._BigIntImpl__codeUnitToRadixValue(source.charCodeAt(i));
        if (digitValue >= 16)
          return null;
        chunk = chunk * 16 + digitValue;
      }
      digitIndex = t2 - 1;
      if (!(t2 >= 0 && t2 < chunkCount))
        return A.ioore(digits, t2);
      digits[t2] = chunk;
      for (; i < t1; digitIndex = digitIndex0) {
        for (chunk = 0, j = 0; j < 4; ++j, i = i0) {
          i0 = i + 1;
          if (!(i >= 0 && i < t1))
            return A.ioore(source, i);
          digitValue = A._BigIntImpl__codeUnitToRadixValue(source.charCodeAt(i));
          if (digitValue >= 16)
            return null;
          chunk = chunk * 16 + digitValue;
        }
        digitIndex0 = digitIndex - 1;
        if (!(digitIndex >= 0 && digitIndex < chunkCount))
          return A.ioore(digits, digitIndex);
        digits[digitIndex] = chunk;
      }
      if (chunkCount === 1) {
        if (0 >= chunkCount)
          return A.ioore(digits, 0);
        t1 = digits[0] === 0;
      } else
        t1 = false;
      if (t1)
        return $.$get$_BigIntImpl_zero();
      t1 = A._BigIntImpl__normalize(chunkCount, digits);
      return new A._BigIntImpl(t1 === 0 ? false : isNegative, digits, t1);
    },
    _BigIntImpl__tryParse(source, radix) {
      var match, t1, t2, isNegative, decimalMatch, hexMatch;
      if (source === "")
        return null;
      match = $.$get$_BigIntImpl__parseRE().firstMatch$1(source);
      if (match == null)
        return null;
      t1 = match._match;
      t2 = t1.length;
      if (1 >= t2)
        return A.ioore(t1, 1);
      isNegative = t1[1] === "-";
      if (4 >= t2)
        return A.ioore(t1, 4);
      decimalMatch = t1[4];
      hexMatch = t1[3];
      if (5 >= t2)
        return A.ioore(t1, 5);
      if (decimalMatch != null)
        return A._BigIntImpl__parseDecimal(decimalMatch, isNegative);
      if (hexMatch != null)
        return A._BigIntImpl__parseHex(hexMatch, 2, isNegative);
      return null;
    },
    _BigIntImpl__normalize(used, digits) {
      var t2,
        t1 = digits.length;
      while (true) {
        if (used > 0) {
          t2 = used - 1;
          if (!(t2 < t1))
            return A.ioore(digits, t2);
          t2 = digits[t2] === 0;
        } else
          t2 = false;
        if (!t2)
          break;
        --used;
      }
      return used;
    },
    _BigIntImpl__cloneDigits(digits, from, to, $length) {
      var t1, i, t2,
        resultDigits = new Uint16Array($length),
        n = to - from;
      for (t1 = digits.length, i = 0; i < n; ++i) {
        t2 = from + i;
        if (!(t2 >= 0 && t2 < t1))
          return A.ioore(digits, t2);
        t2 = digits[t2];
        if (!(i < $length))
          return A.ioore(resultDigits, i);
        resultDigits[i] = t2;
      }
      return resultDigits;
    },
    _BigIntImpl__BigIntImpl$from(value) {
      var t1;
      if (value === 0)
        return $.$get$_BigIntImpl_zero();
      if (value === 1)
        return $.$get$_BigIntImpl_one();
      if (value === 2)
        return $.$get$_BigIntImpl_two();
      if (Math.abs(value) < 4294967296)
        return A._BigIntImpl__BigIntImpl$_fromInt(B.JSInt_methods.toInt$0(value));
      t1 = A._BigIntImpl__BigIntImpl$_fromDouble(value);
      return t1;
    },
    _BigIntImpl__BigIntImpl$_fromInt(value) {
      var digits, t1, i, i0,
        isNegative = value < 0;
      if (isNegative) {
        if (value === -9223372036854776e3) {
          digits = new Uint16Array(4);
          digits[3] = 32768;
          t1 = A._BigIntImpl__normalize(4, digits);
          return new A._BigIntImpl(t1 !== 0, digits, t1);
        }
        value = -value;
      }
      if (value < 65536) {
        digits = new Uint16Array(1);
        digits[0] = value;
        t1 = A._BigIntImpl__normalize(1, digits);
        return new A._BigIntImpl(t1 === 0 ? false : isNegative, digits, t1);
      }
      if (value <= 4294967295) {
        digits = new Uint16Array(2);
        digits[0] = value & 65535;
        digits[1] = B.JSInt_methods._shrOtherPositive$1(value, 16);
        t1 = A._BigIntImpl__normalize(2, digits);
        return new A._BigIntImpl(t1 === 0 ? false : isNegative, digits, t1);
      }
      t1 = B.JSInt_methods._tdivFast$1(B.JSInt_methods.get$bitLength(value) - 1, 16) + 1;
      digits = new Uint16Array(t1);
      for (i = 0; value !== 0; i = i0) {
        i0 = i + 1;
        if (!(i < t1))
          return A.ioore(digits, i);
        digits[i] = value & 65535;
        value = B.JSInt_methods._tdivFast$1(value, 65536);
      }
      t1 = A._BigIntImpl__normalize(t1, digits);
      return new A._BigIntImpl(t1 === 0 ? false : isNegative, digits, t1);
    },
    _BigIntImpl__BigIntImpl$_fromDouble(value) {
      var isNegative, bits, t1, i, exponent, unshiftedDigits, unshiftedBig, absResult;
      if (isNaN(value) || value == 1 / 0 || value == -1 / 0)
        throw A.wrapException(A.ArgumentError$("Value must be finite: " + value, null));
      isNegative = value < 0;
      if (isNegative)
        value = -value;
      value = Math.floor(value);
      if (value === 0)
        return $.$get$_BigIntImpl_zero();
      bits = $.$get$_BigIntImpl__bitsForFromDouble();
      for (t1 = bits.$flags | 0, i = 0; i < 8; ++i) {
        t1 & 2 && A.throwUnsupportedOperation(bits);
        if (!(i < 8))
          return A.ioore(bits, i);
        bits[i] = 0;
      }
      t1 = J.asByteData$0$x(B.NativeUint8List_methods.get$buffer(bits));
      t1.$flags & 2 && A.throwUnsupportedOperation(t1, 13);
      t1.setFloat64(0, value, true);
      exponent = (bits[7] << 4 >>> 0) + (bits[6] >>> 4) - 1075;
      unshiftedDigits = new Uint16Array(4);
      unshiftedDigits[0] = (bits[1] << 8 >>> 0) + bits[0];
      unshiftedDigits[1] = (bits[3] << 8 >>> 0) + bits[2];
      unshiftedDigits[2] = (bits[5] << 8 >>> 0) + bits[4];
      unshiftedDigits[3] = bits[6] & 15 | 16;
      unshiftedBig = new A._BigIntImpl(false, unshiftedDigits, 4);
      if (exponent < 0)
        absResult = unshiftedBig.$shr(0, -exponent);
      else
        absResult = exponent > 0 ? unshiftedBig.$shl(0, exponent) : unshiftedBig;
      if (isNegative)
        return absResult.$negate(0);
      return absResult;
    },
    _BigIntImpl__dlShiftDigits(xDigits, xUsed, n, resultDigits) {
      var i, t1, t2, t3, t4;
      if (xUsed === 0)
        return 0;
      if (n === 0 && resultDigits === xDigits)
        return xUsed;
      for (i = xUsed - 1, t1 = xDigits.length, t2 = resultDigits.$flags | 0; i >= 0; --i) {
        t3 = i + n;
        if (!(i < t1))
          return A.ioore(xDigits, i);
        t4 = xDigits[i];
        t2 & 2 && A.throwUnsupportedOperation(resultDigits);
        if (!(t3 >= 0 && t3 < resultDigits.length))
          return A.ioore(resultDigits, t3);
        resultDigits[t3] = t4;
      }
      for (i = n - 1; i >= 0; --i) {
        t2 & 2 && A.throwUnsupportedOperation(resultDigits);
        if (!(i < resultDigits.length))
          return A.ioore(resultDigits, i);
        resultDigits[i] = 0;
      }
      return xUsed + n;
    },
    _BigIntImpl__lsh(xDigits, xUsed, n, resultDigits) {
      var i, t1, t2, carry, digit, t3, t4,
        digitShift = B.JSInt_methods._tdivFast$1(n, 16),
        bitShift = B.JSInt_methods.$mod(n, 16),
        carryBitShift = 16 - bitShift,
        bitMask = B.JSInt_methods.$shl(1, carryBitShift) - 1;
      for (i = xUsed - 1, t1 = xDigits.length, t2 = resultDigits.$flags | 0, carry = 0; i >= 0; --i) {
        if (!(i < t1))
          return A.ioore(xDigits, i);
        digit = xDigits[i];
        t3 = i + digitShift + 1;
        t4 = B.JSInt_methods._shrReceiverPositive$1(digit, carryBitShift);
        t2 & 2 && A.throwUnsupportedOperation(resultDigits);
        if (!(t3 >= 0 && t3 < resultDigits.length))
          return A.ioore(resultDigits, t3);
        resultDigits[t3] = (t4 | carry) >>> 0;
        carry = B.JSInt_methods.$shl(digit & bitMask, bitShift);
      }
      t2 & 2 && A.throwUnsupportedOperation(resultDigits);
      if (!(digitShift >= 0 && digitShift < resultDigits.length))
        return A.ioore(resultDigits, digitShift);
      resultDigits[digitShift] = carry;
    },
    _BigIntImpl__lShiftDigits(xDigits, xUsed, n, resultDigits) {
      var resultUsed, t1, i,
        digitsShift = B.JSInt_methods._tdivFast$1(n, 16);
      if (B.JSInt_methods.$mod(n, 16) === 0)
        return A._BigIntImpl__dlShiftDigits(xDigits, xUsed, digitsShift, resultDigits);
      resultUsed = xUsed + digitsShift + 1;
      A._BigIntImpl__lsh(xDigits, xUsed, n, resultDigits);
      for (t1 = resultDigits.$flags | 0, i = digitsShift; --i, i >= 0;) {
        t1 & 2 && A.throwUnsupportedOperation(resultDigits);
        if (!(i < resultDigits.length))
          return A.ioore(resultDigits, i);
        resultDigits[i] = 0;
      }
      t1 = resultUsed - 1;
      if (!(t1 >= 0 && t1 < resultDigits.length))
        return A.ioore(resultDigits, t1);
      if (resultDigits[t1] === 0)
        resultUsed = t1;
      return resultUsed;
    },
    _BigIntImpl__rsh(xDigits, xUsed, n, resultDigits) {
      var carry, last, t2, i, t3, digit,
        digitsShift = B.JSInt_methods._tdivFast$1(n, 16),
        bitShift = B.JSInt_methods.$mod(n, 16),
        carryBitShift = 16 - bitShift,
        bitMask = B.JSInt_methods.$shl(1, bitShift) - 1,
        t1 = xDigits.length;
      if (!(digitsShift >= 0 && digitsShift < t1))
        return A.ioore(xDigits, digitsShift);
      carry = B.JSInt_methods._shrReceiverPositive$1(xDigits[digitsShift], bitShift);
      last = xUsed - digitsShift - 1;
      for (t2 = resultDigits.$flags | 0, i = 0; i < last; ++i) {
        t3 = i + digitsShift + 1;
        if (!(t3 < t1))
          return A.ioore(xDigits, t3);
        digit = xDigits[t3];
        t3 = B.JSInt_methods.$shl(digit & bitMask, carryBitShift);
        t2 & 2 && A.throwUnsupportedOperation(resultDigits);
        if (!(i < resultDigits.length))
          return A.ioore(resultDigits, i);
        resultDigits[i] = (t3 | carry) >>> 0;
        carry = B.JSInt_methods._shrReceiverPositive$1(digit, bitShift);
      }
      t2 & 2 && A.throwUnsupportedOperation(resultDigits);
      if (!(last >= 0 && last < resultDigits.length))
        return A.ioore(resultDigits, last);
      resultDigits[last] = carry;
    },
    _BigIntImpl__compareDigits(digits, used, otherDigits, otherUsed) {
      var i, t1, t2, t3,
        result = used - otherUsed;
      if (result === 0)
        for (i = used - 1, t1 = digits.length, t2 = otherDigits.length; i >= 0; --i) {
          if (!(i < t1))
            return A.ioore(digits, i);
          t3 = digits[i];
          if (!(i < t2))
            return A.ioore(otherDigits, i);
          result = t3 - otherDigits[i];
          if (result !== 0)
            return result;
        }
      return result;
    },
    _BigIntImpl__absAdd(digits, used, otherDigits, otherUsed, resultDigits) {
      var t1, t2, t3, carry, i, t4;
      for (t1 = digits.length, t2 = otherDigits.length, t3 = resultDigits.$flags | 0, carry = 0, i = 0; i < otherUsed; ++i) {
        if (!(i < t1))
          return A.ioore(digits, i);
        t4 = digits[i];
        if (!(i < t2))
          return A.ioore(otherDigits, i);
        carry += t4 + otherDigits[i];
        t3 & 2 && A.throwUnsupportedOperation(resultDigits);
        if (!(i < resultDigits.length))
          return A.ioore(resultDigits, i);
        resultDigits[i] = carry & 65535;
        carry = carry >>> 16;
      }
      for (i = otherUsed; i < used; ++i) {
        if (!(i >= 0 && i < t1))
          return A.ioore(digits, i);
        carry += digits[i];
        t3 & 2 && A.throwUnsupportedOperation(resultDigits);
        if (!(i < resultDigits.length))
          return A.ioore(resultDigits, i);
        resultDigits[i] = carry & 65535;
        carry = carry >>> 16;
      }
      t3 & 2 && A.throwUnsupportedOperation(resultDigits);
      if (!(used >= 0 && used < resultDigits.length))
        return A.ioore(resultDigits, used);
      resultDigits[used] = carry;
    },
    _BigIntImpl__absSub(digits, used, otherDigits, otherUsed, resultDigits) {
      var t1, t2, t3, carry, i, t4;
      for (t1 = digits.length, t2 = otherDigits.length, t3 = resultDigits.$flags | 0, carry = 0, i = 0; i < otherUsed; ++i) {
        if (!(i < t1))
          return A.ioore(digits, i);
        t4 = digits[i];
        if (!(i < t2))
          return A.ioore(otherDigits, i);
        carry += t4 - otherDigits[i];
        t3 & 2 && A.throwUnsupportedOperation(resultDigits);
        if (!(i < resultDigits.length))
          return A.ioore(resultDigits, i);
        resultDigits[i] = carry & 65535;
        carry = 0 - (B.JSInt_methods._shrOtherPositive$1(carry, 16) & 1);
      }
      for (i = otherUsed; i < used; ++i) {
        if (!(i >= 0 && i < t1))
          return A.ioore(digits, i);
        carry += digits[i];
        t3 & 2 && A.throwUnsupportedOperation(resultDigits);
        if (!(i < resultDigits.length))
          return A.ioore(resultDigits, i);
        resultDigits[i] = carry & 65535;
        carry = 0 - (B.JSInt_methods._shrOtherPositive$1(carry, 16) & 1);
      }
    },
    _BigIntImpl__mulAdd(x, multiplicandDigits, i, accumulatorDigits, j, n) {
      var t1, t2, t3, c, i0, t4, combined, j0, l;
      if (x === 0)
        return;
      for (t1 = multiplicandDigits.length, t2 = accumulatorDigits.length, t3 = accumulatorDigits.$flags | 0, c = 0; --n, n >= 0; j = j0, i = i0) {
        i0 = i + 1;
        if (!(i < t1))
          return A.ioore(multiplicandDigits, i);
        t4 = multiplicandDigits[i];
        if (!(j >= 0 && j < t2))
          return A.ioore(accumulatorDigits, j);
        combined = x * t4 + accumulatorDigits[j] + c;
        j0 = j + 1;
        t3 & 2 && A.throwUnsupportedOperation(accumulatorDigits);
        accumulatorDigits[j] = combined & 65535;
        c = B.JSInt_methods._tdivFast$1(combined, 65536);
      }
      for (; c !== 0; j = j0) {
        if (!(j >= 0 && j < t2))
          return A.ioore(accumulatorDigits, j);
        l = accumulatorDigits[j] + c;
        j0 = j + 1;
        t3 & 2 && A.throwUnsupportedOperation(accumulatorDigits);
        accumulatorDigits[j] = l & 65535;
        c = B.JSInt_methods._tdivFast$1(l, 65536);
      }
    },
    _BigIntImpl__estimateQuotientDigit(topDigitDivisor, digits, i) {
      var t2, t3, quotientDigit,
        t1 = digits.length;
      if (!(i >= 0 && i < t1))
        return A.ioore(digits, i);
      t2 = digits[i];
      if (t2 === topDigitDivisor)
        return 65535;
      t3 = i - 1;
      if (!(t3 >= 0 && t3 < t1))
        return A.ioore(digits, t3);
      quotientDigit = B.JSInt_methods.$tdiv((t2 << 16 | digits[t3]) >>> 0, topDigitDivisor);
      if (quotientDigit > 65535)
        return 65535;
      return quotientDigit;
    },
    identityHashCode(object) {
      return A.objectHashCode(object);
    },
    int_parse(source, radix) {
      var value = A.Primitives_parseInt(source, radix);
      if (value != null)
        return value;
      throw A.wrapException(A.FormatException$(source, null, null));
    },
    Error__throw(error, stackTrace) {
      error = A.initializeExceptionWrapper(error, new Error());
      if (error == null)
        error = A._asObject(error);
      error.stack = stackTrace.toString$0(0);
      throw error;
    },
    List_List$filled($length, fill, growable, $E) {
      var i,
        result = growable ? J.JSArray_JSArray$growable($length, $E) : J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && fill != null)
        for (i = 0; i < result.length; ++i)
          result[i] = fill;
      return result;
    },
    List_List$from(elements, growable, $E) {
      var t1,
        list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        B.JSArray_methods.add$1(list, $E._as(t1.get$current()));
      list.$flags = 1;
      return list;
    },
    List_List$_of(elements, $E) {
      var list, t1;
      if (Array.isArray(elements))
        return A._setArrayType(elements.slice(0), $E._eval$1("JSArray<0>"));
      list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        B.JSArray_methods.add$1(list, t1.get$current());
      return list;
    },
    List_List$unmodifiable(elements, $E) {
      var result = A.List_List$from(elements, false, $E);
      result.$flags = 3;
      return result;
    },
    String_String$fromCharCodes(charCodes, start, end) {
      var t1, t2, maxLength, array, len;
      A.RangeError_checkNotNegative(start, "start");
      t1 = end == null;
      t2 = !t1;
      if (t2) {
        maxLength = end - start;
        if (maxLength < 0)
          throw A.wrapException(A.RangeError$range(end, start, null, "end", null));
        if (maxLength === 0)
          return "";
      }
      if (Array.isArray(charCodes)) {
        array = charCodes;
        len = array.length;
        if (t1)
          end = len;
        return A.Primitives_stringFromCharCodes(start > 0 || end < len ? array.slice(start, end) : array);
      }
      if (type$.NativeUint8List._is(charCodes))
        return A.String__stringFromUint8List(charCodes, start, end);
      if (t2)
        charCodes = J.take$1$ax(charCodes, end);
      if (start > 0)
        charCodes = J.skip$1$ax(charCodes, start);
      t1 = A.List_List$_of(charCodes, type$.int);
      return A.Primitives_stringFromCharCodes(t1);
    },
    String_String$fromCharCode(charCode) {
      return A.Primitives_stringFromCharCode(charCode);
    },
    String__stringFromUint8List(charCodes, start, endOrNull) {
      var len = charCodes.length;
      if (start >= len)
        return "";
      return A.Primitives_stringFromNativeUint8List(charCodes, start, endOrNull == null || endOrNull > len ? len : endOrNull);
    },
    RegExp_RegExp(source, caseSensitive) {
      return new A.JSSyntaxRegExp(source, A.JSSyntaxRegExp_makeNative(source, false, caseSensitive, false, false, ""));
    },
    identical(a, b) {
      return a == null ? b == null : a === b;
    },
    StringBuffer__writeAll(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += A.S(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        string += A.S(iterator.get$current());
        for (; iterator.moveNext$0();)
          string = string + separator + A.S(iterator.get$current());
      }
      return string;
    },
    StackTrace_current() {
      return A.getTraceFromException(new Error());
    },
    DateTime__validate(millisecondsSinceEpoch, microsecond, isUtc) {
      var _s11_ = "microsecond";
      if (microsecond < 0 || microsecond > 999)
        throw A.wrapException(A.RangeError$range(microsecond, 0, 999, _s11_, null));
      if (millisecondsSinceEpoch < -864e13 || millisecondsSinceEpoch > 864e13)
        throw A.wrapException(A.RangeError$range(millisecondsSinceEpoch, -864e13, 864e13, "millisecondsSinceEpoch", null));
      if (millisecondsSinceEpoch === 864e13 && microsecond !== 0)
        throw A.wrapException(A.ArgumentError$value(microsecond, _s11_, "Time including microseconds is outside valid range"));
      A.checkNotNullable(isUtc, "isUtc", type$.bool);
      return millisecondsSinceEpoch;
    },
    DateTime__fourDigits(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__threeDigits(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    },
    DateTime__twoDigits(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    Duration$(microseconds, milliseconds) {
      return new A.Duration(microseconds + 1000 * milliseconds);
    },
    Error_safeToString(object) {
      if (typeof object == "number" || A._isBool(object) || object == null)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return A.Primitives_safeToString(object);
    },
    Error_throwWithStackTrace(error, stackTrace) {
      A.checkNotNullable(error, "error", type$.Object);
      A.checkNotNullable(stackTrace, "stackTrace", type$.StackTrace);
      A.Error__throw(error, stackTrace);
    },
    AssertionError$(message) {
      return new A.AssertionError(message);
    },
    ArgumentError$(message, $name) {
      return new A.ArgumentError(false, null, $name, message);
    },
    ArgumentError$value(value, $name, message) {
      return new A.ArgumentError(true, value, $name, message);
    },
    ArgumentError_checkNotNull(argument, $name, $T) {
      return argument;
    },
    RangeError$(message) {
      var _null = null;
      return new A.RangeError(_null, _null, false, _null, _null, message);
    },
    RangeError$value(value, $name) {
      return new A.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range(invalidValue, minValue, maxValue, $name, message) {
      return new A.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValidRange(start, end, $length) {
      if (0 > start || start > $length)
        throw A.wrapException(A.RangeError$range(start, 0, $length, "start", null));
      if (end != null) {
        if (start > end || end > $length)
          throw A.wrapException(A.RangeError$range(end, start, $length, "end", null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative(value, $name) {
      if (value < 0)
        throw A.wrapException(A.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$(invalidValue, indexable, $name, message, $length) {
      var t1 = $length == null ? indexable.get$length(indexable) : $length;
      return new A.IndexError(t1, true, invalidValue, $name, "Index out of range");
    },
    IndexError$withLength(invalidValue, $length, indexable, message, $name) {
      return new A.IndexError($length, true, invalidValue, $name, "Index out of range");
    },
    IndexError_check(index, $length, indexable) {
      if (0 > index || index >= $length)
        throw A.wrapException(A.IndexError$withLength(index, $length, indexable, null, "index"));
      return index;
    },
    UnsupportedError$(message) {
      return new A.UnsupportedError(message);
    },
    UnimplementedError$(message) {
      return new A.UnimplementedError(message);
    },
    StateError$(message) {
      return new A.StateError(message);
    },
    ConcurrentModificationError$(modifiedObject) {
      return new A.ConcurrentModificationError(modifiedObject);
    },
    Exception_Exception(message) {
      return new A._Exception(message);
    },
    FormatException$(message, source, offset) {
      return new A.FormatException(message, source, offset);
    },
    Iterable_iterableToShortString(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (A.isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = A._setArrayType([], type$.JSArray_String);
      B.JSArray_methods.add$1($.toStringVisiting, iterable);
      try {
        A._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= $.toStringVisiting.length)
          return A.ioore($.toStringVisiting, -1);
        $.toStringVisiting.pop();
      }
      t1 = A.StringBuffer__writeAll(leftDelimiter, type$.Iterable_dynamic._as(parts), ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    Iterable_iterableToFullString(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (A.isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new A.StringBuffer(leftDelimiter);
      B.JSArray_methods.add$1($.toStringVisiting, iterable);
      try {
        t1 = buffer;
        t1._contents = A.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        if (0 >= $.toStringVisiting.length)
          return A.ioore($.toStringVisiting, -1);
        $.toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _iterablePartsToStrings(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = iterable.get$iterator(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = A.S(it.get$current());
        B.JSArray_methods.add$1(parts, next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current();
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            B.JSArray_methods.add$1(parts, A.S(penultimate));
            return;
          }
          ultimateString = A.S(penultimate);
          if (0 >= parts.length)
            return A.ioore(parts, -1);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current();
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current();
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return A.ioore(parts, -1);
                $length -= parts.pop().length + 2;
                --count;
              }
              B.JSArray_methods.add$1(parts, "...");
              return;
            }
          }
          penultimateString = A.S(penultimate);
          ultimateString = A.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        B.JSArray_methods.add$1(parts, elision);
      B.JSArray_methods.add$1(parts, penultimateString);
      B.JSArray_methods.add$1(parts, ultimateString);
    },
    Map_Map$fromEntries(entries, $K, $V) {
      var t1 = A.LinkedHashMap_LinkedHashMap$_empty($K, $V);
      t1.addEntries$1(entries);
      return t1;
    },
    Object_hash(object1, object2, object3, object4, object5, object6, object7, object8, object9, object10, object11, object12, object13, object14, object15, object16) {
      var t1;
      if (B.C_SentinelValue === object3) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2));
      }
      if (B.C_SentinelValue === object4) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3));
      }
      if (B.C_SentinelValue === object5) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4));
      }
      if (B.C_SentinelValue === object6) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5));
      }
      if (B.C_SentinelValue === object7) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6));
      }
      if (B.C_SentinelValue === object8) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7));
      }
      if (B.C_SentinelValue === object9) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8));
      }
      if (B.C_SentinelValue === object10) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9));
      }
      if (B.C_SentinelValue === object11) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10));
      }
      if (B.C_SentinelValue === object12) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11));
      }
      if (B.C_SentinelValue === object13) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12));
      }
      if (B.C_SentinelValue === object14) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13));
      }
      if (B.C_SentinelValue === object15) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        object14 = J.get$hashCode$(object14);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14));
      }
      if (B.C_SentinelValue === object16) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        object14 = J.get$hashCode$(object14);
        object15 = J.get$hashCode$(object15);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14), object15));
      }
      t1 = J.get$hashCode$(object1);
      object2 = J.get$hashCode$(object2);
      object3 = J.get$hashCode$(object3);
      object4 = J.get$hashCode$(object4);
      object5 = J.get$hashCode$(object5);
      object6 = J.get$hashCode$(object6);
      object7 = J.get$hashCode$(object7);
      object8 = J.get$hashCode$(object8);
      object9 = J.get$hashCode$(object9);
      object10 = J.get$hashCode$(object10);
      object11 = J.get$hashCode$(object11);
      object12 = J.get$hashCode$(object12);
      object13 = J.get$hashCode$(object13);
      object14 = J.get$hashCode$(object14);
      object15 = J.get$hashCode$(object15);
      object16 = J.get$hashCode$(object16);
      object16 = A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14), object15), object16));
      return object16;
    },
    Object_hashAll(objects) {
      var t1,
        hash = $.$get$_hashSeed();
      for (t1 = J.get$iterator$ax(objects); t1.moveNext$0();)
        hash = A.SystemHash_combine(hash, J.get$hashCode$(t1.get$current()));
      return A.SystemHash_finish(hash);
    },
    print(object) {
      A.printString(A.S(object));
    },
    Set_castFrom(source, newSet, $S, $T) {
      return new A.CastSet(source, newSet, $S._eval$1("@<0>")._bind$1($T)._eval$1("CastSet<1,2>"));
    },
    _combineSurrogatePair(start, end) {
      return 65536 + ((start & 1023) << 10) + (end & 1023);
    },
    Uri_parse(uri) {
      var delta, indices, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, isSimple, scheme, t1, t2, schemeAuth, queryStart0, pathStart0, port, userInfoStart, userInfo, host, portNumber, path, query, _null = null,
        end = uri.length;
      if (end >= 5) {
        if (4 >= end)
          return A.ioore(uri, 4);
        delta = ((uri.charCodeAt(4) ^ 58) * 3 | uri.charCodeAt(0) ^ 100 | uri.charCodeAt(1) ^ 97 | uri.charCodeAt(2) ^ 116 | uri.charCodeAt(3) ^ 97) >>> 0;
        if (delta === 0)
          return A.UriData__parse(end < end ? B.JSString_methods.substring$2(uri, 0, end) : uri, 5, _null).get$uri();
        else if (delta === 32)
          return A.UriData__parse(B.JSString_methods.substring$2(uri, 5, end), 0, _null).get$uri();
      }
      indices = A.List_List$filled(8, 0, false, type$.int);
      B.JSArray_methods.$indexSet(indices, 0, 0);
      B.JSArray_methods.$indexSet(indices, 1, -1);
      B.JSArray_methods.$indexSet(indices, 2, -1);
      B.JSArray_methods.$indexSet(indices, 7, -1);
      B.JSArray_methods.$indexSet(indices, 3, 0);
      B.JSArray_methods.$indexSet(indices, 4, 0);
      B.JSArray_methods.$indexSet(indices, 5, end);
      B.JSArray_methods.$indexSet(indices, 6, end);
      if (A._scan(uri, 0, end, 0, indices) >= 14)
        B.JSArray_methods.$indexSet(indices, 7, end);
      schemeEnd = indices[1];
      if (schemeEnd >= 0)
        if (A._scan(uri, 0, schemeEnd, 20, indices) === 20)
          indices[7] = schemeEnd;
      hostStart = indices[2] + 1;
      portStart = indices[3];
      pathStart = indices[4];
      queryStart = indices[5];
      fragmentStart = indices[6];
      if (fragmentStart < queryStart)
        queryStart = fragmentStart;
      if (pathStart < hostStart)
        pathStart = queryStart;
      else if (pathStart <= schemeEnd)
        pathStart = schemeEnd + 1;
      if (portStart < hostStart)
        portStart = pathStart;
      isSimple = indices[7] < 0;
      scheme = _null;
      if (isSimple) {
        isSimple = false;
        if (!(hostStart > schemeEnd + 3)) {
          t1 = portStart > 0;
          if (!(t1 && portStart + 1 === pathStart)) {
            if (!B.JSString_methods.startsWith$2(uri, "\\", pathStart))
              if (hostStart > 0)
                t2 = B.JSString_methods.startsWith$2(uri, "\\", hostStart - 1) || B.JSString_methods.startsWith$2(uri, "\\", hostStart - 2);
              else
                t2 = false;
            else
              t2 = true;
            if (!t2) {
              if (!(queryStart < end && queryStart === pathStart + 2 && B.JSString_methods.startsWith$2(uri, "..", pathStart)))
                t2 = queryStart > pathStart + 2 && B.JSString_methods.startsWith$2(uri, "/..", queryStart - 3);
              else
                t2 = true;
              if (!t2)
                if (schemeEnd === 4) {
                  if (B.JSString_methods.startsWith$2(uri, "file", 0)) {
                    if (hostStart <= 0) {
                      if (!B.JSString_methods.startsWith$2(uri, "/", pathStart)) {
                        schemeAuth = "file:///";
                        delta = 3;
                      } else {
                        schemeAuth = "file://";
                        delta = 2;
                      }
                      uri = schemeAuth + B.JSString_methods.substring$2(uri, pathStart, end);
                      queryStart += delta;
                      fragmentStart += delta;
                      end = uri.length;
                      hostStart = 7;
                      portStart = 7;
                      pathStart = 7;
                    } else if (pathStart === queryStart) {
                      ++fragmentStart;
                      queryStart0 = queryStart + 1;
                      uri = B.JSString_methods.replaceRange$3(uri, pathStart, queryStart, "/");
                      ++end;
                      queryStart = queryStart0;
                    }
                    scheme = "file";
                  } else if (B.JSString_methods.startsWith$2(uri, "http", 0)) {
                    if (t1 && portStart + 3 === pathStart && B.JSString_methods.startsWith$2(uri, "80", portStart + 1)) {
                      fragmentStart -= 3;
                      pathStart0 = pathStart - 3;
                      queryStart -= 3;
                      uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                      end -= 3;
                      pathStart = pathStart0;
                    }
                    scheme = "http";
                  }
                } else if (schemeEnd === 5 && B.JSString_methods.startsWith$2(uri, "https", 0)) {
                  if (t1 && portStart + 4 === pathStart && B.JSString_methods.startsWith$2(uri, "443", portStart + 1)) {
                    fragmentStart -= 4;
                    pathStart0 = pathStart - 4;
                    queryStart -= 4;
                    uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                    end -= 3;
                    pathStart = pathStart0;
                  }
                  scheme = "https";
                }
              isSimple = !t2;
            }
          }
        }
      }
      if (isSimple)
        return new A._SimpleUri(end < uri.length ? B.JSString_methods.substring$2(uri, 0, end) : uri, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
      if (scheme == null)
        if (schemeEnd > 0)
          scheme = A._Uri__makeScheme(uri, 0, schemeEnd);
        else {
          if (schemeEnd === 0)
            A._Uri__fail(uri, 0, "Invalid empty scheme");
          scheme = "";
        }
      port = _null;
      if (hostStart > 0) {
        userInfoStart = schemeEnd + 3;
        userInfo = userInfoStart < hostStart ? A._Uri__makeUserInfo(uri, userInfoStart, hostStart - 1) : "";
        host = A._Uri__makeHost(uri, hostStart, portStart, false);
        t1 = portStart + 1;
        if (t1 < pathStart) {
          portNumber = A.Primitives_parseInt(B.JSString_methods.substring$2(uri, t1, pathStart), _null);
          port = A._Uri__makePort(portNumber == null ? A.throwExpression(A.FormatException$("Invalid port", uri, t1)) : portNumber, scheme);
        }
      } else {
        host = _null;
        userInfo = "";
      }
      path = A._Uri__makePath(uri, pathStart, queryStart, _null, scheme, host != null);
      query = queryStart < fragmentStart ? A._Uri__makeQuery(uri, queryStart + 1, fragmentStart, _null) : _null;
      return A._Uri$_internal(scheme, userInfo, host, port, path, query, fragmentStart < end ? A._Uri__makeFragment(uri, fragmentStart + 1, end) : _null);
    },
    Uri_decodeComponent(encodedComponent) {
      A._asString(encodedComponent);
      return A._Uri__uriDecode(encodedComponent, 0, encodedComponent.length, B.C_Utf8Codec, false);
    },
    Uri__parseIPv4Address(host, start, end) {
      var t1, i, partStart, partIndex, char, part, partIndex0,
        _s43_ = "IPv4 address should contain exactly 4 parts",
        _s37_ = "each part must be in the range 0..255",
        error = new A.Uri__parseIPv4Address_error(host),
        result = new Uint8Array(4);
      for (t1 = host.length, i = start, partStart = i, partIndex = 0; i < end; ++i) {
        if (!(i >= 0 && i < t1))
          return A.ioore(host, i);
        char = host.charCodeAt(i);
        if (char !== 46) {
          if ((char ^ 48) > 9)
            error.call$2("invalid character", i);
        } else {
          if (partIndex === 3)
            error.call$2(_s43_, i);
          part = A.int_parse(B.JSString_methods.substring$2(host, partStart, i), null);
          if (part > 255)
            error.call$2(_s37_, partStart);
          partIndex0 = partIndex + 1;
          if (!(partIndex < 4))
            return A.ioore(result, partIndex);
          result[partIndex] = part;
          partStart = i + 1;
          partIndex = partIndex0;
        }
      }
      if (partIndex !== 3)
        error.call$2(_s43_, end);
      part = A.int_parse(B.JSString_methods.substring$2(host, partStart, end), null);
      if (part > 255)
        error.call$2(_s37_, partStart);
      if (!(partIndex < 4))
        return A.ioore(result, partIndex);
      result[partIndex] = part;
      return result;
    },
    Uri__validateIPvAddress(host, start, end) {
      var error;
      if (start === end)
        throw A.wrapException(A.FormatException$("Empty IP address", host, start));
      if (!(start >= 0 && start < host.length))
        return A.ioore(host, start);
      if (host.charCodeAt(start) === 118) {
        error = A.Uri__validateIPvFutureAddress(host, start, end);
        if (error != null)
          throw A.wrapException(error);
        return false;
      }
      A.Uri_parseIPv6Address(host, start, end);
      return true;
    },
    Uri__validateIPvFutureAddress(host, start, end) {
      var t1, cursor, cursor0, char, ucChar,
        _s38_ = "Missing hex-digit in IPvFuture address",
        _s128_ = string$.x00_____;
      ++start;
      for (t1 = host.length, cursor = start; true; cursor = cursor0) {
        if (cursor < end) {
          cursor0 = cursor + 1;
          if (!(cursor >= 0 && cursor < t1))
            return A.ioore(host, cursor);
          char = host.charCodeAt(cursor);
          if ((char ^ 48) <= 9)
            continue;
          ucChar = char | 32;
          if (ucChar >= 97 && ucChar <= 102)
            continue;
          if (char === 46) {
            if (cursor0 - 1 === start)
              return new A.FormatException(_s38_, host, cursor0);
            cursor = cursor0;
            break;
          }
          return new A.FormatException("Unexpected character", host, cursor0 - 1);
        }
        if (cursor - 1 === start)
          return new A.FormatException(_s38_, host, cursor);
        return new A.FormatException("Missing '.' in IPvFuture address", host, cursor);
      }
      if (cursor === end)
        return new A.FormatException("Missing address in IPvFuture address, host, cursor", null, null);
      for (; true;) {
        if (!(cursor >= 0 && cursor < t1))
          return A.ioore(host, cursor);
        char = host.charCodeAt(cursor);
        if (!(char < 128))
          return A.ioore(_s128_, char);
        if ((_s128_.charCodeAt(char) & 16) !== 0) {
          ++cursor;
          if (cursor < end)
            continue;
          return null;
        }
        return new A.FormatException("Invalid IPvFuture address character", host, cursor);
      }
    },
    Uri_parseIPv6Address(host, start, end) {
      var parts, i, partStart, wildcardSeen, seenDot, char, atEnd, last, bytes, wildCardLength, index, value, j, t2, _null = null,
        error = new A.Uri_parseIPv6Address_error(host),
        parseHex = new A.Uri_parseIPv6Address_parseHex(error, host),
        t1 = host.length;
      if (t1 < 2)
        error.call$2("address is too short", _null);
      parts = A._setArrayType([], type$.JSArray_int);
      for (i = start, partStart = i, wildcardSeen = false, seenDot = false; i < end; ++i) {
        if (!(i >= 0 && i < t1))
          return A.ioore(host, i);
        char = host.charCodeAt(i);
        if (char === 58) {
          if (i === start) {
            ++i;
            if (!(i < t1))
              return A.ioore(host, i);
            if (host.charCodeAt(i) !== 58)
              error.call$2("invalid start colon.", i);
            partStart = i;
          }
          if (i === partStart) {
            if (wildcardSeen)
              error.call$2("only one wildcard `::` is allowed", i);
            B.JSArray_methods.add$1(parts, -1);
            wildcardSeen = true;
          } else
            B.JSArray_methods.add$1(parts, parseHex.call$2(partStart, i));
          partStart = i + 1;
        } else if (char === 46)
          seenDot = true;
      }
      if (parts.length === 0)
        error.call$2("too few parts", _null);
      atEnd = partStart === end;
      t1 = B.JSArray_methods.get$last(parts);
      if (atEnd && t1 !== -1)
        error.call$2("expected a part after last `:`", end);
      if (!atEnd)
        if (!seenDot)
          B.JSArray_methods.add$1(parts, parseHex.call$2(partStart, end));
        else {
          last = A.Uri__parseIPv4Address(host, partStart, end);
          B.JSArray_methods.add$1(parts, (last[0] << 8 | last[1]) >>> 0);
          B.JSArray_methods.add$1(parts, (last[2] << 8 | last[3]) >>> 0);
        }
      if (wildcardSeen) {
        if (parts.length > 7)
          error.call$2("an address with a wildcard must have less than 7 parts", _null);
      } else if (parts.length !== 8)
        error.call$2("an address without a wildcard must contain exactly 8 parts", _null);
      bytes = new Uint8Array(16);
      for (t1 = parts.length, wildCardLength = 9 - t1, i = 0, index = 0; i < t1; ++i) {
        value = parts[i];
        if (value === -1)
          for (j = 0; j < wildCardLength; ++j) {
            if (!(index >= 0 && index < 16))
              return A.ioore(bytes, index);
            bytes[index] = 0;
            t2 = index + 1;
            if (!(t2 < 16))
              return A.ioore(bytes, t2);
            bytes[t2] = 0;
            index += 2;
          }
        else {
          t2 = B.JSInt_methods._shrOtherPositive$1(value, 8);
          if (!(index >= 0 && index < 16))
            return A.ioore(bytes, index);
          bytes[index] = t2;
          t2 = index + 1;
          if (!(t2 < 16))
            return A.ioore(bytes, t2);
          bytes[t2] = value & 255;
          index += 2;
        }
      }
      return bytes;
    },
    _Uri$_internal(scheme, _userInfo, _host, _port, path, _query, _fragment) {
      return new A._Uri(scheme, _userInfo, _host, _port, path, _query, _fragment);
    },
    _Uri__defaultPort(scheme) {
      if (scheme === "http")
        return 80;
      if (scheme === "https")
        return 443;
      return 0;
    },
    _Uri__fail(uri, index, message) {
      throw A.wrapException(A.FormatException$(message, uri, index));
    },
    _Uri__makePort(port, scheme) {
      if (port != null && port === A._Uri__defaultPort(scheme))
        return null;
      return port;
    },
    _Uri__makeHost(host, start, end, strictIPv6) {
      var t1, t2, t3, zoneID, index, zoneIDstart, isIPv6, hostChars, i;
      if (start === end)
        return "";
      t1 = host.length;
      if (!(start >= 0 && start < t1))
        return A.ioore(host, start);
      if (host.charCodeAt(start) === 91) {
        t2 = end - 1;
        if (!(t2 >= 0 && t2 < t1))
          return A.ioore(host, t2);
        if (host.charCodeAt(t2) !== 93)
          A._Uri__fail(host, start, "Missing end `]` to match `[` in host");
        t3 = start + 1;
        if (!(t3 < t1))
          return A.ioore(host, t3);
        zoneID = "";
        if (host.charCodeAt(t3) !== 118) {
          index = A._Uri__checkZoneID(host, t3, t2);
          if (index < t2) {
            zoneIDstart = index + 1;
            zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, t2, "%25");
          }
        } else
          index = t2;
        isIPv6 = A.Uri__validateIPvAddress(host, t3, index);
        hostChars = B.JSString_methods.substring$2(host, t3, index);
        return "[" + (isIPv6 ? hostChars.toLowerCase() : hostChars) + zoneID + "]";
      }
      for (i = start; i < end; ++i) {
        if (!(i < t1))
          return A.ioore(host, i);
        if (host.charCodeAt(i) === 58) {
          index = B.JSString_methods.indexOf$2(host, "%", start);
          index = index >= start && index < end ? index : end;
          if (index < end) {
            zoneIDstart = index + 1;
            zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, end, "%25");
          } else
            zoneID = "";
          A.Uri_parseIPv6Address(host, start, index);
          return "[" + B.JSString_methods.substring$2(host, start, index) + zoneID + "]";
        }
      }
      return A._Uri__normalizeRegName(host, start, end);
    },
    _Uri__checkZoneID(host, start, end) {
      var index = B.JSString_methods.indexOf$2(host, "%", start);
      return index >= start && index < end ? index : end;
    },
    _Uri__normalizeZoneID(host, start, end, prefix) {
      var t1, index, sectionStart, isNormalized, char, replacement, t2, t3, sourceLength, tail, slice,
        buffer = prefix !== "" ? new A.StringBuffer(prefix) : null;
      for (t1 = host.length, index = start, sectionStart = index, isNormalized = true; index < end;) {
        if (!(index >= 0 && index < t1))
          return A.ioore(host, index);
        char = host.charCodeAt(index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t2 = replacement == null;
          if (t2 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          t3 = buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
          if (t2)
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%")
            A._Uri__fail(host, index, "ZoneID should not contain % anymore");
          buffer._contents = t3 + replacement;
          index += 3;
          sectionStart = index;
          isNormalized = true;
        } else if (char < 127 && (string$.x00_____.charCodeAt(char) & 1) !== 0) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = new A.StringBuffer("");
            if (sectionStart < index) {
              buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else {
          sourceLength = 1;
          if ((char & 64512) === 55296 && index + 1 < end) {
            t2 = index + 1;
            if (!(t2 < t1))
              return A.ioore(host, t2);
            tail = host.charCodeAt(t2);
            if ((tail & 64512) === 56320) {
              char = 65536 + ((char & 1023) << 10) + (tail & 1023);
              sourceLength = 2;
            }
          }
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t2 = buffer;
          } else
            t2 = buffer;
          t2._contents += slice;
          t3 = A._Uri__escapeChar(char);
          t2._contents += t3;
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = B.JSString_methods.substring$2(host, sectionStart, end);
        buffer._contents += slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__normalizeRegName(host, start, end) {
      var t1, index, sectionStart, buffer, isNormalized, char, replacement, t2, slice, t3, sourceLength, tail,
        _s128_ = string$.x00_____;
      for (t1 = host.length, index = start, sectionStart = index, buffer = null, isNormalized = true; index < end;) {
        if (!(index >= 0 && index < t1))
          return A.ioore(host, index);
        char = host.charCodeAt(index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t2 = replacement == null;
          if (t2 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (!isNormalized)
            slice = slice.toLowerCase();
          t3 = buffer._contents += slice;
          sourceLength = 3;
          if (t2)
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%") {
            replacement = "%25";
            sourceLength = 1;
          }
          buffer._contents = t3 + replacement;
          index += sourceLength;
          sectionStart = index;
          isNormalized = true;
        } else if (char < 127 && (_s128_.charCodeAt(char) & 32) !== 0) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = new A.StringBuffer("");
            if (sectionStart < index) {
              buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else if (char <= 93 && (_s128_.charCodeAt(char) & 1024) !== 0)
          A._Uri__fail(host, index, "Invalid character");
        else {
          sourceLength = 1;
          if ((char & 64512) === 55296 && index + 1 < end) {
            t2 = index + 1;
            if (!(t2 < t1))
              return A.ioore(host, t2);
            tail = host.charCodeAt(t2);
            if ((tail & 64512) === 56320) {
              char = 65536 + ((char & 1023) << 10) + (tail & 1023);
              sourceLength = 2;
            }
          }
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (!isNormalized)
            slice = slice.toLowerCase();
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t2 = buffer;
          } else
            t2 = buffer;
          t2._contents += slice;
          t3 = A._Uri__escapeChar(char);
          t2._contents += t3;
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = B.JSString_methods.substring$2(host, sectionStart, end);
        if (!isNormalized)
          slice = slice.toLowerCase();
        buffer._contents += slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__makeScheme(scheme, start, end) {
      var t1, i, containsUpperCase, codeUnit;
      if (start === end)
        return "";
      t1 = scheme.length;
      if (!(start < t1))
        return A.ioore(scheme, start);
      if (!A._Uri__isAlphabeticCharacter(scheme.charCodeAt(start)))
        A._Uri__fail(scheme, start, "Scheme not starting with alphabetic character");
      for (i = start, containsUpperCase = false; i < end; ++i) {
        if (!(i < t1))
          return A.ioore(scheme, i);
        codeUnit = scheme.charCodeAt(i);
        if (!(codeUnit < 128 && (string$.x00_____.charCodeAt(codeUnit) & 8) !== 0))
          A._Uri__fail(scheme, i, "Illegal scheme character");
        if (65 <= codeUnit && codeUnit <= 90)
          containsUpperCase = true;
      }
      scheme = B.JSString_methods.substring$2(scheme, start, end);
      return A._Uri__canonicalizeScheme(containsUpperCase ? scheme.toLowerCase() : scheme);
    },
    _Uri__canonicalizeScheme(scheme) {
      if (scheme === "http")
        return "http";
      if (scheme === "file")
        return "file";
      if (scheme === "https")
        return "https";
      if (scheme === "package")
        return "package";
      return scheme;
    },
    _Uri__makeUserInfo(userInfo, start, end) {
      return A._Uri__normalizeOrSubstring(userInfo, start, end, 16, false, false);
    },
    _Uri__makePath(path, start, end, pathSegments, scheme, hasAuthority) {
      var result,
        isFile = scheme === "file",
        ensureLeadingSlash = isFile || hasAuthority;
      if (path == null)
        return isFile ? "/" : "";
      else
        result = A._Uri__normalizeOrSubstring(path, start, end, 128, true, true);
      if (result.length === 0) {
        if (isFile)
          return "/";
      } else if (ensureLeadingSlash && !B.JSString_methods.startsWith$1(result, "/"))
        result = "/" + result;
      return A._Uri__normalizePath(result, scheme, hasAuthority);
    },
    _Uri__normalizePath(path, scheme, hasAuthority) {
      var t1 = scheme.length === 0;
      if (t1 && !hasAuthority && !B.JSString_methods.startsWith$1(path, "/") && !B.JSString_methods.startsWith$1(path, "\\"))
        return A._Uri__normalizeRelativePath(path, !t1 || hasAuthority);
      return A._Uri__removeDotSegments(path);
    },
    _Uri__makeQuery(query, start, end, queryParameters) {
      if (query != null)
        return A._Uri__normalizeOrSubstring(query, start, end, 256, true, false);
      return null;
    },
    _Uri__makeFragment(fragment, start, end) {
      return A._Uri__normalizeOrSubstring(fragment, start, end, 256, true, false);
    },
    _Uri__normalizeEscape(source, index, lowerCase) {
      var t3, firstDigit, secondDigit, firstDigitValue, secondDigitValue, value,
        _s128_ = string$.x00_____,
        t1 = index + 2,
        t2 = source.length;
      if (t1 >= t2)
        return "%";
      t3 = index + 1;
      if (!(t3 >= 0 && t3 < t2))
        return A.ioore(source, t3);
      firstDigit = source.charCodeAt(t3);
      if (!(t1 >= 0))
        return A.ioore(source, t1);
      secondDigit = source.charCodeAt(t1);
      firstDigitValue = A.hexDigitValue(firstDigit);
      secondDigitValue = A.hexDigitValue(secondDigit);
      if (firstDigitValue < 0 || secondDigitValue < 0)
        return "%";
      value = firstDigitValue * 16 + secondDigitValue;
      if (value < 127) {
        if (!(value >= 0))
          return A.ioore(_s128_, value);
        t1 = (_s128_.charCodeAt(value) & 1) !== 0;
      } else
        t1 = false;
      if (t1)
        return A.Primitives_stringFromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);
      if (firstDigit >= 97 || secondDigit >= 97)
        return B.JSString_methods.substring$2(source, index, index + 3).toUpperCase();
      return null;
    },
    _Uri__escapeChar(char) {
      var codeUnits, t1, flag, encodedBytes, index, byte, t2, t3,
        _s16_ = "0123456789ABCDEF";
      if (char <= 127) {
        codeUnits = new Uint8Array(3);
        codeUnits[0] = 37;
        t1 = char >>> 4;
        if (!(t1 < 16))
          return A.ioore(_s16_, t1);
        codeUnits[1] = _s16_.charCodeAt(t1);
        codeUnits[2] = _s16_.charCodeAt(char & 15);
      } else {
        if (char > 2047)
          if (char > 65535) {
            flag = 240;
            encodedBytes = 4;
          } else {
            flag = 224;
            encodedBytes = 3;
          }
        else {
          flag = 192;
          encodedBytes = 2;
        }
        t1 = 3 * encodedBytes;
        codeUnits = new Uint8Array(t1);
        for (index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {
          byte = B.JSInt_methods._shrReceiverPositive$1(char, 6 * encodedBytes) & 63 | flag;
          if (!(index < t1))
            return A.ioore(codeUnits, index);
          codeUnits[index] = 37;
          t2 = index + 1;
          t3 = byte >>> 4;
          if (!(t3 < 16))
            return A.ioore(_s16_, t3);
          if (!(t2 < t1))
            return A.ioore(codeUnits, t2);
          codeUnits[t2] = _s16_.charCodeAt(t3);
          t3 = index + 2;
          if (!(t3 < t1))
            return A.ioore(codeUnits, t3);
          codeUnits[t3] = _s16_.charCodeAt(byte & 15);
          index += 3;
        }
      }
      return A.String_String$fromCharCodes(codeUnits, 0, null);
    },
    _Uri__normalizeOrSubstring(component, start, end, charMask, escapeDelimiters, replaceBackslash) {
      var t1 = A._Uri__normalize(component, start, end, charMask, escapeDelimiters, replaceBackslash);
      return t1 == null ? B.JSString_methods.substring$2(component, start, end) : t1;
    },
    _Uri__normalize(component, start, end, charMask, escapeDelimiters, replaceBackslash) {
      var t1, t2, index, sectionStart, buffer, char, sourceLength, replacement, t3, tail, _null = null,
        _s128_ = string$.x00_____;
      for (t1 = !escapeDelimiters, t2 = component.length, index = start, sectionStart = index, buffer = _null; index < end;) {
        if (!(index >= 0 && index < t2))
          return A.ioore(component, index);
        char = component.charCodeAt(index);
        if (char < 127 && (_s128_.charCodeAt(char) & charMask) !== 0)
          ++index;
        else {
          sourceLength = 1;
          if (char === 37) {
            replacement = A._Uri__normalizeEscape(component, index, false);
            if (replacement == null) {
              index += 3;
              continue;
            }
            if ("%" === replacement)
              replacement = "%25";
            else
              sourceLength = 3;
          } else if (char === 92 && replaceBackslash)
            replacement = "/";
          else if (t1 && char <= 93 && (_s128_.charCodeAt(char) & 1024) !== 0) {
            A._Uri__fail(component, index, "Invalid character");
            sourceLength = _null;
            replacement = sourceLength;
          } else {
            if ((char & 64512) === 55296) {
              t3 = index + 1;
              if (t3 < end) {
                if (!(t3 < t2))
                  return A.ioore(component, t3);
                tail = component.charCodeAt(t3);
                if ((tail & 64512) === 56320) {
                  char = 65536 + ((char & 1023) << 10) + (tail & 1023);
                  sourceLength = 2;
                }
              }
            }
            replacement = A._Uri__escapeChar(char);
          }
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t3 = buffer;
          } else
            t3 = buffer;
          t3._contents = (t3._contents += B.JSString_methods.substring$2(component, sectionStart, index)) + replacement;
          if (typeof sourceLength !== "number")
            return A.iae(sourceLength);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return _null;
      if (sectionStart < end) {
        t1 = B.JSString_methods.substring$2(component, sectionStart, end);
        buffer._contents += t1;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__mayContainDotSegments(path) {
      if (B.JSString_methods.startsWith$1(path, "."))
        return true;
      return B.JSString_methods.indexOf$1(path, "/.") !== -1;
    },
    _Uri__removeDotSegments(path) {
      var output, t1, t2, appendSlash, _i, segment, t3;
      if (!A._Uri__mayContainDotSegments(path))
        return path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (segment === "..") {
          t3 = output.length;
          if (t3 !== 0) {
            if (0 >= t3)
              return A.ioore(output, -1);
            output.pop();
            if (output.length === 0)
              B.JSArray_methods.add$1(output, "");
          }
          appendSlash = true;
        } else {
          appendSlash = "." === segment;
          if (!appendSlash)
            B.JSArray_methods.add$1(output, segment);
        }
      }
      if (appendSlash)
        B.JSArray_methods.add$1(output, "");
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__normalizeRelativePath(path, allowScheme) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!A._Uri__mayContainDotSegments(path))
        return !allowScheme ? A._Uri__escapeScheme(path) : path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (".." === segment) {
          appendSlash = output.length !== 0 && B.JSArray_methods.get$last(output) !== "..";
          if (appendSlash) {
            if (0 >= output.length)
              return A.ioore(output, -1);
            output.pop();
          } else
            B.JSArray_methods.add$1(output, "..");
        } else {
          appendSlash = "." === segment;
          if (!appendSlash)
            B.JSArray_methods.add$1(output, segment);
        }
      }
      t1 = output.length;
      if (t1 !== 0)
        if (t1 === 1) {
          if (0 >= t1)
            return A.ioore(output, 0);
          t1 = output[0].length === 0;
        } else
          t1 = false;
      else
        t1 = true;
      if (t1)
        return "./";
      if (appendSlash || B.JSArray_methods.get$last(output) === "..")
        B.JSArray_methods.add$1(output, "");
      if (!allowScheme) {
        if (0 >= output.length)
          return A.ioore(output, 0);
        B.JSArray_methods.$indexSet(output, 0, A._Uri__escapeScheme(output[0]));
      }
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__escapeScheme(path) {
      var i, char, t2,
        _s128_ = string$.x00_____,
        t1 = path.length;
      if (t1 >= 2 && A._Uri__isAlphabeticCharacter(path.charCodeAt(0)))
        for (i = 1; i < t1; ++i) {
          char = path.charCodeAt(i);
          if (char === 58)
            return B.JSString_methods.substring$2(path, 0, i) + "%3A" + B.JSString_methods.substring$1(path, i + 1);
          if (char <= 127) {
            if (!(char < 128))
              return A.ioore(_s128_, char);
            t2 = (_s128_.charCodeAt(char) & 8) === 0;
          } else
            t2 = true;
          if (t2)
            break;
        }
      return path;
    },
    _Uri__hexCharPairToByte(s, pos) {
      var t1, byte, i, t2, charCode;
      for (t1 = s.length, byte = 0, i = 0; i < 2; ++i) {
        t2 = pos + i;
        if (!(t2 < t1))
          return A.ioore(s, t2);
        charCode = s.charCodeAt(t2);
        if (48 <= charCode && charCode <= 57)
          byte = byte * 16 + charCode - 48;
        else {
          charCode |= 32;
          if (97 <= charCode && charCode <= 102)
            byte = byte * 16 + charCode - 87;
          else
            throw A.wrapException(A.ArgumentError$("Invalid URL encoding", null));
        }
      }
      return byte;
    },
    _Uri__uriDecode(text, start, end, encoding, plusToSpace) {
      var simple, codeUnit, t2, bytes,
        t1 = text.length,
        i = start;
      while (true) {
        if (!(i < end)) {
          simple = true;
          break;
        }
        if (!(i < t1))
          return A.ioore(text, i);
        codeUnit = text.charCodeAt(i);
        if (codeUnit <= 127)
          t2 = codeUnit === 37;
        else
          t2 = true;
        if (t2) {
          simple = false;
          break;
        }
        ++i;
      }
      if (simple)
        if (B.C_Utf8Codec === encoding)
          return B.JSString_methods.substring$2(text, start, end);
        else
          bytes = new A.CodeUnits(B.JSString_methods.substring$2(text, start, end));
      else {
        bytes = A._setArrayType([], type$.JSArray_int);
        for (i = start; i < end; ++i) {
          if (!(i < t1))
            return A.ioore(text, i);
          codeUnit = text.charCodeAt(i);
          if (codeUnit > 127)
            throw A.wrapException(A.ArgumentError$("Illegal percent encoding in URI", null));
          if (codeUnit === 37) {
            if (i + 3 > t1)
              throw A.wrapException(A.ArgumentError$("Truncated URI", null));
            B.JSArray_methods.add$1(bytes, A._Uri__hexCharPairToByte(text, i + 1));
            i += 2;
          } else
            B.JSArray_methods.add$1(bytes, codeUnit);
        }
      }
      return encoding.decode$1(bytes);
    },
    _Uri__isAlphabeticCharacter(codeUnit) {
      var lowerCase = codeUnit | 32;
      return 97 <= lowerCase && lowerCase <= 122;
    },
    UriData__parse(text, start, sourceUri) {
      var t1, i, slashIndex, char, equalsIndex, lastSeparator, t2, data,
        _s17_ = "Invalid MIME type",
        indices = A._setArrayType([start - 1], type$.JSArray_int);
      for (t1 = text.length, i = start, slashIndex = -1, char = null; i < t1; ++i) {
        char = text.charCodeAt(i);
        if (char === 44 || char === 59)
          break;
        if (char === 47) {
          if (slashIndex < 0) {
            slashIndex = i;
            continue;
          }
          throw A.wrapException(A.FormatException$(_s17_, text, i));
        }
      }
      if (slashIndex < 0 && i > start)
        throw A.wrapException(A.FormatException$(_s17_, text, i));
      for (; char !== 44;) {
        B.JSArray_methods.add$1(indices, i);
        ++i;
        for (equalsIndex = -1; i < t1; ++i) {
          if (!(i >= 0))
            return A.ioore(text, i);
          char = text.charCodeAt(i);
          if (char === 61) {
            if (equalsIndex < 0)
              equalsIndex = i;
          } else if (char === 59 || char === 44)
            break;
        }
        if (equalsIndex >= 0)
          B.JSArray_methods.add$1(indices, equalsIndex);
        else {
          lastSeparator = B.JSArray_methods.get$last(indices);
          if (char !== 44 || i !== lastSeparator + 7 || !B.JSString_methods.startsWith$2(text, "base64", lastSeparator + 1))
            throw A.wrapException(A.FormatException$("Expecting '='", text, i));
          break;
        }
      }
      B.JSArray_methods.add$1(indices, i);
      t2 = i + 1;
      if ((indices.length & 1) === 1)
        text = B.Base64Codec_Base64Encoder_false.normalize$3(text, t2, t1);
      else {
        data = A._Uri__normalize(text, t2, t1, 256, true, false);
        if (data != null)
          text = B.JSString_methods.replaceRange$3(text, t2, t1, data);
      }
      return new A.UriData(text, indices, sourceUri);
    },
    _scan(uri, start, end, state, indices) {
      var t1, i, char, t2, transition,
        _s2112_ = '\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe1\xe1\x01\xe1\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe3\xe1\xe1\x01\xe1\x01\xe1\xcd\x01\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x0e\x03\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01"\x01\xe1\x01\xe1\xac\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe1\xe1\x01\xe1\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xea\xe1\xe1\x01\xe1\x01\xe1\xcd\x01\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\n\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01"\x01\xe1\x01\xe1\xac\xeb\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\xeb\xeb\xeb\x8b\xeb\xeb\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\xeb\x83\xeb\xeb\x8b\xeb\x8b\xeb\xcd\x8b\xeb\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x92\x83\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\xeb\x8b\xeb\x8b\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xebD\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\x12D\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xe5\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\xe5\xe5\xe5\x05\xe5D\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe8\x8a\xe5\xe5\x05\xe5\x05\xe5\xcd\x05\xe5\x05\x05\x05\x05\x05\x05\x05\x05\x05\x8a\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05f\x05\xe5\x05\xe5\xac\xe5\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\xe5\xe5\xe5\x05\xe5D\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\x8a\xe5\xe5\x05\xe5\x05\xe5\xcd\x05\xe5\x05\x05\x05\x05\x05\x05\x05\x05\x05\x8a\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05f\x05\xe5\x05\xe5\xac\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7D\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\x8a\xe7\xe7\xe7\xe7\xe7\xe7\xcd\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\x8a\xe7\x07\x07\x07\x07\x07\x07\x07\x07\x07\xe7\xe7\xe7\xe7\xe7\xac\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7D\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\x8a\xe7\xe7\xe7\xe7\xe7\xe7\xcd\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\x8a\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\xe7\xe7\xe7\xe7\xe7\xac\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\x05\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\x10\xea\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\x12\n\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\v\n\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xec\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\xec\xec\xec\f\xec\xec\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\xec\xec\xec\xec\f\xec\f\xec\xcd\f\xec\f\f\f\f\f\f\f\f\f\xec\f\f\f\f\f\f\f\f\f\f\xec\f\xec\f\xec\f\xed\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\xed\xed\xed\r\xed\xed\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\xed\xed\xed\xed\r\xed\r\xed\xed\r\xed\r\r\r\r\r\r\r\r\r\xed\r\r\r\r\r\r\r\r\r\r\xed\r\xed\r\xed\r\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe1\xe1\x01\xe1\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xea\xe1\xe1\x01\xe1\x01\xe1\xcd\x01\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x0f\xea\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01"\x01\xe1\x01\xe1\xac\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe1\xe1\x01\xe1\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe9\xe1\xe1\x01\xe1\x01\xe1\xcd\x01\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\t\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01"\x01\xe1\x01\xe1\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\x11\xea\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xe9\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\v\t\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\x13\xea\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\v\xea\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xf5\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\x15\xf5\x15\x15\xf5\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\xf5\xf5\xf5\xf5\xf5\xf5';
      for (t1 = uri.length, i = start; i < end; ++i) {
        if (!(i < t1))
          return A.ioore(uri, i);
        char = uri.charCodeAt(i) ^ 96;
        if (char > 95)
          char = 31;
        t2 = state * 96 + char;
        if (!(t2 < 2112))
          return A.ioore(_s2112_, t2);
        transition = _s2112_.charCodeAt(t2);
        state = transition & 31;
        B.JSArray_methods.$indexSet(indices, transition >>> 5, i);
      }
      return state;
    },
    _caseInsensitiveCompareStart(prefix, string, start) {
      var t1, t2, result, i, t3, stringChar, delta, lowerChar;
      for (t1 = prefix.length, t2 = string.length, result = 0, i = 0; i < t1; ++i) {
        t3 = start + i;
        if (!(t3 < t2))
          return A.ioore(string, t3);
        stringChar = string.charCodeAt(t3);
        delta = prefix.charCodeAt(i) ^ stringChar;
        if (delta !== 0) {
          if (delta === 32) {
            lowerChar = stringChar | delta;
            if (97 <= lowerChar && lowerChar <= 122) {
              result = 32;
              continue;
            }
          }
          return -1;
        }
      }
      return result;
    },
    _BigIntImpl: function _BigIntImpl(t0, t1, t2) {
      this._isNegative = t0;
      this._digits = t1;
      this._used = t2;
    },
    _BigIntImpl_hashCode_combine: function _BigIntImpl_hashCode_combine() {
    },
    _BigIntImpl_hashCode_finish: function _BigIntImpl_hashCode_finish() {
    },
    DateTime: function DateTime(t0, t1, t2) {
      this._core$_value = t0;
      this._microsecond = t1;
      this.isUtc = t2;
    },
    Duration: function Duration(t0) {
      this._duration = t0;
    },
    _Enum: function _Enum() {
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    TypeError: function TypeError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    IntegerDivisionByZeroException: function IntegerDivisionByZeroException() {
    },
    Iterable: function Iterable() {
    },
    MapEntry: function MapEntry(t0, t1, t2) {
      this.key = t0;
      this.value = t1;
      this.$ti = t2;
    },
    Null: function Null() {
    },
    Object: function Object() {
    },
    _StringStackTrace: function _StringStackTrace(t0) {
      this._stackTrace = t0;
    },
    Runes: function Runes(t0) {
      this.string = t0;
    },
    RuneIterator: function RuneIterator(t0) {
      var _ = this;
      _.string = t0;
      _._nextPosition = _._core$_position = 0;
      _._currentCodePoint = -1;
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    Uri__parseIPv4Address_error: function Uri__parseIPv4Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_error: function Uri_parseIPv6Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_parseHex: function Uri_parseIPv6Address_parseHex(t0, t1) {
      this.error = t0;
      this.host = t1;
    },
    _Uri: function _Uri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    UriData: function UriData(t0, t1, t2) {
      this._text = t0;
      this._separatorIndices = t1;
      this._uriCache = t2;
    },
    _SimpleUri: function _SimpleUri(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._uri = t0;
      _._schemeEnd = t1;
      _._hostStart = t2;
      _._portStart = t3;
      _._pathStart = t4;
      _._queryStart = t5;
      _._fragmentStart = t6;
      _._schemeCache = t7;
      _._hashCodeCache = null;
    },
    _DataUri: function _DataUri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    _functionToJS1(f) {
      var result;
      if (typeof f == "function")
        throw A.wrapException(A.ArgumentError$("Attempting to rewrap a JS function.", null));
      result = function(_call, f) {
        return function(arg1) {
          return _call(f, arg1, arguments.length);
        };
      }(A._callDartFunctionFast1, f);
      result[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;
      return result;
    },
    _callDartFunctionFast1(callback, arg1, $length) {
      type$.Function._as(callback);
      if (A._asInt($length) >= 1)
        return callback.call$1(arg1);
      return callback.call$0();
    },
    _noJsifyRequired(o) {
      return o == null || A._isBool(o) || typeof o == "number" || typeof o == "string" || type$.Int8List._is(o) || type$.Uint8List._is(o) || type$.Uint8ClampedList._is(o) || type$.Int16List._is(o) || type$.Uint16List._is(o) || type$.Int32List._is(o) || type$.Uint32List._is(o) || type$.Float32List._is(o) || type$.Float64List._is(o) || type$.ByteBuffer._is(o) || type$.ByteData._is(o);
    },
    jsify(object) {
      if (A._noJsifyRequired(object))
        return object;
      return new A.jsify__convert(new A._IdentityHashMap(type$._IdentityHashMap_of_nullable_Object_and_nullable_Object)).call$1(object);
    },
    promiseToFuture(jsPromise, $T) {
      var t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>")),
        completer = new A._AsyncCompleter(t1, $T._eval$1("_AsyncCompleter<0>"));
      jsPromise.then(A.convertDartClosureToJS(new A.promiseToFuture_closure(completer, $T), 1), A.convertDartClosureToJS(new A.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    _noDartifyRequired(o) {
      return o == null || typeof o === "boolean" || typeof o === "number" || typeof o === "string" || o instanceof Int8Array || o instanceof Uint8Array || o instanceof Uint8ClampedArray || o instanceof Int16Array || o instanceof Uint16Array || o instanceof Int32Array || o instanceof Uint32Array || o instanceof Float32Array || o instanceof Float64Array || o instanceof ArrayBuffer || o instanceof DataView;
    },
    dartify(o) {
      if (A._noDartifyRequired(o))
        return o;
      return new A.dartify_convert(new A._IdentityHashMap(type$._IdentityHashMap_of_nullable_Object_and_nullable_Object)).call$1(o);
    },
    jsify__convert: function jsify__convert(t0) {
      this._convertedObjects = t0;
    },
    promiseToFuture_closure: function promiseToFuture_closure(t0, t1) {
      this.completer = t0;
      this.T = t1;
    },
    promiseToFuture_closure0: function promiseToFuture_closure0(t0) {
      this.completer = t0;
    },
    dartify_convert: function dartify_convert(t0) {
      this._convertedObjects = t0;
    },
    NullRejectionException: function NullRejectionException(t0) {
      this.isUndefined = t0;
    },
    Uint8List___fromList_tearOff(elements) {
      return new Uint8Array(A._ensureNativeList(type$.List_int._as(elements)));
    },
    ByteData_ByteData$view(buffer, offsetInBytes) {
      return J.asByteData$2$x(buffer, offsetInBytes, null);
    },
    Endian: function Endian() {
    },
    ChainCode: function ChainCode(t0) {
      this._u8l = t0;
    },
    Bip32PrivateKey: function Bip32PrivateKey() {
    },
    Bip32PublicKey: function Bip32PublicKey() {
    },
    Bip32Ed25519KeyDerivation_scalar_add(out, offset, k, k1) {
      var t1, t2, r, i, t3;
      for (t1 = k1.length, t2 = out.$flags | 0, r = 0, i = 0; i < 32; ++i) {
        t3 = k[i];
        if (!(i < t1))
          return A.ioore(k1, i);
        r = t3 + k1[i] + r;
        t3 = i + offset;
        t2 & 2 && A.throwUnsupportedOperation(out);
        if (!(t3 < 64))
          return A.ioore(out, t3);
        out[t3] = r;
        r = r >>> 8;
      }
    },
    Bip32Ed25519KeyDerivation_scalar_mul_8(out, k, bytes) {
      var t1, r, i, t2;
      for (t1 = out.$flags | 0, r = 0, i = 0; i < bytes; ++i) {
        if (!(i < 64))
          return A.ioore(k, i);
        t2 = k[i];
        t1 & 2 && A.throwUnsupportedOperation(out);
        if (!(i < 32))
          return A.ioore(out, i);
        out[i] = (t2 << 3 >>> 0) + (r & 7);
        r = k[i] >>> 5;
      }
      t2 = bytes - 1;
      if (!(t2 >= 0 && t2 < 64))
        return A.ioore(k, t2);
      t2 = k[t2];
      t1 & 2 && A.throwUnsupportedOperation(out);
      if (!(bytes < 32))
        return A.ioore(out, bytes);
      out[bytes] = t2 >>> 5;
    },
    Bip32Ed25519KeyDerivation_scalar_add_modulo_2_256(out, outOff, op1, op1Off, op2, op2Off) {
      var t1, t2, carry, i, t3, a, r;
      for (t1 = op2.length, t2 = out.$flags | 0, carry = 0, i = 0; i < 32; ++i) {
        t3 = i + op1Off;
        if (!(t3 < 64))
          return A.ioore(op1, t3);
        a = op1[t3];
        t3 = i + op2Off;
        if (!(t3 < t1))
          return A.ioore(op2, t3);
        r = a + op2[t3] + carry;
        t3 = i + outOff;
        t2 & 2 && A.throwUnsupportedOperation(out);
        if (!(t3 < 64))
          return A.ioore(out, t3);
        out[t3] = r & 255;
        carry = r >= 256 ? 1 : 0;
      }
    },
    Bip32Ed25519KeyDerivation__derive(parentKey, prefixes, index) {
      var suffix, t1, prefix, key,
        out = new Uint8Array(64),
        hardened = index >= 2147483648;
      if (index < 0 || index > 4294967295)
        A.throwExpression(new A.InvalidBip32Ed25519IndexException());
      suffix = new Uint8Array(4);
      t1 = J.asByteData$0$x(B.NativeUint8List_methods.get$buffer(suffix));
      t1.$flags & 2 && A.throwUnsupportedOperation(t1, 8);
      t1.setInt32(0, index, true);
      if (hardened && parentKey instanceof A.Bip32VerifyKey)
        throw A.wrapException(new A.InvalidBip23Ed25519DerivationKeyError());
      prefix = hardened ? prefixes[0] : prefixes[1];
      key = hardened ? parentKey : parentKey.get$publicKey();
      type$.Bip32Key._as(key);
      t1 = A._setArrayType([prefix], type$.JSArray_int);
      B.JSArray_methods.addAll$1(t1, key.get$rawKey());
      B.JSArray_methods.addAll$1(t1, suffix);
      A.TweetNaClExt__crypto_auth(A.tweetnacl_TweetNaCl_crypto_hash$closure(), 128, out, new Uint8Array(A._ensureNativeList(t1)), key.get$chainCode()._u8l);
      return out;
    },
    Bip32Ed25519KeyDerivation__ckd(parentKey, index) {
      var _8ZlB, $K, depth, k, t2, t3, pk, result,
        t1 = type$.JSArray_int,
        ci = B.NativeUint8List_methods.sublist$1(A.Bip32Ed25519KeyDerivation__derive(parentKey, A._setArrayType([1, 3], t1), index), 32),
        _Z = A.Bip32Ed25519KeyDerivation__derive(parentKey, A._setArrayType([0, 2], t1), index),
        _8Zl = new Uint8Array(32);
      A.Bip32Ed25519KeyDerivation_scalar_mul_8(_8Zl, _Z, 28);
      if (parentKey instanceof A.Bip32VerifyKey) {
        _8ZlB = new Uint8Array(32);
        $K = new Uint8Array(32);
        A.Bip32Ed25519KeyDerivation_scalar_mul_8(_8Zl, _Z, 28);
        A.TweetNaClExt_crypto_scalar_base(_8ZlB, _8Zl);
        A.TweetNaClExt_crypto_point_add($K, parentKey._u8l, _8ZlB);
        return A.Bip32VerifyKey$fromKeyBytes($K, ci);
      } else {
        type$.Bip32SigningKey._as(parentKey);
        depth = parentKey.depth + 1;
        if (depth > 1048575)
          throw A.wrapException(new A.MaxDepthExceededBip23Ed25519DerivationKeyError());
        k = new Uint8Array(64);
        t1 = parentKey._u8l;
        A.Bip32Ed25519KeyDerivation_scalar_add(k, 0, _8Zl, t1);
        A.Bip32Ed25519KeyDerivation_scalar_add_modulo_2_256(k, 32, _Z, 32, t1, 32);
        t1 = type$.int;
        t2 = A.List_List$_of(k, t1);
        B.JSArray_methods.addAll$1(t2, ci);
        t2 = new Uint8Array(A._ensureNativeList(t2));
        t3 = A.Bip32SigningKey_validateKeyBits(t2);
        pk = new Uint8Array(A._ensureNativeList(B.JSArray_methods.$add(A.List_List$filled(32, 0, false, t1), B.NativeUint8List_methods.sublist$1(new Uint8Array(A._ensureNativeList(t3)), 64))));
        A.TweetNaClExt_crypto_scalar_base(pk, new Uint8Array(A._ensureNativeList(t3)));
        result = new A.Bip32SigningKey(depth, A.Bip32VerifyKey$(pk), A.ByteList__constructList(A.ExtendedSigningKey_validateKeyBits(A.Bip32SigningKey_validateKeyBits(t2)), 96, 96));
        t2 = A.ByteList__constructList(result.get$suffix(), 32, 32);
        result.__Bip32SigningKey__chainCode_F !== $ && A.throwLateFieldAI("_chainCode");
        result.__Bip32SigningKey__chainCode_F = new A.ChainCode(t2);
        return result;
      }
    },
    Bip32VerifyKey$(publicBytes) {
      var t1 = new A.Bip32VerifyKey(A.ByteList__constructList(publicBytes, 64, 64)),
        t2 = A.ByteList__constructList(t1.get$suffix(), 32, 32);
      t1.__Bip32VerifyKey__chainCode_F !== $ && A.throwLateFieldAI("_chainCode");
      t1.__Bip32VerifyKey__chainCode_F = new A.ChainCode(t2);
      return t1;
    },
    Bip32VerifyKey$fromKeyBytes(pubBytes, chainCodeBytes) {
      var t2,
        t1 = A.List_List$_of(pubBytes, type$.int);
      B.JSArray_methods.addAll$1(t1, chainCodeBytes);
      t1 = new A.Bip32VerifyKey(A.ByteList__constructList(new Uint8Array(A._ensureNativeList(t1)), 64, 64));
      t2 = A.ByteList__constructList(t1.get$suffix(), 32, 32);
      t1.__Bip32VerifyKey__chainCode_F !== $ && A.throwLateFieldAI("_chainCode");
      t1.__Bip32VerifyKey__chainCode_F = new A.ChainCode(t2);
      return t1;
    },
    Bip32SigningKey$(secretBytes) {
      var resultBytes, t2, pk,
        t1 = A.Bip32SigningKey_validateKeyBits(secretBytes);
      if (t1.length !== 96)
        A.throwExpression(new A.InvalidSigningKeyError());
      resultBytes = new Uint8Array(A._ensureNativeList(t1));
      t1 = resultBytes.length;
      if (0 >= t1)
        return A.ioore(resultBytes, 0);
      t2 = resultBytes[0];
      resultBytes.$flags & 2 && A.throwUnsupportedOperation(resultBytes);
      resultBytes[0] = t2 & 248;
      if (31 >= t1)
        return A.ioore(resultBytes, 31);
      resultBytes[31] = resultBytes[31] & 127;
      resultBytes[31] = resultBytes[31] | 64;
      resultBytes[31] = resultBytes[31] & 223;
      t1 = A.Bip32SigningKey_validateKeyBits(resultBytes);
      pk = new Uint8Array(A._ensureNativeList(B.JSArray_methods.$add(A.List_List$filled(32, 0, false, type$.int), B.NativeUint8List_methods.sublist$1(new Uint8Array(A._ensureNativeList(t1)), 64))));
      A.TweetNaClExt_crypto_scalar_base(pk, new Uint8Array(A._ensureNativeList(t1)));
      t1 = new A.Bip32SigningKey(0, A.Bip32VerifyKey$(pk), A.ByteList__constructList(A.ExtendedSigningKey_validateKeyBits(A.Bip32SigningKey_validateKeyBits(resultBytes)), 96, 96));
      t2 = A.ByteList__constructList(t1.get$suffix(), 32, 32);
      t1.__Bip32SigningKey__chainCode_F !== $ && A.throwLateFieldAI("_chainCode");
      t1.__Bip32SigningKey__chainCode_F = new A.ChainCode(t2);
      return t1;
    },
    Bip32SigningKey$normalizeBytes(secretBytes, depth) {
      var resultBytes, t1, t2, pk;
      if (secretBytes.length !== 96)
        A.throwExpression(new A.InvalidSigningKeyError());
      resultBytes = new Uint8Array(A._ensureNativeList(secretBytes));
      t1 = resultBytes.length;
      if (0 >= t1)
        return A.ioore(resultBytes, 0);
      t2 = resultBytes[0];
      resultBytes.$flags & 2 && A.throwUnsupportedOperation(resultBytes);
      resultBytes[0] = t2 & 248;
      if (31 >= t1)
        return A.ioore(resultBytes, 31);
      resultBytes[31] = resultBytes[31] & 127;
      resultBytes[31] = resultBytes[31] | 64;
      resultBytes[31] = resultBytes[31] & 223;
      t1 = A.Bip32SigningKey_validateKeyBits(resultBytes);
      pk = new Uint8Array(A._ensureNativeList(B.JSArray_methods.$add(A.List_List$filled(32, 0, false, type$.int), B.NativeUint8List_methods.sublist$1(new Uint8Array(A._ensureNativeList(t1)), 64))));
      A.TweetNaClExt_crypto_scalar_base(pk, new Uint8Array(A._ensureNativeList(t1)));
      t1 = new A.Bip32SigningKey(depth, A.Bip32VerifyKey$(pk), A.ByteList__constructList(A.ExtendedSigningKey_validateKeyBits(A.Bip32SigningKey_validateKeyBits(resultBytes)), 96, 96));
      t2 = A.ByteList__constructList(t1.get$suffix(), 32, 32);
      t1.__Bip32SigningKey__chainCode_F !== $ && A.throwLateFieldAI("_chainCode");
      t1.__Bip32SigningKey__chainCode_F = new A.ChainCode(t2);
      return t1;
    },
    Bip32SigningKey_validateKeyBits(bytes) {
      bytes = A.ExtendedSigningKey_validateKeyBits(bytes);
      if (31 >= bytes.length)
        return A.ioore(bytes, 31);
      if ((bytes[31] & 32) !== 0)
        throw A.wrapException(new A.InvalidSigningKeyError());
      return bytes;
    },
    InvalidBip23Ed25519DerivationKeyError: function InvalidBip23Ed25519DerivationKeyError() {
    },
    MaxDepthExceededBip23Ed25519DerivationKeyError: function MaxDepthExceededBip23Ed25519DerivationKeyError() {
    },
    InvalidBip32Ed25519IndexException: function InvalidBip32Ed25519IndexException() {
    },
    Bip32Ed25519KeyDerivation: function Bip32Ed25519KeyDerivation() {
    },
    Bip32VerifyKey: function Bip32VerifyKey(t0) {
      this.__Bip32VerifyKey__chainCode_F = $;
      this._u8l = t0;
    },
    Bip32SigningKey: function Bip32SigningKey(t0, t1, t2) {
      var _ = this;
      _.depth = t0;
      _.__Bip32SigningKey__chainCode_F = $;
      _._ed25519_bip32$_verifyKey = t1;
      _._verifyKey = _._ed25519_extended$_verifyKey = null;
      _._u8l = t2;
    },
    _Bip32SigningKey_ExtendedSigningKey_Bip32PrivateKey: function _Bip32SigningKey_ExtendedSigningKey_Bip32PrivateKey() {
    },
    _Bip32VerifyKey_VerifyKey_Suffix: function _Bip32VerifyKey_VerifyKey_Suffix() {
    },
    _Bip32VerifyKey_VerifyKey_Suffix_Bip32PublicKey: function _Bip32VerifyKey_VerifyKey_Suffix_Bip32PublicKey() {
    },
    ExtendedSigningKey_validateKeyBits(bytes) {
      var valid,
        t1 = bytes.length;
      if (0 >= t1)
        return A.ioore(bytes, 0);
      if ((bytes[0] & 7) === 0) {
        if (31 >= t1)
          return A.ioore(bytes, 31);
        valid = (bytes[31] & 192) === 64;
      } else
        valid = false;
      if (t1 < 32 || !valid)
        throw A.wrapException(new A.InvalidSigningKeyError());
      return bytes;
    },
    InvalidSigningKeyError: function InvalidSigningKeyError() {
    },
    ExtendedSigningKey: function ExtendedSigningKey() {
    },
    _bytesToBinary(bytes) {
      var t1 = A.instanceType(bytes);
      return new A.MappedListIterable(bytes, t1._eval$1("String(ListBase.E)")._as(new A._bytesToBinary_closure()), t1._eval$1("MappedListIterable<ListBase.E,String>")).join$1(0, "");
    },
    mnemonicToEntropy(mnemonic) {
      var bits, dividerIndex, entropyBits, checksumBits, t1, t2, entropyBytes, $CS,
        _s15_ = "Invalid entropy",
        words = A._setArrayType(mnemonic.split(" "), type$.JSArray_String);
      if (B.JSInt_methods.$mod(words.length, 3) !== 0)
        throw A.wrapException(A.ArgumentError$("Invalid mnemonic", null));
      bits = new A.MappedListIterable(words, type$.dynamic_Function_String._as(new A.mnemonicToEntropy_closure(B.List_rlN)), type$.MappedListIterable_String_dynamic).join$1(0, "");
      dividerIndex = B.JSNumber_methods.floor$0(bits.length / 33) * 32;
      entropyBits = B.JSString_methods.substring$2(bits, 0, dividerIndex);
      checksumBits = B.JSString_methods.substring$1(bits, dividerIndex);
      t1 = A.RegExp_RegExp(".{1,8}", true).allMatches$1(0, entropyBits);
      t2 = A._instanceType(t1);
      t2 = A.MappedIterable_MappedIterable(t1, t2._eval$1("int(Iterable.E)")._as(new A.mnemonicToEntropy_closure0()), t2._eval$1("Iterable.E"), type$.int);
      t1 = A.List_List$_of(t2, A._instanceType(t2)._eval$1("Iterable.E"));
      t1.$flags = 1;
      entropyBytes = new Uint8Array(A._ensureNativeList(t1));
      t1 = entropyBytes.length;
      if (t1 < 16)
        throw A.wrapException(A.StateError$(_s15_));
      if (t1 > 32)
        throw A.wrapException(A.StateError$(_s15_));
      if (B.JSInt_methods.$mod(t1, 4) !== 0)
        throw A.wrapException(A.StateError$(_s15_));
      $CS = B.JSInt_methods._tdivFast$1(t1 * 8, 32);
      if (B.JSString_methods.substring$2(A._bytesToBinary(new Uint8Array(A._ensureNativeList(B.C__Sha256.convert$1(entropyBytes).bytes))), 0, $CS) !== checksumBits)
        throw A.wrapException(A.StateError$("Invalid mnemonic checksum"));
      t1 = A.instanceType(entropyBytes);
      return new A.MappedListIterable(entropyBytes, t1._eval$1("String(ListBase.E)")._as(new A.mnemonicToEntropy_closure1()), t1._eval$1("MappedListIterable<ListBase.E,String>")).join$1(0, "");
    },
    _bytesToBinary_closure: function _bytesToBinary_closure() {
    },
    mnemonicToEntropy_closure: function mnemonicToEntropy_closure(t0) {
      this.wordlist = t0;
    },
    mnemonicToEntropy_closure0: function mnemonicToEntropy_closure0() {
    },
    mnemonicToEntropy_closure1: function mnemonicToEntropy_closure1() {
    },
    CancelationToken: function CancelationToken() {
    },
    BinaryReader: function BinaryReader() {
    },
    BinaryReaderImpl$(_buffer) {
      var t1 = J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(_buffer), _buffer.byteOffset, null);
      return new A.BinaryReaderImpl(_buffer, t1, _buffer.length);
    },
    BinaryReaderImpl: function BinaryReaderImpl(t0, t1, t2) {
      var _ = this;
      _._binary_reader_impl$_buffer = t0;
      _._byteData = t1;
      _._bufferLimit = t2;
      _._binary_reader_impl$_offset = 0;
    },
    BinaryWriterImpl: function BinaryWriterImpl(t0) {
      this._buffer = t0;
      this._byteDataInstance = null;
      this._binary_writer_impl$_offset = 0;
    },
    CardanoTransactionInput_CardanoTransactionInput$deserialize(cList) {
      var t1 = cList._base,
        t2 = t1.length;
      if (t2 !== 2)
        throw A.wrapException(A.CborDeserializationException$("CardanoTransactionInput deserialization failed. Invalid cbor length " + cList.get$length(0)));
      if (0 >= t2)
        return A.ioore(t1, 0);
      t2 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(type$.CborBytes._as(t1[0]).get$bytes(), false))), false));
      t2 = B.C_HexCodec.get$encoder().convert$1(t2);
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t1 = type$.CborSmallInt._as(t1[1]);
      return new A._CardanoTransactionInput(t2, t1.value);
    },
    CardanoTransactionInput: function CardanoTransactionInput() {
    },
    _$CardanoTransactionInput: function _$CardanoTransactionInput() {
    },
    _CardanoTransactionInput: function _CardanoTransactionInput(t0, t1) {
      this.transactionHash = t0;
      this.index = t1;
    },
    _CardanoTransactionInput_Object__$CardanoTransactionInput: function _CardanoTransactionInput_Object__$CardanoTransactionInput() {
    },
    CardanoTransactionInputs___deserialize_tearOff(cValue) {
      return A.CardanoTransactionInputs_CardanoTransactionInputs$deserialize(type$.CborValue._as(cValue));
    },
    CardanoTransactionInputs_CardanoTransactionInputs$deserialize(cValue) {
      if (!type$.CborList._is(cValue))
        throw A.wrapException(A.CborDeserializationException$("CardanoTransactionInputs deserialization failed. Invalid cbor type " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return new A._CardanoTransactionInputs(B.JSArray_methods.map$1$1(cValue._base, A._instanceType(cValue)._eval$1("CardanoTransactionInput(_DelegatingIterableBase.E)")._as(new A.CardanoTransactionInputs_CardanoTransactionInputs$deserialize_closure()), type$.CardanoTransactionInput).toList$0(0), cValue.get$tags());
    },
    CardanoTransactionInputs: function CardanoTransactionInputs() {
    },
    CardanoTransactionInputs_CardanoTransactionInputs$deserialize_closure: function CardanoTransactionInputs_CardanoTransactionInputs$deserialize_closure() {
    },
    CardanoTransactionInputs_serialize_closure: function CardanoTransactionInputs_serialize_closure(t0) {
      this.forJson = t0;
    },
    _$CardanoTransactionInputs: function _$CardanoTransactionInputs() {
    },
    _CardanoTransactionInputs: function _CardanoTransactionInputs(t0, t1) {
      this._transaction_inputs$_data = t0;
      this._transaction_inputs$_cborTags = t1;
    },
    _CardanoTransactionInputs_Object__$CardanoTransactionInputs: function _CardanoTransactionInputs_Object__$CardanoTransactionInputs() {
    },
    RequiredSigners_deserialize(cList) {
      type$.CborValue._as(cList);
      if (!type$.CborList._is(cList))
        throw A.wrapException(A.CborDeserializationException$("RequiredSigners deserialization failed. Expected a cbor list but got " + A.getRuntimeTypeOfDartObject(cList).toString$0(0)));
      return new A._RequiredSigner(B.JSArray_methods.map$1$1(cList._base, A._instanceType(cList)._eval$1("Uint8List(_DelegatingIterableBase.E)")._as(new A.RequiredSigners_deserialize_closure()), type$.Uint8List).toList$0(0), cList.get$tags());
    },
    RequiredSigners: function RequiredSigners() {
    },
    RequiredSigners_serialize_closure: function RequiredSigners_serialize_closure(t0) {
      this.forJson = t0;
    },
    RequiredSigners_deserialize_closure: function RequiredSigners_deserialize_closure() {
    },
    _$RequiredSigners: function _$RequiredSigners() {
    },
    _RequiredSigner: function _RequiredSigner(t0, t1) {
      this._signersBytes = t0;
      this._cborTags = t1;
    },
    _RequiredSigners_Object__$RequiredSigners: function _RequiredSigners_Object__$RequiredSigners() {
    },
    GovActionId_deserialize(cList) {
      var t1, t2, txIdCbor, govActionIndexCbor, txId, govActionIndex;
      if (!type$.CborList._is(cList))
        throw A.wrapException(A.CborDeserializationException$(string$.GovActE + A.getRuntimeTypeOfDartObject(cList).toString$0(0)));
      t1 = cList._base;
      t2 = t1.length;
      if (t2 !== 2)
        throw A.wrapException(A.CborDeserializationException$(string$.GovActI + cList.get$length(0) + " ; expected  2"));
      if (0 >= t2)
        return A.ioore(t1, 0);
      txIdCbor = t1[0];
      if (!type$.CborBytes._is(txIdCbor))
        throw A.wrapException(A.CborDeserializationException$("GovActionId - txIdCbor deserialization failed. Expected a cbor bytes but got " + A.getRuntimeTypeOfDartObject(txIdCbor).toString$0(0)));
      if (1 >= t2)
        return A.ioore(t1, 1);
      govActionIndexCbor = t1[1];
      if (!type$.CborInt._is(govActionIndexCbor))
        throw A.wrapException(A.CborDeserializationException$("GovActionId - govActionIndexCbor deserialization failed. Expected a cbor int but got " + A.getRuntimeTypeOfDartObject(govActionIndexCbor).toString$0(0)));
      t1 = type$.HexCodec._eval$1("Codec.S")._as(J.toList$1$growable$ax(txIdCbor.get$bytes(), false));
      txId = B.C_HexCodec.get$encoder().convert$1(t1);
      govActionIndex = govActionIndexCbor.toBigInt$0();
      if (!govActionIndex.get$isValidInt())
        throw A.wrapException(A.CborDeserializationException$("GovActionId - govActionIndex deserialization failed. Expected value in small int range but got " + govActionIndex.toString$0(0)));
      return new A._GovActionId(txId, govActionIndex.toInt$0(0));
    },
    GovActionId: function GovActionId() {
    },
    GovActionId_bech32_closure: function GovActionId_bech32_closure(t0) {
      this.$this = t0;
    },
    _$GovActionId: function _$GovActionId() {
    },
    _GovActionId: function _GovActionId(t0, t1) {
      this.transactionId = t0;
      this.govActionIndex = t1;
      this.__GovActionId_bech32_FI = $;
    },
    _GovActionId_Object__$GovActionId: function _GovActionId_Object__$GovActionId() {
    },
    Vote_deserialize(cValue) {
      if (!type$.CborInt._is(cValue))
        throw A.wrapException(A.CborDeserializationException$("Vote deserialization failed. Invalid cbor type " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0) + " ; expected CborInt"));
      return A.Vote_fromSerializeIntValue(cValue.toInt$0(0));
    },
    Vote_fromSerializeIntValue(value) {
      return B.JSArray_methods.firstWhere$2$orElse(B.List_nAW, new A.Vote_fromSerializeIntValue_closure(value), new A.Vote_fromSerializeIntValue_closure0(value));
    },
    Vote: function Vote(t0, t1, t2) {
      this.serializeIntValue = t0;
      this.index = t1;
      this._core$_name = t2;
    },
    Vote_fromSerializeIntValue_closure: function Vote_fromSerializeIntValue_closure(t0) {
      this.value = t0;
    },
    Vote_fromSerializeIntValue_closure0: function Vote_fromSerializeIntValue_closure0(t0) {
      this.value = t0;
    },
    Voter: function Voter() {
    },
    _$Voter: function _$Voter() {
    },
    _Voter: function _Voter(t0, t1) {
      this.voterType = t0;
      this.vKeyHash = t1;
    },
    _Voter_Object__$Voter: function _Voter_Object__$Voter() {
    },
    VoterType_fromSerializeIntValue(value) {
      return B.JSArray_methods.firstWhere$2$orElse(B.List_F7U, new A.VoterType_fromSerializeIntValue_closure(value), new A.VoterType_fromSerializeIntValue_closure0(value));
    },
    VoterType: function VoterType(t0, t1, t2) {
      this.serializeIntValue = t0;
      this.index = t1;
      this._core$_name = t2;
    },
    VoterType_fromSerializeIntValue_closure: function VoterType_fromSerializeIntValue_closure(t0) {
      this.value = t0;
    },
    VoterType_fromSerializeIntValue_closure0: function VoterType_fromSerializeIntValue_closure0(t0) {
      this.value = t0;
    },
    VotingProcedure: function VotingProcedure() {
    },
    _$VotingProcedure: function _$VotingProcedure() {
    },
    _VotingProcedure: function _VotingProcedure(t0, t1) {
      this.vote = t0;
      this.anchor = t1;
    },
    _VotingProcedure_Object__$VotingProcedure: function _VotingProcedure_Object__$VotingProcedure() {
    },
    VotingProcedures_VotingProcedures$deserialize(cValue) {
      if (!(cValue instanceof A._CborMapImpl))
        throw A.wrapException(A.CborDeserializationException$(string$.Voting + A.getRuntimeTypeOfDartObject(cValue).toString$0(0) + " ; expected CborMap"));
      return new A._VotingProcedures(A.Map_Map$fromEntries(cValue._base.get$entries().map$1$1(0, new A.VotingProcedures_VotingProcedures$deserialize_closure(), type$.MapEntry_of_Voter_and_Map_GovActionId_VotingProcedure), type$.Voter, type$.Map_GovActionId_VotingProcedure));
    },
    _deserializeVotingProcedureMap(cMap) {
      if (!(cMap instanceof A._CborMapImpl))
        throw A.wrapException(A.CborDeserializationException$(string$.Voting + A.getRuntimeTypeOfDartObject(cMap).toString$0(0) + " ; expected CborMap"));
      return A.Map_Map$fromEntries(cMap._base.get$entries().map$1$1(0, new A._deserializeVotingProcedureMap_closure(), type$.MapEntry_GovActionId_VotingProcedure), type$.GovActionId, type$.VotingProcedure);
    },
    VotingProcedureMapX_serialize(_this, forJson) {
      var t1 = type$.CborValue;
      return new A._CborMapImpl(B.List_empty, B.CborLengthType_2, A.Map_Map$fromEntries(_this.get$entries().map$1$1(0, new A.VotingProcedureMapX_serialize_closure(false), type$.MapEntry_CborValue_CborValue), t1, t1));
    },
    VotingProcedures: function VotingProcedures() {
    },
    VotingProcedures_VotingProcedures$deserialize_closure: function VotingProcedures_VotingProcedures$deserialize_closure() {
    },
    VotingProcedures_serialize_closure: function VotingProcedures_serialize_closure(t0) {
      this.forJson = t0;
    },
    _deserializeVotingProcedureMap_closure: function _deserializeVotingProcedureMap_closure() {
    },
    VotingProcedureMapX_serialize_closure: function VotingProcedureMapX_serialize_closure(t0) {
      this.forJson = t0;
    },
    _$VotingProcedures: function _$VotingProcedures() {
    },
    _VotingProcedures: function _VotingProcedures(t0) {
      this._voting = t0;
    },
    _VotingProcedures_Object__$VotingProcedures: function _VotingProcedures_Object__$VotingProcedures() {
    },
    OutputDatum: function OutputDatum() {
    },
    _$OutputDatum: function _$OutputDatum() {
    },
    OutputDatum_Hash: function OutputDatum_Hash(t0) {
      this.datumHash = t0;
    },
    OutputDatum_Inline: function OutputDatum_Inline(t0) {
      this.plutusData = t0;
    },
    _OutputDatum_Object__$OutputDatum: function _OutputDatum_Object__$OutputDatum() {
    },
    CardanoTransactionOutput___deserialize_tearOff(cValue) {
      return A.CardanoTransactionOutput_CardanoTransactionOutput$deserialize(type$.CborValue._as(cValue));
    },
    CardanoTransactionOutput_CardanoTransactionOutput$deserialize(cValue) {
      var t1;
      $label0$0: {
        if (cValue instanceof A._CborMapImpl) {
          t1 = A.CardanoTransactionOutput_CardanoTransactionOutput$deserializePostAlonzo(cValue);
          break $label0$0;
        }
        if (type$.CborList._is(cValue)) {
          t1 = A.CardanoTransactionOutput_CardanoTransactionOutput$deserializeAlonzo(cValue);
          break $label0$0;
        }
        t1 = A.throwExpression(A.TransactionOutputParseException$("cValue is " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      }
      return t1;
    },
    CardanoTransactionOutput_CardanoTransactionOutput$deserializePostAlonzo(cMap) {
      var cardanoValue, cborMaybeDatum, cborMaybeScriptRef, datum, scriptRef,
        t1 = cMap._base,
        t2 = t1.$index(0, B._CborSmallIntImpl_0_List_empty);
      t2.toString;
      type$.CborBytes._as(t2);
      cardanoValue = A.CardanoTransactionOutput__parseCborValue(A.ExtraSugar_require(t1.$index(0, B._CborSmallIntImpl_1_List_empty), "deserializePostAlonzo: cMap[const CborSmallInt(1)]", type$.CborValue), "deserializePostAlonzo");
      cborMaybeDatum = t1.$index(0, B._CborSmallIntImpl_2_List_empty);
      cborMaybeScriptRef = t1.$index(0, B._CborSmallIntImpl_3_List_empty);
      datum = cborMaybeDatum == null ? null : new A.CardanoTransactionOutput_CardanoTransactionOutput$deserializePostAlonzo_closure().call$1(cborMaybeDatum);
      scriptRef = cborMaybeScriptRef == null ? null : new A.CardanoTransactionOutput_CardanoTransactionOutput$deserializePostAlonzo_closure0().call$1(cborMaybeScriptRef);
      t1 = new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(t2.get$bytes(), false)));
      return new A.CardanoTransactionOutput_PostAlonzo(t1, cardanoValue, datum, scriptRef, cMap.type);
    },
    CardanoTransactionOutput_CardanoTransactionOutput$deserializeAlonzo(cList) {
      var cborAddress, cborValue, cborMaybeDatum, datum, value,
        t1 = cList._base,
        t2 = t1.length;
      if (t2 !== 2 && t2 !== 3)
        throw A.wrapException(A.TransactionOutputParseException$("deserializeAlonzo: Length is " + cList.get$length(0) + " instead of 2 \u043er 3"));
      if (0 >= t2)
        return A.ioore(t1, 0);
      cborAddress = type$.CborBytes._as(t1[0]);
      if (1 >= t2)
        return A.ioore(t1, 1);
      cborValue = t1[1];
      if (t2 === 3) {
        if (2 >= t2)
          return A.ioore(t1, 2);
        cborMaybeDatum = t1[2];
      } else
        cborMaybeDatum = null;
      datum = cborMaybeDatum == null ? null : new A.CardanoTransactionOutput_CardanoTransactionOutput$deserializeAlonzo_closure().call$1(cborMaybeDatum);
      value = A.CardanoTransactionOutput__parseCborValue(cborValue, "deserializeAlonzo");
      t1 = new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(cborAddress.get$bytes(), false)));
      t2 = cList.get$type();
      return new A.CardanoTransactionOutput_Legacy(t1, value, datum, t2);
    },
    CardanoTransactionOutput__parseCborValue(cborValue, source) {
      if (!type$.CborList._is(cborValue) && !type$.CborInt._is(cborValue))
        throw A.wrapException(A.TransactionOutputParseException$(source + ": value type: " + A.getRuntimeTypeOfDartObject(cborValue).toString$0(0)));
      return A.Value_Value$deserialize(cborValue);
    },
    _CardanoTxOutputPostAlonzoExtensions__serializePostAlonzo(_this, forJson) {
      var t1 = A._setArrayType([], type$.JSArray_nullable_MapEntry_CborValue_CborValue),
        t2 = type$.MapEntry_CborValue_CborValue;
      t1.push(new A.MapEntry(B._CborSmallIntImpl_0_List_empty, new A._CborBytesImpl(_this.addressBytes, B.List_empty), t2));
      t1.push(new A.MapEntry(B._CborSmallIntImpl_1_List_empty, _this.value.serialize$1$forJson(false), t2));
      t2 = _this.get$datum();
      t1.push(t2 == null ? null : new A._CardanoTxOutputPostAlonzoExtensions__serializePostAlonzo_closure(false).call$1(t2));
      t2 = _this.scriptRef;
      t1.push(t2 == null ? null : new A._CardanoTxOutputPostAlonzoExtensions__serializePostAlonzo_closure0(false).call$1(t2));
      t2 = type$.CborValue;
      return new A._CborMapImpl(B.List_empty, _this.lengthType, A.Map_Map$fromEntries(new A.WhereTypeIterable(t1, type$.WhereTypeIterable_MapEntry_CborValue_CborValue), t2, t2));
    },
    TransactionOutputIterableExtension_serialize(_this, forJson) {
      var t1 = type$.CborValue;
      t1 = A.List_List$_of(J.map$1$1$ax(_this, new A.TransactionOutputIterableExtension_serialize_closure(false), t1), t1);
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, t1);
    },
    CardanoTransactionOutput: function CardanoTransactionOutput() {
    },
    CardanoTransactionOutput_CardanoTransactionOutput$deserializePostAlonzo_closure: function CardanoTransactionOutput_CardanoTransactionOutput$deserializePostAlonzo_closure() {
    },
    CardanoTransactionOutput_CardanoTransactionOutput$deserializePostAlonzo_closure0: function CardanoTransactionOutput_CardanoTransactionOutput$deserializePostAlonzo_closure0() {
    },
    CardanoTransactionOutput_CardanoTransactionOutput$deserializeAlonzo_closure: function CardanoTransactionOutput_CardanoTransactionOutput$deserializeAlonzo_closure() {
    },
    _CardanoTxOutputPostAlonzoExtensions__serializePostAlonzo_closure: function _CardanoTxOutputPostAlonzoExtensions__serializePostAlonzo_closure(t0) {
      this.forJson = t0;
    },
    _CardanoTxOutputPostAlonzoExtensions__serializePostAlonzo_closure0: function _CardanoTxOutputPostAlonzoExtensions__serializePostAlonzo_closure0(t0) {
      this.forJson = t0;
    },
    TransactionOutputIterableExtension_serialize_closure: function TransactionOutputIterableExtension_serialize_closure(t0) {
      this.forJson = t0;
    },
    _$CardanoTransactionOutput: function _$CardanoTransactionOutput() {
    },
    CardanoTransactionOutput_Legacy: function CardanoTransactionOutput_Legacy(t0, t1, t2, t3) {
      var _ = this;
      _.addressBytes = t0;
      _.value = t1;
      _.outDatumHash = t2;
      _.lengthType = t3;
      _.__CardanoTransactionOutput_datum_FI = $;
    },
    CardanoTransactionOutput_PostAlonzo: function CardanoTransactionOutput_PostAlonzo(t0, t1, t2, t3, t4) {
      var _ = this;
      _.addressBytes = t0;
      _.value = t1;
      _.outDatum = t2;
      _.scriptRef = t3;
      _.lengthType = t4;
      _.__CardanoTransactionOutput_datum_FI = $;
    },
    _CardanoTransactionOutput_Object__$CardanoTransactionOutput: function _CardanoTransactionOutput_Object__$CardanoTransactionOutput() {
    },
    Constitution_Constitution$deserialize(cValue) {
      var t1, t2, scriptHash;
      if (!type$.CborList._is(cValue))
        throw A.wrapException(A.Exception_Exception("Constitution deserialization failed. Expected a cbor list but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      t1 = cValue._base;
      t2 = t1.length;
      if (t2 !== 2)
        throw A.wrapException(A.Exception_Exception("Constitution deserialization failed. Expected a cbor list with length 2 but got " + cValue.get$length(0)));
      if (1 >= t2)
        return A.ioore(t1, 1);
      scriptHash = t1[1];
      t1 = A.Anchor_Anchor$deserialize(t1[0]);
      $label0$0: {
        if (scriptHash instanceof A._CborNullImpl) {
          t2 = null;
          break $label0$0;
        }
        if (type$.CborBytes._is(scriptHash)) {
          t2 = type$.HexCodec._eval$1("Codec.S")._as(J.toList$1$growable$ax(scriptHash.get$bytes(), false));
          t2 = B.C_HexCodec.get$encoder().convert$1(t2);
          break $label0$0;
        }
        t2 = A.throwExpression(A.Exception_Exception("Constitution deserialization failed. Invalid script hash type " + A.getRuntimeTypeOfDartObject(scriptHash).toString$0(0)));
      }
      return new A._Constitution(t1, t2);
    },
    Constitution: function Constitution() {
    },
    _$Constitution: function _$Constitution() {
    },
    _Constitution: function _Constitution(t0, t1) {
      this.anchor = t0;
      this.scriptHash = t1;
    },
    _Constitution_Object__$Constitution: function _Constitution_Object__$Constitution() {
    },
    GovAction_GovAction$deserialize(cValue) {
      var t2, actionType, t3, withdrawals, membersForRemoval, newMembersAndTerms, t4,
        t1 = type$.CborList;
      if (!t1._is(cValue))
        throw A.wrapException(A.Exception_Exception("GovAction deserialization failed. Expected a cbor list but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      t2 = cValue._base;
      if (0 >= t2.length)
        return A.ioore(t2, 0);
      actionType = t2[0];
      if (!type$.CborInt._is(actionType))
        throw A.wrapException(A.Exception_Exception("GovAction deserialization failed. Expected cValue[0] to be cbor int but got " + A.getRuntimeTypeOfDartObject(actionType).toString$0(0)));
      switch (actionType.toInt$0(0)) {
        case 0:
          if (t2.length > 4)
            throw A.wrapException(A.Exception_Exception("GovAction.parameterChange deserialization failed. Expected a cbor list with length <= 4 but got " + cValue.get$length(0)));
          t1 = A.GovActionId_deserialize(t2[1]);
          if (2 >= t2.length)
            return A.ioore(t2, 2);
          t3 = A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize(t2[2]);
          if (3 >= t2.length)
            return A.ioore(t2, 3);
          return new A.GovAction_ParameterChange(t1, t3, A._parsePolicyHash(t2[3]));
        case 1:
          if (t2.length > 3)
            throw A.wrapException(A.Exception_Exception("GovAction.hardForkInitiationAction deserialization failed. Expected a cbor list with length <= 3 but got " + cValue.get$length(0)));
          t1 = A.GovActionId_deserialize(t2[1]);
          if (2 >= t2.length)
            return A.ioore(t2, 2);
          return new A.GovAction_HardForkInitiation(t1, A.ProtocolVersion_ProtocolVersion$deserialize(t2[2]));
        case 2:
          if (t2.length > 3)
            throw A.wrapException(A.Exception_Exception("GovAction.treasuryWithdrawals deserialization failed. Expected a cbor list with length <= 3 but got " + cValue.get$length(0)));
          withdrawals = t2[1];
          if (!(withdrawals instanceof A._CborMapImpl))
            throw A.wrapException(A.Exception_Exception("GovAction.treasuryWithdrawals deserialization failed. Expected cValue[1] to be cbor map but got " + A.getRuntimeTypeOfDartObject(withdrawals).toString$0(0)));
          t1 = withdrawals._base.get$entries().map$1$1(0, new A.GovAction_GovAction$deserialize_closure(), type$.Withdraw).toList$0(0);
          if (2 >= t2.length)
            return A.ioore(t2, 2);
          return new A.GovAction_TreasuryWithdrawals(t1, A._parsePolicyHash(t2[2]));
        case 3:
          if (t2.length > 2)
            throw A.wrapException(A.Exception_Exception("GovAction.noConfidence deserialization failed. Expected a cbor list with length <= 2 but got " + cValue.get$length(0)));
          return new A.GovAction_NoConfidence(A.GovActionId_deserialize(t2[1]));
        case 4:
          if (t2.length > 5)
            throw A.wrapException(A.Exception_Exception("GovAction.updateCommittee deserialization failed. Expected a cbor list with length <= 5 but got " + cValue.get$length(0)));
          membersForRemoval = t2[2];
          if (!t1._is(membersForRemoval))
            throw A.wrapException(A.Exception_Exception("GovAction.updateCommittee deserialization failed. Expected cValue[2] to be cbor list but got " + A.getRuntimeTypeOfDartObject(membersForRemoval).toString$0(0)));
          newMembersAndTerms = t2[3];
          if (!(newMembersAndTerms instanceof A._CborMapImpl))
            throw A.wrapException(A.Exception_Exception("GovAction.updateCommittee deserialization failed. Expected cValue[3] to be cbor map but got " + A.getRuntimeTypeOfDartObject(newMembersAndTerms).toString$0(0)));
          t1 = A.GovActionId_deserialize(t2[1]);
          t3 = type$.Credential;
          A._instanceType(membersForRemoval)._eval$1("Credential(_DelegatingIterableBase.E)")._as(A.credential_Credential___deserialize_tearOff$closure());
          t4 = B.JSArray_methods.map$1$1(membersForRemoval._base, A.credential_Credential___deserialize_tearOff$closure(), t3).toSet$0(0);
          t3 = A.Map_Map$fromEntries(newMembersAndTerms._base.get$entries().map$1$1(0, new A.GovAction_GovAction$deserialize_closure0(), type$.MapEntry_Credential_int), t3, type$.int);
          if (4 >= t2.length)
            return A.ioore(t2, 4);
          return new A.GovAction_UpdateCommittee(t1, t4, t3, A.RationalNumber_RationalNumber$deserialize(t2[4]));
        case 5:
          if (t2.length > 3)
            throw A.wrapException(A.Exception_Exception("GovAction.newConstitution deserialization failed. Expected a cbor list with length <= 3 but got " + cValue.get$length(0)));
          t1 = A.GovActionId_deserialize(t2[1]);
          if (2 >= t2.length)
            return A.ioore(t2, 2);
          return new A.GovAction_NewConstitution(t1, A.Constitution_Constitution$deserialize(t2[2]));
        case 6:
          return B.C_GovAction_InfoAction;
        default:
          throw A.wrapException(A.Exception_Exception("GovAction deserialization failed. Invalid GovAction type " + actionType.toInt$0(0)));
      }
    },
    _parsePolicyHash(cValue) {
      if (cValue instanceof A._CborNullImpl)
        return null;
      if (type$.CborBytes._is(cValue))
        return new Uint8Array(A._ensureNativeList(cValue.get$bytes()));
      throw A.wrapException(A.Exception_Exception("GovAction deserialization failed. Expected policy hash to be cbor bytes/null but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
    },
    _TreasuryWithdrawalsX_serializeAction(_this, forJson) {
      var t2,
        policyHash = _this.policyHash,
        t1 = type$.CborValue;
      t1 = A.Map_Map$fromEntries(J.map$1$1$ax(_this.get$withdrawals(), new A._TreasuryWithdrawalsX_serializeAction_closure(false), type$.MapEntry_CborValue_CborValue), t1, t1);
      if (policyHash == null)
        t2 = B._CborNullImpl_22_List_empty;
      else
        t2 = new A._CborBytesImpl(policyHash, B.List_empty);
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, A._setArrayType([B._CborSmallIntImpl_2_List_empty, new A._CborMapImpl(B.List_empty, B.CborLengthType_2, t1), t2], type$.JSArray_CborValue));
    },
    _UpdateCommitteeX_serializeAction(_this, forJson) {
      var t1 = _this.prevGovActionId.serialize$1$forJson(false),
        t2 = type$.CborValue,
        t3 = _this.get$membersForRemoval().map$1$1(0, new A._UpdateCommitteeX_serializeAction_closure(false), t2).toList$0(0),
        t4 = _this.get$newMembersAndTerms().get$entries(),
        t5 = t4.$ti;
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, A._setArrayType([B._CborSmallIntImpl_4_List_empty, t1, new A._CborListImpl(B.List_empty, B.CborLengthType_2, t3), new A._CborMapImpl(B.List_empty, B.CborLengthType_2, A.Map_Map$fromEntries(A.MappedIterable_MappedIterable(t4, t5._eval$1("MapEntry<CborValue,CborValue>(Iterable.E)")._as(new A._UpdateCommitteeX_serializeAction_closure0(false)), t5._eval$1("Iterable.E"), type$.MapEntry_CborValue_CborValue), t2, t2)), _this.quorumThreshold.serialize$1$forJson(false)], type$.JSArray_CborValue));
    },
    GovAction: function GovAction() {
    },
    GovAction_GovAction$deserialize_closure: function GovAction_GovAction$deserialize_closure() {
    },
    GovAction_GovAction$deserialize_closure0: function GovAction_GovAction$deserialize_closure0() {
    },
    _TreasuryWithdrawalsX_serializeAction_closure: function _TreasuryWithdrawalsX_serializeAction_closure(t0) {
      this.forJson = t0;
    },
    _UpdateCommitteeX_serializeAction_closure: function _UpdateCommitteeX_serializeAction_closure(t0) {
      this.forJson = t0;
    },
    _UpdateCommitteeX_serializeAction_closure0: function _UpdateCommitteeX_serializeAction_closure0(t0) {
      this.forJson = t0;
    },
    _$GovAction: function _$GovAction() {
    },
    GovAction_ParameterChange: function GovAction_ParameterChange(t0, t1, t2) {
      this.prevGovActionId = t0;
      this.protocolParamUpdate = t1;
      this.policyHash = t2;
    },
    GovAction_HardForkInitiation: function GovAction_HardForkInitiation(t0, t1) {
      this.prevGovActionId = t0;
      this.protocolVersion = t1;
    },
    GovAction_TreasuryWithdrawals: function GovAction_TreasuryWithdrawals(t0, t1) {
      this._withdrawals = t0;
      this.policyHash = t1;
    },
    GovAction_NoConfidence: function GovAction_NoConfidence(t0) {
      this.prevGovActionId = t0;
    },
    GovAction_UpdateCommittee: function GovAction_UpdateCommittee(t0, t1, t2, t3) {
      var _ = this;
      _.prevGovActionId = t0;
      _._membersForRemoval = t1;
      _._newMembersAndTerms = t2;
      _.quorumThreshold = t3;
    },
    GovAction_NewConstitution: function GovAction_NewConstitution(t0, t1) {
      this.prevGovActionId = t0;
      this.constitution = t1;
    },
    GovAction_InfoAction: function GovAction_InfoAction() {
    },
    _GovAction_Object__$GovAction: function _GovAction_Object__$GovAction() {
    },
    ProposalProcedure___deserialize_tearOff(cList) {
      var t1, t2, depositCbor, rewardAccountCbor, t3;
      type$.CborValue._as(cList);
      if (!type$.CborList._is(cList))
        A.throwExpression(A.Exception_Exception("ProposalProcedure deserialization failed. Expected a cbor list but got " + A.getRuntimeTypeOfDartObject(cList).toString$0(0)));
      t1 = cList._base;
      t2 = t1.length;
      if (t2 !== 4)
        A.throwExpression(A.Exception_Exception("ProposalProcedure deserialization failed. Expected a cbor list with length 4 but got " + cList.get$length(0)));
      if (0 >= t2)
        return A.ioore(t1, 0);
      depositCbor = t1[0];
      if (!type$.CborInt._is(depositCbor))
        A.throwExpression(A.Exception_Exception("ProposalProcedure deserialization failed. Expected cList[0] to be cbor int but got " + A.getRuntimeTypeOfDartObject(depositCbor).toString$0(0)));
      if (1 >= t2)
        return A.ioore(t1, 1);
      rewardAccountCbor = t1[1];
      if (!type$.CborBytes._is(rewardAccountCbor))
        A.throwExpression(A.Exception_Exception("ProposalProcedure deserialization failed. Expected cList[1] to be cbor bytes but got " + A.getRuntimeTypeOfDartObject(rewardAccountCbor).toString$0(0)));
      t2 = new Uint8Array(A._ensureNativeList(rewardAccountCbor.get$bytes()));
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t3 = A.GovAction_GovAction$deserialize(t1[2]);
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      return new A._ProposalProcedure(depositCbor, t2, t3, A.Anchor_Anchor$deserialize(t1[3]), cList.get$type());
    },
    ProposalProcedure: function ProposalProcedure() {
    },
    _$ProposalProcedure: function _$ProposalProcedure() {
    },
    _ProposalProcedure: function _ProposalProcedure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.deposit = t0;
      _.rewardAccount = t1;
      _.govAction = t2;
      _.anchor = t3;
      _.cborLengthType = t4;
    },
    _ProposalProcedure_Object__$ProposalProcedure: function _ProposalProcedure_Object__$ProposalProcedure() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize(cMap) {
      var mapOfCbor, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, _null = null;
      if (!(cMap instanceof A._CborMapImpl))
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected a cbor map but got " + A.getRuntimeTypeOfDartObject(cMap).toString$0(0)));
      mapOfCbor = cMap.map$2$1(0, new A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure(), type$.int, type$.CborValue);
      t1 = mapOfCbor.$index(0, 0);
      t1 = t1 == null ? _null : new A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure0().call$1(t1);
      t2 = mapOfCbor.$index(0, 1);
      t2 = t2 == null ? _null : new A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure1().call$1(t2);
      t3 = mapOfCbor.$index(0, 2);
      t3 = t3 == null ? _null : new A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure2().call$1(t3);
      t4 = mapOfCbor.$index(0, 3);
      t4 = t4 == null ? _null : new A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure3().call$1(t4);
      t5 = mapOfCbor.$index(0, 4);
      t5 = t5 == null ? _null : new A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure4().call$1(t5);
      t6 = mapOfCbor.$index(0, 5);
      t6 = t6 == null ? _null : new A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure5().call$1(t6);
      t7 = mapOfCbor.$index(0, 6);
      t7 = t7 == null ? _null : new A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure6().call$1(t7);
      t8 = mapOfCbor.$index(0, 7);
      t8 = t8 == null ? _null : new A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure7().call$1(t8);
      t9 = mapOfCbor.$index(0, 8);
      t9 = t9 == null ? _null : new A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure8().call$1(t9);
      t10 = mapOfCbor.$index(0, 9);
      t10 = t10 == null ? _null : A.RationalNumber___deserialize_tearOff(t10);
      t11 = mapOfCbor.$index(0, 10);
      t11 = t11 == null ? _null : A.RationalNumber___deserialize_tearOff(t11);
      t12 = mapOfCbor.$index(0, 11);
      t12 = t12 == null ? _null : A.RationalNumber___deserialize_tearOff(t12);
      t13 = mapOfCbor.$index(0, 12);
      t13 = t13 == null ? _null : A.RationalNumber___deserialize_tearOff(t13);
      t14 = mapOfCbor.$index(0, 13);
      t14 = t14 == null ? _null : A.Nonce___deserialize_tearOff(t14);
      t15 = mapOfCbor.$index(0, 14);
      t15 = t15 == null ? _null : A.ProtocolVersion___deserialize_tearOff(t15);
      t16 = mapOfCbor.$index(0, 15);
      t16 = t16 == null ? _null : new A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure9().call$1(t16);
      t17 = mapOfCbor.$index(0, 16);
      t17 = t17 == null ? _null : new A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure10().call$1(t17);
      t18 = mapOfCbor.$index(0, 17);
      t18 = t18 == null ? _null : new A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure11().call$1(t18);
      t19 = mapOfCbor.$index(0, 18);
      t20 = mapOfCbor.$index(0, 19);
      t21 = mapOfCbor.$index(0, 20);
      t22 = mapOfCbor.$index(0, 21);
      t23 = mapOfCbor.$index(0, 22);
      t23 = t23 == null ? _null : new A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure12().call$1(t23);
      t24 = mapOfCbor.$index(0, 23);
      t24 = t24 == null ? _null : new A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure13().call$1(t24);
      t25 = mapOfCbor.$index(0, 24);
      return new A._ProtocolParamUpdate(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25 == null ? _null : new A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure14().call$1(t25));
    },
    ProtocolParamUpdate: function ProtocolParamUpdate() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure: function ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure0: function ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure0() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure1: function ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure1() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure2: function ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure2() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure3: function ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure3() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure4: function ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure4() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure5: function ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure5() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure6: function ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure6() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure7: function ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure7() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure8: function ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure8() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure9: function ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure9() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure10: function ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure10() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure11: function ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure11() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure12: function ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure12() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure13: function ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure13() {
    },
    ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure14: function ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure14() {
    },
    ProtocolParamUpdate_serialize_closure: function ProtocolParamUpdate_serialize_closure() {
    },
    ProtocolParamUpdate_serialize_closure0: function ProtocolParamUpdate_serialize_closure0() {
    },
    ProtocolParamUpdate_serialize_closure1: function ProtocolParamUpdate_serialize_closure1() {
    },
    ProtocolParamUpdate_serialize_closure2: function ProtocolParamUpdate_serialize_closure2() {
    },
    ProtocolParamUpdate_serialize_closure3: function ProtocolParamUpdate_serialize_closure3() {
    },
    ProtocolParamUpdate_serialize_closure4: function ProtocolParamUpdate_serialize_closure4() {
    },
    ProtocolParamUpdate_serialize_closure5: function ProtocolParamUpdate_serialize_closure5() {
    },
    ProtocolParamUpdate_serialize_closure6: function ProtocolParamUpdate_serialize_closure6() {
    },
    ProtocolParamUpdate_serialize_closure7: function ProtocolParamUpdate_serialize_closure7() {
    },
    ProtocolParamUpdate_serialize_closure8: function ProtocolParamUpdate_serialize_closure8(t0) {
      this.forJson = t0;
    },
    ProtocolParamUpdate_serialize_closure9: function ProtocolParamUpdate_serialize_closure9(t0) {
      this.forJson = t0;
    },
    ProtocolParamUpdate_serialize_closure10: function ProtocolParamUpdate_serialize_closure10(t0) {
      this.forJson = t0;
    },
    ProtocolParamUpdate_serialize_closure11: function ProtocolParamUpdate_serialize_closure11(t0) {
      this.forJson = t0;
    },
    ProtocolParamUpdate_serialize_closure12: function ProtocolParamUpdate_serialize_closure12(t0) {
      this.forJson = t0;
    },
    ProtocolParamUpdate_serialize_closure13: function ProtocolParamUpdate_serialize_closure13(t0) {
      this.forJson = t0;
    },
    ProtocolParamUpdate_serialize_closure14: function ProtocolParamUpdate_serialize_closure14() {
    },
    ProtocolParamUpdate_serialize_closure15: function ProtocolParamUpdate_serialize_closure15() {
    },
    ProtocolParamUpdate_serialize_closure16: function ProtocolParamUpdate_serialize_closure16() {
    },
    ProtocolParamUpdate_serialize_closure17: function ProtocolParamUpdate_serialize_closure17() {
    },
    ProtocolParamUpdate_serialize_closure18: function ProtocolParamUpdate_serialize_closure18() {
    },
    ProtocolParamUpdate_serialize_closure19: function ProtocolParamUpdate_serialize_closure19() {
    },
    ProtocolParamUpdate_serialize_closure20: function ProtocolParamUpdate_serialize_closure20() {
    },
    ProtocolParamUpdate_serialize_closure21: function ProtocolParamUpdate_serialize_closure21() {
    },
    ProtocolParamUpdate_serialize_closure22: function ProtocolParamUpdate_serialize_closure22() {
    },
    ProtocolParamUpdate_serialize_closure23: function ProtocolParamUpdate_serialize_closure23() {
    },
    _$ProtocolParamUpdate: function _$ProtocolParamUpdate() {
    },
    _ProtocolParamUpdate: function _ProtocolParamUpdate(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24) {
      var _ = this;
      _.minFeeA = t0;
      _.minFeeB = t1;
      _.maxBlockSize = t2;
      _.maxTxSize = t3;
      _.maxBlockHeaderSize = t4;
      _.keyDeposit = t5;
      _.poolDeposit = t6;
      _.maxEpoch = t7;
      _.nOpt = t8;
      _.poolPledgeInfluence = t9;
      _.expansionRate = t10;
      _.treasuryGrowth = t11;
      _.decentralisationConstant = t12;
      _.extraEntropy = t13;
      _.protocolVersion = t14;
      _.minUtxo = t15;
      _.minPoolCost = t16;
      _.adaPerUtxoByte = t17;
      _.costmdls = t18;
      _.executionCosts = t19;
      _.maxTxExUnits = t20;
      _.maxBlockExUnits = t21;
      _.maxValSize = t22;
      _.collateralPercentage = t23;
      _.maxCollateralInputs = t24;
    },
    _ProtocolParamUpdate_Object__$ProtocolParamUpdate: function _ProtocolParamUpdate_Object__$ProtocolParamUpdate() {
    },
    ProtocolVersion___deserialize_tearOff(cValue) {
      return A.ProtocolVersion_ProtocolVersion$deserialize(type$.CborValue._as(cValue));
    },
    ProtocolVersion_ProtocolVersion$deserialize(cValue) {
      var t1, t2, major, t3, minor;
      if (!type$.CborList._is(cValue))
        throw A.wrapException(A.Exception_Exception("ProtocolVersion deserialization failed. Expected a cbor list but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      t1 = cValue._base;
      t2 = t1.length;
      if (t2 !== 2)
        throw A.wrapException(A.Exception_Exception("ProtocolVersion deserialization failed. Expected a cbor list with length 2 but got " + cValue.get$length(0)));
      if (0 >= t2)
        return A.ioore(t1, 0);
      major = t1[0];
      t3 = type$.CborInt;
      if (!t3._is(major))
        throw A.wrapException(A.Exception_Exception("ProtocolVersion deserialization failed. Expected cValue[0] to be cbor int but got " + A.getRuntimeTypeOfDartObject(major).toString$0(0)));
      if (1 >= t2)
        return A.ioore(t1, 1);
      minor = t1[1];
      if (!t3._is(minor))
        throw A.wrapException(A.Exception_Exception("ProtocolVersion deserialization failed. Expected cValue[1] to be cbor int but got " + A.getRuntimeTypeOfDartObject(minor).toString$0(0)));
      return new A._ProtocolVersion(major.toInt$0(0), minor.toInt$0(0));
    },
    ProtocolVersion: function ProtocolVersion() {
    },
    _$ProtocolVersion: function _$ProtocolVersion() {
    },
    _ProtocolVersion: function _ProtocolVersion(t0, t1) {
      this.major = t0;
      this.minor = t1;
    },
    _ProtocolVersion_Object__$ProtocolVersion: function _ProtocolVersion_Object__$ProtocolVersion() {
    },
    Certificate___deserialize_tearOff(cList) {
      return A.Certificate_Certificate$deserialize(type$.CborValue._as(cList));
    },
    Certificate_Certificate$deserialize(cList) {
      var t2, t3, _0_0, stakeCredentials, t4, t5, dRep, committeeColdCredential, dRepCredential,
        _s68_ = "Certificate deserialization failed. Invalid number of DataItem(s) : ",
        _s57_ = "StakeRegistration deserialization failed. Invalid type : ",
        _s59_ = "StakeDeRegistration deserialization failed. Invalid type : ",
        t1 = type$.CborList;
      if (!t1._is(cList))
        throw A.wrapException(A.CborDeserializationException$("Certificate deserialization failed. Expected a cbor list but got " + A.getRuntimeTypeOfDartObject(cList).toString$0(0)));
      t2 = cList._base;
      if (B.JSArray_methods.get$isEmpty(t2))
        throw A.wrapException(A.CborDeserializationException$(_s68_ + cList.get$length(0)));
      if (0 >= t2.length)
        return A.ioore(t2, 0);
      t3 = type$.CborInt;
      _0_0 = t3._as(t2[0]).toInt$0(0);
      $label0$0: {
        if (0 === _0_0) {
          t1 = t2.length;
          if (t1 < 2)
            A.throwExpression(A.CborDeserializationException$(_s68_ + cList.get$length(0)));
          if (0 >= t1)
            return A.ioore(t2, 0);
          t3 = type$.CborSmallInt._as(t2[0]).value;
          if (t3 !== 0)
            A.throwExpression(A.CborDeserializationException$(_s57_ + t3));
          if (1 >= t1)
            return A.ioore(t2, 1);
          t1 = new A.Certificate_StakeRegistrationLegacy(A.Credential_Credential$deserialize(t2[1]));
          break $label0$0;
        }
        if (1 === _0_0) {
          t1 = t2.length;
          if (t1 < 2)
            A.throwExpression(A.CborDeserializationException$("Certificate_StakeDeRegistrationLegacy deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
          if (0 >= t1)
            return A.ioore(t2, 0);
          t3 = type$.CborSmallInt._as(t2[0]).value;
          if (t3 !== 1)
            A.throwExpression(A.CborDeserializationException$(_s59_ + t3));
          if (1 >= t1)
            return A.ioore(t2, 1);
          t1 = new A.Certificate_StakeDeRegistrationLegacy(A.Credential_Credential$deserialize(t2[1]));
          break $label0$0;
        }
        if (2 === _0_0) {
          t1 = t2.length;
          if (t1 !== 3)
            A.throwExpression(A.CborDeserializationException$("Certificate_StakeDelegation deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
          if (0 >= t1)
            return A.ioore(t2, 0);
          t3 = type$.CborSmallInt._as(t2[0]).value;
          if (t3 !== 2)
            A.throwExpression(A.CborDeserializationException$("StakeDelegation deserialization failed. Invalid type : " + t3));
          if (1 >= t1)
            return A.ioore(t2, 1);
          stakeCredentials = A.Credential_Credential$deserialize(t2[1]);
          if (2 >= t2.length)
            return A.ioore(t2, 2);
          t1 = new A.Certificate_StakeDelegation(stakeCredentials, new A._StakePoolId(new Uint8Array(A._ensureNativeList(type$.CborBytes._as(t2[2]).get$bytes()))));
          break $label0$0;
        }
        if (3 === _0_0) {
          t1 = A._deserializePoolRegistration(cList);
          break $label0$0;
        }
        if (4 === _0_0) {
          t1 = t2.length;
          if (t1 !== 3)
            A.throwExpression(A.CborDeserializationException$("Certificate_PoolRetirement deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
          if (0 >= t1)
            return A.ioore(t2, 0);
          t4 = type$.CborSmallInt._as(t2[0]).value;
          if (t4 !== 4)
            A.throwExpression(A.CborDeserializationException$("PoolRetirement deserialization failed. Invalid type : " + t4));
          if (1 >= t1)
            return A.ioore(t2, 1);
          t1 = new Uint8Array(A._ensureNativeList(type$.CborBytes._as(t2[1]).get$bytes()));
          if (2 >= t2.length)
            return A.ioore(t2, 2);
          t2 = new A.Certificate_PoolRetirement(new A._StakePoolId(t1), t3._as(t2[2]));
          t1 = t2;
          break $label0$0;
        }
        if (5 === _0_0)
          A.throwExpression(B.CborDeserializationException_rXJ);
        if (6 === _0_0)
          A.throwExpression(B.CborDeserializationException_rXJ0);
        if (7 === _0_0) {
          t1 = t2.length;
          if (t1 !== 3)
            A.throwExpression(A.CborDeserializationException$("Certificate_StakeRegistration deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
          if (0 >= t1)
            return A.ioore(t2, 0);
          t4 = type$.CborSmallInt._as(t2[0]).value;
          if (t4 !== 7)
            A.throwExpression(A.CborDeserializationException$(_s57_ + t4));
          if (1 >= t1)
            return A.ioore(t2, 1);
          stakeCredentials = A.Credential_Credential$deserialize(t2[1]);
          if (2 >= t2.length)
            return A.ioore(t2, 2);
          t1 = new A.Certificate_StakeRegistration(stakeCredentials, t3._as(t2[2]));
          break $label0$0;
        }
        if (8 === _0_0) {
          t1 = t2.length;
          if (t1 !== 3)
            A.throwExpression(A.CborDeserializationException$("Certificate_StakeDeRegistration deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
          if (0 >= t1)
            return A.ioore(t2, 0);
          t4 = type$.CborSmallInt._as(t2[0]).value;
          if (t4 !== 8)
            A.throwExpression(A.CborDeserializationException$(_s59_ + t4));
          if (1 >= t1)
            return A.ioore(t2, 1);
          stakeCredentials = A.Credential_Credential$deserialize(t2[1]);
          if (2 >= t2.length)
            return A.ioore(t2, 2);
          t1 = new A.Certificate_StakeDeRegistration(stakeCredentials, t3._as(t2[2]));
          break $label0$0;
        }
        if (9 === _0_0) {
          t3 = t2.length;
          if (t3 !== 3)
            A.throwExpression(A.CborDeserializationException$("Certificate_VoteDelegation deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
          if (0 >= t3)
            return A.ioore(t2, 0);
          t4 = type$.CborSmallInt._as(t2[0]).value;
          if (t4 !== 9)
            A.throwExpression(A.CborDeserializationException$("VoteDelegation deserialization failed. Invalid type : " + t4));
          if (1 >= t3)
            return A.ioore(t2, 1);
          stakeCredentials = A.Credential_Credential$deserialize(t2[1]);
          if (2 >= t2.length)
            return A.ioore(t2, 2);
          t1 = new A.Certificate_VoteDelegation(stakeCredentials, A.Drep_Drep$deserialize(t1._as(t2[2])));
          break $label0$0;
        }
        if (10 === _0_0) {
          t3 = t2.length;
          if (t3 !== 4)
            A.throwExpression(A.CborDeserializationException$("Certificate_StakeVoteDelegation deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
          if (0 >= t3)
            return A.ioore(t2, 0);
          t4 = type$.CborSmallInt._as(t2[0]).value;
          if (t4 !== 10)
            A.throwExpression(A.CborDeserializationException$("StakeVoteDelegation deserialization failed. Invalid type : " + t4));
          if (1 >= t3)
            return A.ioore(t2, 1);
          stakeCredentials = A.Credential_Credential$deserialize(t2[1]);
          if (2 >= t2.length)
            return A.ioore(t2, 2);
          t3 = new Uint8Array(A._ensureNativeList(type$.CborBytes._as(t2[2]).get$bytes()));
          if (3 >= t2.length)
            return A.ioore(t2, 3);
          t2 = new A.Certificate_StakeVoteDelegation(stakeCredentials, new A._StakePoolId(t3), A.Drep_Drep$deserialize(t1._as(t2[3])));
          t1 = t2;
          break $label0$0;
        }
        if (11 === _0_0) {
          t1 = t2.length;
          if (t1 !== 4)
            A.throwExpression(A.CborDeserializationException$("Certificate_StakeRegistrationDelegation deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
          if (0 >= t1)
            return A.ioore(t2, 0);
          t4 = type$.CborSmallInt._as(t2[0]).value;
          if (t4 !== 11)
            A.throwExpression(A.CborDeserializationException$("StakeRegistrationDelegation deserialization failed. Invalid type : " + t4));
          if (1 >= t1)
            return A.ioore(t2, 1);
          stakeCredentials = A.Credential_Credential$deserialize(t2[1]);
          if (2 >= t2.length)
            return A.ioore(t2, 2);
          t1 = new Uint8Array(A._ensureNativeList(type$.CborBytes._as(t2[2]).get$bytes()));
          if (3 >= t2.length)
            return A.ioore(t2, 3);
          t2 = new A.Certificate_StakeRegistrationDelegation(stakeCredentials, new A._StakePoolId(t1), t3._as(t2[3]));
          t1 = t2;
          break $label0$0;
        }
        if (12 === _0_0) {
          t4 = t2.length;
          if (t4 !== 4)
            A.throwExpression(A.CborDeserializationException$("Certificate_VoteRegistrationDelegation deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
          if (0 >= t4)
            return A.ioore(t2, 0);
          t5 = type$.CborSmallInt._as(t2[0]).value;
          if (t5 !== 12)
            A.throwExpression(A.CborDeserializationException$("VoteRegistrationDelegation deserialization failed. Invalid type : " + t5));
          if (1 >= t4)
            return A.ioore(t2, 1);
          stakeCredentials = A.Credential_Credential$deserialize(t2[1]);
          if (2 >= t2.length)
            return A.ioore(t2, 2);
          dRep = A.Drep_Drep$deserialize(t1._as(t2[2]));
          if (3 >= t2.length)
            return A.ioore(t2, 3);
          t1 = new A.Certificate_VoteRegistrationDelegation(stakeCredentials, dRep, t3._as(t2[3]));
          break $label0$0;
        }
        if (13 === _0_0) {
          t4 = t2.length;
          if (t4 !== 5)
            A.throwExpression(A.CborDeserializationException$("Certificate_StakeVoteRegistrationDelegation deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
          if (0 >= t4)
            return A.ioore(t2, 0);
          t5 = type$.CborSmallInt._as(t2[0]).value;
          if (t5 !== 13)
            A.throwExpression(A.CborDeserializationException$("StakeVoteRegistrationDelegation deserialization failed. Invalid type : " + t5));
          if (1 >= t4)
            return A.ioore(t2, 1);
          stakeCredentials = A.Credential_Credential$deserialize(t2[1]);
          if (2 >= t2.length)
            return A.ioore(t2, 2);
          t4 = new Uint8Array(A._ensureNativeList(type$.CborBytes._as(t2[2]).get$bytes()));
          if (3 >= t2.length)
            return A.ioore(t2, 3);
          dRep = A.Drep_Drep$deserialize(t1._as(t2[3]));
          if (4 >= t2.length)
            return A.ioore(t2, 4);
          t2 = new A.Certificate_StakeVoteRegistrationDelegation(stakeCredentials, new A._StakePoolId(t4), dRep, t3._as(t2[4]));
          t1 = t2;
          break $label0$0;
        }
        if (14 === _0_0) {
          t1 = t2.length;
          if (t1 !== 3)
            A.throwExpression(A.CborDeserializationException$("Certificate_AuthorizeCommitteeHot deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
          if (0 >= t1)
            return A.ioore(t2, 0);
          t3 = type$.CborSmallInt._as(t2[0]).value;
          if (t3 !== 14)
            A.throwExpression(A.CborDeserializationException$("AuthorizeCommitteeHot deserialization failed. Invalid type : " + t3));
          if (1 >= t1)
            return A.ioore(t2, 1);
          committeeColdCredential = A.Credential_Credential$deserialize(t2[1]);
          if (2 >= t2.length)
            return A.ioore(t2, 2);
          t1 = new A.Certificate_AuthorizeCommitteeHot(committeeColdCredential, A.Credential_Credential$deserialize(t2[2]));
          break $label0$0;
        }
        if (15 === _0_0) {
          t1 = A._parseResignCommitteeCold(cList);
          break $label0$0;
        }
        if (16 === _0_0) {
          t1 = A._parseRegisterDRep(cList);
          break $label0$0;
        }
        if (17 === _0_0) {
          t1 = t2.length;
          if (t1 !== 3)
            A.throwExpression(A.CborDeserializationException$("Certificate_UnregisterDRep deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
          if (0 >= t1)
            return A.ioore(t2, 0);
          t4 = type$.CborSmallInt._as(t2[0]).value;
          if (t4 !== 17)
            A.throwExpression(A.CborDeserializationException$("UnregisterDRep deserialization failed. Invalid type : " + t4));
          if (1 >= t1)
            return A.ioore(t2, 1);
          dRepCredential = A.Credential_Credential$deserialize(t2[1]);
          if (2 >= t2.length)
            return A.ioore(t2, 2);
          t1 = new A.Certificate_UnregisterDRep(dRepCredential, t3._as(t2[2]));
          break $label0$0;
        }
        if (18 === _0_0) {
          t1 = A._parseUpdateDRep(cList);
          break $label0$0;
        }
        t1 = A.throwExpression(A.CborDeserializationException$("Certificate deserialization failed. Invalid type : " + cList.$index(0, 0).toString$0(0)));
      }
      A.getRuntimeTypeOfDartObject(t1).toString$0(0);
      return t1;
    },
    CertificateIterableExtension_serialize(_this, forJson) {
      var t1 = type$.CborValue;
      t1 = A.List_List$_of(J.map$1$1$ax(_this, new A.CertificateIterableExtension_serialize_closure(false), t1), t1);
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, t1);
    },
    _deserializePoolRegistration(cList) {
      var t3, vrfKeyHash, t4, t5, cPledge, cCost, margin, rewardAccount, cPoolOwners, poolOwners, cRelays, cPoolMetadata, poolMetadata,
        t1 = cList._base,
        t2 = t1.length;
      if (t2 !== 10)
        throw A.wrapException(A.CborDeserializationException$("Certificate_PoolRegistration deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
      if (0 >= t2)
        return A.ioore(t1, 0);
      t3 = type$.CborSmallInt._as(t1[0]).value;
      if (t3 !== 3)
        throw A.wrapException(A.CborDeserializationException$("PoolRegistration deserialization failed. Invalid type : " + t3));
      if (1 >= t2)
        return A.ioore(t1, 1);
      t2 = type$.CborBytes;
      t3 = new Uint8Array(A._ensureNativeList(t2._as(t1[1]).get$bytes()));
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      vrfKeyHash = new Uint8Array(A._ensureNativeList(t2._as(t1[2]).get$bytes()));
      t4 = t1.length;
      if (3 >= t4)
        return A.ioore(t1, 3);
      t5 = type$.CborInt;
      cPledge = t5._as(t1[3]);
      if (4 >= t4)
        return A.ioore(t1, 4);
      cCost = t5._as(t1[4]);
      if (5 >= t4)
        return A.ioore(t1, 5);
      margin = A.RationalNumber_RationalNumber$deserialize(t1[5]);
      if (6 >= t1.length)
        return A.ioore(t1, 6);
      rewardAccount = new Uint8Array(A._ensureNativeList(t2._as(t1[6]).get$bytes()));
      if (7 >= t1.length)
        return A.ioore(t1, 7);
      t4 = type$.CborList;
      cPoolOwners = t4._as(t1[7]);
      poolOwners = B.JSArray_methods.map$1$1(cPoolOwners._base, A._instanceType(cPoolOwners)._eval$1("Uint8List(_DelegatingIterableBase.E)")._as(new A._deserializePoolRegistration_closure()), type$.Uint8List).toList$0(0);
      t5 = t1.length;
      if (8 >= t5)
        return A.ioore(t1, 8);
      cRelays = t1[8];
      if (9 >= t5)
        return A.ioore(t1, 9);
      cPoolMetadata = t1[9];
      if (cPoolMetadata instanceof A._CborNullImpl)
        poolMetadata = null;
      else {
        if (!t4._is(cPoolMetadata))
          A.throwExpression(A.CborDeserializationException$("PoolMetadata deserialization failed. Expected a cbor list but got " + A.getRuntimeTypeOfDartObject(cPoolMetadata).toString$0(0)));
        t1 = cPoolMetadata._base;
        t4 = t1.length;
        if (t4 < 2)
          A.throwExpression(A.CborDeserializationException$("PoolMetadata deserialization failed. Invalid number of DataItem(s) : " + cPoolMetadata.get$length(0)));
        if (0 >= t4)
          return A.ioore(t1, 0);
        t4 = type$.CborString._as(t1[0]).toString$0(0);
        if (1 >= t1.length)
          return A.ioore(t1, 1);
        poolMetadata = new A._PoolMetadata(t4, new Uint8Array(A._ensureNativeList(t2._as(t1[1]).get$bytes())), cPoolMetadata.get$type());
      }
      return new A.Certificate_PoolRegistration(new A._StakePoolId(t3), vrfKeyHash, cPledge, cCost, margin, rewardAccount, poolOwners, cRelays, poolMetadata);
    },
    _parseResignCommitteeCold(cList) {
      var t3, committeeColdCredential, cAnchor,
        t1 = cList._base,
        t2 = t1.length;
      if (t2 !== 3)
        throw A.wrapException(A.CborDeserializationException$("Certificate_ResignCommitteeCold deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
      if (0 >= t2)
        return A.ioore(t1, 0);
      t3 = type$.CborSmallInt._as(t1[0]).value;
      if (t3 !== 15)
        throw A.wrapException(A.CborDeserializationException$("ResignCommitteeCold deserialization failed. Invalid type : " + t3));
      if (1 >= t2)
        return A.ioore(t1, 1);
      committeeColdCredential = A.Credential_Credential$deserialize(t1[1]);
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      cAnchor = t1[2];
      $label0$0: {
        if (cAnchor instanceof A._CborNullImpl) {
          t1 = null;
          break $label0$0;
        }
        if (type$.CborList._is(cAnchor)) {
          t1 = A.Anchor_Anchor$deserialize(cAnchor);
          break $label0$0;
        }
        t1 = A.throwExpression(A.CborDeserializationException$(string$.Regist + A.getRuntimeTypeOfDartObject(cAnchor).toString$0(0)));
      }
      return new A.Certificate_ResignCommitteeCold(committeeColdCredential, t1);
    },
    _parseRegisterDRep(cList) {
      var t3, dRepCredential, cCoin, cAnchor,
        t1 = cList._base,
        t2 = t1.length;
      if (t2 !== 4)
        throw A.wrapException(A.CborDeserializationException$("Certificate_RegisterDRep deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
      if (0 >= t2)
        return A.ioore(t1, 0);
      t3 = type$.CborSmallInt._as(t1[0]).value;
      if (t3 !== 16)
        throw A.wrapException(A.CborDeserializationException$("RegisterDRep deserialization failed. Invalid type : " + t3));
      if (1 >= t2)
        return A.ioore(t1, 1);
      dRepCredential = A.Credential_Credential$deserialize(t1[1]);
      t2 = t1.length;
      if (2 >= t2)
        return A.ioore(t1, 2);
      cCoin = type$.CborInt._as(t1[2]);
      if (3 >= t2)
        return A.ioore(t1, 3);
      cAnchor = t1[3];
      $label0$0: {
        if (cAnchor instanceof A._CborNullImpl) {
          t1 = null;
          break $label0$0;
        }
        if (type$.CborList._is(cAnchor)) {
          t1 = A.Anchor_Anchor$deserialize(cAnchor);
          break $label0$0;
        }
        t1 = A.throwExpression(A.CborDeserializationException$(string$.Regist + A.getRuntimeTypeOfDartObject(cAnchor).toString$0(0)));
      }
      return new A.Certificate_RegisterDRep(dRepCredential, cCoin, t1);
    },
    _parseUpdateDRep(cList) {
      var t3, dRepCredential, cAnchor,
        t1 = cList._base,
        t2 = t1.length;
      if (t2 !== 3)
        throw A.wrapException(A.CborDeserializationException$("Certificate_UpdateDRep deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
      if (0 >= t2)
        return A.ioore(t1, 0);
      t3 = type$.CborSmallInt._as(t1[0]).value;
      if (t3 !== 18)
        throw A.wrapException(A.CborDeserializationException$("UpdateDRep deserialization failed. Invalid type : " + t3));
      if (1 >= t2)
        return A.ioore(t1, 1);
      dRepCredential = A.Credential_Credential$deserialize(t1[1]);
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      cAnchor = t1[2];
      $label0$0: {
        if (cAnchor instanceof A._CborNullImpl) {
          t1 = null;
          break $label0$0;
        }
        if (type$.CborList._is(cAnchor)) {
          t1 = A.Anchor_Anchor$deserialize(cAnchor);
          break $label0$0;
        }
        t1 = A.throwExpression(A.CborDeserializationException$(string$.Regist + A.getRuntimeTypeOfDartObject(cAnchor).toString$0(0)));
      }
      return new A.Certificate_UpdateDRep(dRepCredential, t1);
    },
    Certificate: function Certificate() {
    },
    CertificateIterableExtension_serialize_closure: function CertificateIterableExtension_serialize_closure(t0) {
      this.forJson = t0;
    },
    _deserializePoolRegistration_closure: function _deserializePoolRegistration_closure() {
    },
    _$Certificate: function _$Certificate() {
    },
    Certificate_StakeRegistrationLegacy: function Certificate_StakeRegistrationLegacy(t0) {
      this.stakeCredential = t0;
      this.__Certificate_certType_FI = $;
    },
    Certificate_StakeDeRegistrationLegacy: function Certificate_StakeDeRegistrationLegacy(t0) {
      this.stakeCredential = t0;
      this.__Certificate_certType_FI = $;
    },
    Certificate_StakeDelegation: function Certificate_StakeDelegation(t0, t1) {
      this.stakeCredential = t0;
      this.stakePoolId = t1;
      this.__Certificate_certType_FI = $;
    },
    Certificate_PoolRegistration: function Certificate_PoolRegistration(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.operator = t0;
      _.vrfKeyHash = t1;
      _.pledge = t2;
      _.cost = t3;
      _.margin = t4;
      _.rewardAccount = t5;
      _._poolOwners = t6;
      _.relays = t7;
      _.poolMetadata = t8;
      _.__Certificate_certType_FI = $;
    },
    Certificate_PoolRetirement: function Certificate_PoolRetirement(t0, t1) {
      this.operator = t0;
      this.epoch = t1;
      this.__Certificate_certType_FI = $;
    },
    Certificate_StakeRegistration: function Certificate_StakeRegistration(t0, t1) {
      this.stakeCredential = t0;
      this.coin = t1;
      this.__Certificate_certType_FI = $;
    },
    Certificate_StakeDeRegistration: function Certificate_StakeDeRegistration(t0, t1) {
      this.stakeCredential = t0;
      this.coin = t1;
      this.__Certificate_certType_FI = $;
    },
    Certificate_VoteDelegation: function Certificate_VoteDelegation(t0, t1) {
      this.stakeCredential = t0;
      this.dRep = t1;
      this.__Certificate_certType_FI = $;
    },
    Certificate_StakeVoteDelegation: function Certificate_StakeVoteDelegation(t0, t1, t2) {
      var _ = this;
      _.stakeCredential = t0;
      _.stakePoolId = t1;
      _.dRep = t2;
      _.__Certificate_certType_FI = $;
    },
    Certificate_StakeRegistrationDelegation: function Certificate_StakeRegistrationDelegation(t0, t1, t2) {
      var _ = this;
      _.stakeCredential = t0;
      _.stakePoolId = t1;
      _.coin = t2;
      _.__Certificate_certType_FI = $;
    },
    Certificate_VoteRegistrationDelegation: function Certificate_VoteRegistrationDelegation(t0, t1, t2) {
      var _ = this;
      _.stakeCredential = t0;
      _.dRep = t1;
      _.coin = t2;
      _.__Certificate_certType_FI = $;
    },
    Certificate_StakeVoteRegistrationDelegation: function Certificate_StakeVoteRegistrationDelegation(t0, t1, t2, t3) {
      var _ = this;
      _.stakeCredential = t0;
      _.stakePoolId = t1;
      _.dRep = t2;
      _.coin = t3;
      _.__Certificate_certType_FI = $;
    },
    Certificate_AuthorizeCommitteeHot: function Certificate_AuthorizeCommitteeHot(t0, t1) {
      this.committeeColdCredential = t0;
      this.committeeHotCredential = t1;
      this.__Certificate_certType_FI = $;
    },
    Certificate_ResignCommitteeCold: function Certificate_ResignCommitteeCold(t0, t1) {
      this.committeeColdCredential = t0;
      this.anchor = t1;
      this.__Certificate_certType_FI = $;
    },
    Certificate_RegisterDRep: function Certificate_RegisterDRep(t0, t1, t2) {
      var _ = this;
      _.dRepCredential = t0;
      _.coin = t1;
      _.anchor = t2;
      _.__Certificate_certType_FI = $;
    },
    Certificate_UnregisterDRep: function Certificate_UnregisterDRep(t0, t1) {
      this.dRepCredential = t0;
      this.coin = t1;
      this.__Certificate_certType_FI = $;
    },
    Certificate_UpdateDRep: function Certificate_UpdateDRep(t0, t1) {
      this.dRepCredential = t0;
      this.anchor = t1;
      this.__Certificate_certType_FI = $;
    },
    _Certificate_Object__$Certificate: function _Certificate_Object__$Certificate() {
    },
    CredType_CredType$fromSmallInt(value) {
      return B.JSArray_methods.singleWhere$2$orElse(B.List_V7i, new A.CredType_CredType$fromSmallInt_closure(value), new A.CredType_CredType$fromSmallInt_closure0(value));
    },
    Credential___deserialize_tearOff(cList) {
      return A.Credential_Credential$deserialize(type$.CborValue._as(cList));
    },
    Credential_Credential$deserialize(cList) {
      var t1, cTypeDi, cHashDi;
      if (!type$.CborList._is(cList))
        throw A.wrapException(A.CborDeserializationException$("Credential deserialization failed. Invalid cbor type " + A.getRuntimeTypeOfDartObject(cList).toString$0(0) + " ; expected CborList"));
      t1 = cList._base;
      if (t1.length < 2)
        throw A.wrapException(A.CborDeserializationException$("Credential deserialization failed. Invalid number of DataItem(s) : " + cList.get$length(0)));
      cTypeDi = type$.CborSmallInt._as(t1[0]);
      cHashDi = type$.CborBytes._as(t1[1]);
      return new A._Credential(A.CredType_CredType$fromSmallInt(cTypeDi.value), new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(cHashDi.get$bytes(), false))));
    },
    CredType: function CredType(t0, t1, t2) {
      this.intValue = t0;
      this.index = t1;
      this._core$_name = t2;
    },
    CredType_CredType$fromSmallInt_closure: function CredType_CredType$fromSmallInt_closure(t0) {
      this.value = t0;
    },
    CredType_CredType$fromSmallInt_closure0: function CredType_CredType$fromSmallInt_closure0(t0) {
      this.value = t0;
    },
    Credential: function Credential() {
    },
    _$Credential: function _$Credential() {
    },
    _Credential: function _Credential(t0, t1) {
      this.type = t0;
      this.vKeyHash = t1;
    },
    _Credential_Object__$Credential: function _Credential_Object__$Credential() {
    },
    PoolMetadata: function PoolMetadata() {
    },
    PoolMetadata_metadataHashHex_closure: function PoolMetadata_metadataHashHex_closure(t0) {
      this.$this = t0;
    },
    _$PoolMetadata: function _$PoolMetadata() {
    },
    _PoolMetadata: function _PoolMetadata(t0, t1, t2) {
      var _ = this;
      _.metadataUrl = t0;
      _.metadataHash = t1;
      _.cborLengthType = t2;
      _.__PoolMetadata_metadataHashHex_FI = $;
    },
    _PoolMetadata_Object__$PoolMetadata: function _PoolMetadata_Object__$PoolMetadata() {
    },
    StakePoolId: function StakePoolId() {
    },
    _$StakePoolId: function _$StakePoolId() {
    },
    _StakePoolId: function _StakePoolId(t0) {
      this.poolKeyHash = t0;
    },
    _StakePoolId_Object__$StakePoolId: function _StakePoolId_Object__$StakePoolId() {
    },
    WithdrawIterableExtension_serialize(_this, forJson) {
      var t1 = type$.CborValue;
      return new A._CborMapImpl(B.List_empty, B.CborLengthType_2, A.Map_Map$fromEntries(J.map$1$1$ax(_this, new A.WithdrawIterableExtension_serialize_closure(false), type$.MapEntry_CborValue_CborValue), t1, t1));
    },
    Withdraw: function Withdraw() {
    },
    WithdrawIterableExtension_serialize_closure: function WithdrawIterableExtension_serialize_closure(t0) {
      this.forJson = t0;
    },
    _$Withdraw: function _$Withdraw() {
    },
    _Withdraw: function _Withdraw(t0, t1) {
      this.stakeAddressBech32 = t0;
      this.coin = t1;
    },
    _Withdraw_Object__$Withdraw: function _Withdraw_Object__$Withdraw() {
    },
    CardanoTransactionBody_CardanoTransactionBody$deserialize(cMap) {
      var inputsCbor, outputsCbor, feeCbor, ttlCbor, certsCbor, withdrawalsCbor, updateCbor, metadataHashCbor, validityStartIntervalCbor, mintCbor, scriptDataHashCbor, collateralCbor, requiredSignersCbor, networkIdCbor, collateralReturnCbor, totalCollateralCbor, referenceInputsCbor, votingProceduresCbor, proposalProceduresCbor, currentTreasuryValueCbor, donationCbor, inputs, outputs, t2, fee, ttl, certs, withdrawals, metadataHash, validityStartInterval, mint, scriptDataHash, collateral, requiredSigners, networkId, collateralReturn, totalCollateral, referenceInputs, votingProcedures, proposalProcedures, t3, result, _null = null,
        t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(A.Hash_blake2b(new Uint8Array(A._ensureNativeList(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(type$.CborCodec._eval$1("Codec.S")._as(cMap)))))), 32), false)),
        bodyBlake2bHash256 = B.C_HexCodec.get$encoder().convert$1(t1);
      t1 = cMap._base;
      inputsCbor = t1.$index(0, B._CborSmallIntImpl_0_List_empty);
      outputsCbor = t1.$index(0, B._CborSmallIntImpl_1_List_empty);
      feeCbor = t1.$index(0, B._CborSmallIntImpl_2_List_empty);
      ttlCbor = t1.$index(0, B._CborSmallIntImpl_3_List_empty);
      certsCbor = t1.$index(0, B._CborSmallIntImpl_4_List_empty);
      withdrawalsCbor = t1.$index(0, B._CborSmallIntImpl_5_List_empty);
      updateCbor = t1.$index(0, B._CborSmallIntImpl_6_List_empty);
      metadataHashCbor = t1.$index(0, B._CborSmallIntImpl_7_List_empty);
      validityStartIntervalCbor = t1.$index(0, B._CborSmallIntImpl_8_List_empty);
      mintCbor = t1.$index(0, B._CborSmallIntImpl_9_List_empty);
      scriptDataHashCbor = t1.$index(0, B._CborSmallIntImpl_11_List_empty);
      collateralCbor = t1.$index(0, B._CborSmallIntImpl_13_List_empty);
      requiredSignersCbor = t1.$index(0, B._CborSmallIntImpl_14_List_empty);
      networkIdCbor = t1.$index(0, B._CborSmallIntImpl_15_List_empty);
      collateralReturnCbor = t1.$index(0, B._CborSmallIntImpl_16_List_empty);
      totalCollateralCbor = t1.$index(0, B._CborSmallIntImpl_17_List_empty);
      referenceInputsCbor = t1.$index(0, B._CborSmallIntImpl_18_List_empty);
      votingProceduresCbor = t1.$index(0, B._CborSmallIntImpl_19_List_empty);
      proposalProceduresCbor = t1.$index(0, B._CborSmallIntImpl_20_List_empty);
      currentTreasuryValueCbor = t1.$index(0, B._CborSmallIntImpl_21_List_empty);
      donationCbor = t1.$index(0, B._CborSmallIntImpl_22_List_empty);
      inputsCbor.toString;
      inputs = A.CardanoTransactionInputs_CardanoTransactionInputs$deserialize(inputsCbor);
      outputsCbor.toString;
      t1 = type$.CborList;
      t1._as(outputsCbor);
      outputs = B.JSArray_methods.map$1$1(outputsCbor._base, A._instanceType(outputsCbor)._eval$1("CardanoTransactionOutput(_DelegatingIterableBase.E)")._as(A.transaction_output_CardanoTransactionOutput___deserialize_tearOff$closure()), type$.CardanoTransactionOutput).toList$0(0);
      feeCbor.toString;
      t2 = type$.CborInt;
      fee = t2._as(feeCbor).toBigInt$0();
      ttl = ttlCbor == null ? _null : t2._as(ttlCbor).toBigInt$0();
      type$.nullable_CborList._as(certsCbor);
      if (certsCbor == null)
        certs = _null;
      else {
        A._instanceType(certsCbor)._eval$1("Certificate(_DelegatingIterableBase.E)")._as(A.certificate_Certificate___deserialize_tearOff$closure());
        certs = B.JSArray_methods.map$1$1(certsCbor._base, A.certificate_Certificate___deserialize_tearOff$closure(), type$.Certificate);
      }
      withdrawals = withdrawalsCbor == null ? _null : new A.CardanoTransactionBody_CardanoTransactionBody$deserialize_closure().call$1(withdrawalsCbor);
      if (updateCbor != null)
        throw A.wrapException(A.TransactionBodyParseException$("updateCbor not implemented"));
      metadataHash = metadataHashCbor == null ? _null : new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(type$.CborBytes._as(metadataHashCbor).get$bytes(), false)));
      validityStartInterval = validityStartIntervalCbor == null ? _null : t2._as(validityStartIntervalCbor).toBigInt$0();
      mint = mintCbor == null ? _null : type$.CborMap._as(mintCbor)._base.get$entries().map$1$1(0, new A.CardanoTransactionBody_CardanoTransactionBody$deserialize_closure0(), type$.MultiAsset).toList$0(0);
      scriptDataHash = scriptDataHashCbor == null ? _null : new A.CardanoTransactionBody_CardanoTransactionBody$deserialize_closure1().call$1(scriptDataHashCbor);
      collateral = collateralCbor == null ? _null : A.CardanoTransactionInputs___deserialize_tearOff(collateralCbor);
      requiredSigners = requiredSignersCbor == null ? _null : A.RequiredSigners_deserialize(requiredSignersCbor);
      networkId = networkIdCbor == null ? _null : new A.CardanoTransactionBody_CardanoTransactionBody$deserialize_closure2().call$1(networkIdCbor);
      collateralReturn = collateralReturnCbor == null ? _null : A.CardanoTransactionOutput___deserialize_tearOff(collateralReturnCbor);
      totalCollateral = totalCollateralCbor == null ? _null : new A.CardanoTransactionBody_CardanoTransactionBody$deserialize_closure3().call$1(totalCollateralCbor);
      referenceInputs = referenceInputsCbor == null ? _null : A.CardanoTransactionInputs___deserialize_tearOff(referenceInputsCbor);
      votingProcedures = votingProceduresCbor == null ? _null : A.VotingProcedures_VotingProcedures$deserialize(votingProceduresCbor);
      $label0$0: {
        if (proposalProceduresCbor == null) {
          t1 = _null;
          break $label0$0;
        }
        if (t1._is(proposalProceduresCbor)) {
          A._instanceType(proposalProceduresCbor)._eval$1("ProposalProcedure(_DelegatingIterableBase.E)")._as(A.proposal_procedure_ProposalProcedure___deserialize_tearOff$closure());
          t1 = B.JSArray_methods.map$1$1(proposalProceduresCbor._base, A.proposal_procedure_ProposalProcedure___deserialize_tearOff$closure(), type$.ProposalProcedure);
          break $label0$0;
        }
        t1 = A.throwExpression(A.TransactionBodyParseException$("Invalid proposalProceduresCbor type: " + A.getRuntimeTypeOfDartObject(proposalProceduresCbor).toString$0(0)));
      }
      proposalProcedures = t1 == null ? _null : t1.toList$1$growable(0, false);
      t1 = certs == null ? _null : certs.toList$1$growable(0, false);
      t2 = withdrawals == null ? _null : J.toList$1$growable$ax(withdrawals, false);
      t3 = type$.nullable_CborInt;
      result = A._CardanoTransactionBody$(t1, collateral, collateralReturn, t3._as(currentTreasuryValueCbor), t3._as(donationCbor), fee, inputs, metadataHash, mint, networkId, bodyBlake2bHash256, outputs, proposalProcedures, referenceInputs, requiredSigners, scriptDataHash, totalCollateral, ttl, validityStartInterval, votingProcedures, t2);
      return result;
    },
    _CardanoTransactionBody$(certs, collateral, collateralReturn, currentTreasuryValue, donation, fee, inputs, metadataHash, mint, networkId, originalBlake2bHash256, outputs, proposalProcedures, referenceInputs, requiredSigners, scriptDataHash, totalCollateral, ttl, validityStartInterval, votingProcedures, withdrawals) {
      return new A._CardanoTransactionBody(originalBlake2bHash256, inputs, outputs, fee, ttl, certs, withdrawals, metadataHash, validityStartInterval, mint, scriptDataHash, collateral, requiredSigners, networkId, collateralReturn, totalCollateral, referenceInputs, votingProcedures, proposalProcedures, currentTreasuryValue, donation);
    },
    CardanoTransactionBody: function CardanoTransactionBody() {
    },
    CardanoTransactionBody_CardanoTransactionBody$deserialize_closure: function CardanoTransactionBody_CardanoTransactionBody$deserialize_closure() {
    },
    CardanoTransactionBody_CardanoTransactionBody$deserialize__closure: function CardanoTransactionBody_CardanoTransactionBody$deserialize__closure() {
    },
    CardanoTransactionBody_CardanoTransactionBody$deserialize_closure0: function CardanoTransactionBody_CardanoTransactionBody$deserialize_closure0() {
    },
    CardanoTransactionBody_CardanoTransactionBody$deserialize_closure1: function CardanoTransactionBody_CardanoTransactionBody$deserialize_closure1() {
    },
    CardanoTransactionBody_CardanoTransactionBody$deserialize_closure2: function CardanoTransactionBody_CardanoTransactionBody$deserialize_closure2() {
    },
    CardanoTransactionBody_CardanoTransactionBody$deserialize_closure3: function CardanoTransactionBody_CardanoTransactionBody$deserialize_closure3() {
    },
    CardanoTransactionBody_serialize_closure: function CardanoTransactionBody_serialize_closure(t0) {
      this.forJson = t0;
    },
    CardanoTransactionBody_serialize_closure0: function CardanoTransactionBody_serialize_closure0(t0) {
      this.forJson = t0;
    },
    CardanoTransactionBody_serialize_closure1: function CardanoTransactionBody_serialize_closure1(t0) {
      this.forJson = t0;
    },
    CardanoTransactionBody_serialize_closure2: function CardanoTransactionBody_serialize_closure2(t0) {
      this.forJson = t0;
    },
    CardanoTransactionBody_serialize_closure3: function CardanoTransactionBody_serialize_closure3(t0) {
      this.forJson = t0;
    },
    CardanoTransactionBody_serialize_closure4: function CardanoTransactionBody_serialize_closure4(t0) {
      this.forJson = t0;
    },
    CardanoTransactionBody_serialize_closure5: function CardanoTransactionBody_serialize_closure5(t0) {
      this.forJson = t0;
    },
    CardanoTransactionBody_serialize_closure6: function CardanoTransactionBody_serialize_closure6(t0) {
      this.forJson = t0;
    },
    CardanoTransactionBody_serialize_closure7: function CardanoTransactionBody_serialize_closure7(t0) {
      this.forJson = t0;
    },
    CardanoTransactionBody_serialize__closure: function CardanoTransactionBody_serialize__closure(t0) {
      this.forJson = t0;
    },
    CardanoTransactionBody_serialize_closure8: function CardanoTransactionBody_serialize_closure8(t0) {
      this.forJson = t0;
    },
    CardanoTransactionBody_serialize_closure9: function CardanoTransactionBody_serialize_closure9(t0) {
      this.forJson = t0;
    },
    _$CardanoTransactionBody: function _$CardanoTransactionBody() {
    },
    _CardanoTransactionBody: function _CardanoTransactionBody(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20) {
      var _ = this;
      _.originalBlake2bHash256 = t0;
      _.inputs = t1;
      _._outputs = t2;
      _.fee = t3;
      _.ttl = t4;
      _._certs = t5;
      _._transaction_body$_withdrawals = t6;
      _.metadataHash = t7;
      _.validityStartInterval = t8;
      _._mint = t9;
      _.scriptDataHash = t10;
      _.collateral = t11;
      _.requiredSigners = t12;
      _.networkId = t13;
      _.collateralReturn = t14;
      _.totalCollateral = t15;
      _.referenceInputs = t16;
      _.votingProcedures = t17;
      _._proposalProcedures = t18;
      _.currentTreasuryValue = t19;
      _.donation = t20;
    },
    _CardanoTransactionBody_Object__$CardanoTransactionBody: function _CardanoTransactionBody_Object__$CardanoTransactionBody() {
    },
    WitnessVKey: function WitnessVKey() {
    },
    _$WitnessVKey: function _$WitnessVKey() {
    },
    _WitnessVKey: function _WitnessVKey(t0, t1) {
      this.vkey = t0;
      this.signature = t1;
    },
    _WitnessVKey_Object__$WitnessVKey: function _WitnessVKey_Object__$WitnessVKey() {
    },
    NativeScript_NativeScript$deserialize(cList) {
      var t3, selector,
        t1 = cList._base,
        t2 = t1.length;
      if (0 >= t2)
        return A.ioore(t1, 0);
      t3 = type$.CborSmallInt;
      selector = t3._as(t1[0]).value;
      $label0$0: {
        if (0 === selector) {
          if (1 >= t2)
            return A.ioore(t1, 1);
          t1 = new A.NativeScript_PubKey(new Uint8Array(A._ensureNativeList(type$.CborBytes._as(t1[1]).get$bytes())));
          break $label0$0;
        }
        if (1 === selector) {
          if (1 >= t2)
            return A.ioore(t1, 1);
          t1 = type$.CborList._as(t1[1]);
          t1 = new A.NativeScript_All(B.JSArray_methods.map$1$1(t1._base, A._instanceType(t1)._eval$1("NativeScript(_DelegatingIterableBase.E)")._as(new A.NativeScript_NativeScript$deserialize_closure()), type$.NativeScript).toList$1$growable(0, false));
          break $label0$0;
        }
        if (2 === selector) {
          if (1 >= t2)
            return A.ioore(t1, 1);
          t1 = type$.CborList._as(t1[1]);
          t1 = new A.NativeScript_Any(B.JSArray_methods.map$1$1(t1._base, A._instanceType(t1)._eval$1("NativeScript(_DelegatingIterableBase.E)")._as(new A.NativeScript_NativeScript$deserialize_closure0()), type$.NativeScript).toList$1$growable(0, false));
          break $label0$0;
        }
        if (3 === selector) {
          if (1 >= t2)
            return A.ioore(t1, 1);
          t3 = t3._as(t1[1]);
          if (2 >= t2)
            return A.ioore(t1, 2);
          t1 = type$.CborList._as(t1[2]);
          t1 = new A.NativeScript_AtLeast(t3.value, B.JSArray_methods.map$1$1(t1._base, A._instanceType(t1)._eval$1("NativeScript(_DelegatingIterableBase.E)")._as(new A.NativeScript_NativeScript$deserialize_closure1()), type$.NativeScript).toList$1$growable(0, false));
          break $label0$0;
        }
        if (4 === selector) {
          if (1 >= t2)
            return A.ioore(t1, 1);
          t1 = new A.NativeScript_RequireTimeAfter(type$.CborInt._as(t1[1]).toBigInt$0());
          break $label0$0;
        }
        if (5 === selector) {
          if (1 >= t2)
            return A.ioore(t1, 1);
          t1 = new A.NativeScript_RequireTimeBefore(type$.CborInt._as(t1[1]).toBigInt$0());
          break $label0$0;
        }
        t1 = A.throwExpression(new A.NativeScriptParseException("Unknown NativeScript selector: " + selector));
      }
      return t1;
    },
    NativeScript: function NativeScript() {
    },
    NativeScript_serialize_encoder: function NativeScript_serialize_encoder(t0, t1) {
      this.$this = t0;
      this.forJson = t1;
    },
    NativeScript_serialize_closure: function NativeScript_serialize_closure(t0) {
      this.forJson = t0;
    },
    NativeScript_serialize_closure0: function NativeScript_serialize_closure0(t0) {
      this.forJson = t0;
    },
    NativeScript_serialize_closure1: function NativeScript_serialize_closure1(t0) {
      this.forJson = t0;
    },
    NativeScript_NativeScript$deserialize_closure: function NativeScript_NativeScript$deserialize_closure() {
    },
    NativeScript_NativeScript$deserialize_closure0: function NativeScript_NativeScript$deserialize_closure0() {
    },
    NativeScript_NativeScript$deserialize_closure1: function NativeScript_NativeScript$deserialize_closure1() {
    },
    _$NativeScript: function _$NativeScript() {
    },
    NativeScript_PubKey: function NativeScript_PubKey(t0) {
      this.blob = t0;
    },
    NativeScript_All: function NativeScript_All(t0) {
      this._scripts = t0;
    },
    NativeScript_Any: function NativeScript_Any(t0) {
      this._scripts = t0;
    },
    NativeScript_AtLeast: function NativeScript_AtLeast(t0, t1) {
      this.required = t0;
      this._scripts = t1;
    },
    NativeScript_RequireTimeAfter: function NativeScript_RequireTimeAfter(t0) {
      this.slot = t0;
    },
    NativeScript_RequireTimeBefore: function NativeScript_RequireTimeBefore(t0) {
      this.slot = t0;
    },
    _NativeScript_Script__$NativeScript: function _NativeScript_Script__$NativeScript() {
    },
    WitnessBootstrap___deserialize_tearOff(cborValue) {
      var t1, t2, t3, t4, t5;
      type$.CborValue._as(cborValue);
      if (!type$.CborList._is(cborValue))
        A.throwExpression(A.WitnessBootstrapParseException$("cborValue is type " + A.getRuntimeTypeOfDartObject(cborValue).toString$0(0)));
      t1 = cborValue._base;
      t2 = t1.length;
      if (t2 !== 4)
        A.throwExpression(A.WitnessBootstrapParseException$("cborValue length is " + cborValue.get$length(0)));
      if (0 >= t2)
        return A.ioore(t1, 0);
      t2 = type$.CborBytes;
      t3 = new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(t2._as(t1[0]).get$bytes(), false)));
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t4 = new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(t2._as(t1[1]).get$bytes(), false)));
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t5 = new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(t2._as(t1[2]).get$bytes(), false)));
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      return new A._WitnessBootstrap(t3, t4, t5, new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(t2._as(t1[3]).get$bytes(), false))));
    },
    WitnessBootstrap: function WitnessBootstrap() {
    },
    _$WitnessBootstrap: function _$WitnessBootstrap() {
    },
    _WitnessBootstrap: function _WitnessBootstrap(t0, t1, t2, t3) {
      var _ = this;
      _.publicKey = t0;
      _.signature = t1;
      _.chainCode = t2;
      _.attributes = t3;
    },
    _WitnessBootstrap_Object__$WitnessBootstrap: function _WitnessBootstrap_Object__$WitnessBootstrap() {
    },
    PlutusScriptV1___deserialize_tearOff(cborValue) {
      type$.CborValue._as(cborValue);
      if (!type$.CborBytes._is(cborValue))
        A.throwExpression(new A.WitnessPlutusScriptV1ParseException("cborValue is " + A.getRuntimeTypeOfDartObject(cborValue).toString$0(0)));
      return new A._PlutusScriptV1(new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(cborValue.get$bytes(), false))));
    },
    PlutusScriptV1: function PlutusScriptV1() {
    },
    _$PlutusScriptV1: function _$PlutusScriptV1() {
    },
    _PlutusScriptV1: function _PlutusScriptV1(t0) {
      this.bytes = t0;
    },
    _PlutusScriptV1_Script__$PlutusScriptV1: function _PlutusScriptV1_Script__$PlutusScriptV1() {
    },
    PlutusData___deserialize_tearOff(cValue) {
      return A.PlutusData_PlutusData$deserialize(type$.CborValue._as(cValue));
    },
    PlutusData_PlutusData$deserialize(cValue) {
      var t1;
      $label0$0: {
        if (type$.CborInt._is(cValue)) {
          t1 = new A.PlutusData_BigInt(cValue.toBigInt$0());
          break $label0$0;
        }
        if (type$.CborBytes._is(cValue)) {
          t1 = cValue.get$type() === B.CborLengthType_1 ? new A.PlutusData_IndefiniteBytes(cValue.get$bytesList(), cValue.get$tags()) : new A.PlutusData_DefiniteBytes(cValue.get$bytes(), cValue.get$tags());
          break $label0$0;
        }
        if (cValue instanceof A._CborMapImpl) {
          t1 = type$.PlutusData;
          t1 = new A.PlutusData_Map(cValue.map$2$1(0, new A.PlutusData_PlutusData$deserialize_closure(), t1, t1), cValue.tags, cValue.type);
          break $label0$0;
        }
        if (type$.CborList._is(cValue)) {
          t1 = new A.PlutusData_PlutusData$deserialize_fromCborList().call$1(cValue);
          break $label0$0;
        }
        t1 = A.throwExpression(A.PlutusDataParseException$("constr: Unknown type " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      }
      return t1;
    },
    _compactCborTagToAlternative(cborTag) {
      if (cborTag >= 121 && cborTag <= 127)
        return cborTag - 121;
      else if (cborTag >= 1280 && cborTag <= 1400)
        return cborTag - 1280 + 7;
      else
        return cborTag;
    },
    _alternativeToCompactCborTag(altTag) {
      if (altTag <= 6)
        return altTag + 121;
      else if (altTag <= 127)
        return altTag + 1280 - 7;
      else
        return altTag;
    },
    _serializePlutusData_List(d, forJson) {
      var t1 = J.map$1$1$ax(d.get$data(), new A._serializePlutusData_List_closure(false), type$.CborValue);
      t1 = A.List_List$_of(t1, t1.$ti._eval$1("ListIterable.E"));
      t1.$flags = 1;
      return new A._CborListImpl(d.get$tags(), d.cborLengthType, t1);
    },
    _deserialisePlutusData_List(cborList) {
      return new A.PlutusData_List(B.JSArray_methods.map$1$1(cborList._base, A._instanceType(cborList)._eval$1("PlutusData(_DelegatingIterableBase.E)")._as(A.plutus_data_PlutusData___deserialize_tearOff$closure()), type$.PlutusData).toList$1$growable(0, false), cborList.get$tags(), cborList.get$type());
    },
    PlutusData: function PlutusData() {
    },
    PlutusData_serialize_closure: function PlutusData_serialize_closure(t0) {
      this.forJson = t0;
    },
    PlutusData_PlutusData$deserialize_fromCborList: function PlutusData_PlutusData$deserialize_fromCborList() {
    },
    PlutusData_PlutusData$deserialize_fromCborList_closure: function PlutusData_PlutusData$deserialize_fromCborList_closure() {
    },
    PlutusData_PlutusData$deserialize_closure: function PlutusData_PlutusData$deserialize_closure() {
    },
    _serializePlutusData_List_closure: function _serializePlutusData_List_closure(t0) {
      this.forJson = t0;
    },
    _$PlutusData: function _$PlutusData() {
    },
    PlutusData_BigInt: function PlutusData_BigInt(t0) {
      this.value = t0;
    },
    PlutusData_DefiniteBytes: function PlutusData_DefiniteBytes(t0, t1) {
      this._bytes = t0;
      this._plutus_data$_tags = t1;
    },
    PlutusData_IndefiniteBytes: function PlutusData_IndefiniteBytes(t0, t1) {
      this._bytesList = t0;
      this._plutus_data$_tags = t1;
    },
    PlutusData_Constr: function PlutusData_Constr(t0, t1, t2, t3) {
      var _ = this;
      _.alternative = t0;
      _.data = t1;
      _._plutus_data$_tags = t2;
      _.cborLengthType = t3;
    },
    PlutusData_List: function PlutusData_List(t0, t1, t2) {
      this._plutus_data$_data = t0;
      this._plutus_data$_tags = t1;
      this.cborLengthType = t2;
    },
    PlutusData_Map: function PlutusData_Map(t0, t1, t2) {
      this._plutus_data$_data = t0;
      this._plutus_data$_tags = t1;
      this.cborLengthType = t2;
    },
    _PlutusData_Object__$PlutusData: function _PlutusData_Object__$PlutusData() {
    },
    ExUnits_ExUnits$deserialize(cborValue) {
      var t1, t2, t3;
      if (!type$.CborList._is(cborValue))
        throw A.wrapException(A.ExUnitsParseException$("cborValue is " + A.getRuntimeTypeOfDartObject(cborValue).toString$0(0)));
      t1 = cborValue._base;
      t2 = t1.length;
      if (t2 !== 2)
        throw A.wrapException(A.ExUnitsParseException$("cborValue length is " + cborValue.get$length(0)));
      if (0 >= t2)
        return A.ioore(t1, 0);
      t2 = type$.CborInt;
      t3 = t2._as(t1[0]).toBigInt$0();
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      return new A._ExUnits(t3, t2._as(t1[1]).toBigInt$0());
    },
    ExUnits: function ExUnits() {
    },
    _$ExUnits: function _$ExUnits() {
    },
    _ExUnits: function _ExUnits(t0, t1) {
      this.mem = t0;
      this.steps = t1;
    },
    _ExUnits_Object__$ExUnits: function _ExUnits_Object__$ExUnits() {
    },
    Redeemer___deserializePreConway_tearOff(cborValue) {
      var t1, t2, t3, t4;
      type$.CborValue._as(cborValue);
      if (!type$.CborList._is(cborValue))
        A.throwExpression(A.RedeemerParseException$("deserializePreConway: cborValue is " + A.getRuntimeTypeOfDartObject(cborValue).toString$0(0)));
      t1 = cborValue._base;
      t2 = t1.length;
      if (t2 !== 4)
        A.throwExpression(A.RedeemerParseException$("deserializePreConway: cborValue length is " + cborValue.get$length(0)));
      if (0 >= t2)
        return A.ioore(t1, 0);
      t2 = type$.CborSmallInt;
      t3 = A.RedeemerTag_RedeemerTag$fromInt(t2._as(t1[0]).value);
      t4 = t1.length;
      if (1 >= t4)
        return A.ioore(t1, 1);
      t2 = t2._as(t1[1]);
      if (2 >= t4)
        return A.ioore(t1, 2);
      t4 = A.PlutusData_PlutusData$deserialize(t1[2]);
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      return new A.Redeemer_PreConway(t3, t2.value, t4, A.ExUnits_ExUnits$deserialize(t1[3]));
    },
    RedeemerTag_RedeemerTag$fromInt(value) {
      return B.JSArray_methods.singleWhere$1(B.List_unh, new A.RedeemerTag_RedeemerTag$fromInt_closure(value));
    },
    Redeemer: function Redeemer() {
    },
    RedeemerTag: function RedeemerTag(t0, t1, t2) {
      this.intValue = t0;
      this.index = t1;
      this._core$_name = t2;
    },
    RedeemerTag_RedeemerTag$fromInt_closure: function RedeemerTag_RedeemerTag$fromInt_closure(t0) {
      this.value = t0;
    },
    _$Redeemer: function _$Redeemer() {
    },
    Redeemer_PreConway: function Redeemer_PreConway(t0, t1, t2, t3) {
      var _ = this;
      _.redeemerTag = t0;
      _.index = t1;
      _.plutusData = t2;
      _.exUnits = t3;
    },
    Redeemer_Conway: function Redeemer_Conway(t0, t1, t2, t3) {
      var _ = this;
      _.redeemerTag = t0;
      _.index = t1;
      _.plutusData = t2;
      _.exUnits = t3;
    },
    _Redeemer_Object__$Redeemer: function _Redeemer_Object__$Redeemer() {
    },
    PlutusScriptV2___deserialize_tearOff(cborValue) {
      type$.CborValue._as(cborValue);
      if (!type$.CborBytes._is(cborValue))
        A.throwExpression(new A.WitnessPlutusScriptV2ParseException("cborValue is " + A.getRuntimeTypeOfDartObject(cborValue).toString$0(0)));
      return new A._PlutusScriptV2(new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(cborValue.get$bytes(), false))));
    },
    PlutusScriptV2: function PlutusScriptV2() {
    },
    _$PlutusScriptV2: function _$PlutusScriptV2() {
    },
    _PlutusScriptV2: function _PlutusScriptV2(t0) {
      this.bytes = t0;
    },
    _PlutusScriptV2_Script__$PlutusScriptV2: function _PlutusScriptV2_Script__$PlutusScriptV2() {
    },
    PlutusScriptV3___deserialize_tearOff(cborValue) {
      type$.CborValue._as(cborValue);
      if (!type$.CborBytes._is(cborValue))
        A.throwExpression(new A.WitnessPlutusScriptV3ParseException("cborValue is " + A.getRuntimeTypeOfDartObject(cborValue).toString$0(0)));
      return new A._PlutusScriptV3(new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(cborValue.get$bytes(), false))));
    },
    PlutusScriptV3: function PlutusScriptV3() {
    },
    _$PlutusScriptV3: function _$PlutusScriptV3() {
    },
    _PlutusScriptV3: function _PlutusScriptV3(t0) {
      this.bytes = t0;
    },
    _PlutusScriptV3_Script__$PlutusScriptV3: function _PlutusScriptV3_Script__$PlutusScriptV3() {
    },
    Script: function Script() {
    },
    WitnessSet_WitnessSet$deserialize(cMap) {
      var nativeScripts, bootstrap, plutusScriptV1, plutusData, cRedeemer, t4, plutusScriptV2, plutusScriptV3, _null = null,
        t1 = cMap._base,
        t2 = type$.nullable_CborList,
        t3 = t2._as(t1.$index(0, new A._CborSmallIntImpl(0, B.List_empty))),
        vkeyWitnesses = t3 == null ? _null : new A.WitnessSet_WitnessSet$deserialize_closure().call$1(t3);
      t3 = t2._as(t1.$index(0, new A._CborSmallIntImpl(1, B.List_empty)));
      nativeScripts = t3 == null ? _null : new A.WitnessSet_WitnessSet$deserialize_closure0().call$1(t3);
      t3 = t2._as(t1.$index(0, new A._CborSmallIntImpl(2, B.List_empty)));
      bootstrap = t3 == null ? _null : new A.WitnessSet_WitnessSet$deserialize_closure1().call$1(t3);
      t3 = t2._as(t1.$index(0, new A._CborSmallIntImpl(3, B.List_empty)));
      plutusScriptV1 = t3 == null ? _null : new A.WitnessSet_WitnessSet$deserialize_closure2().call$1(t3);
      t3 = t2._as(t1.$index(0, new A._CborSmallIntImpl(4, B.List_empty)));
      plutusData = t3 == null ? _null : new A.WitnessSet_WitnessSet$deserialize_closure3().call$1(t3);
      cRedeemer = t1.$index(0, B._CborSmallIntImpl_5_List_empty);
      $label0$0: {
        if (type$.CborList._is(cRedeemer)) {
          A._instanceType(cRedeemer)._eval$1("Redeemer(_DelegatingIterableBase.E)")._as(A.redeemer_Redeemer___deserializePreConway_tearOff$closure());
          t3 = new A._ListWithCborType(new A.UnmodifiableListView(B.JSArray_methods.map$1$1(cRedeemer._base, A.redeemer_Redeemer___deserializePreConway_tearOff$closure(), type$.Redeemer), type$.UnmodifiableListView_Redeemer), cRedeemer.get$type(), cRedeemer.get$tags(), type$._ListWithCborType_Redeemer);
          break $label0$0;
        }
        if (cRedeemer instanceof A._CborMapImpl) {
          t3 = new A._ListWithCborType(new A.UnmodifiableListView(cRedeemer._base.get$entries().map$1$1(0, new A.WitnessSet_WitnessSet$deserialize_closure4(), type$.Redeemer), type$.UnmodifiableListView_Redeemer), cRedeemer.type, cRedeemer.tags, type$._ListWithCborType_Redeemer);
          break $label0$0;
        }
        if (cRedeemer == null) {
          t3 = _null;
          break $label0$0;
        }
        t3 = A.throwExpression(A.CborMalformedException$("cborValue is " + A.getRuntimeTypeOfDartObject(cRedeemer).toString$0(0), _null));
      }
      t4 = t2._as(t1.$index(0, new A._CborSmallIntImpl(6, B.List_empty)));
      plutusScriptV2 = t4 == null ? _null : new A.WitnessSet_WitnessSet$deserialize_closure5().call$1(t4);
      t1 = t2._as(t1.$index(0, new A._CborSmallIntImpl(7, B.List_empty)));
      plutusScriptV3 = t1 == null ? _null : new A.WitnessSet_WitnessSet$deserialize_closure6().call$1(t1);
      return new A._WitnessSet(vkeyWitnesses, nativeScripts, bootstrap, plutusScriptV1, plutusData, t3, plutusScriptV2, plutusScriptV3, cMap.tags);
    },
    ListWithCborType: function ListWithCborType() {
    },
    WitnessSet: function WitnessSet() {
    },
    WitnessSet_WitnessSet$deserialize_closure: function WitnessSet_WitnessSet$deserialize_closure() {
    },
    WitnessSet_WitnessSet$deserialize__closure0: function WitnessSet_WitnessSet$deserialize__closure0() {
    },
    WitnessSet_WitnessSet$deserialize_closure0: function WitnessSet_WitnessSet$deserialize_closure0() {
    },
    WitnessSet_WitnessSet$deserialize__closure: function WitnessSet_WitnessSet$deserialize__closure() {
    },
    WitnessSet_WitnessSet$deserialize_closure1: function WitnessSet_WitnessSet$deserialize_closure1() {
    },
    WitnessSet_WitnessSet$deserialize_closure2: function WitnessSet_WitnessSet$deserialize_closure2() {
    },
    WitnessSet_WitnessSet$deserialize_closure3: function WitnessSet_WitnessSet$deserialize_closure3() {
    },
    WitnessSet_WitnessSet$deserialize_closure4: function WitnessSet_WitnessSet$deserialize_closure4() {
    },
    WitnessSet_WitnessSet$deserialize_closure5: function WitnessSet_WitnessSet$deserialize_closure5() {
    },
    WitnessSet_WitnessSet$deserialize_closure6: function WitnessSet_WitnessSet$deserialize_closure6() {
    },
    WitnessSet_serialize_closure: function WitnessSet_serialize_closure(t0) {
      this.forJson = t0;
    },
    WitnessSet_serialize__closure7: function WitnessSet_serialize__closure7(t0) {
      this.forJson = t0;
    },
    WitnessSet_serialize_closure0: function WitnessSet_serialize_closure0(t0) {
      this.forJson = t0;
    },
    WitnessSet_serialize__closure6: function WitnessSet_serialize__closure6(t0) {
      this.forJson = t0;
    },
    WitnessSet_serialize_closure1: function WitnessSet_serialize_closure1(t0) {
      this.forJson = t0;
    },
    WitnessSet_serialize__closure5: function WitnessSet_serialize__closure5(t0) {
      this.forJson = t0;
    },
    WitnessSet_serialize_closure2: function WitnessSet_serialize_closure2(t0) {
      this.forJson = t0;
    },
    WitnessSet_serialize__closure4: function WitnessSet_serialize__closure4(t0) {
      this.forJson = t0;
    },
    WitnessSet_serialize_closure3: function WitnessSet_serialize_closure3(t0) {
      this.forJson = t0;
    },
    WitnessSet_serialize__closure3: function WitnessSet_serialize__closure3(t0) {
      this.forJson = t0;
    },
    WitnessSet_serialize_closure4: function WitnessSet_serialize_closure4(t0) {
      this.forJson = t0;
    },
    WitnessSet_serialize__closure1: function WitnessSet_serialize__closure1(t0) {
      this.forJson = t0;
    },
    WitnessSet_serialize__closure2: function WitnessSet_serialize__closure2(t0) {
      this.forJson = t0;
    },
    WitnessSet_serialize_closure5: function WitnessSet_serialize_closure5(t0) {
      this.forJson = t0;
    },
    WitnessSet_serialize__closure0: function WitnessSet_serialize__closure0(t0) {
      this.forJson = t0;
    },
    WitnessSet_serialize_closure6: function WitnessSet_serialize_closure6(t0) {
      this.forJson = t0;
    },
    WitnessSet_serialize__closure: function WitnessSet_serialize__closure(t0) {
      this.forJson = t0;
    },
    _$ListWithCborType: function _$ListWithCborType() {
    },
    _ListWithCborType: function _ListWithCborType(t0, t1, t2, t3) {
      var _ = this;
      _._items = t0;
      _.cborLengthType = t1;
      _._tags = t2;
      _.$ti = t3;
    },
    _$WitnessSet: function _$WitnessSet() {
    },
    _WitnessSet: function _WitnessSet(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.ivkeyWitnesses = t0;
      _.inativeScripts = t1;
      _.ibootstrap = t2;
      _.iplutusScriptV1 = t3;
      _.iplutusData = t4;
      _.iredeemer = t5;
      _.iplutusScriptV2 = t6;
      _.iplutusScriptV3 = t7;
      _._iCborTags = t8;
    },
    _ListWithCborType_Object__$ListWithCborType: function _ListWithCborType_Object__$ListWithCborType() {
    },
    _WitnessSet_Object__$WitnessSet: function _WitnessSet_Object__$WitnessSet() {
    },
    CBORMetadata: function CBORMetadata() {
    },
    _$CBORMetadata: function _$CBORMetadata() {
    },
    _CBORMetadata: function _CBORMetadata(t0) {
      this.value = t0;
    },
    _CBORMetadata_Object__$CBORMetadata: function _CBORMetadata_Object__$CBORMetadata() {
    },
    Anchor_Anchor$deserialize(value) {
      var t1, t2;
      if (!type$.CborList._is(value))
        throw A.wrapException(A.CborDeserializationException$("Anchor deserialization failed. Expected a cbor list but got " + A.getRuntimeTypeOfDartObject(value).toString$0(0)));
      t1 = value._base;
      if (t1.length < 2)
        throw A.wrapException(A.CborDeserializationException$("Anchor deserialization failed. Invalid number of DataItem(s) : " + value.get$length(0)));
      t2 = type$.CborString._as(t1[0]).toString$0(0);
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      return new A._Anchor(t2, new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(type$.CborBytes._as(t1[1]).get$bytes(), false))), value.get$type());
    },
    Anchor: function Anchor() {
    },
    Anchor_metadataHashHex_closure: function Anchor_metadataHashHex_closure(t0) {
      this.$this = t0;
    },
    _$Anchor: function _$Anchor() {
    },
    _Anchor: function _Anchor(t0, t1, t2) {
      var _ = this;
      _.anchorUrl = t0;
      _.anchorDataHash = t1;
      _.cborLengthType = t2;
      _.__Anchor_metadataHashHex_FI = $;
    },
    _Anchor_Object__$Anchor: function _Anchor_Object__$Anchor() {
    },
    Value_Value$deserialize(cValue) {
      var t2, t3, multiAssets,
        t1 = type$.CborInt;
      if (t1._is(cValue))
        return new A.Value_v0(cValue.toBigInt$0());
      if (!type$.CborList._is(cValue))
        throw A.wrapException(A.CardanoValueParseException$("cValue is " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      t2 = cValue._base;
      t3 = t2.length;
      if (t3 !== 2)
        throw A.wrapException(A.CardanoValueParseException$("cValue list has length != 2 : " + cValue.get$length(0)));
      if (1 >= t3)
        return A.ioore(t2, 1);
      multiAssets = type$.CborMap._as(t2[1])._base.get$entries().map$1$1(0, new A.Value_Value$deserialize_closure(), type$.MultiAsset).toList$0(0);
      if (0 >= t2.length)
        return A.ioore(t2, 0);
      t1 = t1._as(t2[0]).toBigInt$0();
      return new A.Value_v1(t1, multiAssets);
    },
    MultiAsset_MultiAsset$deserialize(cMapEntry) {
      var t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(type$.CborBytes._as(cMapEntry.key).get$bytes(), false))), false)),
        policyId = B.C_HexCodec.get$encoder().convert$1(t1),
        assets = A._setArrayType([], type$.JSArray_Asset);
      t1 = type$.CborMap._as(cMapEntry.value);
      t1._base.forEach$1(0, A._instanceType(t1)._eval$1("~(DelegatingMap.K,DelegatingMap.V)")._as(new A.MultiAsset_MultiAsset$deserialize_closure(assets)));
      return new A._MultiAsset(policyId, assets);
    },
    MultiAssetIterableX_serialize(_this, forJson) {
      var t1 = type$.CborValue;
      return new A._CborMapImpl(B.List_empty, B.CborLengthType_2, A.Map_Map$fromEntries(J.map$1$1$ax(_this, new A.MultiAssetIterableX_serialize_closure(false), type$.MapEntry_CborValue_CborValue), t1, t1));
    },
    MultiAssetListOperations_merge(_this, other, op) {
      var _i, thisMa, otherMaIndex, otherMa, mergedPolicyAssets,
        t1 = type$.MultiAsset,
        thisMultiAssets = A.List_List$_of(_this, t1),
        otherMultiAssets = A.List_List$_of(other, t1),
        mergedMultiAssets = A._setArrayType([], type$.JSArray_MultiAsset);
      for (t1 = thisMultiAssets.length, _i = 0; _i < thisMultiAssets.length; thisMultiAssets.length === t1 || (0, A.throwConcurrentModificationError)(thisMultiAssets), ++_i) {
        thisMa = thisMultiAssets[_i];
        otherMaIndex = B.JSArray_methods.indexWhere$1(otherMultiAssets, new A.MultiAssetListOperations_merge_closure(thisMa));
        if (otherMaIndex === -1)
          B.JSArray_methods.add$1(mergedMultiAssets, thisMa);
        else {
          otherMa = B.JSArray_methods.removeAt$1(otherMultiAssets, otherMaIndex);
          mergedPolicyAssets = A.AssetListOperations_merge(thisMa.get$assets(), otherMa.get$assets(), op);
          if (mergedPolicyAssets.length !== 0)
            B.JSArray_methods.add$1(mergedMultiAssets, new A._MultiAsset(thisMa.policyId, mergedPolicyAssets));
        }
      }
      if (op === B.Operation_0)
        B.JSArray_methods.addAll$1(mergedMultiAssets, otherMultiAssets);
      else {
        t1 = A._arrayInstanceType(otherMultiAssets);
        B.JSArray_methods.addAll$1(mergedMultiAssets, new A.MappedListIterable(otherMultiAssets, t1._eval$1("MultiAsset(1)")._as(new A.MultiAssetListOperations_merge_closure0()), t1._eval$1("MappedListIterable<1,MultiAsset>")));
      }
      return mergedMultiAssets;
    },
    AssetListOperations_merge(_this, other, op) {
      var t2, _i, thisAsset, otherAssetIndex, t3, t4, mergedAmount,
        t1 = type$.Asset,
        thisPolicyAssets = A.List_List$_of(_this, t1),
        otherPolicyAssets = A.List_List$_of(other, t1),
        mergedPolicyAssets = A._setArrayType([], type$.JSArray_Asset);
      for (t1 = thisPolicyAssets.length, t2 = op === B.Operation_0, _i = 0; _i < thisPolicyAssets.length; thisPolicyAssets.length === t1 || (0, A.throwConcurrentModificationError)(thisPolicyAssets), ++_i) {
        thisAsset = thisPolicyAssets[_i];
        otherAssetIndex = B.JSArray_methods.indexWhere$1(otherPolicyAssets, new A.AssetListOperations_merge_closure(thisAsset));
        if (otherAssetIndex === -1)
          B.JSArray_methods.add$1(mergedPolicyAssets, thisAsset);
        else {
          t3 = thisAsset.value;
          t4 = B.JSArray_methods.removeAt$1(otherPolicyAssets, otherAssetIndex).value;
          mergedAmount = t2 ? t3.$add(0, t4) : t3.$sub(0, t4);
          t3 = mergedAmount.compareTo$1(0, $.$get$_BigIntImpl_zero());
          if (t3 !== 0)
            B.JSArray_methods.add$1(mergedPolicyAssets, new A._Asset(thisAsset.hexName, mergedAmount));
        }
      }
      if (t2)
        B.JSArray_methods.addAll$1(mergedPolicyAssets, otherPolicyAssets);
      else {
        t1 = A._arrayInstanceType(otherPolicyAssets);
        B.JSArray_methods.addAll$1(mergedPolicyAssets, new A.MappedListIterable(otherPolicyAssets, t1._eval$1("Asset(1)")._as(new A.AssetListOperations_merge_closure0()), t1._eval$1("MappedListIterable<1,Asset>")));
      }
      return mergedPolicyAssets;
    },
    _$identity(value, $T) {
      return $T._as(value);
    },
    Value: function Value() {
    },
    Value_serialize_closure: function Value_serialize_closure(t0) {
      this.forJson = t0;
    },
    Value_Value$deserialize_closure: function Value_Value$deserialize_closure() {
    },
    MultiAsset: function MultiAsset() {
    },
    MultiAsset_MultiAsset$deserialize_closure: function MultiAsset_MultiAsset$deserialize_closure(t0) {
      this.assets = t0;
    },
    MultiAsset_serialize_closure: function MultiAsset_serialize_closure(t0) {
      this.forJson = t0;
    },
    MultiAssetIterableX_serialize_closure: function MultiAssetIterableX_serialize_closure(t0) {
      this.forJson = t0;
    },
    Asset: function Asset() {
    },
    Operation: function Operation(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    MultiAssetListOperations_merge_closure: function MultiAssetListOperations_merge_closure(t0) {
      this.thisMa = t0;
    },
    MultiAssetListOperations_merge_closure0: function MultiAssetListOperations_merge_closure0() {
    },
    MultiAssetListOperations_merge__closure: function MultiAssetListOperations_merge__closure() {
    },
    AssetListOperations_merge_closure: function AssetListOperations_merge_closure(t0) {
      this.thisAsset = t0;
    },
    AssetListOperations_merge_closure0: function AssetListOperations_merge_closure0() {
    },
    _$Value: function _$Value() {
    },
    Value_v0: function Value_v0(t0) {
      this.lovelace = t0;
    },
    Value_v1: function Value_v1(t0, t1) {
      this.lovelace = t0;
      this._mA = t1;
    },
    _$MultiAsset: function _$MultiAsset() {
    },
    _MultiAsset: function _MultiAsset(t0, t1) {
      this.policyId = t0;
      this._assets = t1;
    },
    __$MultiAssetCopyWithImpl: function __$MultiAssetCopyWithImpl(t0, t1, t2) {
      this._self = t0;
      this._then = t1;
      this.$ti = t2;
    },
    _$Asset: function _$Asset() {
    },
    _Asset: function _Asset(t0, t1) {
      this.hexName = t0;
      this.value = t1;
    },
    __$AssetCopyWithImpl: function __$AssetCopyWithImpl(t0, t1, t2) {
      this._self = t0;
      this._then = t1;
      this.$ti = t2;
    },
    _Asset_Object__$Asset: function _Asset_Object__$Asset() {
    },
    _MultiAsset_Object__$MultiAsset: function _MultiAsset_Object__$MultiAsset() {
    },
    _Value_Object__$Value: function _Value_Object__$Value() {
    },
    Drep_Drep$deserialize(value) {
      var t1, _0_0;
      if (!type$.CborList._is(value))
        throw A.wrapException(A.CborDeserializationException$("Drep deserialization failed. Expected a cbor list but got " + A.getRuntimeTypeOfDartObject(value).toString$0(0)));
      t1 = value._base;
      if (0 >= t1.length)
        return A.ioore(t1, 0);
      _0_0 = type$.CborInt._as(t1[0]).toInt$0(0);
      $label0$0: {
        if (0 === _0_0) {
          if (1 >= t1.length)
            return A.ioore(t1, 1);
          t1 = type$.HexCodec._eval$1("Codec.S")._as(J.toList$1$growable$ax(type$.CborBytes._as(t1[1]).get$bytes(), false));
          t1 = new A.Drep_AddrKeyHash(B.C_HexCodec.get$encoder().convert$1(t1), value.get$type());
          break $label0$0;
        }
        if (1 === _0_0) {
          if (1 >= t1.length)
            return A.ioore(t1, 1);
          t1 = type$.HexCodec._eval$1("Codec.S")._as(J.toList$1$growable$ax(type$.CborBytes._as(t1[1]).get$bytes(), false));
          t1 = new A.Drep_ScriptHash(B.C_HexCodec.get$encoder().convert$1(t1), value.get$type());
          break $label0$0;
        }
        if (2 === _0_0) {
          t1 = new A.Drep_Abstain(value.get$type());
          break $label0$0;
        }
        if (3 === _0_0) {
          t1 = new A.Drep_NoConfidence(value.get$type());
          break $label0$0;
        }
        t1 = A.throwExpression(A.Exception_Exception("Invalid Drep type"));
      }
      return t1;
    },
    Drep: function Drep() {
    },
    _$Drep: function _$Drep() {
    },
    Drep_AddrKeyHash: function Drep_AddrKeyHash(t0, t1) {
      this.hash = t0;
      this.lengthType = t1;
      this.__Drep_type_FI = $;
    },
    Drep_ScriptHash: function Drep_ScriptHash(t0, t1) {
      this.hash = t0;
      this.lengthType = t1;
      this.__Drep_type_FI = $;
    },
    Drep_Abstain: function Drep_Abstain(t0) {
      this.lengthType = t0;
      this.__Drep_type_FI = $;
    },
    Drep_NoConfidence: function Drep_NoConfidence(t0) {
      this.lengthType = t0;
      this.__Drep_type_FI = $;
    },
    _Drep_Object__$Drep: function _Drep_Object__$Drep() {
    },
    Nonce___deserialize_tearOff(cValue) {
      return A.Nonce_Nonce$deserialize(type$.CborValue._as(cValue));
    },
    Nonce_Nonce$deserialize(cValue) {
      var t1, i, _0_0;
      if (!type$.CborList._is(cValue))
        throw A.wrapException(A.CborDeserializationException$("Nonce deserialization failed. Expected a cbor list but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      t1 = cValue._base;
      if (t1.length > 2)
        throw A.wrapException(A.CborDeserializationException$("Nonce deserialization failed. Expected a cbor list with length <= 2 but got " + cValue.get$length(0)));
      i = t1[0];
      if (!type$.CborInt._is(i))
        throw A.wrapException(A.CborDeserializationException$("Nonce deserialization failed. Expected cValue[0] to be cbor int but got " + A.getRuntimeTypeOfDartObject(i).toString$0(0)));
      _0_0 = i.toInt$0(0);
      $label0$0: {
        if (0 === _0_0) {
          t1 = B._Nonce_null;
          break $label0$0;
        }
        if (1 === _0_0) {
          if (1 >= t1.length)
            return A.ioore(t1, 1);
          t1 = new A._Nonce(new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(type$.CborBytes._as(t1[1]).get$bytes(), false))));
          break $label0$0;
        }
        t1 = A.throwExpression(A.CborDeserializationException$("Nonce deserialization failed. Invalid Nonce type " + i.toInt$0(0)));
      }
      return t1;
    },
    Nonce: function Nonce() {
    },
    _$Nonce: function _$Nonce() {
    },
    _Nonce: function _Nonce(t0) {
      this.nonceHash = t0;
    },
    _Nonce_Object__$Nonce: function _Nonce_Object__$Nonce() {
    },
    RationalNumber___deserialize_tearOff(cValue) {
      return A.RationalNumber_RationalNumber$deserialize(type$.CborValue._as(cValue));
    },
    RationalNumber_RationalNumber$deserialize(cValue) {
      var t1, t2, t3;
      if (type$.CborList._is(cValue)) {
        t1 = cValue._base;
        t2 = t1.length;
        if (t2 !== 2)
          throw A.wrapException(A.Exception_Exception("RationalNumber deserialization failed. Expected a rational number / cbor list of length 2 but got " + cValue.get$length(0)));
        if (0 >= t2)
          return A.ioore(t1, 0);
        t2 = type$.CborInt;
        t3 = t2._as(t1[0]).toBigInt$0();
        if (1 >= t1.length)
          return A.ioore(t1, 1);
        return new A._RationalNumber(t3, t2._as(t1[1]).toBigInt$0());
      }
      if (!(cValue instanceof A._CborRationalNumberImpl))
        throw A.wrapException(A.Exception_Exception("RationalNumber deserialization failed. Expected a cbor rational number but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return new A._RationalNumber(cValue.numerator.toBigInt$0(), cValue.denominator.toBigInt$0());
    },
    RationalNumber: function RationalNumber() {
    },
    _$RationalNumber: function _$RationalNumber() {
    },
    _RationalNumber: function _RationalNumber(t0, t1) {
      this.numerator = t0;
      this.denominator = t1;
    },
    _RationalNumber_Object__$RationalNumber: function _RationalNumber_Object__$RationalNumber() {
    },
    Utxo___deserializeBytes_tearOff(bytes) {
      return A.Utxo_Utxo$deserialize(B.C_CborDecoder.convert$1(type$.CborCodec._eval$1("Codec.T")._as(type$.Uint8List._as(bytes))));
    },
    Utxo_Utxo$deserialize(cborValue) {
      var t2, t3, utxoInfo, utxoContent,
        t1 = type$.CborList;
      if (t1._is(cborValue)) {
        t2 = cborValue._base;
        t3 = t2.length;
        if (t3 !== 2)
          throw A.wrapException(A.CborDeserializationException$("Utxo deserialization failed. Invalid cbor length " + cborValue.get$length(0)));
        if (0 >= t3)
          return A.ioore(t2, 0);
        utxoInfo = t1._as(t2[0]);
        if (1 >= t3)
          return A.ioore(t2, 1);
        utxoContent = t2[1];
        return new A._Utxo(A.CardanoTransactionInput_CardanoTransactionInput$deserialize(utxoInfo), A.CardanoTransactionOutput_CardanoTransactionOutput$deserialize(utxoContent));
      } else
        throw A.wrapException(A.CborDeserializationException$("Utxo deserialization failed. Invalid cbor type " + A.getRuntimeTypeOfDartObject(cborValue).toString$0(0)));
    },
    Utxo: function Utxo() {
    },
    _$Utxo: function _$Utxo() {
    },
    _Utxo: function _Utxo(t0, t1) {
      this.identifier = t0;
      this.content = t1;
    },
    _Utxo_Object__$Utxo: function _Utxo_Object__$Utxo() {
    },
    CardanoTransaction___deserializeBytes_tearOff(transactionBytes) {
      return A.CardanoTransaction_CardanoTransaction$deserializeBytes(type$.Uint8List._as(transactionBytes));
    },
    CardanoTransaction_CardanoTransaction$deserializeBytes(transactionBytes) {
      var tx, cIsValidDi, cAuxData, body, witnessSet,
        t1 = type$.CborList,
        list = t1._as(B.C_CborDecoder.convert$1(type$.CborCodec._eval$1("Codec.T")._as(transactionBytes))),
        t2 = list._base,
        t3 = t2.length;
      if (t3 === 1) {
        if (0 >= t3)
          return A.ioore(t2, 0);
        tx = t1._as(t2[0]);
      } else
        tx = list;
      t1 = tx._base;
      t2 = t1.length;
      if (2 >= t2)
        return A.ioore(t1, 2);
      cIsValidDi = type$.CborSimpleValue._as(t1[2]);
      t3 = cIsValidDi instanceof A._CborNullImpl;
      if (t2 < (t3 ? 2 : 3))
        throw A.wrapException(A.CborDeserializationException$("minTxLen too small: " + tx.get$length(0)));
      if (t3)
        cAuxData = B._CborNullImpl_22_List_empty;
      else {
        if (3 >= t2)
          return A.ioore(t1, 3);
        cAuxData = t1[3];
      }
      t2 = type$.CborMap;
      t3 = t2._as(t1[0]);
      t1 = t2._as(t1[1]);
      t2 = cIsValidDi instanceof A._CborBoolImpl ? cIsValidDi : B._CborBoolImpl_true_21_List_empty;
      body = A.CardanoTransactionBody_CardanoTransactionBody$deserialize(t3);
      witnessSet = A.WitnessSet_WitnessSet$deserialize(t1);
      return new A._CardanoTransaction(body, witnessSet, t2.value, new A._CBORMetadata(cAuxData));
    },
    _Uint8ListX_deepEquals(_this, other) {
      var t1, t2, i, t3;
      if (other == null)
        return false;
      B.ListEquality_DefaultEquality.equals$2(_this, other);
      t1 = _this.length;
      t2 = other.length;
      if (t1 !== t2)
        return false;
      for (i = 0; i < t1; ++i) {
        t3 = _this[i];
        if (!(i < t2))
          return A.ioore(other, i);
        if (t3 !== other[i])
          return false;
      }
      return true;
    },
    CardanoTransaction: function CardanoTransaction() {
    },
    CardanoTransaction_diff_closure: function CardanoTransaction_diff_closure(t0) {
      this.stakeBech32Address = t0;
    },
    CardanoTransaction_diff_closure0: function CardanoTransaction_diff_closure0() {
    },
    CardanoTransaction_diff_closure1: function CardanoTransaction_diff_closure1(t0) {
      this.receiveAddress = t0;
    },
    CardanoTransaction_diff_closure2: function CardanoTransaction_diff_closure2() {
    },
    CardanoTransaction_diff_closure3: function CardanoTransaction_diff_closure3() {
    },
    CardanoTransaction_diff_closure4: function CardanoTransaction_diff_closure4() {
    },
    CardanoTransaction_diff_closure5: function CardanoTransaction_diff_closure5(t0) {
      this.utxoByHashAndId = t0;
    },
    CardanoTransaction_diff_closure6: function CardanoTransaction_diff_closure6() {
    },
    CardanoTransaction_diff_closure7: function CardanoTransaction_diff_closure7(t0, t1) {
      this.drepCredentialBytes = t0;
      this.constitutionalCommitteeHotCredentialBytes = t1;
    },
    CardanoTransaction_diff__closure: function CardanoTransaction_diff__closure() {
    },
    CardanoTransaction_diff_closure8: function CardanoTransaction_diff_closure8(t0) {
      this.stakeCredentialsBytes = t0;
    },
    CardanoTransaction_diff_closure9: function CardanoTransaction_diff_closure9(t0) {
      this.constitutionalCommitteeColdCredentialBytes = t0;
    },
    CardanoTransaction_diff_closure10: function CardanoTransaction_diff_closure10(t0) {
      this.constitutionalCommitteeColdCredentialBytes = t0;
    },
    CardanoTransaction_diff_closure11: function CardanoTransaction_diff_closure11(t0) {
      this.stakeCredentialsBytes = t0;
    },
    CardanoTransaction_diff_closure12: function CardanoTransaction_diff_closure12(t0) {
      this.drepCredentialBytes = t0;
    },
    CardanoTransaction_diff_closure13: function CardanoTransaction_diff_closure13(t0) {
      this.drepCredentialBytes = t0;
    },
    CardanoTransaction_diff_closure14: function CardanoTransaction_diff_closure14(t0) {
      this.drepCredentialBytes = t0;
    },
    CardanoTransaction_diff_closure15: function CardanoTransaction_diff_closure15(t0) {
      this.stakeCredentialsBytes = t0;
    },
    CardanoTransaction_diff_closure16: function CardanoTransaction_diff_closure16(t0) {
      this.bodyHash = t0;
    },
    _$CardanoTransaction: function _$CardanoTransaction() {
    },
    _CardanoTransaction: function _CardanoTransaction(t0, t1, t2, t3) {
      var _ = this;
      _.body = t0;
      _.witnessSet = t1;
      _.isValidDi = t2;
      _.auxiliaryData = t3;
    },
    _CardanoTransaction_Object__$CardanoTransaction: function _CardanoTransaction_Object__$CardanoTransaction() {
    },
    _CoseHeaderMap$(algorithmId, hashed, keyId, otherHeaders) {
      return new A._CoseHeaderMap(algorithmId, keyId, hashed, otherHeaders);
    },
    CoseHeaderMap: function CoseHeaderMap() {
    },
    CoseHeaderMap_serialize_closure: function CoseHeaderMap_serialize_closure(t0) {
      this.forJson = t0;
    },
    CoseHeaderMap_serialize_closure0: function CoseHeaderMap_serialize_closure0(t0) {
      this.forJson = t0;
    },
    CoseHeaderMap_serialize_closure1: function CoseHeaderMap_serialize_closure1(t0) {
      this.forJson = t0;
    },
    CoseHeaderMap_serialize__closure: function CoseHeaderMap_serialize__closure(t0) {
      this.forJson = t0;
    },
    CoseHeaderMap_serialize_closure2: function CoseHeaderMap_serialize_closure2() {
    },
    _$CoseHeaderMap: function _$CoseHeaderMap() {
    },
    _CoseHeaderMap: function _CoseHeaderMap(t0, t1, t2, t3) {
      var _ = this;
      _.algorithmId = t0;
      _.keyId = t1;
      _.hashed = t2;
      _.otherHeaders = t3;
    },
    _CoseHeaderMap_Object__$CoseHeaderMap: function _CoseHeaderMap_Object__$CoseHeaderMap() {
    },
    CoseHeaders: function CoseHeaders() {
    },
    _$CoseHeaders: function _$CoseHeaders() {
    },
    _CoseHeaders: function _CoseHeaders(t0, t1) {
      this.protectedHeader = t0;
      this.unprotectedHeader = t1;
    },
    _CoseHeaders_Object__$CoseHeaders: function _CoseHeaders_Object__$CoseHeaders() {
    },
    CoseKey: function CoseKey() {
    },
    _$CoseKey: function _$CoseKey() {
    },
    _CoseKey: function _CoseKey(t0) {
      this.keyId = t0;
    },
    _CoseKey_Object__$CoseKey: function _CoseKey_Object__$CoseKey() {
    },
    CoseProtectedHeaderMap: function CoseProtectedHeaderMap() {
    },
    _$CoseProtectedHeaderMap: function _$CoseProtectedHeaderMap() {
    },
    _CoseProtectedHeaderMap: function _CoseProtectedHeaderMap(t0) {
      this.bytes = t0;
    },
    _CoseProtectedHeaderMap_Object__$CoseProtectedHeaderMap: function _CoseProtectedHeaderMap_Object__$CoseProtectedHeaderMap() {
    },
    CoseSigStructure: function CoseSigStructure() {
    },
    SigContext: function SigContext(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _$CoseSigStructure: function _$CoseSigStructure() {
    },
    _CoseSigStructure: function _CoseSigStructure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.bodyProtected = t0;
      _.signProtected = t1;
      _.sigContext = t2;
      _.payload = t3;
      _.externalAad = t4;
    },
    _CoseSigStructure_Object__$CoseSigStructure: function _CoseSigStructure_Object__$CoseSigStructure() {
    },
    CoseSign1: function CoseSign1() {
    },
    _$CoseSign1: function _$CoseSign1() {
    },
    _CoseSign1: function _CoseSign1(t0, t1, t2) {
      this.headers = t0;
      this.payload = t1;
      this.signature = t2;
    },
    _CoseSign1_Object__$CoseSign1: function _CoseSign1_Object__$CoseSign1() {
    },
    DataSignature: function DataSignature() {
    },
    _$DataSignature: function _$DataSignature() {
    },
    _DataSignature: function _DataSignature(t0, t1) {
      this.coseKeyHex = t0;
      this.coseSignHex = t1;
    },
    _DataSignature_Object__$DataSignature: function _DataSignature_Object__$DataSignature() {
    },
    CardanoValueParseException$(message) {
      return new A.CardanoValueParseException(message);
    },
    TransactionOutputParseException$(message) {
      return new A.TransactionOutputParseException(message);
    },
    TransactionBodyParseException$(message) {
      return new A.TransactionBodyParseException(message);
    },
    WitnessBootstrapParseException$(message) {
      return new A.WitnessBootstrapParseException(message);
    },
    PlutusDataParseException$(message) {
      return new A.PlutusDataParseException(message);
    },
    ExUnitsParseException$(message) {
      return new A.ExUnitsParseException(message);
    },
    RedeemerParseException$(message) {
      return new A.RedeemerParseException(message);
    },
    CardanoValueParseException: function CardanoValueParseException(t0) {
      this.message = t0;
    },
    TransactionOutputParseException: function TransactionOutputParseException(t0) {
      this.message = t0;
    },
    TransactionBodyParseException: function TransactionBodyParseException(t0) {
      this.message = t0;
    },
    WitnessBootstrapParseException: function WitnessBootstrapParseException(t0) {
      this.message = t0;
    },
    WitnessPlutusScriptV1ParseException: function WitnessPlutusScriptV1ParseException(t0) {
      this.message = t0;
    },
    WitnessPlutusScriptV2ParseException: function WitnessPlutusScriptV2ParseException(t0) {
      this.message = t0;
    },
    WitnessPlutusScriptV3ParseException: function WitnessPlutusScriptV3ParseException(t0) {
      this.message = t0;
    },
    PlutusDataParseException: function PlutusDataParseException(t0) {
      this.message = t0;
    },
    ExUnitsParseException: function ExUnitsParseException(t0) {
      this.message = t0;
    },
    RedeemerParseException: function RedeemerParseException(t0) {
      this.message = t0;
    },
    NativeScriptParseException: function NativeScriptParseException(t0) {
      this.message = t0;
    },
    TransactionParseException: function TransactionParseException() {
    },
    WitnessParseException: function WitnessParseException() {
    },
    SigningAddressNotFoundException$(missingAddresses, searchedAddressesCount) {
      return new A.SigningAddressNotFoundException(missingAddresses, searchedAddressesCount);
    },
    UnexpectedSigningAddressTypeException$(hexAddress, signingContext, type) {
      return new A.UnexpectedSigningAddressTypeException(hexAddress, type, signingContext);
    },
    SigningAddressNotValidException$(hexInvalidAddressOrCredential, signingContext) {
      return new A.SigningAddressNotValidException(hexInvalidAddressOrCredential, signingContext);
    },
    SigningAddressNotFoundException: function SigningAddressNotFoundException(t0, t1) {
      this.missingAddresses = t0;
      this.searchedAddressesCount = t1;
    },
    UnexpectedSigningAddressTypeException: function UnexpectedSigningAddressTypeException(t0, t1, t2) {
      this.hexAddress = t0;
      this.type = t1;
      this.signingContext = t2;
    },
    SigningAddressNotValidException: function SigningAddressNotValidException(t0, t1) {
      this.hexInvalidAddressOrCredential = t0;
      this.signingContext = t1;
    },
    NetworkId_NetworkId$fromIntValue(intValue) {
      return B.JSArray_methods.singleWhere$1(B.List_W6V, new A.NetworkId_NetworkId$fromIntValue_closure(intValue));
    },
    NetworkId: function NetworkId(t0, t1, t2) {
      this.intValue = t0;
      this.index = t1;
      this._core$_name = t2;
    },
    NetworkId_NetworkId$fromIntValue_closure: function NetworkId_NetworkId$fromIntValue_closure(t0) {
      this.intValue = t0;
    },
    CardanoAddress_CardanoAddress(bytes) {
      var t1, _null = null;
      switch (A.CardanoAddress_getAddressType(bytes).index) {
        case 4:
          t1 = bytes.length;
          t1 = A.CardanoAddressByron$(_null, new A.ByteList(A.ByteList__constructList(bytes, t1, t1)));
          break;
        case 1:
          t1 = bytes.length;
          t1 = A.CardanoAddressPointer$(_null, new A.ByteList(A.ByteList__constructList(bytes, t1, t1)));
          break;
        case 0:
          t1 = bytes.length;
          t1 = A.CardanoAddressBase$(_null, new A.ByteList(A.ByteList__constructList(bytes, t1, t1)));
          break;
        case 2:
          t1 = bytes.length;
          t1 = A.CardanoAddressEnterprise$(_null, new A.ByteList(A.ByteList__constructList(bytes, t1, t1)));
          break;
        case 3:
          t1 = bytes.length;
          t1 = A.CardanoAddressReward$(_null, new A.ByteList(A.ByteList__constructList(bytes, t1, t1)));
          break;
        default:
          t1 = _null;
      }
      return t1;
    },
    CardanoAddress_CardanoAddress$toBaseAddress(networkId, paymentType, spend, stake, stakeType) {
      var t1 = A._setArrayType([(stakeType.index << 5 | paymentType.index << 4 | networkId.intValue & 15) >>> 0], type$.JSArray_int),
        t2 = type$.int,
        t3 = A.SubListIterable$(spend, 0, A.checkNotNullable(spend.get$prefixLength(), "count", t2), A._instanceType(spend)._eval$1("ListBase.E")),
        t4 = spend.get$prefixLength();
      t4 = B.JSArray_methods.$add(t1, A.Hash_blake2b(new Uint8Array(A._ensureNativeList(new A.ByteList(A.ByteList__constructList(t3, t4, t4)))), 28));
      t2 = A.SubListIterable$(stake, 0, A.checkNotNullable(stake.get$prefixLength(), "count", t2), A._instanceType(stake)._eval$1("ListBase.E"));
      t3 = stake.get$prefixLength();
      return A.CardanoAddress_CardanoAddress(B.JSArray_methods.$add(t4, A.Hash_blake2b(new Uint8Array(A._ensureNativeList(new A.ByteList(A.ByteList__constructList(t2, t3, t3)))), 28)));
    },
    CardanoAddress_CardanoAddress$toRewardAddress(networkId, paymentType, spend) {
      var t1 = A._setArrayType([(paymentType.index << 4 | networkId.index & 15 | 224) >>> 0], type$.JSArray_int),
        t2 = A.SubListIterable$(spend, 0, A.checkNotNullable(spend.get$prefixLength(), "count", type$.int), A._instanceType(spend)._eval$1("ListBase.E")),
        t3 = spend.get$prefixLength();
      return A.CardanoAddress_CardanoAddress(B.JSArray_methods.$add(t1, A.Hash_blake2b(new Uint8Array(A._ensureNativeList(new A.ByteList(A.ByteList__constructList(t2, t3, t3)))), 28)));
    },
    CardanoAddress_CardanoAddress$fromBech32OrBase58(addressBech32OrBase58) {
      var t1, exception;
      try {
        t1 = A.CardanoAddress_CardanoAddress(A.Bech32Encoder_decodeNoHrpCheck(addressBech32OrBase58, 256));
        return t1;
      } catch (exception) {
        t1 = A.CardanoAddress_CardanoAddress(new Uint8Array(A._ensureNativeList(A.FastBase58DecodingAlphabet(addressBech32OrBase58, $.$get$BTCAlphabet()))));
        return t1;
      }
    },
    CardanoAddress__getAddressBech32BaseHrp(address) {
      return (A.CardanoAddress_getAddressType(address) === B.AddressType_3 ? B.Record3_Vc5 : B.Record3_rtd)._0;
    },
    CardanoAddress__getCredBech32BaseHrp(address) {
      var t1,
        hrpSet = A.CardanoAddress_getAddressType(address) === B.AddressType_3 ? B.Record3_Vc5 : B.Record3_rtd;
      switch (A.CardanoAddress_getCredentialType(address).index) {
        case 0:
          t1 = hrpSet._1;
          break;
        case 1:
          t1 = hrpSet._2;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    CardanoAddress_getAddressType(address) {
      var addrType,
        t1 = J.get$first$ax(address);
      if (typeof t1 !== "number")
        return t1.$and();
      addrType = t1 >>> 4 & 15;
      switch (addrType) {
        case 0:
        case 1:
        case 2:
        case 3:
          return B.AddressType_0;
        case 4:
        case 5:
          return B.AddressType_1;
        case 6:
        case 7:
          return B.AddressType_2;
        case 8:
          return B.AddressType_4;
        case 14:
        case 15:
          return B.AddressType_3;
        default:
          throw A.wrapException(new A.InvalidAddressTypeError("addressType: " + addrType + " is not defined. Containing hex address " + A.IntListExtensions_hexEncode(address)));
      }
    },
    CardanoAddress_getCredentialType(address) {
      return (address.get$first(address) >>> 4 & 1) === 0 ? B.CredentialType_0 : B.CredentialType_1;
    },
    _$CardanoAddressFromJson(json) {
      var t1,
        _s11_ = "runtimeType",
        _s5_ = "bytes";
      switch (json.$index(0, _s11_)) {
        case "byronRaw":
          t1 = J.cast$1$0$ax(type$.List_dynamic._as(json.$index(0, _s5_)), type$.int);
          t1 = A.ByteList__constructList(t1, t1.get$length(t1), t1.get$length(t1));
          return A.CardanoAddressByron$(A._asStringQ(json.$index(0, _s11_)), new A.ByteList(t1));
        case "pointerRaw":
          t1 = J.cast$1$0$ax(type$.List_dynamic._as(json.$index(0, _s5_)), type$.int);
          t1 = A.ByteList__constructList(t1, t1.get$length(t1), t1.get$length(t1));
          return A.CardanoAddressPointer$(A._asStringQ(json.$index(0, _s11_)), new A.ByteList(t1));
        case "baseRaw":
          t1 = J.cast$1$0$ax(type$.List_dynamic._as(json.$index(0, _s5_)), type$.int);
          t1 = A.ByteList__constructList(t1, t1.get$length(t1), t1.get$length(t1));
          return A.CardanoAddressBase$(A._asStringQ(json.$index(0, _s11_)), new A.ByteList(t1));
        case "enterpriseRaw":
          t1 = J.cast$1$0$ax(type$.List_dynamic._as(json.$index(0, _s5_)), type$.int);
          t1 = A.ByteList__constructList(t1, t1.get$length(t1), t1.get$length(t1));
          return A.CardanoAddressEnterprise$(A._asStringQ(json.$index(0, _s11_)), new A.ByteList(t1));
        case "rewardRaw":
          t1 = J.cast$1$0$ax(type$.List_dynamic._as(json.$index(0, _s5_)), type$.int);
          t1 = A.ByteList__constructList(t1, t1.get$length(t1), t1.get$length(t1));
          return A.CardanoAddressReward$(A._asStringQ(json.$index(0, _s11_)), new A.ByteList(t1));
        default:
          throw A.wrapException(new A.CheckedFromJsonException(_s11_, json, 'Invalid union type "' + A.S(json.$index(0, _s11_)) + '"!', "CardanoAddress"));
      }
    },
    CardanoAddressByron$($$type, bytes) {
      return new A.CardanoAddressByron(bytes, $$type == null ? "byronRaw" : $$type);
    },
    CardanoAddressPointer$($$type, bytes) {
      return new A.CardanoAddressPointer(bytes, $$type == null ? "pointerRaw" : $$type);
    },
    CardanoAddressBase$($$type, bytes) {
      return new A.CardanoAddressBase(bytes, $$type == null ? "baseRaw" : $$type);
    },
    CardanoAddressEnterprise$($$type, bytes) {
      return new A.CardanoAddressEnterprise(bytes, $$type == null ? "enterpriseRaw" : $$type);
    },
    CardanoAddressReward$($$type, bytes) {
      return new A.CardanoAddressReward(bytes, $$type == null ? "rewardRaw" : $$type);
    },
    AddressType: function AddressType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    CredentialType: function CredentialType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    InvalidAddressTypeError: function InvalidAddressTypeError(t0) {
      this.message = t0;
    },
    CardanoAddress: function CardanoAddress() {
    },
    CardanoAddress_stakeCredentialsBytes_closure: function CardanoAddress_stakeCredentialsBytes_closure(t0) {
      this.$this = t0;
    },
    CardanoAddress_stakeBech32Encoded_closure: function CardanoAddress_stakeBech32Encoded_closure(t0) {
      this.$this = t0;
    },
    CardanoAddress_credentialsType_closure: function CardanoAddress_credentialsType_closure(t0) {
      this.$this = t0;
    },
    _$CardanoAddress: function _$CardanoAddress() {
    },
    CardanoAddressByron: function CardanoAddressByron(t0, t1) {
      var _ = this;
      _.bytes = t0;
      _.$$type = t1;
      _.__CardanoAddress_addressType_FI = _.__CardanoAddress_credentialsType_FI = _.__CardanoAddress_networkId_FI = _.__CardanoAddress_stakeBech32Encoded_FI = _.__CardanoAddress_stakeCredentials_FI = _.__CardanoAddress_credentialsBech32_FI = _.__CardanoAddress_credentials_FI = _.__CardanoAddress_stakeCredentialsBytes_FI = _.__CardanoAddress_credentialsBytes_FI = _.__CardanoAddress_hexEncoded_FI = _.__CardanoAddress_bech32Encoded_FI = _.__CardanoAddress_hrp_FI = $;
    },
    CardanoAddressPointer: function CardanoAddressPointer(t0, t1) {
      var _ = this;
      _.bytes = t0;
      _.$$type = t1;
      _.__CardanoAddress_addressType_FI = _.__CardanoAddress_credentialsType_FI = _.__CardanoAddress_networkId_FI = _.__CardanoAddress_stakeBech32Encoded_FI = _.__CardanoAddress_stakeCredentials_FI = _.__CardanoAddress_credentialsBech32_FI = _.__CardanoAddress_credentials_FI = _.__CardanoAddress_stakeCredentialsBytes_FI = _.__CardanoAddress_credentialsBytes_FI = _.__CardanoAddress_hexEncoded_FI = _.__CardanoAddress_bech32Encoded_FI = _.__CardanoAddress_hrp_FI = $;
    },
    CardanoAddressBase: function CardanoAddressBase(t0, t1) {
      var _ = this;
      _.bytes = t0;
      _.$$type = t1;
      _.__CardanoAddress_addressType_FI = _.__CardanoAddress_credentialsType_FI = _.__CardanoAddress_networkId_FI = _.__CardanoAddress_stakeBech32Encoded_FI = _.__CardanoAddress_stakeCredentials_FI = _.__CardanoAddress_credentialsBech32_FI = _.__CardanoAddress_credentials_FI = _.__CardanoAddress_stakeCredentialsBytes_FI = _.__CardanoAddress_credentialsBytes_FI = _.__CardanoAddress_hexEncoded_FI = _.__CardanoAddress_bech32Encoded_FI = _.__CardanoAddress_hrp_FI = $;
    },
    CardanoAddressEnterprise: function CardanoAddressEnterprise(t0, t1) {
      var _ = this;
      _.bytes = t0;
      _.$$type = t1;
      _.__CardanoAddress_addressType_FI = _.__CardanoAddress_credentialsType_FI = _.__CardanoAddress_networkId_FI = _.__CardanoAddress_stakeBech32Encoded_FI = _.__CardanoAddress_stakeCredentials_FI = _.__CardanoAddress_credentialsBech32_FI = _.__CardanoAddress_credentials_FI = _.__CardanoAddress_stakeCredentialsBytes_FI = _.__CardanoAddress_credentialsBytes_FI = _.__CardanoAddress_hexEncoded_FI = _.__CardanoAddress_bech32Encoded_FI = _.__CardanoAddress_hrp_FI = $;
    },
    CardanoAddressReward: function CardanoAddressReward(t0, t1) {
      var _ = this;
      _.bytes = t0;
      _.$$type = t1;
      _.__CardanoAddress_addressType_FI = _.__CardanoAddress_credentialsType_FI = _.__CardanoAddress_networkId_FI = _.__CardanoAddress_stakeBech32Encoded_FI = _.__CardanoAddress_stakeCredentials_FI = _.__CardanoAddress_credentialsBech32_FI = _.__CardanoAddress_credentials_FI = _.__CardanoAddress_stakeCredentialsBytes_FI = _.__CardanoAddress_credentialsBytes_FI = _.__CardanoAddress_hexEncoded_FI = _.__CardanoAddress_bech32Encoded_FI = _.__CardanoAddress_hrp_FI = $;
    },
    _CardanoAddress_Object__$CardanoAddress: function _CardanoAddress_Object__$CardanoAddress() {
    },
    _DRepDerivation$(bytes) {
      return new A._DRepDerivation(bytes);
    },
    ConstitutionalCommiteeCold$(bytes) {
      return new A.ConstitutionalCommiteeCold(bytes, "cold");
    },
    ConstitutionalCommiteeHot$(bytes) {
      return new A.ConstitutionalCommiteeHot(bytes, "hot");
    },
    GovKeyType: function GovKeyType(t0, t1, t2) {
      this.prefix = t0;
      this.index = t1;
      this._core$_name = t2;
    },
    CardanoDerivation: function CardanoDerivation() {
    },
    CardanoDerivation__credentialsBytes_closure: function CardanoDerivation__credentialsBytes_closure(t0) {
      this.$this = t0;
    },
    CardanoDerivation__credentialsHex_closure: function CardanoDerivation__credentialsHex_closure(t0) {
      this.$this = t0;
    },
    CardanoDerivation__keyHex_closure: function CardanoDerivation__keyHex_closure(t0) {
      this.$this = t0;
    },
    DRepDerivation: function DRepDerivation() {
    },
    DRepDerivation__dRepKeyHex_closure: function DRepDerivation__dRepKeyHex_closure(t0) {
      this.$this = t0;
    },
    DRepDerivation__credentialsBytes_closure: function DRepDerivation__credentialsBytes_closure(t0) {
      this.$this = t0;
    },
    DRepDerivation__credentialsHex_closure: function DRepDerivation__credentialsHex_closure(t0) {
      this.$this = t0;
    },
    DRepDerivation__dRepIdLegacyBech32_closure: function DRepDerivation__dRepIdLegacyBech32_closure(t0) {
      this.$this = t0;
    },
    DRepDerivation__dRepIdNewBytes_closure: function DRepDerivation__dRepIdNewBytes_closure(t0) {
      this.$this = t0;
    },
    DRepDerivation__dRepIdNewHex_closure: function DRepDerivation__dRepIdNewHex_closure(t0) {
      this.$this = t0;
    },
    DRepDerivation__dRepIdNewBech32_closure: function DRepDerivation__dRepIdNewBech32_closure(t0) {
      this.$this = t0;
    },
    ConstitutionalCommitee: function ConstitutionalCommitee() {
    },
    _$CardanoDerivation: function _$CardanoDerivation() {
    },
    CardanoDerivedAddress: function CardanoDerivedAddress(t0, t1, t2) {
      var _ = this;
      _.type = t0;
      _.bytes = t1;
      _.$$type = t2;
      _.__CardanoDerivation__keyHex_FI = _.__CardanoDerivation__credentialsHex_FI = _.__CardanoDerivation__credentialsBytes_FI = _.__CardanoDerivation_pubKey_FI = $;
    },
    _$DRepDerivation: function _$DRepDerivation() {
    },
    _DRepDerivation: function _DRepDerivation(t0) {
      var _ = this;
      _.bytes = t0;
      _.__DRepDerivation__dRepIdNewBech32_FI = _.__DRepDerivation__dRepIdNewHex_FI = _.__DRepDerivation__dRepIdNewBytes_FI = _.__DRepDerivation__dRepIdLegacyBech32_FI = _.__DRepDerivation__credentialsHex_FI = _.__DRepDerivation__credentialsBytes_FI = _.__DRepDerivation__dRepKeyHex_FI = $;
    },
    _$ConstitutionalCommitee: function _$ConstitutionalCommitee() {
    },
    ConstitutionalCommiteeCold: function ConstitutionalCommiteeCold(t0, t1) {
      var _ = this;
      _.bytes = t0;
      _.$$type = t1;
      _.__ConstitutionalCommitee__hrp_FI = _.__ConstitutionalCommitee_ccIdBech32_FI = _.__ConstitutionalCommitee_ccIdHex_FI = _.__ConstitutionalCommitee_ccIdBytes_FI = _.__ConstitutionalCommitee_hexCredential_FI = _.__ConstitutionalCommitee_credentialsBytes_FI = _.__ConstitutionalCommitee_hexCCKey_FI = $;
    },
    ConstitutionalCommiteeHot: function ConstitutionalCommiteeHot(t0, t1) {
      var _ = this;
      _.bytes = t0;
      _.$$type = t1;
      _.__ConstitutionalCommitee__hrp_FI = _.__ConstitutionalCommitee_ccIdBech32_FI = _.__ConstitutionalCommitee_ccIdHex_FI = _.__ConstitutionalCommitee_ccIdBytes_FI = _.__ConstitutionalCommitee_hexCredential_FI = _.__ConstitutionalCommitee_credentialsBytes_FI = _.__ConstitutionalCommitee_hexCCKey_FI = $;
    },
    _CardanoDerivation_Object__$CardanoDerivation: function _CardanoDerivation_Object__$CardanoDerivation() {
    },
    _ConstitutionalCommitee_Object__$ConstitutionalCommitee: function _ConstitutionalCommitee_Object__$ConstitutionalCommitee() {
    },
    _DRepDerivation_Object__$DRepDerivation: function _DRepDerivation_Object__$DRepDerivation() {
    },
    _CardanoPubAccountSyncFactory: function _CardanoPubAccountSyncFactory(t0) {
      this._pubKeyDerivator = t0;
    },
    CardanoPubAccountFactory: function CardanoPubAccountFactory() {
    },
    CardanoPubAccount: function CardanoPubAccount() {
    },
    CardanoPubAccount_stakeDerivation_closure: function CardanoPubAccount_stakeDerivation_closure(t0) {
      this.$this = t0;
    },
    CardanoPubAccount_dRepDerivation_closure: function CardanoPubAccount_dRepDerivation_closure(t0) {
      this.$this = t0;
    },
    CardanoPubAccount_constitutionalCommitteeColdDerivation_closure: function CardanoPubAccount_constitutionalCommitteeColdDerivation_closure(t0) {
      this.$this = t0;
    },
    CardanoPubAccount_constitutionalCommitteeHotDerivation_closure: function CardanoPubAccount_constitutionalCommitteeHotDerivation_closure(t0) {
      this.$this = t0;
    },
    _$CardanoPubAccount: function _$CardanoPubAccount() {
    },
    _CardanoPubAccount: function _CardanoPubAccount(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.accountKey = t0;
      _.paymentRoleKey = t1;
      _.changeRoleKey = t2;
      _.stakeRoleKey = t3;
      _.drepIdRoleKey = t4;
      _.constitutionalCommitteeColdRoleKey = t5;
      _.constitutionalCommitteeHotRoleKey = t6;
      _.stakeKey = t7;
      _.drepIdKey = t8;
      _.constitutionalCommitteeColdKey = t9;
      _.constitutionalCommitteeHotKey = t10;
      _.__CardanoPubAccount_constitutionalCommitteeHotDerivation_FI = _.__CardanoPubAccount_constitutionalCommitteeColdDerivation_FI = _.__CardanoPubAccount_dRepDerivation_FI = _.__CardanoPubAccount_stakeDerivation_FI = $;
    },
    _CardanoPubAccount_Object__$CardanoPubAccount: function _CardanoPubAccount_Object__$CardanoPubAccount() {
    },
    Bip32KeyRole_fromDerivationIndex(index) {
      return B.JSArray_methods.firstWhere$1(B.List_0lP, new A.Bip32KeyRole_fromDerivationIndex_closure(index));
    },
    Bip32KeyPair: function Bip32KeyPair(t0, t1) {
      this.signingKey = t0;
      this.verifyKey = t1;
    },
    CardanoAddressKit: function CardanoAddressKit(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.account = t0;
      _.role = t1;
      _.index = t2;
      _.address = t3;
      _.signingKey = t4;
      _.verifyKey = t5;
    },
    Bip32KeyRole: function Bip32KeyRole(t0, t1, t2) {
      this.derivationIndex = t0;
      this.index = t1;
      this._core$_name = t2;
    },
    Bip32KeyRole_fromDerivationIndex_closure: function Bip32KeyRole_fromDerivationIndex_closure(t0) {
      this.index = t0;
    },
    CardanoWallet: function CardanoWallet() {
    },
    DRepDiffInfo___unmarshal_tearOff(bytes) {
      var reader = A.BinaryReaderImpl$(type$.Uint8List._as(bytes));
      return new A._DRepDiffInfo(reader.readString$0(), A._asStringQ(reader.read$0()));
    },
    DRepDiffInfo: function DRepDiffInfo() {
    },
    _$DRepDiffInfo: function _$DRepDiffInfo() {
    },
    _DRepDiffInfo: function _DRepDiffInfo(t0, t1) {
      this.dRepId = t0;
      this.metadataUrl = t1;
    },
    _DRepDiffInfo_Object__$DRepDiffInfo: function _DRepDiffInfo_Object__$DRepDiffInfo() {
    },
    ProposalDiffInfo___unmarshal_tearOff(bytes) {
      var reader = A.BinaryReaderImpl$(type$.Uint8List._as(bytes)),
        t1 = type$.CborCodec._eval$1("Codec.T");
      return new A._ProposalDiffInfo(A.GovActionId_deserialize(B.C_CborDecoder.convert$1(t1._as(reader.readByteList$0()))), A.GovAction_GovAction$deserialize(B.C_CborDecoder.convert$1(t1._as(reader.readByteList$0()))));
    },
    ProposalDiffInfo: function ProposalDiffInfo() {
    },
    _$ProposalDiffInfo: function _$ProposalDiffInfo() {
    },
    _ProposalDiffInfo: function _ProposalDiffInfo(t0, t1) {
      this.proposalId = t0;
      this.proposal = t1;
    },
    _ProposalDiffInfo_Object__$ProposalDiffInfo: function _ProposalDiffInfo_Object__$ProposalDiffInfo() {
    },
    TxDiff_TxDiff$unmarshal(bytes) {
      var dRepDelegation, dRepRegistration, dRepUpdate, authorizeConstitutionalCommitteeHot, resignConstitutionalCommitteeCold, votes, proposals, t4, t5, t6, _null = null,
        _s27_ = "Not enough bytes available.",
        reader = A.BinaryReaderImpl$(bytes),
        diff = A.Value_Value$deserialize(B.C_CborDecoder.convert$1(type$.CborCodec._eval$1("Codec.T")._as(reader.readByteList$0()))),
        t1 = reader.readBytesList$0(),
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,Utxo>"),
        usedUtxos = A.List_List$_of(new A.MappedListIterable(t1, t2._eval$1("Utxo(1)")._as(A.utxo_Utxo___deserializeBytes_tearOff$closure()), t3), t3._eval$1("ListIterable.E")),
        stakeDelegationPoolId = A._asStringQ(reader.read$0());
      t1 = type$.nullable_Uint8List;
      t2 = t1._as(reader.read$0());
      dRepDelegation = t2 == null ? _null : new A.TxDiff_TxDiff$unmarshal_closure().call$1(t2);
      t2 = t1._as(reader.read$0());
      dRepRegistration = t2 == null ? _null : A.DRepDiffInfo___unmarshal_tearOff(t2);
      t2 = t1._as(reader.read$0());
      dRepUpdate = t2 == null ? _null : A.DRepDiffInfo___unmarshal_tearOff(t2);
      t2 = t1._as(reader.read$0());
      authorizeConstitutionalCommitteeHot = t2 == null ? _null : new A.TxDiff_TxDiff$unmarshal_closure0().call$1(t2);
      t1 = t1._as(reader.read$0());
      resignConstitutionalCommitteeCold = t1 == null ? _null : new A.TxDiff_TxDiff$unmarshal_closure1().call$1(t1);
      t1 = reader.readBytesList$0();
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,VoteInfo>");
      votes = A.List_List$_of(new A.MappedListIterable(t1, t2._eval$1("VoteInfo(1)")._as(A.vote_info_VoteInfo___unmarshal_tearOff$closure()), t3), t3._eval$1("ListIterable.E"));
      t1 = reader.readBytesList$0();
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,ProposalDiffInfo>");
      proposals = A.List_List$_of(new A.MappedListIterable(t1, t2._eval$1("ProposalDiffInfo(1)")._as(A.proposal_diff_info_ProposalDiffInfo___unmarshal_tearOff$closure()), t3), t3._eval$1("ListIterable.E"));
      t1 = reader._binary_reader_impl$_offset;
      t2 = t1 + 1;
      t3 = reader._bufferLimit;
      if (t2 > t3)
        A.throwExpression(A.RangeError$(_s27_));
      t4 = reader._binary_reader_impl$_buffer;
      reader._binary_reader_impl$_offset = t2;
      t5 = t4.length;
      if (!(t1 < t5))
        return A.ioore(t4, t1);
      t1 = t4[t1];
      t6 = t2 + 1;
      if (t6 > t3)
        A.throwExpression(A.RangeError$(_s27_));
      reader._binary_reader_impl$_offset = t6;
      if (!(t2 < t5))
        return A.ioore(t4, t2);
      return new A._TxDiff(diff, usedUtxos, stakeDelegationPoolId, dRepDelegation, dRepRegistration, dRepUpdate, authorizeConstitutionalCommitteeHot, resignConstitutionalCommitteeCold, votes, proposals, t1 > 0, t4[t2] > 0);
    },
    TxSigningBundle_TxSigningBundle$unmarshal(bytes) {
      var dRepDelegation, dRepRegistration, dRepUpdate, authorizeConstitutionalCommitteeHot, resignConstitutionalCommitteeCold, votes, proposals, t4, t5, t6, _null = null,
        _s27_ = "Not enough bytes available.",
        reader = A.BinaryReaderImpl$(bytes),
        receiveAddressBech32 = reader.readString$0(),
        networkId = A.NetworkId_NetworkId$fromIntValue(B.JSNumber_methods.toInt$0(reader.readDouble$0())),
        t1 = reader.readBytesList$0(),
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,TxPreparedForSigning>"),
        txsData = A.List_List$_of(new A.MappedListIterable(t1, t2._eval$1("TxPreparedForSigning(1)")._as(A.signing_types_TxPreparedForSigning___unmarshal_tearOff$closure()), t3), t3._eval$1("ListIterable.E")),
        totalDiff = A.Value_Value$deserialize(B.C_CborDecoder.convert$1(type$.CborCodec._eval$1("Codec.T")._as(reader.readByteList$0()))),
        stakeDelegationPoolId = A._asStringQ(reader.read$0());
      t1 = type$.nullable_Uint8List;
      t2 = t1._as(reader.read$0());
      dRepDelegation = t2 == null ? _null : new A.TxSigningBundle_TxSigningBundle$unmarshal_closure().call$1(t2);
      t2 = t1._as(reader.read$0());
      dRepRegistration = t2 == null ? _null : A.DRepDiffInfo___unmarshal_tearOff(t2);
      t2 = t1._as(reader.read$0());
      dRepUpdate = t2 == null ? _null : A.DRepDiffInfo___unmarshal_tearOff(t2);
      t2 = t1._as(reader.read$0());
      authorizeConstitutionalCommitteeHot = t2 == null ? _null : new A.TxSigningBundle_TxSigningBundle$unmarshal_closure0().call$1(t2);
      t1 = t1._as(reader.read$0());
      resignConstitutionalCommitteeCold = t1 == null ? _null : new A.TxSigningBundle_TxSigningBundle$unmarshal_closure1().call$1(t1);
      t1 = reader.readBytesList$0();
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,VoteInfo>");
      votes = A.List_List$_of(new A.MappedListIterable(t1, t2._eval$1("VoteInfo(1)")._as(A.vote_info_VoteInfo___unmarshal_tearOff$closure()), t3), t3._eval$1("ListIterable.E"));
      t1 = reader.readBytesList$0();
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,ProposalDiffInfo>");
      proposals = A.List_List$_of(new A.MappedListIterable(t1, t2._eval$1("ProposalDiffInfo(1)")._as(A.proposal_diff_info_ProposalDiffInfo___unmarshal_tearOff$closure()), t3), t3._eval$1("ListIterable.E"));
      t1 = reader._binary_reader_impl$_offset;
      t2 = t1 + 1;
      t3 = reader._bufferLimit;
      if (t2 > t3)
        A.throwExpression(A.RangeError$(_s27_));
      t4 = reader._binary_reader_impl$_buffer;
      reader._binary_reader_impl$_offset = t2;
      t5 = t4.length;
      if (!(t1 < t5))
        return A.ioore(t4, t1);
      t1 = t4[t1];
      t6 = t2 + 1;
      if (t6 > t3)
        A.throwExpression(A.RangeError$(_s27_));
      reader._binary_reader_impl$_offset = t6;
      if (!(t2 < t5))
        return A.ioore(t4, t2);
      return A._TxSigningBundle$(authorizeConstitutionalCommitteeHot, dRepDelegation, t1 > 0, dRepRegistration, dRepUpdate, networkId, proposals, receiveAddressBech32, resignConstitutionalCommitteeCold, stakeDelegationPoolId, t4[t2] > 0, totalDiff, txsData, votes);
    },
    TxPreparedForSigning___unmarshal_tearOff(bytes) {
      var reader = A.BinaryReaderImpl$(type$.Uint8List._as(bytes)),
        tx = A.CardanoTransaction_CardanoTransaction$deserializeBytes(reader.readByteList$0()),
        txDiff = A.TxDiff_TxDiff$unmarshal(reader.readByteList$0()),
        t1 = reader.readBytesList$0(),
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,Utxo>"),
        utxos = A.List_List$_of(new A.MappedListIterable(t1, t2._eval$1("Utxo(1)")._as(A.utxo_Utxo___deserializeBytes_tearOff$closure()), t3), t3._eval$1("ListIterable.E"));
      t1 = reader.readStringList$0();
      return new A._TxPreparedForSigning(tx, txDiff, utxos, A.LinkedHashSet_LinkedHashSet$from(t1, A._arrayInstanceType(t1)._precomputed1));
    },
    _TxSigningBundle$(authorizeConstitutionalCommitteeHot, dRepDelegation, dRepDeregistration, dRepRegistration, dRepUpdate, networkId, proposals, receiveAddressBech32, resignConstitutionalCommitteeCold, stakeDelegationPoolId, stakeDeregistration, totalDiff, txsData, votes) {
      return new A._TxSigningBundle(receiveAddressBech32, networkId, txsData, totalDiff, stakeDelegationPoolId, dRepDelegation, dRepRegistration, dRepUpdate, authorizeConstitutionalCommitteeHot, resignConstitutionalCommitteeCold, votes, proposals, dRepDeregistration, stakeDeregistration);
    },
    TxDiff: function TxDiff() {
    },
    TxDiff_marshal_closure: function TxDiff_marshal_closure() {
    },
    TxDiff_marshal_closure0: function TxDiff_marshal_closure0() {
    },
    TxDiff_marshal_closure1: function TxDiff_marshal_closure1() {
    },
    TxDiff_TxDiff$unmarshal_closure: function TxDiff_TxDiff$unmarshal_closure() {
    },
    TxDiff_TxDiff$unmarshal_closure0: function TxDiff_TxDiff$unmarshal_closure0() {
    },
    TxDiff_TxDiff$unmarshal_closure1: function TxDiff_TxDiff$unmarshal_closure1() {
    },
    TxSigningBundle: function TxSigningBundle() {
    },
    TxSigningBundle_marshal_closure: function TxSigningBundle_marshal_closure() {
    },
    TxSigningBundle_marshal_closure0: function TxSigningBundle_marshal_closure0() {
    },
    TxSigningBundle_marshal_closure1: function TxSigningBundle_marshal_closure1() {
    },
    TxSigningBundle_TxSigningBundle$unmarshal_closure: function TxSigningBundle_TxSigningBundle$unmarshal_closure() {
    },
    TxSigningBundle_TxSigningBundle$unmarshal_closure0: function TxSigningBundle_TxSigningBundle$unmarshal_closure0() {
    },
    TxSigningBundle_TxSigningBundle$unmarshal_closure1: function TxSigningBundle_TxSigningBundle$unmarshal_closure1() {
    },
    TxSignedBundle: function TxSignedBundle() {
    },
    TxSignedBundle_marshal_closure: function TxSignedBundle_marshal_closure() {
    },
    TxPreparedForSigning: function TxPreparedForSigning() {
    },
    TxPreparedForSigning_marshal_closure: function TxPreparedForSigning_marshal_closure() {
    },
    TxAndSignature: function TxAndSignature() {
    },
    TxAndSignature_marshal_closure: function TxAndSignature_marshal_closure() {
    },
    _$TxDiff: function _$TxDiff() {
    },
    _TxDiff: function _TxDiff(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.diff = t0;
      _._usedUtxos = t1;
      _.stakeDelegationPoolId = t2;
      _.dRepDelegation = t3;
      _.dRepRegistration = t4;
      _.dRepUpdate = t5;
      _.authorizeConstitutionalCommitteeHot = t6;
      _.resignConstitutionalCommitteeCold = t7;
      _._votes = t8;
      _._proposals = t9;
      _.dRepDeregistration = t10;
      _.stakeDeregistration = t11;
    },
    _$TxSigningBundle: function _$TxSigningBundle() {
    },
    _TxSigningBundle: function _TxSigningBundle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.receiveAddressBech32 = t0;
      _.networkId = t1;
      _._txsData = t2;
      _.totalDiff = t3;
      _.stakeDelegationPoolId = t4;
      _.dRepDelegation = t5;
      _.dRepRegistration = t6;
      _.dRepUpdate = t7;
      _.authorizeConstitutionalCommitteeHot = t8;
      _.resignConstitutionalCommitteeCold = t9;
      _._votes = t10;
      _._proposals = t11;
      _.dRepDeregistration = t12;
      _.stakeDeregistration = t13;
    },
    _$TxSignedBundle: function _$TxSignedBundle() {
    },
    _TxSignedBundle: function _TxSignedBundle(t0, t1, t2, t3) {
      var _ = this;
      _.receiveAddressBech32 = t0;
      _.networkId = t1;
      _._txsData = t2;
      _.totalDiff = t3;
    },
    _$TxPreparedForSigning: function _$TxPreparedForSigning() {
    },
    _TxPreparedForSigning: function _TxPreparedForSigning(t0, t1, t2, t3) {
      var _ = this;
      _.tx = t0;
      _.txDiff = t1;
      _.utxosBeforeTx = t2;
      _._signingAddressesRequired = t3;
    },
    _$TxAndSignature: function _$TxAndSignature() {
    },
    _TxAndSignature: function _TxAndSignature(t0, t1, t2, t3, t4) {
      var _ = this;
      _.tx = t0;
      _.txDiff = t1;
      _.utxosBeforeTx = t2;
      _._signingAddressesRequired = t3;
      _.nweSignatures = t4;
    },
    _TxAndSignature_Object__$TxAndSignature: function _TxAndSignature_Object__$TxAndSignature() {
    },
    _TxDiff_Object__$TxDiff: function _TxDiff_Object__$TxDiff() {
    },
    _TxPreparedForSigning_Object__$TxPreparedForSigning: function _TxPreparedForSigning_Object__$TxPreparedForSigning() {
    },
    _TxSignedBundle_Object__$TxSignedBundle: function _TxSignedBundle_Object__$TxSignedBundle() {
    },
    _TxSigningBundle_Object__$TxSigningBundle: function _TxSigningBundle_Object__$TxSigningBundle() {
    },
    VoteInfo___unmarshal_tearOff(bytes) {
      var reader = A.BinaryReaderImpl$(type$.Uint8List._as(bytes)),
        t1 = type$.CborCodec._eval$1("Codec.T");
      return new A._VoteInfo(A.GovActionId_deserialize(B.C_CborDecoder.convert$1(t1._as(reader.readByteList$0()))), A.Vote_deserialize(B.C_CborDecoder.convert$1(t1._as(reader.readByteList$0()))));
    },
    VoteInfo: function VoteInfo() {
    },
    _$VoteInfo: function _$VoteInfo() {
    },
    _VoteInfo: function _VoteInfo(t0, t1) {
      this.action = t0;
      this.vote = t1;
    },
    _VoteInfo_Object__$VoteInfo: function _VoteInfo_Object__$VoteInfo() {
    },
    CborDeserializationException$(message) {
      return new A.CborDeserializationException(message);
    },
    CborDeserializationException: function CborDeserializationException(t0) {
      this.message = t0;
    },
    CardanoSigningPath: function CardanoSigningPath() {
    },
    _$CardanoSigningPath: function _$CardanoSigningPath() {
    },
    CardanoSigningPath_Shelley: function CardanoSigningPath_Shelley(t0, t1, t2) {
      var _ = this;
      _.account = t0;
      _.address = t1;
      _.role = t2;
      _.__CardanoSigningPath_signingPath_FI = $;
    },
    _CardanoSigningPath_Object__$CardanoSigningPath: function _CardanoSigningPath_Object__$CardanoSigningPath() {
    },
    Lazy: function Lazy(t0, t1) {
      var _ = this;
      _._supplier = t0;
      _._computed = false;
      _.__Lazy__value_A = $;
      _.$ti = t1;
    },
    HdWallet$(accountIndex, rootSigningKey) {
      var t1 = new A.HdWallet(rootSigningKey, accountIndex),
        t2 = A.DerivationUtils_deriveHardened(2147485500, rootSigningKey);
      t1.__HdWallet__purposeSKey_F = t2;
      t2 = A.DerivationUtils_deriveHardened(2147485463, t2);
      t1.__HdWallet__coinSKey_F = t2;
      t1.__HdWallet__accountSKey_F = A.DerivationUtils_deriveHardened((accountIndex | 2147483648) >>> 0, t2);
      return t1;
    },
    HdWallet_HdWallet$unmarshal(bytes) {
      var reader = A.BinaryReaderImpl$(bytes),
        t1 = A.Bip32SigningKey$(reader.readByteList$0());
      return A.HdWallet$(B.JSNumber_methods.toInt$0(reader.readDouble$0()), t1);
    },
    HdWallet: function HdWallet(t0, t1) {
      var _ = this;
      _.rootSigningKey = t0;
      _.accountIndex = t1;
      _.__HdWallet_constitutionalCommitteeHotKeys_FI = _.__HdWallet_constitutionalCommitteeColdKeys_FI = _.__HdWallet_drepCredentialKeys_FI = _.__HdWallet_stakeKeys_FI = _.__HdWallet__constitutionalCommitteeHotRoleKeysDerivator_FI = _.__HdWallet__constitutionalCommitteeColdRoleKeysDerivator_FI = _.__HdWallet__drepCredentialRoleKeysDerivator_FI = _.__HdWallet__stakeRoleKeysDerivator_FI = _.__HdWallet__changeRoleKeysDerivator_FI = _.__HdWallet__paymentRoleKeysDerivator_FI = _.__HdWallet__accountSKey_F = _.__HdWallet__coinSKey_F = _.__HdWallet__purposeSKey_F = $;
    },
    HdWallet__paymentRoleKeysDerivator_closure: function HdWallet__paymentRoleKeysDerivator_closure(t0) {
      this.$this = t0;
    },
    HdWallet__changeRoleKeysDerivator_closure: function HdWallet__changeRoleKeysDerivator_closure(t0) {
      this.$this = t0;
    },
    HdWallet__stakeRoleKeysDerivator_closure: function HdWallet__stakeRoleKeysDerivator_closure(t0) {
      this.$this = t0;
    },
    HdWallet__drepCredentialRoleKeysDerivator_closure: function HdWallet__drepCredentialRoleKeysDerivator_closure(t0) {
      this.$this = t0;
    },
    HdWallet__constitutionalCommitteeColdRoleKeysDerivator_closure: function HdWallet__constitutionalCommitteeColdRoleKeysDerivator_closure(t0) {
      this.$this = t0;
    },
    HdWallet__constitutionalCommitteeHotRoleKeysDerivator_closure: function HdWallet__constitutionalCommitteeHotRoleKeysDerivator_closure(t0) {
      this.$this = t0;
    },
    HdWallet_stakeKeys_closure: function HdWallet_stakeKeys_closure(t0) {
      this.$this = t0;
    },
    HdWallet_drepCredentialKeys_closure: function HdWallet_drepCredentialKeys_closure(t0) {
      this.$this = t0;
    },
    HdWallet_constitutionalCommitteeColdKeys_closure: function HdWallet_constitutionalCommitteeColdKeys_closure(t0) {
      this.$this = t0;
    },
    HdWallet_constitutionalCommitteeHotKeys_closure: function HdWallet_constitutionalCommitteeHotKeys_closure(t0) {
      this.$this = t0;
    },
    CardanoWalletImpl$(accountIndex, firstAddress, hdWallet, stakeAddress) {
      return new A.CardanoWalletImpl(hdWallet, accountIndex, B.JSString_methods.startsWith$1(stakeAddress.get$bech32Encoded(), "stake_test") ? B.NetworkId_0_0_testnet : B.NetworkId_1_1_mainnet, stakeAddress, firstAddress);
    },
    CardanoWalletImpl: function CardanoWalletImpl(t0, t1, t2, t3, t4) {
      var _ = this;
      _.hdWallet = t0;
      _.accountIndex = t1;
      _.networkId = t2;
      _.stakeAddress = t3;
      _.firstAddress = t4;
      _.__CardanoWalletImpl_constitutionalCommiteeHot_FI = _.__CardanoWalletImpl_constitutionalCommiteeCold_FI = _.__CardanoWalletImpl_drepId_FI = $;
    },
    CardanoWalletImpl_drepId_closure: function CardanoWalletImpl_drepId_closure(t0) {
      this.$this = t0;
    },
    CardanoWalletImpl_constitutionalCommiteeCold_closure: function CardanoWalletImpl_constitutionalCommiteeCold_closure(t0) {
      this.$this = t0;
    },
    CardanoWalletImpl_constitutionalCommiteeHot_closure: function CardanoWalletImpl_constitutionalCommiteeHot_closure(t0) {
      this.$this = t0;
    },
    CardanoSigner: function CardanoSigner(t0, t1, t2) {
      this.publicKeyBytes = t0;
      this.requestedSignerBytes = t1;
      this.path = t2;
    },
    _credsFromNativeScripts(scripts) {
      var t1 = A.IterableIterableExtension_get_flattened(J.map$1$1$ax(scripts, new A._credsFromNativeScripts_closure(), type$.List_String), type$.String);
      t1 = A.List_List$_of(t1, t1.$ti._eval$1("Iterable.E"));
      return t1;
    },
    ListCertsX_requiresDrepSignature(_this, walletDRepCredentials) {
      var t1 = _this == null ? null : J.any$1$ax(_this, new A.ListCertsX_requiresDrepSignature_closure(walletDRepCredentials));
      return t1 === true;
    },
    ListCertsX_requiresStakeSignature(_this, walletStakeCredentials) {
      var t1 = _this == null ? null : J.any$1$ax(_this, new A.ListCertsX_requiresStakeSignature_closure(walletStakeCredentials));
      return t1 === true;
    },
    ListCertsX_requiresCommitteeColdSignature(_this, walletCommitteeColdCredentials) {
      var t1 = _this == null ? null : J.any$1$ax(_this, new A.ListCertsX_requiresCommitteeColdSignature_closure(walletCommitteeColdCredentials));
      return t1 === true;
    },
    VotingProceduresX_requiresDrepSignature(_this, walletDRepCredentials) {
      var t1 = _this == null ? null : _this.get$voting().get$keys().any$1(0, new A.VotingProceduresX_requiresDrepSignature_closure(walletDRepCredentials));
      return t1 === true;
    },
    VotingProceduresX_requiresCommitteeHotSignature(_this, walletCommitteeHotCredentials) {
      var t1 = _this == null ? null : _this.get$voting().get$keys().any$1(0, new A.VotingProceduresX_requiresCommitteeHotSignature_closure(walletCommitteeHotCredentials));
      return t1 === true;
    },
    _extension_3__$getOperations(_this) {
      return A.LinkedHashMap_LinkedHashMap$_literal([1, new A._extension_3__$getOperations_closure(_this), 2, new A._extension_3__$getOperations_closure0(_this), 3, new A._extension_3__$getOperations_closure1(_this), 4, new A._extension_3__$getOperations_closure2(_this), 5, new A._extension_3__$getOperations_closure3(_this), 6, new A._extension_3__$getOperations_closure4(_this), 7, new A._extension_3__$getOperations_closure5(_this), 8, new A._extension_3__$getOperations_closure6(_this), 9, new A._extension_3__$getOperations_closure7(_this), 10, new A._extension_3__$getOperations_closure8(_this), 11, new A._extension_3__$getOperations_closure9(_this), 12, new A._extension_3__$getOperations_closure10(_this), 13, new A._extension_3__$getOperations_closure11(_this)], type$.int, type$.dynamic_Function_List_dynamic);
    },
    $WalletTasksInitializer($$req) {
      return new A._$WalletTasks$WorkerService();
    },
    WalletTasksWorkerPool$(concurrencySettings) {
      var t1 = A._setArrayType([], type$.JSArray_PoolWorker_WalletTasksWorker),
        t2 = A._setArrayType([], type$.JSArray_WorkerStat),
        t3 = A.List_List$filled(A.ListQueue__calculateCapacity(null), null, false, type$.nullable_WorkerTask_dynamic_Worker),
        t4 = type$.dynamic;
      t4 = A.LinkedHashMap_LinkedHashMap$from($.builtinExceptions, t4, t4);
      return new A.WalletTasksWorkerPool(new A.WalletTasksWorkerPool_closure(null), new A.ExceptionManager(t4), concurrencySettings, t1, t2, A.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$.void_Function_WorkerStat_bool), new A.ListQueue(t3, type$.ListQueue_WorkerTask_dynamic_Worker), A.LinkedHashSet_LinkedHashSet$_empty(type$.WorkerTask_dynamic_Worker), false, new A.Object());
    },
    _$Deser$(contextAware) {
      var t1, t2, _null = null;
      if (contextAware) {
        t1 = type$.Object;
        t1 = A.HashMap_HashMap(A._platform__isSameInstance$closure(), _null, _null, t1, t1);
        t2 = $.$get$Squadron__converter();
        t1 = new A.ContextAwareConverter(t2, new A.SerializationContext(t1));
      } else
        t1 = $.$get$Squadron__converter();
      if (contextAware) {
        t2 = type$.Object;
        A.HashMap_HashMap(A.core__identical$closure(), _null, _null, t2, t2);
      }
      return new A._$Deser(t1);
    },
    _$Ser$(contextAware) {
      var _null = null,
        t1 = type$.Object,
        t2 = A.HashMap_HashMap(A._platform__isSameInstance$closure(), _null, _null, t1, t1),
        t3 = $.$get$Squadron__converter();
      t2 = new A.ContextAwareConverter(t3, new A.SerializationContext(t2));
      A.HashMap_HashMap(A.core__identical$closure(), _null, _null, t1, t1);
      return new A._$Ser(t2);
    },
    WalletTasks: function WalletTasks() {
    },
    WalletTasks_prepareTxsForSigningImpl_closure: function WalletTasks_prepareTxsForSigningImpl_closure() {
    },
    WalletTasks_prepareTxsForSigningImpl_closure0: function WalletTasks_prepareTxsForSigningImpl_closure0() {
    },
    WalletTasks_prepareTxsForSigningImpl_closure1: function WalletTasks_prepareTxsForSigningImpl_closure1(t0) {
      this.txUtxos = t0;
    },
    WalletTasks_prepareTxsForSigningImpl_closure2: function WalletTasks_prepareTxsForSigningImpl_closure2() {
    },
    WalletTasks_prepareTxsForSigningImpl_closure3: function WalletTasks_prepareTxsForSigningImpl_closure3(t0) {
      this.usedUtxosTxAndId = t0;
    },
    WalletTasks_prepareTxsForSigningImpl_closure4: function WalletTasks_prepareTxsForSigningImpl_closure4(t0, t1) {
      this.bech32Address = t0;
      this.txHash = t1;
    },
    WalletTasks_prepareTxsForSigningImpl_closure5: function WalletTasks_prepareTxsForSigningImpl_closure5() {
    },
    WalletTasks_prepareTxsForSigningImpl_closure6: function WalletTasks_prepareTxsForSigningImpl_closure6() {
    },
    WalletTasks_prepareTxsForSigningImpl_closure7: function WalletTasks_prepareTxsForSigningImpl_closure7() {
    },
    WalletTasks_prepareTxsForSigningImpl_closure8: function WalletTasks_prepareTxsForSigningImpl_closure8() {
    },
    WalletTasks_prepareTxsForSigningImpl_closure9: function WalletTasks_prepareTxsForSigningImpl_closure9() {
    },
    WalletTasks_prepareTxsForSigningImpl_closure10: function WalletTasks_prepareTxsForSigningImpl_closure10() {
    },
    WalletTasks_prepareTxsForSigningImpl_closure11: function WalletTasks_prepareTxsForSigningImpl_closure11() {
    },
    WalletTasks_prepareTxsForSigningImpl_closure12: function WalletTasks_prepareTxsForSigningImpl_closure12() {
    },
    WalletTasks_prepareTxsForSigningImpl_closure13: function WalletTasks_prepareTxsForSigningImpl_closure13() {
    },
    WalletTasks_prepareTxsForSigningImpl_closure14: function WalletTasks_prepareTxsForSigningImpl_closure14() {
    },
    WalletTasks_prepareTxsForSigningImpl_closure15: function WalletTasks_prepareTxsForSigningImpl_closure15() {
    },
    WalletTasks_signTransactionsBundle_closure: function WalletTasks_signTransactionsBundle_closure() {
    },
    WalletTasks_signTransactionsBundle_closure0: function WalletTasks_signTransactionsBundle_closure0() {
    },
    WalletTasks_signTransactionsBundle_closure1: function WalletTasks_signTransactionsBundle_closure1(t0) {
      this.wallet = t0;
    },
    WalletTasks_signTransactionsBundle__closure2: function WalletTasks_signTransactionsBundle__closure2(t0) {
      this.wallet = t0;
    },
    WalletTasks_signTransactionsBundle_closure2: function WalletTasks_signTransactionsBundle_closure2(t0) {
      this.wallet = t0;
    },
    WalletTasks_signTransactionsBundle__closure1: function WalletTasks_signTransactionsBundle__closure1(t0) {
      this.wallet = t0;
    },
    WalletTasks_signTransactionsBundle_closure3: function WalletTasks_signTransactionsBundle_closure3() {
    },
    WalletTasks_signTransactionsBundle_closure4: function WalletTasks_signTransactionsBundle_closure4(t0) {
      this.wallet = t0;
    },
    WalletTasks_signTransactionsBundle_closure5: function WalletTasks_signTransactionsBundle_closure5() {
    },
    WalletTasks_signTransactionsBundle_closure6: function WalletTasks_signTransactionsBundle_closure6(t0) {
      this.wallet = t0;
    },
    WalletTasks_signTransactionsBundle_closure7: function WalletTasks_signTransactionsBundle_closure7() {
    },
    WalletTasks_signTransactionsBundle_closure8: function WalletTasks_signTransactionsBundle_closure8(t0) {
      this.wallet = t0;
    },
    WalletTasks_signTransactionsBundle_closure9: function WalletTasks_signTransactionsBundle_closure9() {
    },
    WalletTasks_signTransactionsBundle_closure10: function WalletTasks_signTransactionsBundle_closure10(t0) {
      this.wallet = t0;
    },
    WalletTasks_signTransactionsBundle_closure11: function WalletTasks_signTransactionsBundle_closure11() {
    },
    WalletTasks_signTransactionsBundle_closure12: function WalletTasks_signTransactionsBundle_closure12(t0) {
      this.wallet = t0;
    },
    WalletTasks_signTransactionsBundle__closure0: function WalletTasks_signTransactionsBundle__closure0(t0) {
      this.wallet = t0;
    },
    WalletTasks_signTransactionsBundle_closure13: function WalletTasks_signTransactionsBundle_closure13(t0, t1, t2) {
      this.wallet = t0;
      this.networkId = t1;
      this.i = t2;
    },
    WalletTasks_signTransactionsBundle_closure14: function WalletTasks_signTransactionsBundle_closure14(t0, t1, t2) {
      this.wallet = t0;
      this.networkId = t1;
      this.i = t2;
    },
    WalletTasks_signTransactionsBundle_closure15: function WalletTasks_signTransactionsBundle_closure15(t0, t1, t2, t3, t4) {
      var _ = this;
      _.bech32PaymentCredsForIndex = t0;
      _.signAddressesAll = t1;
      _.paymentAddrForIndex = t2;
      _.bech32ChangeCredsForIndex = t3;
      _.changeAddrForIndex = t4;
    },
    WalletTasks_signTransactionsBundle_closure16: function WalletTasks_signTransactionsBundle_closure16(t0, t1, t2, t3, t4) {
      var _ = this;
      _.bech32PaymentCredsForIndex = t0;
      _.signAddressesAll = t1;
      _.paymentAddrForIndex = t2;
      _.bech32ChangeCredsForIndex = t3;
      _.changeAddrForIndex = t4;
    },
    WalletTasks_signTransactionsBundle_closure17: function WalletTasks_signTransactionsBundle_closure17(t0, t1, t2, t3, t4) {
      var _ = this;
      _.hexPaymentAddrForIndex = t0;
      _.signAddressesAll = t1;
      _.paymentAddrForIndex = t2;
      _.hexChangeAddrForIndex = t3;
      _.changeAddrForIndex = t4;
    },
    WalletTasks_signTransactionsBundle_closure18: function WalletTasks_signTransactionsBundle_closure18() {
    },
    WalletTasks_signTransactionsBundle_closure19: function WalletTasks_signTransactionsBundle_closure19() {
    },
    WalletTasks_signTransactionsBundle_closure20: function WalletTasks_signTransactionsBundle_closure20() {
    },
    WalletTasks_signTransactionsBundle_closure21: function WalletTasks_signTransactionsBundle_closure21(t0, t1) {
      this.signAddressesAll = t0;
      this.hdWallet = t1;
    },
    WalletTasks_signTransactionsBundle_closure22: function WalletTasks_signTransactionsBundle_closure22(t0, t1) {
      this.signAddressesAll = t0;
      this.hdWallet = t1;
    },
    WalletTasks_signTransactionsBundle_closure23: function WalletTasks_signTransactionsBundle_closure23(t0, t1) {
      this.signAddressesAll = t0;
      this.hdWallet = t1;
    },
    WalletTasks_signTransactionsBundle_closure24: function WalletTasks_signTransactionsBundle_closure24(t0, t1) {
      this.signAddressesAll = t0;
      this.hdWallet = t1;
    },
    WalletTasks_signTransactionsBundle_closure25: function WalletTasks_signTransactionsBundle_closure25(t0) {
      this.signAddressesAll = t0;
    },
    WalletTasks_signTransactionsBundle__closure: function WalletTasks_signTransactionsBundle__closure(t0) {
      this.bodyHash = t0;
    },
    WalletTasks_signData_dataFromAddress: function WalletTasks_signData_dataFromAddress(t0, t1, t2, t3, t4) {
      var _ = this;
      _.wallet = t0;
      _.hdWallet = t1;
      _.deriveMaxAddressCount = t2;
      _.networkId = t3;
      _.requestedSignerRaw = t4;
    },
    WalletTasks_signData_dataFromAddress_closure: function WalletTasks_signData_dataFromAddress_closure(t0, t1, t2) {
      this.requestedSigningAddress = t0;
      this.wallet = t1;
      this.hdWallet = t2;
    },
    WalletTasks_signData_dataFromAddress_closure0: function WalletTasks_signData_dataFromAddress_closure0(t0, t1, t2, t3) {
      var _ = this;
      _.deriveMaxAddressCount = t0;
      _.hdWallet = t1;
      _.networkId = t2;
      _.requestedSigningAddress = t3;
    },
    WalletTasks_signData_dataFromDrepIdOrCreds: function WalletTasks_signData_dataFromDrepIdOrCreds(t0, t1, t2) {
      this.wallet = t0;
      this.requestedSignerRaw = t1;
      this.hdWallet = t2;
    },
    WalletTasks_signData_closure: function WalletTasks_signData_closure(t0, t1, t2) {
      this.requestedSignerHex = t0;
      this.dataFromDrepIdOrCreds = t1;
      this.dataFromAddress = t2;
    },
    _credsFromNativeScripts_closure: function _credsFromNativeScripts_closure() {
    },
    ListCertsX_requiresDrepSignature_closure: function ListCertsX_requiresDrepSignature_closure(t0) {
      this.walletDRepCredentials = t0;
    },
    ListCertsX_requiresStakeSignature_closure: function ListCertsX_requiresStakeSignature_closure(t0) {
      this.walletStakeCredentials = t0;
    },
    ListCertsX_requiresCommitteeColdSignature_closure: function ListCertsX_requiresCommitteeColdSignature_closure(t0) {
      this.walletCommitteeColdCredentials = t0;
    },
    VotingProceduresX_requiresDrepSignature_closure: function VotingProceduresX_requiresDrepSignature_closure(t0) {
      this.walletDRepCredentials = t0;
    },
    VotingProceduresX_requiresCommitteeHotSignature_closure: function VotingProceduresX_requiresCommitteeHotSignature_closure(t0) {
      this.walletCommitteeHotCredentials = t0;
    },
    _extension_3__$getOperations_closure: function _extension_3__$getOperations_closure(t0) {
      this._this = t0;
    },
    _extension_3__$getOperations_closure0: function _extension_3__$getOperations_closure0(t0) {
      this._this = t0;
    },
    _extension_3__$getOperations_closure1: function _extension_3__$getOperations_closure1(t0) {
      this._this = t0;
    },
    _extension_3__$getOperations_closure2: function _extension_3__$getOperations_closure2(t0) {
      this._this = t0;
    },
    _extension_3__$getOperations_closure3: function _extension_3__$getOperations_closure3(t0) {
      this._this = t0;
    },
    _extension_3__$getOperations_closure4: function _extension_3__$getOperations_closure4(t0) {
      this._this = t0;
    },
    _extension_3__$getOperations_closure5: function _extension_3__$getOperations_closure5(t0) {
      this._this = t0;
    },
    _extension_3__$getOperations_closure6: function _extension_3__$getOperations_closure6(t0) {
      this._this = t0;
    },
    _extension_3__$getOperations_closure7: function _extension_3__$getOperations_closure7(t0) {
      this._this = t0;
    },
    _extension_3__$getOperations_closure8: function _extension_3__$getOperations_closure8(t0) {
      this._this = t0;
    },
    _extension_3__$getOperations_closure9: function _extension_3__$getOperations_closure9(t0) {
      this._this = t0;
    },
    _extension_3__$getOperations_closure10: function _extension_3__$getOperations_closure10(t0) {
      this._this = t0;
    },
    _extension_3__$getOperations_closure11: function _extension_3__$getOperations_closure11(t0) {
      this._this = t0;
    },
    _$WalletTasks$Invoker: function _$WalletTasks$Invoker() {
    },
    _$WalletTasks$Facade: function _$WalletTasks$Facade() {
    },
    _$WalletTasks$WorkerService: function _$WalletTasks$WorkerService() {
    },
    WalletTasksWorker: function WalletTasksWorker(t0, t1, t2, t3, t4) {
      var _ = this;
      _._entryPoint = t0;
      _.channelLogger = null;
      _._worker$_exceptionManager = t1;
      _._threadHook = t2;
      _.__Worker__stats_FI = $;
      _._openChannel = _._channel = null;
      _.Releasable__released = t3;
      _.Releasable__token = t4;
    },
    WalletTasksWorkerPool: function WalletTasksWorkerPool(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._workerFactory = t0;
      _.channelLogger = null;
      _._exceptionManager = t1;
      _.concurrencySettings = t2;
      _._workers = t3;
      _._deadWorkerStats = t4;
      _._stopped = false;
      _._maxSize = 0;
      _._workerPoolListeners = t5;
      _._startingWorkers = 0;
      _._queue = t6;
      _._worker_pool$_executing = t7;
      _._timer = null;
      _.Releasable__released = t8;
      _.Releasable__token = t9;
    },
    WalletTasksWorkerPool_closure: function WalletTasksWorkerPool_closure(t0) {
      this.threadHook = t0;
    },
    WalletTasksWorkerPool_ckdPubBip32Ed25519KeyDerivation_closure: function WalletTasksWorkerPool_ckdPubBip32Ed25519KeyDerivation_closure(t0, t1) {
      this.pubKey = t0;
      this.index = t1;
    },
    WalletTasksWorkerPool_toCardanoBaseAddress_closure: function WalletTasksWorkerPool_toCardanoBaseAddress_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.spend = t0;
      _.stake = t1;
      _.networkId = t2;
      _.paymentType = t3;
      _.stakeType = t4;
    },
    _$Deser: function _$Deser(t0) {
      var _ = this;
      _.___$Deser_$18_FI = _.___$Deser_$17_FI = _.___$Deser_$16_FI = _.___$Deser_$15_FI = _.___$Deser_$14_FI = _.___$Deser_$13_FI = _.___$Deser_$12_FI = _.___$Deser_$11_FI = _.___$Deser_$10_FI = _.___$Deser_$9_FI = _.___$Deser_$8_FI = _.___$Deser_$7_FI = _.___$Deser_$6_FI = _.___$Deser_$5_FI = _.___$Deser_$4_FI = _.___$Deser_$3_FI = _.___$Deser_$2_FI = _.___$Deser_$1_FI = _.___$Deser_$0_FI = $;
      _._converter = t0;
    },
    _$Deser_$0_closure: function _$Deser_$0_closure(t0) {
      this.$this = t0;
    },
    _$Deser_$3_closure: function _$Deser_$3_closure(t0) {
      this.$this = t0;
    },
    _$Deser_$4_closure: function _$Deser_$4_closure(t0) {
      this.$this = t0;
    },
    _$Deser_$5_closure: function _$Deser_$5_closure(t0) {
      this.$this = t0;
    },
    _$Deser_$6_closure: function _$Deser_$6_closure(t0) {
      this.$this = t0;
    },
    _$Deser_$8_closure: function _$Deser_$8_closure(t0) {
      this.$this = t0;
    },
    _$Deser_$9_closure: function _$Deser_$9_closure(t0) {
      this.$this = t0;
    },
    _$Deser_$10_closure: function _$Deser_$10_closure(t0) {
      this.$this = t0;
    },
    _$Deser_$11_closure: function _$Deser_$11_closure(t0) {
      this.$this = t0;
    },
    _$Deser_$12_closure: function _$Deser_$12_closure(t0) {
      this.$this = t0;
    },
    _$Deser_$14_closure: function _$Deser_$14_closure(t0) {
      this.$this = t0;
    },
    _$Deser_$18_closure: function _$Deser_$18_closure(t0) {
      this.$this = t0;
    },
    _$Ser: function _$Ser(t0) {
      var _ = this;
      _.___$Ser_$15_FI = _.___$Ser_$14_FI = _.___$Ser_$13_FI = _.___$Ser_$12_FI = _.___$Ser_$11_FI = _.___$Ser_$10_FI = _.___$Ser_$9_FI = _.___$Ser_$8_FI = _.___$Ser_$7_FI = _.___$Ser_$6_FI = _.___$Ser_$5_FI = _.___$Ser_$4_FI = _.___$Ser_$3_FI = _.___$Ser_$2_FI = _.___$Ser_$1_FI = _.___$Ser_$0_FI = $;
      _._converter = t0;
    },
    _$Ser_$0_closure: function _$Ser_$0_closure(t0) {
      this.$this = t0;
    },
    _$Ser_$1_closure: function _$Ser_$1_closure(t0) {
      this.$this = t0;
    },
    _$Ser_$2_closure: function _$Ser_$2_closure(t0) {
      this.$this = t0;
    },
    _$Ser_$3_closure: function _$Ser_$3_closure(t0) {
      this.$this = t0;
    },
    _$Ser_$4_closure: function _$Ser_$4_closure(t0) {
      this.$this = t0;
    },
    _$Ser_$5_closure: function _$Ser_$5_closure(t0) {
      this.$this = t0;
    },
    _$Ser_$6_closure: function _$Ser_$6_closure(t0) {
      this.$this = t0;
    },
    _$Ser_$7_closure: function _$Ser_$7_closure(t0) {
      this.$this = t0;
    },
    _$Ser_$8_closure: function _$Ser_$8_closure(t0) {
      this.$this = t0;
    },
    _$Ser_$9_closure: function _$Ser_$9_closure(t0) {
      this.$this = t0;
    },
    _$Ser_$10_closure: function _$Ser_$10_closure(t0) {
      this.$this = t0;
    },
    _$Ser_$11_closure: function _$Ser_$11_closure(t0) {
      this.$this = t0;
    },
    _$Ser_$12_closure: function _$Ser_$12_closure(t0) {
      this.$this = t0;
    },
    _$Ser_$15_closure: function _$Ser_$15_closure(t0) {
      this.$this = t0;
    },
    _WalletTasksWorker_Worker__$WalletTasks$Invoker: function _WalletTasksWorker_Worker__$WalletTasks$Invoker() {
    },
    _WalletTasksWorker_Worker__$WalletTasks$Invoker__$WalletTasks$Facade: function _WalletTasksWorker_Worker__$WalletTasks$Invoker__$WalletTasks$Facade() {
    },
    _WalletTasksWorkerPool_WorkerPool__$WalletTasks$Facade: function _WalletTasksWorkerPool_WorkerPool__$WalletTasks$Facade() {
    },
    WalletTasksSign_findCardanoSigner(deriveMaxAddressCount, pubAccount, requestedSignerRaw) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.CardanoSigner),
        $async$returnValue, t1, requestedSignerHex, _0_0, t2;
      var $async$WalletTasksSign_findCardanoSigner = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (B.JSArray_methods.any$1(A._setArrayType(["addr", "stake", "drep", "cc_hot", "cc_cold"], type$.JSArray_String), B.JSString_methods.get$startsWith(requestedSignerRaw))) {
                t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(A.Bech32Encoder_decodeNoHrpCheck(requestedSignerRaw, 256), false));
                requestedSignerHex = B.C_HexCodec.get$encoder().convert$1(t1);
              } else
                requestedSignerHex = requestedSignerRaw;
              _0_0 = requestedSignerHex.length;
              $label0$0: {
                if (56 === _0_0) {
                  t1 = A._dataFromDrepIdOrDrepCreds(deriveMaxAddressCount, requestedSignerHex, pubAccount, requestedSignerRaw);
                  break $label0$0;
                }
                if (58 === _0_0) {
                  t1 = new A.WalletTasksSign_findCardanoSigner_closure(requestedSignerHex, pubAccount, deriveMaxAddressCount, requestedSignerRaw).call$0();
                  break $label0$0;
                }
                if (114 === _0_0) {
                  type$.HexCodec._eval$1("Codec.T")._as(requestedSignerHex);
                  t1 = A._dataFromAddress(deriveMaxAddressCount, pubAccount, requestedSignerRaw, A.CardanoAddress_CardanoAddress(new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(requestedSignerHex)))));
                  break $label0$0;
                }
                t1 = A.throwExpression(A.SigningAddressNotValidException$(requestedSignerHex, "When signing payload message"));
              }
              t2 = type$.CardanoSigner;
              $async$goto = 3;
              return A._asyncAwait(type$.Future_CardanoSigner._is(t1) ? t1 : A._Future$value(t2._as(t1), t2), $async$WalletTasksSign_findCardanoSigner);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$WalletTasksSign_findCardanoSigner, $async$completer);
    },
    _dataFromDrepIdOrDrepCreds(deriveMaxAddressCount, drepIdOrCredsHex, pubAccount, requestedSignerRaw) {
      var walletDRepDerivation = pubAccount.get$dRepDerivation().get$value();
      if (!B.JSString_methods.endsWith$1(drepIdOrCredsHex, walletDRepDerivation.get$_credentialsHex().get$value()))
        throw A.wrapException(A.SigningAddressNotFoundException$(A.LinkedHashSet_LinkedHashSet$_literal([requestedSignerRaw], type$.String), 1));
      type$.HexCodec._eval$1("Codec.T")._as(requestedSignerRaw);
      return new A.CardanoSigner(walletDRepDerivation.bytes, new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(requestedSignerRaw))), new A.CardanoSigningPath_Shelley(-1, 0, B.Bip32KeyRole_3_3_drepCredential));
    },
    _dataFromAddress(deriveMaxAddressCount, pubAccount, requestedSignerHex, requestedSigningAddress) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.CardanoSigner),
        $async$returnValue, t1, _0_0;
      var $async$_dataFromAddress = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _0_0 = requestedSigningAddress.get$addressType();
              $label0$0: {
                if (B.AddressType_3 === _0_0) {
                  t1 = new A._dataFromAddress_closure(requestedSigningAddress, pubAccount, requestedSignerHex).call$0();
                  break $label0$0;
                }
                if (B.AddressType_0 === _0_0) {
                  t1 = new A._dataFromAddress_closure0(deriveMaxAddressCount, pubAccount, requestedSigningAddress, requestedSignerHex).call$0();
                  break $label0$0;
                }
                t1 = B.AddressType_1 === _0_0 || B.AddressType_2 === _0_0 || B.AddressType_4 === _0_0 ? A.throwExpression(A.UnexpectedSigningAddressTypeException$(requestedSignerHex, "When signing payload message", _0_0)) : null;
              }
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_dataFromAddress, $async$completer);
    },
    WalletTasksSign_findCardanoSigner_closure: function WalletTasksSign_findCardanoSigner_closure(t0, t1, t2, t3) {
      var _ = this;
      _.requestedSignerHex = t0;
      _.pubAccount = t1;
      _.deriveMaxAddressCount = t2;
      _.requestedSignerRaw = t3;
    },
    _dataFromAddress_closure: function _dataFromAddress_closure(t0, t1, t2) {
      this.requestedSigningAddress = t0;
      this.pubAccount = t1;
      this.requestedSignerHex = t2;
    },
    _dataFromAddress_closure0: function _dataFromAddress_closure0(t0, t1, t2, t3) {
      var _ = this;
      _.deriveMaxAddressCount = t0;
      _.pubAccount = t1;
      _.requestedSigningAddress = t2;
      _.requestedSignerHex = t3;
    },
    CborCodec: function CborCodec() {
    },
    CborDecoder: function CborDecoder() {
    },
    CborDecoder_convert_closure: function CborDecoder_convert_closure(t0) {
      this._box_0 = t0;
    },
    Reader: function Reader(t0) {
      this._stage0$_bytes = t0;
      this._stage0$_offset = this._read = 0;
    },
    _readHeader(reader) {
      var additionalInfo, dataBytes, t1, _null = null,
        x = reader.peekUint8$0();
      if (x == null)
        return _null;
      additionalInfo = x & 31;
      if (additionalInfo < 24 || additionalInfo === 31) {
        reader.readUint8$0();
        dataBytes = new Uint8Array(0);
      } else
        switch (additionalInfo) {
          case 24:
            if (reader._stage0$_bytes._typed_buffer$_length - reader._read < 2)
              return _null;
            reader.readUint8$0();
            t1 = reader.readExactBytes$1(1);
            t1.toString;
            dataBytes = t1;
            break;
          case 25:
            if (reader._stage0$_bytes._typed_buffer$_length - reader._read < 3)
              return _null;
            reader.readUint8$0();
            t1 = reader.readExactBytes$1(2);
            t1.toString;
            dataBytes = t1;
            break;
          case 26:
            if (reader._stage0$_bytes._typed_buffer$_length - reader._read < 5)
              return _null;
            reader.readUint8$0();
            t1 = reader.readExactBytes$1(4);
            t1.toString;
            dataBytes = t1;
            break;
          case 27:
            if (reader._stage0$_bytes._typed_buffer$_length - reader._read < 9)
              return _null;
            reader.readUint8$0();
            t1 = reader.readExactBytes$1(8);
            t1.toString;
            dataBytes = t1;
            break;
          default:
            throw A.wrapException(A.CborMalformedException$("Invalid CBOR additional info", reader._stage0$_offset));
        }
      return new A.Header(x >>> 5, additionalInfo, dataBytes);
    },
    Header: function Header(t0, t1, t2) {
      this.majorType = t0;
      this.additionalInfo = t1;
      this.dataBytes = t2;
    },
    RawValue: function RawValue(t0, t1, t2) {
      this.header = t0;
      this.data = t1;
      this.start = t2;
    },
    _Builder: function _Builder(t0, t1, t2, t3) {
      var _ = this;
      _.header = t0;
      _.reader = t1;
      _.offset = t2;
      _.bytes = t3;
    },
    RawSink: function RawSink(t0, t1) {
      this._reader = t0;
      this._stage1$_sink = t1;
      this._stage1$_next = null;
    },
    RawValueTagged: function RawValueTagged(t0, t1, t2, t3) {
      var _ = this;
      _.header = t0;
      _.data = t1;
      _.offset = t2;
      _.tags = t3;
    },
    RawSinkTagged: function RawSinkTagged(t0, t1) {
      this.sink = t0;
      this._stage2$_tags = t1;
    },
    _CborUnexpectedBreakException$(offset) {
      return new A._CborUnexpectedBreakException("Unexpected break", offset, null);
    },
    _createString(str, offset, tags) {
      var cbor, _null = null;
      switch (A.IterableExtension_lastWhereOrNull(tags, A.utils__isHintSubtype$closure(), type$.int)) {
        case 0:
          cbor = new A._CborDateTimeStringImpl(tags, _null, str);
          break;
        case 32:
          cbor = new A._CborUriImpl(tags, _null, str);
          break;
        case 33:
          cbor = new A._CborBase64UrlImpl(tags, _null, str);
          break;
        case 34:
          cbor = new A._CborBase64Impl(tags, _null, str);
          break;
        case 35:
          cbor = new A._CborRegexImpl(tags, _null, str);
          break;
        case 36:
          cbor = new A._CborMimeImpl(tags, _null, str);
          break;
        default:
          cbor = new A._CborStringImpl(tags, _null, str);
          break;
      }
      return cbor;
    },
    _createBytes(data, offset, tags) {
      switch (A.IterableExtension_lastWhereOrNull(tags, A.utils__isHintSubtype$closure(), type$.int)) {
        case 2:
          return new A._CborBigIntImpl(false, data, tags);
        case 3:
          return new A._CborBigIntImpl(true, data, tags);
        default:
          return new A._CborBytesImpl(data, tags);
      }
    },
    _createInt(raw) {
      var t1 = raw.header,
        data = t1.get$arg();
      if (data.get$isIndefiniteLength())
        throw A.wrapException(new A._CborUnexpectedUndefinedLengthException("Major type can not be undefined length", raw.offset, null));
      if (t1.majorType === 1)
        data = data.$not(0);
      t1 = raw.tags;
      if (J.$eq$(A.IterableExtension_lastWhereOrNull(t1, A.utils__isHintSubtype$closure(), type$.int), 1))
        return new A._CborDateTimeIntImpl(data.toInt$0(0), t1);
      else if (data.get$isValidInt())
        return new A._CborSmallIntImpl(data.toInt$0(0), B.List_empty);
      else
        return A.CborInt_CborInt(data.toBigInt$0());
    },
    _createFloat(raw) {
      var t2, value,
        t1 = raw.header;
      switch (t1.additionalInfo) {
        case 25:
          t1 = t1.dataBytes;
          t2 = t1.length;
          if (t2 !== 2)
            A.throwExpression(A.ArgumentError$(t2, "Length for Float16 must be 2."));
          value = B._Codec16_10_5.decode$2(t1, B.C_Endian).toDouble$0(0);
          break;
        case 26:
          t1 = t1.dataBytes;
          t2 = t1.length;
          if (t2 !== 4)
            A.throwExpression(A.ArgumentError$(t2, "Length for Float32 must be 4."));
          value = J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(t1), 0, null).getFloat32(0, false);
          break;
        case 27:
          value = A.FloatParts_FloatParts$fromFloat64Bytes(t1.dataBytes, B.C_Endian).float64;
          break;
        default:
          throw A.wrapException(new A.Error());
      }
      t1 = raw.tags;
      return J.$eq$(A.IterableExtension_lastWhereOrNull(t1, A.utils__isHintSubtype$closure(), type$.int), 1) ? new A._CborDateTimeFloatImpl(value, t1) : new A._CborFloatImpl(value, t1);
    },
    _createList(raw, items, type) {
      var numerator, denominator, t2, exponent, mantissa,
        t1 = raw.tags;
      switch (A.IterableExtension_lastWhereOrNull(t1, A.utils__isHintSubtype$closure(), type$.int)) {
        case 30:
          if (items.length !== 2)
            break;
          numerator = B.JSArray_methods.get$first(items);
          if (1 >= items.length)
            return A.ioore(items, 1);
          denominator = items[1];
          t2 = type$.CborInt;
          if (!t2._is(numerator) || !t2._is(denominator) || denominator.toInt$0(0) === 0)
            break;
          return A._CborRationalNumberImpl$(denominator, numerator, t1, type);
        case 4:
          if (items.length !== 2)
            break;
          exponent = B.JSArray_methods.get$first(items);
          if (1 >= items.length)
            return A.ioore(items, 1);
          mantissa = items[1];
          t2 = type$.CborInt;
          if (!t2._is(exponent) || !t2._is(mantissa) || exponent instanceof A._CborBigIntImpl)
            break;
          t2 = A.List_List$_of(A._setArrayType([exponent, mantissa], type$.JSArray_CborValue), type$.CborValue);
          t2.$flags = 1;
          return new A._CborDecimalFractionImpl(exponent, mantissa, t1, type, t2);
        case 5:
          if (items.length !== 2)
            break;
          exponent = B.JSArray_methods.get$first(items);
          if (1 >= items.length)
            return A.ioore(items, 1);
          mantissa = items[1];
          t2 = type$.CborInt;
          if (!t2._is(exponent) || !t2._is(mantissa) || exponent instanceof A._CborBigIntImpl)
            break;
          t2 = A.List_List$_of(A._setArrayType([exponent, mantissa], type$.JSArray_CborValue), type$.CborValue);
          t2.$flags = 1;
          return new A._CborBigFloatImpl(exponent, mantissa, t1, type, t2);
      }
      return new A._CborListImpl(t1, type, items);
    },
    _createMap(raw, items, type) {
      var t1, t2, t3;
      if (B.JSInt_methods.$mod(items.length, 2) !== 0)
        throw A.wrapException(A.CborMalformedException$("Map has more keys than values", raw.offset));
      t1 = type$.CborValue;
      t2 = A.IterableExt_chunks(items, 2, t1);
      t3 = t2.$ti;
      return new A._CborMapImpl(raw.tags, type, A.Map_Map$fromEntries(A.MappedIterable_MappedIterable(t2, t3._eval$1("MapEntry<CborValue,CborValue>(Iterable.E)")._as(new A._createMap_closure()), t3._eval$1("Iterable.E"), type$.MapEntry_CborValue_CborValue), t1, t1));
    },
    CborSink: function CborSink(t0) {
      this._stage3$_sink = t0;
      this._stage3$_next = null;
    },
    _CborUnexpectedBreakException: function _CborUnexpectedBreakException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    _CborUnexpectedUndefinedLengthException: function _CborUnexpectedUndefinedLengthException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    _createMap_closure: function _createMap_closure() {
    },
    _Builder0: function _Builder0() {
    },
    _ValueBuilder: function _ValueBuilder(t0) {
      this.data = t0;
    },
    _ListBuilder: function _ListBuilder(t0, t1) {
      this.raw = t0;
      this.items = t1;
      this._stage3$_next = null;
    },
    _MapBuilder: function _MapBuilder(t0, t1) {
      this.raw = t0;
      this.items = t1;
      this._stage3$_next = null;
    },
    _IndefiniteLengthByteBuilder: function _IndefiniteLengthByteBuilder(t0, t1) {
      this.raw = t0;
      this.bytes = t1;
      this.isDone = false;
    },
    _IndefiniteLengthStringBuilder: function _IndefiniteLengthStringBuilder(t0, t1) {
      this.raw = t0;
      this.bytes = t1;
      this.isDone = false;
    },
    _IndefiniteLengthListBuilder: function _IndefiniteLengthListBuilder(t0, t1) {
      var _ = this;
      _.raw = t0;
      _.items = t1;
      _.isDone = false;
      _._stage3$_next = null;
    },
    _IndefiniteLengthMapBuilder: function _IndefiniteLengthMapBuilder(t0, t1) {
      var _ = this;
      _.raw = t0;
      _.items = t1;
      _.isDone = false;
      _._stage3$_next = null;
    },
    CborEncoder: function CborEncoder() {
    },
    u64BytesHelper(x) {
      var t1, bytes, i, t2, t3,
        rstr = B.JSInt_methods.toRadixString$1(x, 2);
      for (; t1 = rstr.length, t1 < 64;)
        rstr = "0" + rstr;
      bytes = A._setArrayType([], type$.JSArray_int);
      for (t1 = t1 === 0, i = 0; i < 8; ++i) {
        t2 = t1 ? B.StringCharacters_GVp : new A.StringCharacters(rstr);
        t3 = i * 8;
        B.JSArray_methods.add$1(bytes, A.int_parse(t2.getRange$2(0, t3, t3 + 8).toString$0(0), 2));
      }
      return new Uint8Array(A._ensureNativeList(bytes));
    },
    EncodeSink: function EncodeSink() {
    },
    _BufferEncodeSink: function _BufferEncodeSink(t0, t1) {
      this.buffer = t0;
      this._references = t1;
    },
    CborMalformedException$(message, offset) {
      return new A.CborMalformedException(message, offset, null);
    },
    CborCyclicError$(cause) {
      return new A.CborCyclicError();
    },
    CborMalformedException: function CborMalformedException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    CborCyclicError: function CborCyclicError() {
    },
    _ArgIndefiniteLength: function _ArgIndefiniteLength() {
    },
    _ArgInt: function _ArgInt(t0) {
      this.value = t0;
    },
    _ArgBigInt: function _ArgBigInt(t0) {
      this.value = t0;
    },
    CborBytes___new_tearOff(bytes, tags) {
      var t1 = type$.List_int;
      return new A._CborBytesImpl(t1._as(bytes), t1._as(tags));
    },
    CborBigInt_CborBigInt(value, tags) {
      var t1, b, i, t2,
        negative = value._isNegative;
      if (negative) {
        tags = A._setArrayType([3], type$.JSArray_int);
        value = value.$not(0);
      } else
        tags = A._setArrayType([2], type$.JSArray_int);
      t1 = B.JSInt_methods._tdivFast$1(value.get$bitLength(0) + 7, 8);
      b = new Uint8Array(t1);
      for (i = t1 - 1; i >= 0; --i) {
        t2 = $.$get$_BigIntImpl_one();
        t2 = value.$and(0, t2.$shl(0, 8).$sub(0, t2)).toInt$0(0);
        if (!(i < t1))
          return A.ioore(b, i);
        b[i] = t2;
        value = value.$shr(0, 8);
      }
      return negative ? new A._CborBigIntImpl(true, b, tags) : new A._CborBigIntImpl(false, b, tags);
    },
    _CborBytesImpl: function _CborBytesImpl(t0, t1) {
      this.bytes = t0;
      this.tags = t1;
    },
    _CborBytesIndefiniteLengthImpl: function _CborBytesIndefiniteLengthImpl(t0, t1) {
      this.tags = t0;
      this.bytesList = t1;
    },
    _CborEncodeIndefiniteLengthBytesImpl: function _CborEncodeIndefiniteLengthBytesImpl(t0) {
      this.items = t0;
    },
    _CborEncodeDefiniteLengthBytesImpl: function _CborEncodeDefiniteLengthBytesImpl(t0) {
      this.inner = t0;
    },
    _CborBigIntImpl: function _CborBigIntImpl(t0, t1, t2) {
      this.isNegative = t0;
      this.bytes = t1;
      this.tags = t2;
    },
    __CborBytesImpl_Object_CborValueMixin: function __CborBytesImpl_Object_CborValueMixin() {
    },
    __CborBytesIndefiniteLengthImpl_Object_CborValueMixin: function __CborBytesIndefiniteLengthImpl_Object_CborValueMixin() {
    },
    __CborEncodeDefiniteLengthBytesImpl_Object_CborValueMixin: function __CborEncodeDefiniteLengthBytesImpl_Object_CborValueMixin() {
    },
    __CborEncodeIndefiniteLengthBytesImpl_Object_CborValueMixin: function __CborEncodeIndefiniteLengthBytesImpl_Object_CborValueMixin() {
    },
    CborFloatPrecision: function CborFloatPrecision(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _CborFloatImpl: function _CborFloatImpl(t0, t1) {
      this.value = t0;
      this.tags = t1;
    },
    _CborDateTimeFloatImpl: function _CborDateTimeFloatImpl(t0, t1) {
      this.value = t0;
      this.tags = t1;
    },
    __CborFloatImpl_Object_CborValueMixin: function __CborFloatImpl_Object_CborValueMixin() {
    },
    CborInt_CborInt(value) {
      var t1;
      if (value.get$isValidInt()) {
        t1 = value.toInt$0(0);
        return new A._CborSmallIntImpl(t1, B.List_empty);
      }
      if ((value._isNegative ? value.$not(0).get$bitLength(0) : value.get$bitLength(0)) <= 64)
        t1 = new A._LargeInt(value, B.List_empty);
      else
        t1 = A.CborBigInt_CborBigInt(value, null);
      return t1;
    },
    _CborSmallIntImpl: function _CborSmallIntImpl(t0, t1) {
      this.value = t0;
      this.tags = t1;
    },
    _LargeInt: function _LargeInt(t0, t1) {
      this.value = t0;
      this.tags = t1;
    },
    _CborDateTimeIntImpl: function _CborDateTimeIntImpl(t0, t1) {
      this.value = t0;
      this.tags = t1;
    },
    __CborSmallIntImpl_Object_CborValueMixin: function __CborSmallIntImpl_Object_CborValueMixin() {
    },
    __LargeInt_Object_CborValueMixin: function __LargeInt_Object_CborValueMixin() {
    },
    ToJsonOptions: function ToJsonOptions(t0, t1, t2) {
      this.encoding = t0;
      this.allowMalformedUtf8 = t1;
      this.substituteValue = t2;
    },
    JsonBytesEncoding: function JsonBytesEncoding(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Break: function Break() {
    },
    CborValueMixin: function CborValueMixin() {
    },
    _Break_Object_CborValueMixin: function _Break_Object_CborValueMixin() {
    },
    _CborRationalNumberImpl$(denominator, numerator, tags, type) {
      var t1 = A.List_List$_of(A._setArrayType([numerator, denominator], type$.JSArray_CborValue), type$.CborValue);
      t1.$flags = 1;
      return new A._CborRationalNumberImpl(numerator, denominator, tags, type, t1);
    },
    _CborListImpl: function _CborListImpl(t0, t1, t2) {
      this.tags = t0;
      this.type = t1;
      this._base = t2;
    },
    _CborListImpl_toJsonInternal_closure: function _CborListImpl_toJsonInternal_closure(t0, t1, t2) {
      this.$this = t0;
      this.cyclicCheck = t1;
      this.o = t2;
    },
    _CborEncodeIndefiniteLengthListImpl: function _CborEncodeIndefiniteLengthListImpl(t0) {
      this.inner = t0;
    },
    _CborEncodeDefiniteLengthListImpl: function _CborEncodeDefiniteLengthListImpl(t0) {
      this.inner = t0;
    },
    _CborDecimalFractionImpl: function _CborDecimalFractionImpl(t0, t1, t2, t3, t4) {
      var _ = this;
      _.exponent = t0;
      _.mantissa = t1;
      _.tags = t2;
      _.type = t3;
      _._base = t4;
    },
    _CborRationalNumberImpl: function _CborRationalNumberImpl(t0, t1, t2, t3, t4) {
      var _ = this;
      _.numerator = t0;
      _.denominator = t1;
      _.tags = t2;
      _.type = t3;
      _._base = t4;
    },
    _CborBigFloatImpl: function _CborBigFloatImpl(t0, t1, t2, t3, t4) {
      var _ = this;
      _.exponent = t0;
      _.mantissa = t1;
      _.tags = t2;
      _.type = t3;
      _._base = t4;
    },
    __CborBigFloatImpl_DelegatingList_CborValueMixin: function __CborBigFloatImpl_DelegatingList_CborValueMixin() {
    },
    __CborDecimalFractionImpl_DelegatingList_CborValueMixin: function __CborDecimalFractionImpl_DelegatingList_CborValueMixin() {
    },
    __CborEncodeDefiniteLengthListImpl_Object_CborValueMixin: function __CborEncodeDefiniteLengthListImpl_Object_CborValueMixin() {
    },
    __CborEncodeIndefiniteLengthListImpl_Object_CborValueMixin: function __CborEncodeIndefiniteLengthListImpl_Object_CborValueMixin() {
    },
    __CborListImpl_DelegatingList_CborValueMixin: function __CborListImpl_DelegatingList_CborValueMixin() {
    },
    __CborRationalNumberImpl_DelegatingList_CborValueMixin: function __CborRationalNumberImpl_DelegatingList_CborValueMixin() {
    },
    _CborMapImpl: function _CborMapImpl(t0, t1, t2) {
      this.tags = t0;
      this.type = t1;
      this._base = t2;
    },
    _CborMapImpl_toJsonInternal_closure: function _CborMapImpl_toJsonInternal_closure(t0, t1) {
      this.cyclicCheck = t0;
      this.o = t1;
    },
    _CborEncodeIndefiniteLengthMapImpl: function _CborEncodeIndefiniteLengthMapImpl(t0) {
      this.inner = t0;
    },
    _CborEncodeDefiniteLengthMapImpl: function _CborEncodeDefiniteLengthMapImpl(t0) {
      this.inner = t0;
    },
    __CborEncodeDefiniteLengthMapImpl_Object_CborValueMixin: function __CborEncodeDefiniteLengthMapImpl_Object_CborValueMixin() {
    },
    __CborEncodeIndefiniteLengthMapImpl_Object_CborValueMixin: function __CborEncodeIndefiniteLengthMapImpl_Object_CborValueMixin() {
    },
    __CborMapImpl_DelegatingMap_CborValueMixin: function __CborMapImpl_DelegatingMap_CborValueMixin() {
    },
    _CborSimpleValueImpl: function _CborSimpleValueImpl(t0, t1) {
      this.simpleValue = t0;
      this.tags = t1;
    },
    _CborNullImpl: function _CborNullImpl(t0, t1) {
      this.simpleValue = t0;
      this.tags = t1;
    },
    _CborUndefinedImpl: function _CborUndefinedImpl(t0, t1) {
      this.simpleValue = t0;
      this.tags = t1;
    },
    _CborBoolImpl: function _CborBoolImpl(t0, t1, t2) {
      this.value = t0;
      this.simpleValue = t1;
      this.tags = t2;
    },
    __CborSimpleValueImpl_Object_CborValueMixin: function __CborSimpleValueImpl_Object_CborValueMixin() {
    },
    _CborStringImpl: function _CborStringImpl(t0, t1, t2) {
      this.tags = t0;
      this._string$_string = t1;
      this._utf8 = t2;
    },
    _CborIndefiniteLengthStringImpl: function _CborIndefiniteLengthStringImpl(t0, t1) {
      this.tags = t0;
      this._string$_string = null;
      this._utf8 = t1;
    },
    _CborEncodeIndefiniteLengthStringImpl: function _CborEncodeIndefiniteLengthStringImpl(t0) {
      this.items = t0;
    },
    _CborEncodeDefiniteLengthStringImpl: function _CborEncodeDefiniteLengthStringImpl(t0) {
      this.inner = t0;
    },
    _CborDateTimeStringImpl: function _CborDateTimeStringImpl(t0, t1, t2) {
      this.tags = t0;
      this._string$_string = t1;
      this._utf8 = t2;
    },
    _CborUriImpl: function _CborUriImpl(t0, t1, t2) {
      this.tags = t0;
      this._string$_string = t1;
      this._utf8 = t2;
    },
    _CborBase64Impl: function _CborBase64Impl(t0, t1, t2) {
      this.tags = t0;
      this._string$_string = t1;
      this._utf8 = t2;
    },
    _CborBase64UrlImpl: function _CborBase64UrlImpl(t0, t1, t2) {
      this.tags = t0;
      this._string$_string = t1;
      this._utf8 = t2;
    },
    _CborRegexImpl: function _CborRegexImpl(t0, t1, t2) {
      this.tags = t0;
      this._string$_string = t1;
      this._utf8 = t2;
    },
    _CborMimeImpl: function _CborMimeImpl(t0, t1, t2) {
      this.tags = t0;
      this._string$_string = t1;
      this._utf8 = t2;
    },
    __CborEncodeDefiniteLengthStringImpl_Object_CborValueMixin: function __CborEncodeDefiniteLengthStringImpl_Object_CborValueMixin() {
    },
    __CborEncodeIndefiniteLengthStringImpl_Object_CborValueMixin: function __CborEncodeIndefiniteLengthStringImpl_Object_CborValueMixin() {
    },
    __CborIndefiniteLengthStringImpl_Object_CborValueMixin: function __CborIndefiniteLengthStringImpl_Object_CborValueMixin() {
    },
    __CborStringImpl_Object_CborValueMixin: function __CborStringImpl_Object_CborValueMixin() {
    },
    CborLengthType: function CborLengthType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    StringCharacters: function StringCharacters(t0) {
      this.string = t0;
    },
    StringCharacterRange: function StringCharacterRange(t0, t1, t2) {
      var _ = this;
      _._characters_impl$_string = t0;
      _._characters_impl$_start = t1;
      _._end = t2;
      _._currentCache = null;
    },
    Breaks: function Breaks(t0, t1, t2, t3) {
      var _ = this;
      _.base = t0;
      _.end = t1;
      _.cursor = t2;
      _.state = t3;
    },
    DefaultEquality: function DefaultEquality(t0) {
      this.$ti = t0;
    },
    IterableEquality: function IterableEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    },
    ListEquality: function ListEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    },
    _UnorderedEquality: function _UnorderedEquality() {
    },
    UnorderedIterableEquality: function UnorderedIterableEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    },
    SetEquality: function SetEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    },
    _MapEntry: function _MapEntry(t0, t1, t2) {
      this.equality = t0;
      this.key = t1;
      this.value = t2;
    },
    MapEquality: function MapEquality(t0, t1, t2) {
      this._keyEquality = t0;
      this._valueEquality = t1;
      this.$ti = t2;
    },
    DeepCollectionEquality: function DeepCollectionEquality(t0) {
      this._unordered = t0;
    },
    UnmodifiableSetMixin__throw() {
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable Set"));
    },
    UnmodifiableSetView: function UnmodifiableSetView() {
    },
    UnmodifiableSetMixin: function UnmodifiableSetMixin() {
    },
    _UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin: function _UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin() {
    },
    _DelegatingIterableBase: function _DelegatingIterableBase() {
    },
    DelegatingList: function DelegatingList() {
    },
    DelegatingSet: function DelegatingSet() {
    },
    DelegatingMap: function DelegatingMap() {
    },
    _hexEncode(bytes) {
      var i, j, byte, j0,
        _s16_ = "0123456789abcdef",
        t1 = bytes.length,
        t2 = t1 * 2,
        charCodes = new Uint8Array(t2);
      for (i = 0, j = 0; i < t1; ++i) {
        byte = bytes[i];
        j0 = j + 1;
        if (!(j < t2))
          return A.ioore(charCodes, j);
        charCodes[j] = _s16_.charCodeAt(byte >>> 4 & 15);
        j = j0 + 1;
        if (!(j0 < t2))
          return A.ioore(charCodes, j0);
        charCodes[j0] = _s16_.charCodeAt(byte & 15);
      }
      return A.String_String$fromCharCodes(charCodes, 0, null);
    },
    Digest: function Digest(t0) {
      this.bytes = t0;
    },
    DigestSink: function DigestSink() {
      this._digest_sink$_value = null;
    },
    Hash: function Hash() {
    },
    HashSink: function HashSink() {
    },
    _Sha256: function _Sha256() {
    },
    _Sha32BitSink: function _Sha32BitSink() {
    },
    _Sha256Sink: function _Sha256Sink(t0, t1, t2, t3, t4) {
      var _ = this;
      _._digest = t0;
      _._extended = t1;
      _._hash_sink$_sink = t2;
      _._currentChunk = t3;
      _._lengthInBytes = 0;
      _._pendingData = t4;
      _._isClosed = false;
    },
    Base58Exception$(cause) {
      return new A.Base58Exception();
    },
    Alphabet$(s) {
      var t1 = new A.Alphabet();
      t1.Alphabet$1(s, {});
      return t1;
    },
    FastBase58EncodingAlphabet(bin, alphabet) {
      var out, t1, t2, i, val, t3, _box_0 = {},
        size = _box_0.size = bin.length,
        zcount = 0;
      while (true) {
        if (!(zcount < size && bin[zcount] === 0))
          break;
        ++zcount;
      }
      size = _box_0.size = zcount + B.JSInt_methods._tdivFast$1((size - zcount) * 555, 406) + 1;
      out = A.List_List$filled(size, 0, false, type$.int);
      _box_0.high = _box_0.i = 0;
      _box_0.high = _box_0.size - 1;
      B.JSArray_methods.forEach$1(bin, new A.FastBase58EncodingAlphabet_closure(_box_0, out));
      _box_0.i = zcount;
      t1 = zcount;
      while (true) {
        if (t1 < _box_0.size) {
          if (!(t1 < size))
            return A.ioore(out, t1);
          t2 = out[t1] === 0;
        } else
          t2 = false;
        if (!t2)
          break;
        i = t1 + 1;
        _box_0.i = i;
        t1 = i;
      }
      val = B.JSArray_methods.sublist$1(out, t1 - zcount);
      _box_0.size = val.length;
      for (_box_0.i = 0, t1 = 0; t2 = _box_0.size, t1 < t2; t1 = ++_box_0.i) {
        t2 = alphabet.__Alphabet_encode_A;
        t2 === $ && A.throwLateFieldNI("encode");
        if (!(t1 >= 0 && t1 < val.length))
          return A.ioore(val, t1);
        t3 = val[t1];
        t2 = t2._string;
        if (!(t3 >= 0 && t3 < t2.length))
          return A.ioore(t2, t3);
        B.JSArray_methods.$indexSet(out, t1, t2.charCodeAt(t3));
      }
      return A.String_String$fromCharCodes(B.JSArray_methods.sublist$2(out, 0, t2), 0, null);
    },
    FastBase58DecodingAlphabet(str, alphabet) {
      var t2, zero, zcount, i, t3, binu, t4, outi, mask, outLen, j, msb, _box_0 = {},
        t1 = str.length;
      if (t1 === 0)
        throw A.wrapException(A.Base58Exception$("zero length string"));
      t2 = alphabet.__Alphabet_encode_A;
      t2 === $ && A.throwLateFieldNI("encode");
      t2 = t2._string;
      if (0 >= t2.length)
        return A.ioore(t2, 0);
      zero = t2.charCodeAt(0);
      t2 = type$.Runes._eval$1("Iterable.E");
      zcount = 0;
      i = 0;
      while (true) {
        if (i < t1) {
          t3 = A.List_List$_of(new A.Runes(str), t2);
          if (!(i < t3.length))
            return A.ioore(t3, i);
          t3 = t3[i] === zero;
        } else
          t3 = false;
        if (!t3)
          break;
        ++zcount;
        ++i;
      }
      _box_0.t = _box_0.c = 0;
      t2 = 2 * (B.JSInt_methods._tdivFast$1(t1 * 406, 555) + 1);
      t3 = type$.int;
      binu = A.List_List$filled(t2, 0, false, t3);
      t4 = t1 + 3 >>> 2;
      outi = A.List_List$filled(t4, 0, false, t3);
      new A.Runes(str).forEach$1(0, new A.FastBase58DecodingAlphabet_closure(_box_0, alphabet, outi));
      mask = B.JSInt_methods.$mod(t1, 4) * 8 >>> 0;
      mask = (mask === 0 ? 32 : mask) - 8 >>> 0;
      for (outLen = 0, j = 0; j < t4; ++j, mask = 24)
        for (; mask < 32;) {
          B.JSArray_methods.$indexSet(binu, outLen, B.JSInt_methods._shrBothPositive$1(outi[j], mask) & 255);
          mask = mask - 8 >>> 0;
          ++outLen;
        }
      for (msb = zcount; msb < t2; ++msb)
        if (binu[msb] > 0)
          return B.JSArray_methods.sublist$2(binu, msb - zcount, outLen);
      return B.JSArray_methods.sublist$2(binu, 0, outLen);
    },
    Base58Exception: function Base58Exception() {
    },
    Alphabet: function Alphabet() {
      this.__Alphabet_encode_A = this.__Alphabet_decode_A = $;
    },
    Alphabet_closure: function Alphabet_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    FastBase58EncodingAlphabet_closure: function FastBase58EncodingAlphabet_closure(t0, t1) {
      this._box_0 = t0;
      this.out = t1;
    },
    FastBase58DecodingAlphabet_closure: function FastBase58DecodingAlphabet_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.alphabet = t1;
      this.outi = t2;
    },
    EqualUnmodifiableListView: function EqualUnmodifiableListView(t0, t1, t2) {
      this._freezed_annotation$_source = t0;
      this._collection$_source = t1;
      this.$ti = t2;
    },
    EqualUnmodifiableSetView: function EqualUnmodifiableSetView(t0, t1, t2) {
      this._freezed_annotation$_source = t0;
      this._base = t1;
      this.$ti = t2;
    },
    EqualUnmodifiableMapView: function EqualUnmodifiableMapView(t0, t1, t2) {
      this._freezed_annotation$_source = t0;
      this._map = t1;
      this.$ti = t2;
    },
    HexCodec: function HexCodec() {
    },
    HexEncoder: function HexEncoder(t0) {
      this.upperCase = t0;
    },
    HexDecoder: function HexDecoder() {
    },
    _readBytes(data, e) {
      var by, x, t2, t3,
        t1 = J.getInterceptor$x(data);
      if (e === B.C_Endian0) {
        t1 = t1.asUint8List$0(data);
        by = new A.ReversedListIterable(t1, A.instanceType(t1)._eval$1("ReversedListIterable<ListBase.E>"));
      } else
        by = t1.asUint8List$0(data);
      x = $.$get$Integer_zero();
      for (t1 = J.get$iterator$ax(by), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        x = x.$shl(0, 8).$or(0, new A._IntInteger(t3));
      }
      return x;
    },
    _writeBytes(x, size, e) {
      var i, t1, t2, t3,
        list = new Uint8Array(size);
      if (e === B.C_Endian0)
        for (i = 0; i < size; ++i) {
          t1 = x.mask$1(8).toInt$0(0);
          if (!(i < size))
            return A.ioore(list, i);
          list[i] = t1;
          x = x.$shr(0, 8);
        }
      else
        for (t1 = size - 1, i = 0; i < size; ++i) {
          t2 = t1 - i;
          t3 = x.mask$1(8).toInt$0(0);
          if (!(t2 >= 0 && t2 < size))
            return A.ioore(list, t2);
          list[t2] = t3;
          x = x.$shr(0, 8);
        }
      return list;
    },
    Codec0: function Codec0() {
    },
    _Codec16: function _Codec16(t0, t1) {
      this.mantissaBitLength = t0;
      this.exponentBitLength = t1;
    },
    _Codec32: function _Codec32(t0, t1) {
      this.mantissaBitLength = t0;
      this.exponentBitLength = t1;
    },
    _Codec64: function _Codec64(t0, t1) {
      this.mantissaBitLength = t0;
      this.exponentBitLength = t1;
    },
    FloatParts_FloatParts$fromFloat64Bytes(bytes, e) {
      var t1 = bytes.length;
      if (t1 !== 8)
        throw A.wrapException(A.ArgumentError$(t1, "Length for Float64 must be 8."));
      return new A._Decoding(B._Codec64_52_11, J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(bytes), 0, null).getFloat64(0, B.C_Endian0 === e), bytes, e, false);
    },
    FloatParts: function FloatParts() {
    },
    _FloatParts: function _FloatParts(t0, t1, t2) {
      this.mantissaInteger = t0;
      this.exponent = t1;
      this.isNegative = t2;
    },
    _Decoding: function _Decoding(t0, t1, t2, t3, t4) {
      var _ = this;
      _.codec = t0;
      _.float64 = t1;
      _._float_parts$_bytes = t2;
      _._endian = t3;
      _.___Decoding__parts_FI = $;
      _.isFloat32Lossless = t4;
    },
    _FromDouble: function _FromDouble(t0) {
      this.value = t0;
      this.___FromDouble__parts_FI = $;
    },
    _Nan: function _Nan() {
    },
    _Infinity: function _Infinity(t0) {
      this.isNegative = t0;
    },
    Integer_Integer(x) {
      if (x.get$bitLength(0) < 52)
        return new A._IntInteger(x.toInt$0(0));
      else
        return new A._BigIntInteger(x);
    },
    Integer_Integer$allOnes(b) {
      var t1 = b + 1;
      if (b < 51)
        return new A._IntInteger(B.JSInt_methods.$shl(1, t1) - 1);
      else
        return new A._BigIntInteger($.$get$_BigIntImpl_zero().$not(0).$shl(0, t1).$not(0));
    },
    _IntInteger$(_x) {
      return new A._IntInteger(_x);
    },
    _IntInteger: function _IntInteger(t0) {
      this._x = t0;
      this.___IntInteger__bigInt_FI = $;
    },
    _BigIntInteger: function _BigIntInteger(t0) {
      this._x = t0;
    },
    CheckedFromJsonException: function CheckedFromJsonException(t0, t1, t2, t3) {
      var _ = this;
      _.key = t0;
      _.map = t1;
      _.message = t2;
      _._className = t3;
    },
    LogEvent: function LogEvent(t0, t1, t2, t3, t4) {
      var _ = this;
      _.level = t0;
      _.message = t1;
      _.error = t2;
      _.stackTrace = t3;
      _.time = t4;
    },
    LogFilter: function LogFilter() {
    },
    Level: function Level(t0, t1, t2) {
      this.value = t0;
      this.index = t1;
      this._core$_name = t2;
    },
    LogOutput: function LogOutput() {
    },
    LogPrinter: function LogPrinter() {
    },
    Logger: function Logger() {
    },
    OutputEvent: function OutputEvent(t0, t1) {
      this.lines = t0;
      this.origin = t1;
    },
    ByteList__constructList(data, minLength, maxLength) {
      var t1 = J.getInterceptor$asx(data);
      if (t1.get$length(data) < minLength || t1.get$length(data) > maxLength)
        throw A.wrapException(A.Exception_Exception("The list length (" + t1.get$length(data) + ") is invalid (min: " + minLength + ", max: " + maxLength + ")"));
      return B.NativeUint8List_methods.asUnmodifiableView$0(new Uint8Array(A._ensureNativeList(t1.toList$0(data))));
    },
    AsymmetricKey: function AsymmetricKey() {
    },
    AsymmetricPublicKey: function AsymmetricPublicKey() {
    },
    AsymmetricPrivateKey: function AsymmetricPrivateKey() {
    },
    ByteList: function ByteList(t0) {
      this._u8l = t0;
    },
    Suffix: function Suffix() {
    },
    Encodable: function Encodable() {
    },
    _AsymmetricKey_ByteList_Encodable: function _AsymmetricKey_ByteList_Encodable() {
    },
    _ByteList_Object_ListMixin: function _ByteList_Object_ListMixin() {
    },
    _ByteList_Object_ListMixin_Encodable: function _ByteList_Object_ListMixin_Encodable() {
    },
    Base32Encoder__convertBits(data, from, to, pad) {
      var t1, acc, bits, t2,
        result = A._setArrayType([], type$.JSArray_int),
        maxv = B.JSInt_methods._shlPositive$1(1, to) - 1;
      for (t1 = J.get$iterator$ax(data), acc = 0, bits = 0; t1.moveNext$0();) {
        t2 = t1.get$current();
        if (t2 < 0 || B.JSInt_methods._shrOtherPositive$1(t2, from) !== 0)
          throw A.wrapException(A.Exception_Exception("Bit conversion error - Invalid input value"));
        acc = (B.JSInt_methods._shlPositive$1(acc, from) | t2) >>> 0;
        bits += from;
        for (; bits >= to;) {
          bits -= to;
          B.JSArray_methods.add$1(result, (B.JSInt_methods._shrReceiverPositive$1(acc, bits) & maxv) >>> 0);
        }
      }
      if (pad) {
        if (bits > 0)
          B.JSArray_methods.add$1(result, (B.JSInt_methods.$shl(acc, to - bits) & maxv) >>> 0);
      } else if (bits >= from)
        throw A.wrapException(A.Exception_Exception("Bit conversion error - Illegal zero padding"));
      else if ((B.JSInt_methods.$shl(acc, to - bits) & maxv) >>> 0 !== 0)
        throw A.wrapException(A.Exception_Exception("Bit conversion error - non zero"));
      return result;
    },
    Bech32Encoder_decodeNoHrpCheck(data, maxLenght) {
      return new Uint8Array(A._ensureNativeList(A.Base32Encoder__convertBits(new A._Bech32Decoder().convert$2(data, 249).data, 5, 8, false)));
    },
    _polymod(values) {
      var t1, chk, _i, $top, i;
      for (t1 = values.length, chk = 1, _i = 0; _i < t1; ++_i) {
        $top = chk >>> 25;
        chk = ((chk & 33554431) << 5 ^ values[_i]) >>> 0;
        for (i = 0; i < 5; ++i)
          if ((B.JSInt_methods._shrBothPositive$1($top, i) & 1) === 1)
            chk = (chk ^ B.List_KbT[i]) >>> 0;
      }
      return chk;
    },
    _hrpExpand(hrp) {
      var t3, result,
        t1 = type$.CodeUnits,
        t2 = t1._eval$1("int(ListBase.E)");
      t1 = t1._eval$1("MappedListIterable<ListBase.E,int>");
      t3 = t1._eval$1("ListIterable.E");
      result = A.List_List$_of(new A.MappedListIterable(new A.CodeUnits(hrp), t2._as(new A._hrpExpand_closure()), t1), t3);
      result = B.JSArray_methods.$add(result, A._setArrayType([0], type$.JSArray_int));
      t1 = A.List_List$_of(new A.MappedListIterable(new A.CodeUnits(hrp), t2._as(new A._hrpExpand_closure0()), t1), t3);
      return B.JSArray_methods.$add(result, t1);
    },
    _createChecksum(hrp, data) {
      var i,
        t1 = type$.JSArray_int,
        polymod = (A._polymod(B.JSArray_methods.$add(B.JSArray_methods.$add(A._hrpExpand(hrp), data), A._setArrayType([0, 0, 0, 0, 0, 0], t1))) ^ 1) >>> 0,
        result = A._setArrayType([0, 0, 0, 0, 0, 0], t1);
      for (i = 0; i < 6; ++i)
        B.JSArray_methods.$indexSet(result, i, B.JSInt_methods._shrReceiverPositive$1(polymod, 5 * (5 - i)) & 31);
      return result;
    },
    TooLong$($length) {
      return new A.TooLong($length);
    },
    OutOfRangeHrpCharacters$(hpr) {
      return new A.OutOfRangeHrpCharacters(hpr);
    },
    MixedCase$(hpr) {
      return new A.MixedCase(hpr);
    },
    OutOfBoundChars$(char) {
      return new A.OutOfBoundChars(char);
    },
    Bech32Encoder: function Bech32Encoder(t0) {
      this.hrp = t0;
    },
    _Bech32: function _Bech32(t0, t1) {
      this.hrp = t0;
      this.data = t1;
    },
    _Bech32Encoder: function _Bech32Encoder() {
    },
    _Bech32Encoder_convert_closure: function _Bech32Encoder_convert_closure() {
    },
    _Bech32Decoder: function _Bech32Decoder() {
    },
    _Bech32Decoder_convert_closure: function _Bech32Decoder_convert_closure() {
    },
    _Bech32Decoder_convert_closure0: function _Bech32Decoder_convert_closure0() {
    },
    Bech32Validations: function Bech32Validations() {
    },
    Bech32Validations_hasOutOfBoundsChars_closure: function Bech32Validations_hasOutOfBoundsChars_closure() {
    },
    Bech32Validations_hasOutOfRangeHrpCharacters_closure: function Bech32Validations_hasOutOfRangeHrpCharacters_closure() {
    },
    _hrpExpand_closure: function _hrpExpand_closure() {
    },
    _hrpExpand_closure0: function _hrpExpand_closure0() {
    },
    TooShortHrp: function TooShortHrp() {
    },
    TooLong: function TooLong(t0) {
      this.length = t0;
    },
    OutOfRangeHrpCharacters: function OutOfRangeHrpCharacters(t0) {
      this.hpr = t0;
    },
    MixedCase: function MixedCase(t0) {
      this.hpr = t0;
    },
    OutOfBoundChars: function OutOfBoundChars(t0) {
      this.char = t0;
    },
    InvalidSeparator: function InvalidSeparator(t0) {
      this.pos = t0;
    },
    InvalidChecksum: function InvalidChecksum() {
    },
    TooShortChecksum: function TooShortChecksum() {
    },
    __Bech32Decoder_Converter_Bech32Validations: function __Bech32Decoder_Converter_Bech32Validations() {
    },
    __Bech32Encoder_Converter_Bech32Validations: function __Bech32Encoder_Converter_Bech32Validations() {
    },
    Blake2b__add64aa(v, a, b) {
      var t1, o0, t2, t3, o1;
      if (!(a < 32))
        return A.ioore(v, a);
      t1 = v[a];
      if (!(b < 32))
        return A.ioore(v, b);
      o0 = t1 + v[b];
      t1 = a + 1;
      if (!(t1 < 32))
        return A.ioore(v, t1);
      t2 = v[t1];
      t3 = b + 1;
      if (!(t3 < 32))
        return A.ioore(v, t3);
      o1 = t2 + v[t3];
      if (o0 >= 4294967296)
        ++o1;
      v.$flags & 2 && A.throwUnsupportedOperation(v);
      v[a] = o0;
      v[t1] = o1;
    },
    Blake2b__add64ac(v, a, b0, b1) {
      var o0, t1, o1;
      if (!(a < 32))
        return A.ioore(v, a);
      o0 = v[a] + b0;
      t1 = a + 1;
      if (!(t1 < 32))
        return A.ioore(v, t1);
      o1 = v[t1] + b1;
      if (o0 >= 4294967296)
        ++o1;
      v.$flags & 2 && A.throwUnsupportedOperation(v);
      v[a] = o0;
      v[t1] = o1;
    },
    Blake2b__b2bGET32(arr, i) {
      var t2, t3, t4, t5,
        t1 = arr.length;
      if (!(i < t1))
        return A.ioore(arr, i);
      t2 = arr[i];
      t3 = i + 1;
      if (!(t3 < t1))
        return A.ioore(arr, t3);
      t3 = arr[t3];
      t4 = i + 2;
      if (!(t4 < t1))
        return A.ioore(arr, t4);
      t4 = arr[t4];
      t5 = i + 3;
      if (!(t5 < t1))
        return A.ioore(arr, t5);
      return (t2 ^ t3 << 8 ^ t4 << 16 ^ arr[t5] << 24) >>> 0;
    },
    Blake2b__blake2bCompress(context, last) {
      var t1, i, t2, t3, t4, t5, t6,
        v = new Uint32Array(32),
        m = new Uint32Array(32),
        b2bG = new A.Blake2b__blake2bCompress_b2bG(m, v);
      for (t1 = context.h, i = 0; i < 16; ++i) {
        v[i] = t1[i];
        v[i + 16] = B.List_j2A[i];
      }
      t2 = v[24];
      t3 = context.t;
      v[24] = (t2 ^ t3) >>> 0;
      v[25] = (v[25] ^ B.JSInt_methods._tdivFast$1(t3, 4294967296)) >>> 0;
      if (last) {
        v[28] = ~v[28] >>> 0;
        v[29] = ~v[29] >>> 0;
      }
      for (t2 = context.b, i = 0; i < 32; ++i)
        m[i] = A.Blake2b__b2bGET32(t2, 4 * i);
      for (i = 0; i < 12; ++i) {
        t2 = $.$get$Blake2b__sigma82();
        t3 = i * 16;
        t4 = t2.length;
        if (!(t3 < t4))
          return A.ioore(t2, t3);
        t5 = t2[t3];
        t6 = t3 + 1;
        if (!(t6 < t4))
          return A.ioore(t2, t6);
        b2bG.call$6(0, 8, 16, 24, t5, t2[t6]);
        t6 = t3 + 2;
        if (!(t6 < t4))
          return A.ioore(t2, t6);
        t6 = t2[t6];
        t5 = t3 + 3;
        if (!(t5 < t4))
          return A.ioore(t2, t5);
        b2bG.call$6(2, 10, 18, 26, t6, t2[t5]);
        t5 = t3 + 4;
        if (!(t5 < t4))
          return A.ioore(t2, t5);
        t5 = t2[t5];
        t6 = t3 + 5;
        if (!(t6 < t4))
          return A.ioore(t2, t6);
        b2bG.call$6(4, 12, 20, 28, t5, t2[t6]);
        t6 = t3 + 6;
        if (!(t6 < t4))
          return A.ioore(t2, t6);
        t6 = t2[t6];
        t5 = t3 + 7;
        if (!(t5 < t4))
          return A.ioore(t2, t5);
        b2bG.call$6(6, 14, 22, 30, t6, t2[t5]);
        t5 = t3 + 8;
        if (!(t5 < t4))
          return A.ioore(t2, t5);
        t5 = t2[t5];
        t6 = t3 + 9;
        if (!(t6 < t4))
          return A.ioore(t2, t6);
        b2bG.call$6(0, 10, 20, 30, t5, t2[t6]);
        t6 = t3 + 10;
        if (!(t6 < t4))
          return A.ioore(t2, t6);
        t6 = t2[t6];
        t5 = t3 + 11;
        if (!(t5 < t4))
          return A.ioore(t2, t5);
        b2bG.call$6(2, 12, 22, 24, t6, t2[t5]);
        t5 = t3 + 12;
        if (!(t5 < t4))
          return A.ioore(t2, t5);
        t5 = t2[t5];
        t6 = t3 + 13;
        if (!(t6 < t4))
          return A.ioore(t2, t6);
        b2bG.call$6(4, 14, 16, 26, t5, t2[t6]);
        t6 = t3 + 14;
        if (!(t6 < t4))
          return A.ioore(t2, t6);
        t6 = t2[t6];
        t3 += 15;
        if (!(t3 < t4))
          return A.ioore(t2, t3);
        b2bG.call$6(6, 8, 18, 28, t6, t2[t3]);
      }
      for (t2 = t1.$flags | 0, i = 0; i < 16; ++i) {
        t3 = t1[i];
        t4 = v[i];
        t5 = v[i + 16];
        t2 & 2 && A.throwUnsupportedOperation(t1);
        t1[i] = (t3 ^ t4 ^ t5) >>> 0;
      }
    },
    Blake2b_init(outlen, key, salt, personal) {
      var t1, t2, params, i;
      if (outlen <= 0 || outlen > 64)
        throw A.wrapException(A.Exception_Exception("Illegal output length, expected 0 < length <= 64"));
      t1 = new Uint8Array(128);
      t2 = new Uint32Array(16);
      params = new Uint8Array(64);
      A.PineNaClUtils_listZero(params, -1);
      params[0] = outlen;
      params[2] = 1;
      params[3] = 1;
      for (i = 0; i < 16; ++i)
        t2[i] = (B.List_j2A[i] ^ A.Blake2b__b2bGET32(params, i * 4)) >>> 0;
      return new A._Context(t1, t2, 0, 0, outlen);
    },
    Blake2b_update(context, input) {
      var t1, t2, t3, i, t4, t5;
      for (t1 = input.length, t2 = context.b, t3 = t2.$flags | 0, i = 0; i < t1; ++i) {
        t4 = context.c;
        if (t4 === 128) {
          context.t += t4;
          A.Blake2b__blake2bCompress(context, false);
          t4 = context.c = 0;
        }
        context.c = t4 + 1;
        t5 = input[i];
        t3 & 2 && A.throwUnsupportedOperation(t2);
        if (!(t4 < 128))
          return A.ioore(t2, t4);
        t2[t4] = t5;
      }
    },
    Blake2b_finalise(context) {
      var t3, t4, out, i,
        t1 = context.t,
        t2 = context.c;
      context.t = t1 + t2;
      for (t1 = context.b, t3 = t1.$flags | 0; t2 < 128; t2 = t4) {
        t4 = t2 + 1;
        context.c = t4;
        t3 & 2 && A.throwUnsupportedOperation(t1);
        t1[t2] = 0;
      }
      A.Blake2b__blake2bCompress(context, true);
      t1 = context.outLen;
      out = new Uint8Array(t1);
      for (t2 = context.h, i = 0; i < t1; ++i) {
        t3 = i >>> 2;
        if (!(t3 < 16))
          return A.ioore(t2, t3);
        t3 = B.JSInt_methods._shrBothPositive$1(t2[t3], 8 * (i & 3));
        if (!(i < t1))
          return A.ioore(out, i);
        out[i] = t3;
      }
      return out;
    },
    _Context: function _Context(t0, t1, t2, t3, t4) {
      var _ = this;
      _.b = t0;
      _.h = t1;
      _.t = t2;
      _.c = t3;
      _.outLen = t4;
    },
    Blake2b__sigma82_closure: function Blake2b__sigma82_closure() {
    },
    Blake2b__blake2bCompress_b2bG: function Blake2b__blake2bCompress_b2bG(t0, t1) {
      this.m = t0;
      this.v = t1;
    },
    Signature: function Signature(t0) {
      this._u8l = t0;
    },
    VerifyKey: function VerifyKey() {
    },
    SigningKey: function SigningKey() {
    },
    SignedMessage: function SignedMessage(t0) {
      this._u8l = t0;
    },
    _SignedMessage_ByteList_Suffix: function _SignedMessage_ByteList_Suffix() {
    },
    _SigningKey_AsymmetricPrivateKey_Suffix: function _SigningKey_AsymmetricPrivateKey_Suffix() {
    },
    bootstrap(initializer, command) {
      var transfer, message,
        t1 = init.G,
        com = A._asJSObject(new t1.MessageChannel()),
        t2 = new A._LogAllFilter(),
        t3 = new A._DummyPrinter(),
        t4 = new A._NoLogOutput(),
        t5 = new A.InternalLogger(t2, t3, t4);
      t5.Logger$4$filter$level$output$printer(t2, null, t4, t3);
      A._asJSObject(t1.self).onmessage = A._functionToJS1(new A.bootstrap_closure(com, new A.WorkerRunner(new A.bootstrap_closure0(com), t5, A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.CancelationTokenReference), A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function)), initializer));
      transfer = type$.JSArray_nullable_Object._as(new t1.Array());
      message = A.$jsify(A.WorkerResponseImpl_wrapInPlace([A.microsecTimeStamp(null), true, null, null, null]), transfer);
      A._asJSObject(t1.self).postMessage(message, transfer);
    },
    bootstrap_closure0: function bootstrap_closure0(t0) {
      this.com = t0;
    },
    bootstrap_closure: function bootstrap_closure(t0, t1, t2) {
      this.com = t0;
      this.runner = t1;
      this.initializer = t2;
    },
    openChannel(entryPoint, exceptionManager, logger, startArguments, hook) {
      return A.openChannel$body(entryPoint, exceptionManager, logger, startArguments, hook);
    },
    openChannel$body(entryPoint, exceptionManager, logger, startArguments, hook) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Channel),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], com, webEntryPoint, worker, fail, success, $$errorHandler, disconnected, res, startRequest, transfer, msg, ex, st, channel, ex0, ex1, st0, t3, exception, t1, t2, completer, ready, $async$exception, $async$exception1;
      var $async$openChannel = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              t2 = $.Zone__current;
              completer = new A._AsyncCompleter(new A._Future(t2, type$._Future__WebChannel), type$._AsyncCompleter__WebChannel);
              ready = new A._AsyncCompleter(new A._Future(t2, type$._Future_bool), type$._AsyncCompleter_bool);
              t1.channel = null;
              t2 = init.G;
              com = A._asJSObject(new t2.MessageChannel());
              webEntryPoint = A.EntryPointUri_EntryPointUri$from(entryPoint);
              worker = A._Cell$named("worker");
              fail = new A.openChannel_fail(ready, completer);
              success = new A.openChannel_success(ready, completer);
              $async$handler = 4;
              worker._value = A._asJSObject(new t2.Worker(webEntryPoint.uri));
              $$errorHandler = new A.openChannel_$errorHandler(logger, fail, entryPoint);
              worker._readLocal$0().onerror = A._functionToJS1($$errorHandler);
              worker._readLocal$0().onmessageerror = A._functionToJS1($$errorHandler);
              disconnected = new A.DisconnectedChannel(exceptionManager, logger);
              worker._readLocal$0().onmessage = A._functionToJS1(new A.openChannel_closure(disconnected, logger, fail, ready));
              $async$goto = 7;
              return A._asyncAwait(ready.future, $async$openChannel);
            case 7:
              // returning from await.
              res = $async$result;
              if (!res) {
                t1 = A.SquadronError$_("Web Worker is not ready", null, null);
                throw A.wrapException(t1);
              }
              t3 = A._asJSObject(com.port2);
              startRequest = [A.microsecTimeStamp(null), t3, -1, startArguments, null, null, true];
              A._asJSObject(com.port1).onmessage = A._functionToJS1(new A.openChannel_closure0(t1, disconnected, logger, fail, completer, exceptionManager, worker, success));
              try {
                transfer = type$.JSArray_nullable_Object._as(new t2.Array());
                msg = A.$jsify(A.WorkerRequestExt_wrapInPlace(startRequest), transfer);
                worker._readLocal$0().postMessage(msg, transfer);
              } catch (exception) {
                ex = A.unwrapException(exception);
                st = A.getTraceFromException(exception);
                t1 = A.SquadronError$_("Failed to post connection request: " + A.S(ex), st, null);
                throw A.wrapException(t1);
              }
              $async$handler = 9;
              $async$goto = 12;
              return A._asyncAwait(completer.future, $async$openChannel);
            case 12:
              // returning from await.
              channel = $async$result;
              $async$returnValue = channel;
              $async$next = [1];
              // goto finally
              $async$goto = 5;
              break;
              $async$handler = 4;
              // goto after finally
              $async$goto = 11;
              break;
            case 9:
              // catch
              $async$handler = 8;
              $async$exception = $async$errorStack.pop();
              ex0 = A.unwrapException($async$exception);
              throw $async$exception;
              // goto after finally
              $async$goto = 11;
              break;
            case 8:
              // uncaught
              // goto catch
              $async$goto = 4;
              break;
            case 11:
              // after finally
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception1 = $async$errorStack.pop();
              ex1 = A.unwrapException($async$exception1);
              st0 = A.getTraceFromException($async$exception1);
              A.FutureExtensions_ignore(ready.future, type$.bool);
              A.FutureExtensions_ignore(completer.future, type$._WebChannel);
              A._asJSObject(com.port1).close();
              A._asJSObject(com.port2).close();
              worker._readLocal$0().terminate();
              t1 = A.SquadronException_from(ex1, st0, null);
              throw A.wrapException(t1);
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 5:
              // finally
              $async$handler = 2;
              t1 = webEntryPoint;
              if (t1._revoke)
                t2.URL.revokeObjectURL(t1.uri);
              t1.super$Releasable$release();
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$openChannel, $async$completer);
    },
    terminateChannel(channel, ex) {
      var t1, pendingConnections, _i, c;
      if (channel instanceof A._WebChannel) {
        t1 = channel._thread;
        if (t1 != null)
          t1.terminate();
        pendingConnections = channel._activeConnections;
        for (t1 = pendingConnections.length, _i = 0; _i < pendingConnections.length; pendingConnections.length === t1 || (0, A.throwConcurrentModificationError)(pendingConnections), ++_i) {
          c = pendingConnections[_i];
          c.addError$1(ex);
          c.close$0();
        }
      }
    },
    openChannel_fail: function openChannel_fail(t0, t1) {
      this.ready = t0;
      this.completer = t1;
    },
    openChannel_success: function openChannel_success(t0, t1) {
      this.ready = t0;
      this.completer = t1;
    },
    openChannel_$errorHandler: function openChannel_$errorHandler(t0, t1, t2) {
      this.logger = t0;
      this.fail = t1;
      this.entryPoint = t2;
    },
    openChannel_$errorHandler_closure: function openChannel_$errorHandler_closure(t0, t1, t2, t3) {
      var _ = this;
      _.e = t0;
      _.entryPoint = t1;
      _.err = t2;
      _.logger = t3;
    },
    openChannel_closure: function openChannel_closure(t0, t1, t2, t3) {
      var _ = this;
      _.disconnected = t0;
      _.logger = t1;
      _.fail = t2;
      _.ready = t3;
    },
    openChannel_closure0: function openChannel_closure0(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._box_0 = t0;
      _.disconnected = t1;
      _.logger = t2;
      _.fail = t3;
      _.completer = t4;
      _.exceptionManager = t5;
      _.worker = t6;
      _.success = t7;
    },
    _WebChannel: function _WebChannel(t0, t1, t2, t3) {
      var _ = this;
      _._sendPort = t0;
      _._thread = null;
      _._activeConnections = t1;
      _.exceptionManager = t2;
      _.logger = t3;
      _._closed = false;
    },
    _WebChannel__getResponseStream_$sendRequest: function _WebChannel__getResponseStream_$sendRequest(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.command = t1;
      _.com = t2;
      _.post = t3;
      _.req = t4;
    },
    _WebChannel__getResponseStream_$sendRequest_$forwardMessage: function _WebChannel__getResponseStream_$sendRequest_$forwardMessage(t0) {
      this.controller = t0;
    },
    _WebChannel__getResponseStream_$sendRequest_$forwardError: function _WebChannel__getResponseStream_$sendRequest_$forwardError(t0, t1) {
      this.controller = t0;
      this.command = t1;
    },
    _WebChannel__getResponseStream_$sendRequest_$close: function _WebChannel__getResponseStream_$sendRequest_$close(t0, t1, t2) {
      this.$this = t0;
      this.com = t1;
      this.controller = t2;
    },
    _WebChannel__getResponseStream_$sendRequest_closure: function _WebChannel__getResponseStream_$sendRequest_closure(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.$this = t0;
      _.controller = t1;
      _.com = t2;
      _.command = t3;
      _.buffer = t4;
      _.$$forwardError = t5;
      _.$$forwardMessage = t6;
      _.post = t7;
      _.req = t8;
      _.$$close = t9;
    },
    _WebChannel__getResponseStream_$sendRequest__closure: function _WebChannel__getResponseStream_$sendRequest__closure(t0, t1, t2) {
      this.command = t0;
      this.buffer = t1;
      this.$$forwardError = t2;
    },
    _WebChannel__getResponseStream_$sendRequest__closure0: function _WebChannel__getResponseStream_$sendRequest__closure0(t0, t1) {
      this.buffer = t0;
      this.$$forwardMessage = t1;
    },
    _WebChannel__getResponseStream_closure: function _WebChannel__getResponseStream_closure(t0) {
      this.com = t0;
    },
    _WebChannel_sendRequest_$success: function _WebChannel_sendRequest_$success(t0, t1) {
      this.sub = t0;
      this.completer = t1;
    },
    _WebChannel_sendRequest_$fail: function _WebChannel_sendRequest_$fail(t0, t1) {
      this.sub = t0;
      this.completer = t1;
    },
    _WebChannel_sendRequest_$done: function _WebChannel_sendRequest_$done(t0, t1, t2, t3) {
      var _ = this;
      _.sub = t0;
      _.completer = t1;
      _.$$fail = t2;
      _.command = t3;
    },
    EntryPointUri_EntryPointUri$from(workerEntrypoint) {
      var url, t2, blob,
        t1 = A.IterableExtensions_get_lastOrNull(workerEntrypoint.get$pathSegments(), type$.String),
        fileName = t1 == null ? null : t1.toLowerCase();
      if (fileName == null)
        fileName = "";
      url = workerEntrypoint.toString$0(0);
      if (B.JSString_methods.endsWith$1(fileName, ".js"))
        return new A.EntryPointUri(url, false, false, new A.Object());
      else if (B.JSString_methods.endsWith$1(fileName, ".wasm")) {
        t1 = init.G;
        t2 = t1.Blob;
        blob = A._asJSObject(new t2(A._setArrayType(['(async function() {\n  const workerUri = new URL("' + A.stringReplaceAllUnchecked(url, '"', '\\"') + "\", self.location.origin).href;\n  try {\n    let dart2wasm_runtime; let moduleInstance;\n    const runtimeUri = workerUri.replaceAll('.unopt', '').replaceAll('.wasm', '.mjs');\n    try {\n      const dartModule = WebAssembly.compileStreaming(fetch(workerUri));\n      dart2wasm_runtime = await import(runtimeUri);\n      moduleInstance = await dart2wasm_runtime.instantiate(dartModule, {});\n    } catch (exception) {\n      console.error(`Failed to fetch and instantiate wasm module ${workerUri}: ${exception}`);\n      console.error('See https://dart.dev/web/wasm for more information.');\n      throw new Error(exception.message ?? 'Unknown error when instantiating worker module');\n    }\n    try {\n      await dart2wasm_runtime.invoke(moduleInstance);\n      //console.log(`Succesfully loaded and invoked ${workerUri}`);\n    } catch (exception) {\n      console.error(`Exception while invoking wasm module ${workerUri}: ${exception}`);\n      throw new Error(exception.message ?? 'Unknown error when invoking worker module');\n    }\n  } catch (ex) {\n    const ts = (Date.now() - Date.UTC(2020, 1, 2)) * 1000;\n    postMessage([ts, null, [\"$!\", `Failed to load Web Worker from ${workerUri}: ${ex}`, null, null], null, null]);\n  }\n})()"], type$.JSArray_String), {type: "application/javascript"}));
        return new A.EntryPointUri(A._asString(t1.URL.createObjectURL(blob)), true, false, new A.Object());
      } else if (workerEntrypoint.isScheme$1("data") || workerEntrypoint.isScheme$1("javascript"))
        return new A.EntryPointUri(url, false, false, new A.Object());
      else
        throw A.wrapException(A.SquadronError$_("Invalid entry point URI", null, null));
    },
    EntryPointUri: function EntryPointUri(t0, t1, t2, t3) {
      var _ = this;
      _.uri = t0;
      _._revoke = t1;
      _.Releasable__released = t2;
      _.Releasable__token = t3;
    },
    _EntryPointUri_Object_Releasable: function _EntryPointUri_Object_Releasable() {
    },
    EventBuffer: function EventBuffer(t0, t1, t2, t3) {
      var _ = this;
      _.onDeactivate = null;
      _._processValue = t0;
      _._processError = t1;
      _.__event_buffer$_buffer = t2;
      _.__event_buffer$_pauses = 0;
      _.$ti = t3;
    },
    EventBuffer_add_closure: function EventBuffer_add_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    EventBuffer_addError_closure: function EventBuffer_addError_closure(t0, t1, t2) {
      this.$this = t0;
      this.err = t1;
      this.st = t2;
    },
    getRootUrl() {
      var components,
        t1 = init.G;
      A._asJSObject(t1.window);
      components = A._setArrayType(A._asString(A._asJSObject(A._asJSObject(t1.window).location).pathname).split("/"), type$.JSArray_String);
      return A.SubListIterable$(components, 0, A.checkNotNullable(components.length - 1, "count", type$.int), type$.String).join$1(0, "/");
    },
    _isTransferable(js) {
      var t1 = A.JSAnyUtilityExtension_instanceOfString(js, "ArrayBuffer");
      if (t1)
        return true;
      t1 = A.JSAnyUtilityExtension_instanceOfString(js, "MessagePort");
      if (t1)
        return true;
      t1 = A.JSAnyUtilityExtension_instanceOfString(js, "ReadableStream");
      if (t1)
        return true;
      t1 = A.JSAnyUtilityExtension_instanceOfString(js, "WritableStream");
      if (t1)
        return true;
      t1 = A.JSAnyUtilityExtension_instanceOfString(js, "TransformStream");
      if (t1)
        return true;
      t1 = A.JSAnyUtilityExtension_instanceOfString(js, "ImageBitmap");
      if (t1)
        return true;
      t1 = A.JSAnyUtilityExtension_instanceOfString(js, "VideoFrame");
      if (t1)
        return true;
      t1 = A.JSAnyUtilityExtension_instanceOfString(js, "OffscreenCanvas");
      if (t1)
        return true;
      t1 = A.JSAnyUtilityExtension_instanceOfString(js, "RTCDataChannel");
      if (t1)
        return true;
      t1 = A.JSAnyUtilityExtension_instanceOfString(js, "MediaSourceHandle");
      if (t1)
        return true;
      t1 = A.JSAnyUtilityExtension_instanceOfString(js, "MIDIAccess");
      if (t1)
        return true;
      return false;
    },
    _toJSStr(value) {
      A._asStringQ(value);
      return value == null ? null : value;
    },
    _toJSBool(value) {
      A._asBoolQ(value);
      return value == null ? null : value;
    },
    _toJSNum(value) {
      A._asNumQ(value);
      return value == null ? null : value;
    },
    _toJSBigInt(value) {
      return value == null ? null : type$.JavaScriptBigInt._as(init.G.BigInt(type$.BigInt._as(value).toString$0(0)));
    },
    $jsify(message, transfer) {
      var t1 = type$.Object,
        cache = A.HashMap_HashMap(A._platform__isSameInstance$closure(), null, null, t1, t1),
        $$registerTransferable = transfer == null ? new A.$jsify_closure() : new A.$jsify_closure0(cache, transfer),
        squadronJsify = A._Cell$named("squadronJsify");
      squadronJsify.set$finalLocalValue(new A.$jsify_closure1(cache, squadronJsify, $$registerTransferable));
      return squadronJsify._readLocal$0().call$1(message);
    },
    $dartify(message) {
      var t1 = type$.Object,
        cache = A.HashMap_HashMap(A._platform__isSameInstance$closure(), null, null, t1, t1),
        squadronDartify = A._Cell$named("squadronDartify");
      squadronDartify.set$finalLocalValue(new A.$dartify_closure(cache, squadronDartify));
      return squadronDartify._readLocal$0().call$1(message);
    },
    $JSEventExt__getMessageEventData(obj) {
      return A.$dartify(obj == null ? null : obj[$.$get$_$JSProps_data()]);
    },
    $JSEventExt_get_dartError(_this) {
      var t1 = _this == null,
        t2 = A.$dartify(t1 ? null : _this[$.$get$_$JSProps_error()]);
      if (t2 == null) {
        t2 = A.$dartify(t1 ? null : _this[$.$get$_$JSProps_message()]);
        t1 = t2 == null ? null : J.toString$0$(t2);
      } else
        t1 = t2;
      return t1 == null ? "Unknown error" : t1;
    },
    $jsify_closure: function $jsify_closure() {
    },
    $jsify_closure0: function $jsify_closure0(t0, t1) {
      this.cache = t0;
      this.transfer = t1;
    },
    $jsify_closure1: function $jsify_closure1(t0, t1, t2) {
      this.cache = t0;
      this.squadronJsify = t1;
      this.$$registerTransferable = t2;
    },
    $dartify_closure: function $dartify_closure(t0, t1) {
      this.cache = t0;
      this.squadronDartify = t1;
    },
    _WebWorkerChannel: function _WebWorkerChannel(t0, t1) {
      this.__worker_channel$_sendPort = t0;
      this._logger = t1;
    },
    _WebWorkerChannel__postResponse_closure: function _WebWorkerChannel__postResponse_closure(t0, t1) {
      this.res = t0;
      this.ex = t1;
    },
    _WebWorkerChannel__inspectAndPostResponse_closure: function _WebWorkerChannel__inspectAndPostResponse_closure(t0, t1) {
      this.res = t0;
      this.ex = t1;
    },
    JsWorkerRunnerExt_get_handle(_this) {
      return new A.JsWorkerRunnerExt_get_handle_closure(_this);
    },
    JsWorkerRunnerExt_get_handle_closure: function JsWorkerRunnerExt_get_handle_closure(t0) {
      this._this = t0;
    },
    DisconnectedChannel: function DisconnectedChannel(t0, t1) {
      this.exceptionManager = t0;
      this.logger = t1;
    },
    ForwardCompleter: function ForwardCompleter(t0, t1) {
      this._res = t0;
      this.$ti = t1;
    },
    ForwardStreamController: function ForwardStreamController(t0) {
      var _ = this;
      _.__ForwardStreamController__controller_F = $;
      _.__forward_stream_controller$_closed = false;
      _._sub = null;
      _._pauses = 0;
      _.$ti = t0;
    },
    InternalLogger: function InternalLogger(t0, t1, t2) {
      var _ = this;
      _.__Logger__initialization_F = $;
      _._filter = t0;
      _._printer = t1;
      _._output = t2;
    },
    _NoLogOutput: function _NoLogOutput() {
    },
    _DummyPrinter: function _DummyPrinter() {
    },
    _LogAllFilter: function _LogAllFilter() {
    },
    ResultStream$(channel, req, sendRequest, streaming) {
      var t1 = new A.ResultStream();
      t1.ResultStream$4(channel, req, sendRequest, false);
      return t1;
    },
    ResultStream: function ResultStream() {
      this.__ResultStream__controller_F = $;
    },
    ResultStream_$decodeStreamOfResponses: function ResultStream_$decodeStreamOfResponses(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.channel = t1;
      _.streamIdCompleter = t2;
      _.command = t3;
      _.token = t4;
    },
    ResultStream_$decodeSingleResponse: function ResultStream_$decodeSingleResponse(t0, t1, t2) {
      this.$this = t0;
      this.channel = t1;
      this.command = t2;
    },
    ResultStream_$getStreamId: function ResultStream_$getStreamId(t0) {
      this.streamIdCompleter = t0;
    },
    ResultStream_$onCancel: function ResultStream_$onCancel(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.streamIdCompleter = t1;
      _.$$getStreamId = t2;
      _.channel = t3;
    },
    ResultStream_$closeWithError: function ResultStream_$closeWithError(t0, t1) {
      this.$this = t0;
      this.command = t1;
    },
    ResultStream_$onListen: function ResultStream_$onListen(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.$this = t0;
      _.token = t1;
      _.sendRequest = t2;
      _.streaming = t3;
      _.$$decodeStreamOfResponses = t4;
      _.$$decodeSingleResponse = t5;
      _.$$closeWithError = t6;
    },
    WorkerRunner: function WorkerRunner(t0, t1, t2, t3) {
      var _ = this;
      _._terminate = t0;
      _.internalLogger = t1;
      _._operations = _._service = null;
      _._cancelTokens = t2;
      _._terminationRequested = false;
      _._executing = 0;
      _._streamCancelers = t3;
      _._streamId = 0;
      _._installError = _._installCompleter = _._logForwarder = null;
    },
    WorkerRunner__checkOperations_closure: function WorkerRunner__checkOperations_closure() {
    },
    WorkerRunner_connect_closure: function WorkerRunner_connect_closure(t0) {
      this.logger = t0;
    },
    WorkerRunner_connect_closure0: function WorkerRunner_connect_closure0(t0) {
      this.ex = t0;
    },
    WorkerRunner_processRequest_postError: function WorkerRunner_processRequest_postError(t0, t1) {
      this.replyWithError = t0;
      this.cmd = t1;
    },
    WorkerRunner_processRequest_post: function WorkerRunner_processRequest_post(t0, t1) {
      this.reply = t0;
      this.postError = t1;
    },
    WorkerRunner__getTokenRef_closure: function WorkerRunner__getTokenRef_closure(t0) {
      this.token = t0;
    },
    WorkerRunner__pipe_onDone: function WorkerRunner__pipe_onDone(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.streamId = t1;
      _.channel = t2;
      _.subscription = t3;
      _.done = t4;
    },
    WorkerRunner__pipe_closure: function WorkerRunner__pipe_closure() {
    },
    WorkerRunner__pipe_closure0: function WorkerRunner__pipe_closure0(t0, t1, t2) {
      this.token = t0;
      this.postError = t1;
      this.onDone = t2;
    },
    WorkerRunner__pipe_closure1: function WorkerRunner__pipe_closure1(t0, t1) {
      this._box_0 = t0;
      this.post = t1;
    },
    WorkerRunner__pipe_closure2: function WorkerRunner__pipe_closure2(t0, t1) {
      this._box_0 = t0;
      this.postError = t1;
    },
    ConcurrencySettings: function ConcurrencySettings(t0, t1, t2) {
      this.minWorkers = t0;
      this.maxWorkers = t1;
      this.maxParallel = t2;
    },
    CastConverter: function CastConverter() {
    },
    ContextAwareConverter: function ContextAwareConverter(t0, t1) {
      this._context_aware_converter$_converter = t0;
      this._context_aware_converter$_arguments = t1;
    },
    ContextAwareConverter_value_closure: function ContextAwareConverter_value_closure(t0, t1, t2) {
      this.$this = t0;
      this.op = t1;
      this.T = t2;
    },
    Converter_identity(x, $T) {
      return $T._is(x) ? x : A.throwExpression(A.WorkerException$("TypeError: " + J.get$runtimeType$(x).toString$0(0) + " is not a subtype of " + A.createRuntimeType($T).toString$0(0), null, null));
    },
    Converter0: function Converter0() {
    },
    NumConverter__toInt(x) {
      var z;
      A._asNum(x);
      if (A._isInt(x) && isFinite(x))
        return x;
      if (!isFinite(x))
        return A._asInt(0 / 0);
      z = B.JSNumber_methods.toInt$0(x);
      if (x - z !== 0)
        return A._asInt(0 / 0);
      return z;
    },
    NumConverter__toDbl(x) {
      return A._asNum(x);
    },
    NumConverter: function NumConverter() {
    },
    SerializationContext: function SerializationContext(t0) {
      this._cache = t0;
    },
    ExceptionManager: function ExceptionManager(t0) {
      this._deserializers = t0;
    },
    SquadronCanceledException$(tokenId, message, stackTrace) {
      var t1 = new A.SquadronCanceledException(tokenId, message, stackTrace);
      t1.SquadronException$init$2(message, stackTrace);
      return t1;
    },
    SquadronCanceledException_SquadronCanceledException$from(tokenId, ex, stackTrace) {
      var t1, t2;
      if (ex instanceof A.SquadronTimeoutException)
        return A.SquadronTimeoutException$(tokenId, ex.message, ex.duration, ex._squadron_exception$_stackTrace);
      else if (ex instanceof A.SquadronCanceledExceptions) {
        t1 = ex._exceptions;
        t2 = A._arrayInstanceType(t1);
        return A.SquadronCanceledExceptions$(tokenId, new A.MappedListIterable(t1, t2._eval$1("SquadronCanceledException(1)")._as(new A.SquadronCanceledException_SquadronCanceledException$from_closure(tokenId)), t2._eval$1("MappedListIterable<1,SquadronCanceledException>")));
      } else
        return A.SquadronCanceledException$(tokenId, ex.get$message(), ex.get$stackTrace());
    },
    SquadronCanceledExceptionExt_deserialize(props) {
      var t1;
      type$.nullable_List_dynamic._as(props);
      if (props == null)
        return null;
      t1 = J.getInterceptor$asx(props);
      switch (t1.$index(props, 0)) {
        case "$C":
          return A.SquadronCanceledException$(A._asString(t1.$index(props, 1)), A._asString(t1.$index(props, 2)), A.SquadronException_loadStackTrace(A._asStringQ(t1.$index(props, 3))));
        case "$C*":
          return A.SquadronCanceledExceptionsExt_deserialize(props);
        case "$T":
          return A.SquadronTimeoutExceptionExt_deserialize(props);
        default:
          return null;
      }
    },
    SquadronCanceledException: function SquadronCanceledException(t0, t1, t2) {
      this.tokenId = t0;
      this.message = t1;
      this._squadron_exception$_stackTrace = t2;
    },
    SquadronCanceledException_SquadronCanceledException$from_closure: function SquadronCanceledException_SquadronCanceledException$from_closure(t0) {
      this.tokenId = t0;
    },
    SquadronCanceledExceptions$(tokenId, exceptions) {
      var t1 = new A.SquadronCanceledExceptions(J.toList$0$ax(exceptions), tokenId, "", null);
      t1.SquadronException$init$2("", null);
      return t1;
    },
    SquadronCanceledExceptionsExt_deserialize(props) {
      var t1;
      type$.nullable_List_dynamic._as(props);
      if (props == null)
        return null;
      t1 = J.getInterceptor$asx(props);
      if (!J.$eq$(t1.$index(props, 0), "$C*"))
        return null;
      return A.SquadronCanceledExceptions$(A._asString(t1.$index(props, 1)), type$.Iterable_SquadronCanceledException._as(J.map$1$ax(t1.$index(props, 2), A.squadron_canceled_exception__SquadronCanceledExceptionExt_deserialize$closure())));
    },
    SquadronCanceledExceptions: function SquadronCanceledExceptions(t0, t1, t2, t3) {
      var _ = this;
      _._exceptions = t0;
      _.tokenId = t1;
      _.message = t2;
      _._squadron_exception$_stackTrace = t3;
    },
    SquadronCanceledExceptions_message_closure: function SquadronCanceledExceptions_message_closure() {
    },
    SquadronCanceledExceptions_serialize_closure: function SquadronCanceledExceptions_serialize_closure() {
    },
    SquadronError$_(message, stackTrace, command) {
      var t1 = new A.SquadronError(command, message, stackTrace);
      t1.SquadronException$init$2(message, stackTrace);
      return t1;
    },
    SquadronErrorImpl_deserialize(exceptionInfo) {
      var t1;
      type$.List_dynamic._as(exceptionInfo);
      t1 = J.getInterceptor$asx(exceptionInfo);
      return J.$eq$(t1.$index(exceptionInfo, 0), "$!") ? A.SquadronError$_(A._asString(t1.$index(exceptionInfo, 1)), A.SquadronException_loadStackTrace(A._asStringQ(t1.$index(exceptionInfo, 2))), A._asIntQ(t1.$index(exceptionInfo, 3))) : null;
    },
    SquadronError: function SquadronError(t0, t1, t2) {
      this._command = t0;
      this.message = t1;
      this._squadron_exception$_stackTrace = t2;
    },
    SquadronException_from(error, stackTrace, command) {
      if (error instanceof A.WorkerException) {
        if (command != null)
          error._worker_exception$_command = command;
        return error;
      } else if (type$.SquadronException._is(error))
        return error;
      else if (type$.CanceledException._is(error))
        return A.SquadronCanceledException_SquadronCanceledException$from("", error, null);
      else if (error instanceof A.SquadronTimeoutException)
        return A.SquadronTimeoutException$("", error.message, error.duration, null);
      else
        return A.WorkerException$(J.toString$0$(error), stackTrace, command);
    },
    SquadronException_loadStackTrace(stackTrace) {
      var exception;
      if (stackTrace == null)
        return null;
      try {
        return new A._StringStackTrace(stackTrace);
      } catch (exception) {
        return null;
      }
    },
    SquadronException: function SquadronException() {
    },
    SquadronTimeoutException$(tokenId, message, duration, stackTrace) {
      var t1 = new A.SquadronTimeoutException(duration, tokenId, message, stackTrace);
      t1.SquadronException$init$2(message, stackTrace);
      return t1;
    },
    SquadronTimeoutExceptionExt_deserialize(props) {
      var t1, t2, microSecs, t3, t4, _null = null;
      type$.nullable_List_dynamic._as(props);
      if (props == null)
        return _null;
      t1 = J.getInterceptor$asx(props);
      if (!J.$eq$(t1.$index(props, 0), "$T"))
        return _null;
      t2 = A._asNumQ(t1.$index(props, 4));
      microSecs = t2 == null ? _null : B.JSNumber_methods.toInt$0(t2);
      t2 = A._asString(t1.$index(props, 1));
      t3 = A._asString(t1.$index(props, 2));
      t4 = microSecs == null ? _null : A.Duration$(microSecs, 0);
      return A.SquadronTimeoutException$(t2, t3, t4, A.SquadronException_loadStackTrace(A._asStringQ(t1.$index(props, 3))));
    },
    SquadronTimeoutException: function SquadronTimeoutException(t0, t1, t2, t3) {
      var _ = this;
      _.duration = t0;
      _.tokenId = t1;
      _.message = t2;
      _._squadron_exception$_stackTrace = t3;
    },
    TaskCanceledExceptionExt_deserialize(props) {
      var t1;
      type$.nullable_List_dynamic._as(props);
      if (props == null)
        return null;
      t1 = J.getInterceptor$asx(props);
      if (!J.$eq$(t1.$index(props, 0), "$C1"))
        return null;
      t1 = A._asStringQ(t1.$index(props, 1));
      return new A.TaskCanceledException(t1 == null ? "Task canceled" : t1);
    },
    TaskCanceledException: function TaskCanceledException(t0) {
      this.message = t0;
    },
    TaskTerminatedExceptionExt_deserialize(props) {
      var t1;
      type$.nullable_List_dynamic._as(props);
      if (props == null)
        return null;
      t1 = J.getInterceptor$asx(props);
      if (!J.$eq$(t1.$index(props, 0), "$K"))
        return null;
      return new A.TaskTerminatedException(A._asString(t1.$index(props, 1)), A.SquadronException_loadStackTrace(A._asStringQ(t1.$index(props, 2))));
    },
    TaskTerminatedException: function TaskTerminatedException(t0, t1) {
      this.message = t0;
      this.stackTrace = t1;
    },
    WorkerException$(message, stackTrace, command) {
      var t1 = new A.WorkerException(command, message, stackTrace);
      t1.SquadronException$init$2(message, stackTrace);
      return t1;
    },
    WorkerExceptionImpl_deserialize(data) {
      var t1, t2, t3;
      type$.List_dynamic._as(data);
      t1 = J.getInterceptor$asx(data);
      if (J.$eq$(t1.$index(data, 0), "$#")) {
        t2 = A._asString(t1.$index(data, 1));
        t3 = A.SquadronException_loadStackTrace(A._asStringQ(t1.$index(data, 2)));
        t1 = A._asNumQ(t1.$index(data, 3));
        t1 = A.WorkerException$(t2, t3, t1 == null ? null : B.JSNumber_methods.toInt$0(t1));
      } else
        t1 = null;
      return t1;
    },
    WorkerException: function WorkerException(t0, t1, t2) {
      this._worker_exception$_command = t0;
      this.message = t1;
      this._squadron_exception$_stackTrace = t2;
    },
    ConverterExt_get_converter(_this) {
      var t1 = _this._converter;
      return t1;
    },
    MarshalingContext: function MarshalingContext() {
    },
    PoolWorker_compareCapacity(a, b) {
      var t2,
        t1 = type$.PoolWorker_Worker;
      t1._as(a);
      t1._as(b);
      t1 = a._capacity;
      t2 = b._capacity;
      if (t1 !== t2)
        return B.JSInt_methods.compareTo$1(t1, t2);
      t1 = a._lastStart;
      if (t1 == null)
        return -1;
      t2 = b._lastStart;
      if (t2 == null)
        return 1;
      return B.JSInt_methods.compareTo$1(t2, t1);
    },
    PoolWorker: function PoolWorker(t0, t1, t2, t3) {
      var _ = this;
      _.worker = t0;
      _._maxWorkload = t1;
      _._lastStart = null;
      _._capacity = t2;
      _.$ti = t3;
    },
    PoolWorker_run_closure: function PoolWorker_run_closure(t0) {
      this.$this = t0;
    },
    WorkerTask: function WorkerTask() {
    },
    WorkerValueTask: function WorkerValueTask(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._computer = t0;
      _._result = t1;
      _.__worker_value_task$_done = t2;
      _._canceled = _._finished = _._scheduled = null;
      _._counter = t3;
      _._done = t4;
      _._canceledException = null;
      _.$ti = t5;
    },
    WorkerPool: function WorkerPool() {
    },
    WorkerPool__provisionWorkers_closure: function WorkerPool__provisionWorkers_closure(t0) {
      this.$this = t0;
    },
    WorkerPool__provisionWorkers_closure0: function WorkerPool__provisionWorkers_closure0(t0, t1) {
      this.$this = t0;
      this.poolWorker = t1;
    },
    WorkerPool__provisionWorkers_closure1: function WorkerPool__provisionWorkers_closure1(t0, t1) {
      this.poolWorker = t0;
      this.errors = t1;
    },
    WorkerPool__provisionWorkers_closure2: function WorkerPool__provisionWorkers_closure2(t0, t1, t2) {
      this.$this = t0;
      this.errors = t1;
      this.tasks = t2;
    },
    WorkerPool__provisionWorkers__closure: function WorkerPool__provisionWorkers__closure() {
    },
    WorkerPool__provisionWorkers__closure0: function WorkerPool__provisionWorkers__closure0() {
    },
    WorkerPool__provisionWorkers__closure1: function WorkerPool__provisionWorkers__closure1() {
    },
    WorkerPool__provisionWorkers__closure2: function WorkerPool__provisionWorkers__closure2() {
    },
    WorkerPool___schedule_closure: function WorkerPool___schedule_closure(t0) {
      this.$this = t0;
    },
    WorkerPool___schedule_closure0: function WorkerPool___schedule_closure0(t0) {
      this.$this = t0;
    },
    WorkerPool__dispatchTasks_closure: function WorkerPool__dispatchTasks_closure(t0, t1) {
      this.$this = t0;
      this.task = t1;
    },
    _WorkerPool_Object_Releasable: function _WorkerPool_Object_Releasable() {
    },
    SquadronPlatformType: function SquadronPlatformType(t0, t1, t2) {
      this.label = t0;
      this.index = t1;
      this._core$_name = t2;
    },
    WorkerStat: function WorkerStat(t0, t1) {
      this.timestamp = t0;
      this.isStopped = t1;
    },
    CancelationTokenReference: function CancelationTokenReference(t0, t1, t2) {
      var _ = this;
      _.id = t0;
      _.__cancelation_token_ref$_exception = null;
      _.__cancelation_token_ref$_completer = t1;
      _._hasRef = t2;
      _._refCount = 0;
    },
    SquadronCancelationToken$_(token, id) {
      var t1 = $.Zone__current;
      return new A.SquadronCancelationToken(id, token, new A._AsyncCompleter(new A._Future(t1, type$._Future_CanceledException), type$._AsyncCompleter_CanceledException));
    },
    SquadronCancelationToken_deserialize(props) {
      var t1, id, ex, token;
      if (props == null)
        return null;
      t1 = J.getInterceptor$asx(props);
      id = t1.$index(props, 0);
      ex = A.SquadronCanceledExceptionExt_deserialize(type$.nullable_List_dynamic._as(t1.$index(props, 1)));
      token = A.SquadronCancelationToken$_(null, A._asString(id));
      if (ex != null) {
        token.__squadron_cancelation_token$_exception = ex;
        token._completer.complete$1(ex);
      }
      return token;
    },
    SquadronCancelationToken: function SquadronCancelationToken(t0, t1, t2) {
      var _ = this;
      _.id = t0;
      _.token = t1;
      _.__squadron_cancelation_token$_exception = null;
      _._completer = t2;
    },
    Worker: function Worker() {
    },
    Worker_send_closure: function Worker_send_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.squadronToken = t1;
      _.completer = t2;
      _.command = t3;
    },
    _Stats: function _Stats(t0, t1) {
      var _ = this;
      _._worker = t0;
      _._worker$_stopped = _._started = null;
      _._idle = t1;
      _._totalErrors = _._totalWorkload = _._worker$_maxWorkload = _._workload = 0;
    },
    _Worker_Object_Releasable: function _Worker_Object_Releasable() {
    },
    WorkerResponse_get_result(_this) {
      var t1 = J.getInterceptor$asx(_this),
        err = type$.nullable_SquadronException._as(t1.$index(_this, 2));
      if (err != null)
        throw A.wrapException(err);
      else
        return t1.$index(_this, 1);
    },
    WorkerResponseImpl_unwrapInPlace(_this, channel) {
      var t1, t2, t3, log, t4, t5, t6, t7, t8, durationLo, durationHi, sumLo, microsecond, _null = null, _1000 = 1000;
      A.WorkerMessageImpl_unwrapTravelTime(_this);
      t1 = J.getInterceptor$asx(_this);
      t2 = type$.nullable_List_dynamic;
      t3 = t2._as(t1.$index(_this, 4));
      if (t3 == null)
        log = _null;
      else {
        t4 = J.getInterceptor$asx(t3);
        t5 = A._asNumQ(t4.$index(t3, 0));
        t5 = A._LogEventSerializationExt__getLevel(t5 == null ? _null : B.JSNumber_methods.toInt$0(t5));
        t6 = t4.$index(t3, 1);
        t7 = A._asNumQ(t4.$index(t3, 2));
        t7 = t7 == null ? _null : B.JSNumber_methods.toInt$0(t7);
        if (t7 == null)
          t7 = _null;
        else {
          t8 = $.$get$_latestUPDEpoch();
          t7 = A.Duration$(t7, 0)._duration;
          durationLo = B.JSInt_methods.$mod(t7, _1000);
          durationHi = B.JSInt_methods._tdivFast$1(t7 - durationLo, _1000);
          sumLo = t8._microsecond + durationLo;
          microsecond = B.JSInt_methods.$mod(sumLo, _1000);
          t7 = t8.isUtc;
          t7 = new A.DateTime(A.DateTime__validate(t8._core$_value + B.JSInt_methods._tdivFast$1(sumLo - microsecond, _1000) + durationHi, microsecond, t7), microsecond, t7);
        }
        t8 = t4.$index(t3, 3);
        t3 = A.SquadronException_loadStackTrace(A._asStringQ(t4.$index(t3, 4)));
        log = new A.LogEvent(t5, t6, t8, t3, t7 == null ? new A.DateTime(Date.now(), 0, false) : t7);
      }
      if (log != null) {
        channel.get$logger();
        return false;
      } else {
        t1.$indexSet(_this, 2, channel.get$exceptionManager().deserialize$1(t2._as(t1.$index(_this, 2))));
        if (t1.$index(_this, 3) == null)
          t1.$indexSet(_this, 3, false);
        return true;
      }
    },
    WorkerResponseImpl_wrapInPlace(_this) {
      var t2,
        t1 = J.getInterceptor$asx(_this),
        result = t1.$index(_this, 1);
      if (type$.Iterable_dynamic._is(result) && !type$.List_dynamic._is(result))
        t1.$indexSet(_this, 1, J.toList$0$ax(result));
      t2 = type$.nullable_SquadronException._as(t1.$index(_this, 2));
      t1.$indexSet(_this, 2, t2 == null ? null : t2.serialize$0());
      return _this;
    },
    WorkerResponseImpl_from(data) {
      if (J.get$length$asx(data) !== 5)
        throw A.wrapException(A.SquadronError$_("Invalid worker response", null, null));
      return data;
    },
    _LogEventSerializationExt__getLevel(value) {
      if (value == null)
        return B.Level_2000_3_debug;
      return new A.WhereIterable(B.List_jnT, type$.bool_Function_Level._as(new A._LogEventSerializationExt__getLevel_closure(value)), type$.WhereIterable_Level).get$first(0);
    },
    _LogEventSerializationExt__stringify(message) {
      var ex, t1, exception;
      if (type$.Function._is(message))
        try {
          t1 = J.toString$0$(message.call$0());
          return t1;
        } catch (exception) {
          ex = A.unwrapException(exception);
          t1 = A.S(ex);
          return "Deferred message failed with error: " + t1;
        }
      else
        return J.toString$0$(message);
    },
    _LogEventSerializationExt__getLevel_closure: function _LogEventSerializationExt__getLevel_closure(t0) {
      this.value = t0;
    },
    TypedDataBuffer: function TypedDataBuffer() {
    },
    _IntBuffer: function _IntBuffer() {
    },
    Uint8Buffer: function Uint8Buffer(t0, t1) {
      this._typed_buffer$_buffer = t0;
      this._typed_buffer$_length = t1;
    },
    Releasable: function Releasable() {
    },
    printString(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    },
    NullableObjectUtilExtension_jsify(_this) {
      return A.jsify(_this);
    },
    JSAnyUtilityExtension_instanceOfString(_this, constructorName) {
      var parts, $constructor, t1, _i, t2;
      if (constructorName.length === 0)
        return false;
      parts = constructorName.split(".");
      $constructor = init.G;
      for (t1 = parts.length, _i = 0; _i < t1; ++_i, $constructor = t2) {
        t2 = $constructor[parts[_i]];
        A._asJSObjectQ(t2);
        if (t2 == null)
          return false;
      }
      return _this instanceof type$.JavaScriptFunction._as($constructor);
    },
    JSObjectUnsafeUtilExtension__callMethod(_this, method, arg1, arg2, arg3, arg4) {
      var t1 = _this[method]();
      return t1;
    },
    SetExtensions_removeFirstWhere(_this, whereClause, $T) {
      var index;
      for (index = 0; index < _this.get$length(_this);) {
        if (whereClause.call$1(_this.elementAt$1(0, index))) {
          _this.remove$1(0, _this.elementAt$1(0, index));
          return true;
        }
        ++index;
      }
      return false;
    },
    ExtraSugar_require(_this, argumentName, $T) {
      if (_this != null)
        return _this;
      else
        throw A.wrapException(A.ArgumentError$("Expected non null", argumentName));
    },
    IntListExtensions_serializeCbor(_this, forJson, tags) {
      var t1 = J.toList$1$growable$ax(_this, false);
      return new A._CborBytesImpl(t1, tags);
    },
    IntListExtensions_hexEncode(_this) {
      var t1 = type$.HexCodec._eval$1("Codec.S")._as(J.toList$1$growable$ax(_this, false));
      return B.C_HexCodec.get$encoder().convert$1(t1);
    },
    IntListExtensions_addressBase58Orbech32Encode(_this) {
      var t1, base, extension;
      if (A.CardanoAddress_getAddressType(_this) === B.AddressType_4)
        t1 = A.FastBase58EncodingAlphabet(B.NativeUint8List_methods.toList$1$growable(_this, false), $.$get$BTCAlphabet());
      else {
        base = A.CardanoAddress__getAddressBech32BaseHrp(_this);
        extension = (0 === (B.NativeUint8List_methods.get$first(_this) & 15) ? B.NetworkId_0_0_testnet : B.NetworkId_1_1_mainnet) === B.NetworkId_1_1_mainnet ? "" : "_test";
        t1 = new A.Bech32Encoder(base + extension).encode$1(B.NativeUint8List_methods.toList$1$growable(_this, false));
      }
      return t1;
    },
    IntListListExtensions_serializeCbor(_this, forJson, tags) {
      var t1 = J.toList$1$growable$ax(_this, false);
      return new A._CborBytesIndefiniteLengthImpl(tags, t1);
    },
    CardanoPubAccountX_paymentAddress(_this, index, networkId) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.CardanoAddress),
        $async$returnValue, t1, $async$temp1;
      var $async$CardanoPubAccountX_paymentAddress = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$cardanoWorker();
              $async$temp1 = t1;
              $async$goto = 3;
              return A._asyncAwait(t1.ckdPubBip32Ed25519KeyDerivation$2(_this.paymentRoleKey, index), $async$CardanoPubAccountX_paymentAddress);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.toCardanoBaseAddress$3($async$result, _this.stakeKey, networkId);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$CardanoPubAccountX_paymentAddress, $async$completer);
    },
    CardanoPubAccountX_changeAddress(_this, index, networkId) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.CardanoAddress),
        $async$returnValue, t1, $async$temp1;
      var $async$CardanoPubAccountX_changeAddress = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$cardanoWorker();
              $async$temp1 = t1;
              $async$goto = 3;
              return A._asyncAwait(t1.ckdPubBip32Ed25519KeyDerivation$2(_this.changeRoleKey, index), $async$CardanoPubAccountX_changeAddress);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.toCardanoBaseAddress$3($async$result, _this.stakeKey, networkId);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$CardanoPubAccountX_changeAddress, $async$completer);
    },
    DerivationUtils_deriveHardened(hardenedIndex, signingKey) {
      if ((hardenedIndex & 2147483648) >>> 0 === 0)
        throw A.wrapException(A.Exception_Exception("Bip32KeyPair deriveHardned: Illegal State index is not hardned"));
      return type$.Bip32PrivateKey._as(A.Bip32Ed25519KeyDerivation__ckd(signingKey, hardenedIndex));
    },
    DerivationUtils_derive(index, sKey) {
      var signingKey;
      if ((index & 2147483648) >>> 0 !== 0)
        throw A.wrapException(A.Exception_Exception("Bip32KeyPair derive: Illegal State index is hardned"));
      signingKey = type$.Bip32PrivateKey._as(A.Bip32Ed25519KeyDerivation__ckd(sKey, index));
      return new A.Bip32KeyPair(signingKey, A.Bip32VerifyKey$(signingKey._ed25519_bip32$_verifyKey._u8l));
    },
    DerivationUtils_seedToBip32signingKey(seed) {
      return A.Bip32SigningKey$normalizeBytes(A.PBKDF2__deriveKey(A.tweetnacl__TweetNaClExt_crypto_auth_hmacsha512$closure(), 64, new Uint8Array(0), seed, 4096, 96), 0);
    },
    IterableX_reduceSafe(_this, combine, initialValue, $T, $OUT) {
      var aggregator, t2,
        t1 = A._arrayInstanceType(_this),
        iterator = new J.ArrayIterator(_this, _this.length, t1._eval$1("ArrayIterator<1>"));
      for (t1 = t1._precomputed1, aggregator = initialValue; iterator.moveNext$0();) {
        t2 = iterator._current;
        aggregator = combine.call$2(aggregator, t2 == null ? t1._as(t2) : t2);
      }
      return aggregator;
    },
    main() {
      A.bootstrap(A.wallet_tasks__$WalletTasksInitializer$closure(), null);
    },
    $getWalletTasksActivator(platform) {
      if (platform === B.SquadronPlatformType_JavaScript_2_js)
        return A.mapUrl("/assets/packages/cardano_flutter_sdk/workers/wallet_tasks.web.g.dart.js");
      else if (platform === B.SquadronPlatformType_wmw)
        return A.mapUrl("/assets/packages/cardano_flutter_sdk/workers/wallet_tasks.web.g.dart.wasm");
      else
        throw A.wrapException(A.UnsupportedError$(platform.label + " not supported."));
    },
    IterableExt_chunks(_this, $length, $T) {
      return new A._SyncStarIterable(A.IterableExt_chunks$body(_this, $length, $T), $T._eval$1("_SyncStarIterable<List<0>>"));
    },
    IterableExt_chunks$body($async$_this, $async$$length, $async$$T) {
      return function() {
        var _this = $async$_this,
          $length = $async$$length,
          $T = $async$$T;
        var $async$goto = 0, $async$handler = 2, $async$errorStack = [], t2, chunk, i, t3, t1, iterator;
        return function $async$IterableExt_chunks($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            $async$outer:
              switch ($async$goto) {
                case 0:
                  // Function start
                  t1 = A._arrayInstanceType(_this);
                  iterator = new J.ArrayIterator(_this, _this.length, t1._eval$1("ArrayIterator<1>"));
                  t1 = t1._precomputed1, t2 = $T._eval$1("JSArray<0>");
                case 3:
                  // for condition
                  // trivial condition
                  chunk = A._setArrayType([], t2);
                  for (i = 0; i < $length; ++i) {
                    if (!iterator.moveNext$0()) {
                      // goto return
                      $async$goto = 1;
                      break $async$outer;
                    }
                    t3 = iterator._current;
                    B.JSArray_methods.add$1(chunk, t3 == null ? t1._as(t3) : t3);
                  }
                  $async$goto = 5;
                  return $async$iterator._async$_current = chunk, 1;
                case 5:
                  // after yield
                  // goto for condition
                  $async$goto = 3;
                  break;
                case 4:
                  // after for
                case 1:
                  // return
                  return 0;
                case 2:
                  // rethrow
                  return $async$iterator._datum = $async$errorStack.at(-1), 3;
              }
        };
      };
    },
    isHintSubtype(hint) {
      switch (A._asInt(hint)) {
        case 0:
        case 1:
        case 2:
        case 3:
        case 5:
        case 24:
        case 32:
        case 33:
        case 34:
        case 35:
        case 36:
          return true;
      }
      return false;
    },
    IterableExtension_lastWhereOrNull(_this, test, $T) {
      var t1, result, _i, element;
      for (t1 = _this.length, result = null, _i = 0; _i < _this.length; _this.length === t1 || (0, A.throwConcurrentModificationError)(_this), ++_i) {
        element = _this[_i];
        if (test.call$1(element))
          result = element;
      }
      return result;
    },
    IterableExtension_get_lastOrNull(_this, $T) {
      if (_this.get$_firstNonNull() == null)
        return null;
      return _this.get$last(0);
    },
    IterableExtension_groupFoldBy(_this, keyOf, combine, $T, $K, $G) {
      var t1, element, key,
        result = A.LinkedHashMap_LinkedHashMap$_empty($K, $G);
      for (t1 = J.get$iterator$ax(_this); t1.moveNext$0();) {
        element = t1.get$current();
        key = keyOf.call$1(element);
        result.$indexSet(0, key, combine.call$2(result.$index(0, key), element));
      }
      return result;
    },
    IterableIterableExtension_get_flattened(_this, $T) {
      return new A._SyncStarIterable(A.IterableIterableExtension_get_flattened$body(_this, $T), $T._eval$1("_SyncStarIterable<0>"));
    },
    IterableIterableExtension_get_flattened$body($async$_this, $async$$T) {
      return function() {
        var _this = $async$_this,
          $T = $async$$T;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1;
        return function $async$IterableIterableExtension_get_flattened($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = J.get$iterator$ax(_this);
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                $async$goto = 4;
                return $async$iterator._yieldStar$1(t1.get$current());
              case 4:
                // after yield
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    ListExtensions_forEachIndexed(_this, action, $E) {
      var index;
      for (index = 0; index < _this.length; ++index)
        action.call$2(index, _this[index]);
    },
    ListExtensions_mapIndexed(_this, convert, $E, $R) {
      return new A._SyncStarIterable(A.ListExtensions_mapIndexed$body(_this, convert, $E, $R), $R._eval$1("_SyncStarIterable<0>"));
    },
    ListExtensions_mapIndexed$body($async$_this, $async$convert, $async$$E, $async$$R) {
      return function() {
        var _this = $async$_this,
          convert = $async$convert,
          $E = $async$$E,
          $R = $async$$R;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1, index;
        return function $async$ListExtensions_mapIndexed($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = J.getInterceptor$asx(_this), index = 0;
              case 2:
                // for condition
                if (!(index < t1.get$length(_this))) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                $async$goto = 5;
                return $async$iterator._async$_current = convert.call$2(index, t1.$index(_this, index)), 1;
              case 5:
                // after yield
              case 3:
                // for update
                ++index;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    ListExtensions_equals(_this, other, $E) {
      var i,
        t1 = J.getInterceptor$asx(_this),
        t2 = J.getInterceptor$asx(other);
      if (t1.get$length(_this) !== t2.get$length(other))
        return false;
      for (i = 0; i < t1.get$length(_this); ++i)
        if (!J.$eq$(t1.$index(_this, i), t2.$index(other, i)))
          return false;
      return true;
    },
    Hash_blake2b(message, digestSize) {
      var context = A.Blake2b_init(digestSize, null, null, null);
      A.Blake2b_update(context, message);
      return A.Blake2b_finalise(context);
    },
    PBKDF2__deriveKey(hasher, hash_length, password, salt, count, key_length) {
      var block_count, t1, derived_key, $U, idx, t2, i, t3, offset, j, k, t4, t5, result;
      if (count <= 0 || key_length < 1 || key_length > 4294967295)
        throw A.wrapException(A.Exception_Exception(null));
      block_count = B.JSNumber_methods.ceil$0(key_length / hash_length);
      t1 = key_length + hash_length;
      derived_key = new Uint8Array(t1);
      $U = new Uint8Array(hash_length);
      idx = A._setArrayType([0, 0, 0, 0], type$.JSArray_int);
      for (t2 = type$.int, i = 1; i <= block_count; ++i) {
        B.JSArray_methods.$indexSet(idx, 0, i >>> 24 & 255);
        B.JSArray_methods.$indexSet(idx, 1, i >>> 16 & 255);
        B.JSArray_methods.$indexSet(idx, 2, i >>> 8 & 255);
        B.JSArray_methods.$indexSet(idx, 3, i & 255);
        t3 = A.List_List$_of(salt, t2);
        B.JSArray_methods.addAll$1(t3, idx);
        hasher.call$3($U, new Uint8Array(A._ensureNativeList(t3)), password);
        offset = (i - 1) * hash_length;
        A.PineNaClUtils_listCopy($U, hash_length, derived_key, offset);
        for (j = 1; j < count; ++j) {
          hasher.call$3($U, $U, password);
          for (k = 0; k < hash_length; ++k) {
            t3 = k + offset;
            if (!(t3 >= 0 && t3 < t1))
              return A.ioore(derived_key, t3);
            t4 = derived_key[t3];
            t5 = $U[k];
            if (!(t3 < t1))
              return A.ioore(derived_key, t3);
            derived_key[t3] = t4 ^ t5;
          }
        }
      }
      result = B.NativeUint8List_methods.sublist$2(derived_key, 0, key_length);
      A.PineNaClUtils_listZero($U, -1);
      A.PineNaClUtils_listZero(derived_key, -1);
      return result;
    },
    TweetNaCl__ts64(x, i, uh, ul) {
      var t1, t2;
      x.$flags & 2 && A.throwUnsupportedOperation(x);
      t1 = x.length;
      if (!(i >= 0 && i < t1))
        return A.ioore(x, i);
      x[i] = uh >>> 24 & 255;
      t2 = i + 1;
      if (!(t2 < t1))
        return A.ioore(x, t2);
      x[t2] = uh >>> 16 & 255;
      t2 = i + 2;
      if (!(t2 < t1))
        return A.ioore(x, t2);
      x[t2] = uh >>> 8 & 255;
      t2 = i + 3;
      if (!(t2 < t1))
        return A.ioore(x, t2);
      x[t2] = uh & 255;
      t2 = i + 4;
      if (!(t2 < t1))
        return A.ioore(x, t2);
      x[t2] = ul >>> 24 & 255;
      t2 = i + 5;
      if (!(t2 < t1))
        return A.ioore(x, t2);
      x[t2] = ul >>> 16 & 255;
      t2 = i + 6;
      if (!(t2 < t1))
        return A.ioore(x, t2);
      x[t2] = ul >>> 8 & 255;
      t2 = i + 7;
      if (!(t2 < t1))
        return A.ioore(x, t2);
      x[t2] = ul & 255;
    },
    TweetNaCl__vn(x, xoff, y, yoff, n) {
      var i, d, t1, t2;
      for (i = 0, d = 0; i < n; ++i) {
        t1 = i + xoff;
        if (!(t1 < 32))
          return A.ioore(x, t1);
        t1 = x[t1];
        t2 = i + yoff;
        if (!(t2 < 32))
          return A.ioore(y, t2);
        d |= (t1 ^ y[t2]) & 255;
      }
      return (B.JSInt_methods._shrOtherPositive$1(d - 1, 8) & 1) - 1;
    },
    TweetNaCl__set25519(r, a) {
      var t1, t2, i, t3;
      for (t1 = a.length, t2 = r.$flags | 0, i = 0; i < 16; ++i) {
        if (!(i < t1))
          return A.ioore(a, i);
        t3 = a[i];
        t2 & 2 && A.throwUnsupportedOperation(r);
        if (!(i < 16))
          return A.ioore(r, i);
        r[i] = t3;
      }
    },
    TweetNaCl__car25519(o) {
      var t1, i, c, v, t2, t3;
      for (t1 = o.$flags | 0, i = 0, c = 1; i < 16; ++i) {
        v = o[i] + c + 65535;
        c = B.JSInt_methods._tdivFast$1(v, 65536);
        t1 & 2 && A.throwUnsupportedOperation(o);
        if (!(i < 16))
          return A.ioore(o, i);
        o[i] = v - c * 65536;
      }
      t2 = o[0];
      t3 = c - 1;
      t1 & 2 && A.throwUnsupportedOperation(o);
      if (0 >= 16)
        return A.ioore(o, 0);
      o[0] = t2 + (t3 + 37 * t3);
    },
    TweetNaCl__sel25519_off(p, poff, q, qoff, b) {
      var t1, t2, i, t3, t4, t5, t,
        c = ~(b - 1);
      for (t1 = p.$flags | 0, t2 = q.$flags | 0, i = 0; i < 16; ++i) {
        t3 = i + poff;
        if (!(t3 < 16))
          return A.ioore(p, t3);
        t4 = p[t3];
        t5 = i + qoff;
        if (!(t5 < 16))
          return A.ioore(q, t5);
        t = c & (t4 ^ q[t5]);
        t1 & 2 && A.throwUnsupportedOperation(p);
        if (!(t3 < 16))
          return A.ioore(p, t3);
        p[t3] = (t4 ^ t) >>> 0;
        t4 = q[t5];
        t2 & 2 && A.throwUnsupportedOperation(q);
        if (!(t5 < 16))
          return A.ioore(q, t5);
        q[t5] = (t4 ^ t) >>> 0;
      }
    },
    TweetNaCl__pack25519(o, n, noff) {
      var i, t1, j, t2, t3, t4,
        m = new Int32Array(16),
        t = new Int32Array(16);
      for (i = 0; i < 16; ++i) {
        t1 = i + noff;
        if (!(t1 < 16))
          return A.ioore(n, t1);
        t[i] = n[t1];
      }
      A.TweetNaCl__car25519(t);
      A.TweetNaCl__car25519(t);
      A.TweetNaCl__car25519(t);
      for (j = 0; j < 2; ++j) {
        m[0] = t[0] - 65517;
        for (i = 1; i < 15; ++i) {
          t1 = i - 1;
          m[i] = t[i] - 65535 - (B.JSInt_methods._shrOtherPositive$1(m[t1], 16) & 1);
          m[t1] = m[t1] & 65535;
        }
        t1 = t[15];
        t2 = m[14];
        m[15] = t1 - 32767 - (B.JSInt_methods._shrOtherPositive$1(t2, 16) & 1);
        t1 = B.JSInt_methods._shrOtherPositive$1(m[15], 16);
        m[14] = t2 & 65535;
        A.TweetNaCl__sel25519_off(t, 0, m, 0, 1 - (t1 & 1));
      }
      for (t1 = o.$flags | 0, i = 0; i < 16; ++i) {
        t2 = 2 * i;
        t3 = t[i];
        t1 & 2 && A.throwUnsupportedOperation(o);
        t4 = o.length;
        if (!(t2 < t4))
          return A.ioore(o, t2);
        o[t2] = t3 & 255;
        ++t2;
        t3 = B.JSInt_methods._shrOtherPositive$1(t[i], 8);
        if (!(t2 < t4))
          return A.ioore(o, t2);
        o[t2] = t3;
      }
    },
    TweetNaCl__neq25519_off(a, aoff, b, boff) {
      var c = new Uint8Array(32),
        d = new Uint8Array(32);
      A.TweetNaCl__pack25519(c, a, aoff);
      A.TweetNaCl__pack25519(d, b, boff);
      return A.TweetNaCl__vn(c, 0, d, 0, 32);
    },
    TweetNaCl__par25519_off(a, aoff) {
      var d = new Uint8Array(32);
      A.TweetNaCl__pack25519(d, a, aoff);
      return d[0] & 1;
    },
    TweetNaCl__unpack25519(o, n) {
      var t1, t2, i, t3, t4;
      for (t1 = n.length, t2 = o.$flags | 0, i = 0; i < 16; ++i) {
        t3 = 2 * i;
        if (!(t3 < t1))
          return A.ioore(n, t3);
        t4 = n[t3];
        ++t3;
        if (!(t3 < t1))
          return A.ioore(n, t3);
        t3 = n[t3];
        t2 & 2 && A.throwUnsupportedOperation(o);
        if (!(i < 16))
          return A.ioore(o, i);
        o[i] = (t4 & 255) + (t3 << 8 & 65535);
      }
      t1 = o[15];
      t2 & 2 && A.throwUnsupportedOperation(o);
      if (15 >= 16)
        return A.ioore(o, 15);
      o[15] = t1 & 32767;
    },
    TweetNaCl__A_off(o, ooff, a, aoff, b, boff) {
      var t1, i, t2, t3, t4;
      for (t1 = o.$flags | 0, i = 0; i < 16; ++i) {
        t2 = i + ooff;
        t3 = i + aoff;
        if (!(t3 < 16))
          return A.ioore(a, t3);
        t3 = a[t3];
        t4 = i + boff;
        if (!(t4 < 16))
          return A.ioore(b, t4);
        t4 = b[t4];
        t1 & 2 && A.throwUnsupportedOperation(o);
        if (!(t2 < 16))
          return A.ioore(o, t2);
        o[t2] = t3 + t4;
      }
    },
    TweetNaCl__Z_off(o, ooff, a, aoff, b, boff) {
      var t1, t2, i, t3, t4, t5;
      for (t1 = a.length, t2 = o.$flags | 0, i = 0; i < 16; ++i) {
        t3 = i + ooff;
        t4 = i + aoff;
        if (!(t4 < t1))
          return A.ioore(a, t4);
        t4 = a[t4];
        t5 = i + boff;
        if (!(t5 < 16))
          return A.ioore(b, t5);
        t5 = b[t5];
        t2 & 2 && A.throwUnsupportedOperation(o);
        if (!(t3 < 16))
          return A.ioore(o, t3);
        o[t3] = t4 - t5;
      }
    },
    TweetNaCl__M_off(o, ooff, a, aoff, b, boff) {
      var b0, t2, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, v, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, c, v16, c0, v17, c1, v18, c2, v19, c3, v20, c4, v21, c5, v22, c6, v23, c7, v24, c8, v25, c9, v26, c10, v27, c11, v28, c12, v29, c13, c14, _65536 = 65536,
        t1 = b.length;
      if (!(boff < t1))
        return A.ioore(b, boff);
      b0 = b[boff];
      t2 = 1 + boff;
      if (!(t2 < t1))
        return A.ioore(b, t2);
      b1 = b[t2];
      t2 = 2 + boff;
      if (!(t2 < t1))
        return A.ioore(b, t2);
      b2 = b[t2];
      t2 = 3 + boff;
      if (!(t2 < t1))
        return A.ioore(b, t2);
      b3 = b[t2];
      t2 = 4 + boff;
      if (!(t2 < t1))
        return A.ioore(b, t2);
      b4 = b[t2];
      t2 = 5 + boff;
      if (!(t2 < t1))
        return A.ioore(b, t2);
      b5 = b[t2];
      t2 = 6 + boff;
      if (!(t2 < t1))
        return A.ioore(b, t2);
      b6 = b[t2];
      t2 = 7 + boff;
      if (!(t2 < t1))
        return A.ioore(b, t2);
      b7 = b[t2];
      t2 = 8 + boff;
      if (!(t2 < t1))
        return A.ioore(b, t2);
      b8 = b[t2];
      t2 = 9 + boff;
      if (!(t2 < t1))
        return A.ioore(b, t2);
      b9 = b[t2];
      t2 = 10 + boff;
      if (!(t2 < t1))
        return A.ioore(b, t2);
      b10 = b[t2];
      t2 = 11 + boff;
      if (!(t2 < t1))
        return A.ioore(b, t2);
      b11 = b[t2];
      t2 = 12 + boff;
      if (!(t2 < t1))
        return A.ioore(b, t2);
      b12 = b[t2];
      t2 = 13 + boff;
      if (!(t2 < t1))
        return A.ioore(b, t2);
      b13 = b[t2];
      t2 = 14 + boff;
      if (!(t2 < t1))
        return A.ioore(b, t2);
      b14 = b[t2];
      t2 = 15 + boff;
      if (!(t2 < t1))
        return A.ioore(b, t2);
      b15 = b[t2];
      t2 = a.length;
      if (!(aoff < t2))
        return A.ioore(a, aoff);
      v = a[aoff];
      t1 = 1 + aoff;
      if (!(t1 < t2))
        return A.ioore(a, t1);
      v0 = a[t1];
      t1 = 2 + aoff;
      if (!(t1 < t2))
        return A.ioore(a, t1);
      v1 = a[t1];
      t1 = 3 + aoff;
      if (!(t1 < t2))
        return A.ioore(a, t1);
      v2 = a[t1];
      t1 = 4 + aoff;
      if (!(t1 < t2))
        return A.ioore(a, t1);
      v3 = a[t1];
      t1 = 5 + aoff;
      if (!(t1 < t2))
        return A.ioore(a, t1);
      v4 = a[t1];
      t1 = 6 + aoff;
      if (!(t1 < t2))
        return A.ioore(a, t1);
      v5 = a[t1];
      t1 = 7 + aoff;
      if (!(t1 < t2))
        return A.ioore(a, t1);
      v6 = a[t1];
      t1 = 8 + aoff;
      if (!(t1 < t2))
        return A.ioore(a, t1);
      v7 = a[t1];
      t1 = 9 + aoff;
      if (!(t1 < t2))
        return A.ioore(a, t1);
      v8 = a[t1];
      t1 = 10 + aoff;
      if (!(t1 < t2))
        return A.ioore(a, t1);
      v9 = a[t1];
      t1 = 11 + aoff;
      if (!(t1 < t2))
        return A.ioore(a, t1);
      v10 = a[t1];
      t1 = 12 + aoff;
      if (!(t1 < t2))
        return A.ioore(a, t1);
      v11 = a[t1];
      t1 = 13 + aoff;
      if (!(t1 < t2))
        return A.ioore(a, t1);
      v12 = a[t1];
      t1 = 14 + aoff;
      if (!(t1 < t2))
        return A.ioore(a, t1);
      v13 = a[t1];
      t1 = 15 + aoff;
      if (!(t1 < t2))
        return A.ioore(a, t1);
      v14 = a[t1];
      v15 = v * b0 + 38 * (v0 * b15 + v1 * b14 + v2 * b13 + v3 * b12 + v4 * b11 + v5 * b10 + v6 * b9 + v7 * b8 + v8 * b7 + v9 * b6 + v10 * b5 + v11 * b4 + v12 * b3 + v13 * b2 + v14 * b1) + 1 + 65535;
      c = B.JSInt_methods._tdivFast$1(v15, _65536);
      v16 = v * b1 + v0 * b0 + 38 * (v1 * b15 + v2 * b14 + v3 * b13 + v4 * b12 + v5 * b11 + v6 * b10 + v7 * b9 + v8 * b8 + v9 * b7 + v10 * b6 + v11 * b5 + v12 * b4 + v13 * b3 + v14 * b2) + c + 65535;
      c0 = B.JSInt_methods._tdivFast$1(v16, _65536);
      v17 = v * b2 + v0 * b1 + v1 * b0 + 38 * (v2 * b15 + v3 * b14 + v4 * b13 + v5 * b12 + v6 * b11 + v7 * b10 + v8 * b9 + v9 * b8 + v10 * b7 + v11 * b6 + v12 * b5 + v13 * b4 + v14 * b3) + c0 + 65535;
      c1 = B.JSInt_methods._tdivFast$1(v17, _65536);
      v18 = v * b3 + v0 * b2 + v1 * b1 + v2 * b0 + 38 * (v3 * b15 + v4 * b14 + v5 * b13 + v6 * b12 + v7 * b11 + v8 * b10 + v9 * b9 + v10 * b8 + v11 * b7 + v12 * b6 + v13 * b5 + v14 * b4) + c1 + 65535;
      c2 = B.JSInt_methods._tdivFast$1(v18, _65536);
      v19 = v * b4 + v0 * b3 + v1 * b2 + v2 * b1 + v3 * b0 + 38 * (v4 * b15 + v5 * b14 + v6 * b13 + v7 * b12 + v8 * b11 + v9 * b10 + v10 * b9 + v11 * b8 + v12 * b7 + v13 * b6 + v14 * b5) + c2 + 65535;
      c3 = B.JSInt_methods._tdivFast$1(v19, _65536);
      v20 = v * b5 + v0 * b4 + v1 * b3 + v2 * b2 + v3 * b1 + v4 * b0 + 38 * (v5 * b15 + v6 * b14 + v7 * b13 + v8 * b12 + v9 * b11 + v10 * b10 + v11 * b9 + v12 * b8 + v13 * b7 + v14 * b6) + c3 + 65535;
      c4 = B.JSInt_methods._tdivFast$1(v20, _65536);
      v21 = v * b6 + v0 * b5 + v1 * b4 + v2 * b3 + v3 * b2 + v4 * b1 + v5 * b0 + 38 * (v6 * b15 + v7 * b14 + v8 * b13 + v9 * b12 + v10 * b11 + v11 * b10 + v12 * b9 + v13 * b8 + v14 * b7) + c4 + 65535;
      c5 = B.JSInt_methods._tdivFast$1(v21, _65536);
      v22 = v * b7 + v0 * b6 + v1 * b5 + v2 * b4 + v3 * b3 + v4 * b2 + v5 * b1 + v6 * b0 + 38 * (v7 * b15 + v8 * b14 + v9 * b13 + v10 * b12 + v11 * b11 + v12 * b10 + v13 * b9 + v14 * b8) + c5 + 65535;
      c6 = B.JSInt_methods._tdivFast$1(v22, _65536);
      v23 = v * b8 + v0 * b7 + v1 * b6 + v2 * b5 + v3 * b4 + v4 * b3 + v5 * b2 + v6 * b1 + v7 * b0 + 38 * (v8 * b15 + v9 * b14 + v10 * b13 + v11 * b12 + v12 * b11 + v13 * b10 + v14 * b9) + c6 + 65535;
      c7 = B.JSInt_methods._tdivFast$1(v23, _65536);
      v24 = v * b9 + v0 * b8 + v1 * b7 + v2 * b6 + v3 * b5 + v4 * b4 + v5 * b3 + v6 * b2 + v7 * b1 + v8 * b0 + 38 * (v9 * b15 + v10 * b14 + v11 * b13 + v12 * b12 + v13 * b11 + v14 * b10) + c7 + 65535;
      c8 = B.JSInt_methods._tdivFast$1(v24, _65536);
      v25 = v * b10 + v0 * b9 + v1 * b8 + v2 * b7 + v3 * b6 + v4 * b5 + v5 * b4 + v6 * b3 + v7 * b2 + v8 * b1 + v9 * b0 + 38 * (v10 * b15 + v11 * b14 + v12 * b13 + v13 * b12 + v14 * b11) + c8 + 65535;
      c9 = B.JSInt_methods._tdivFast$1(v25, _65536);
      v26 = v * b11 + v0 * b10 + v1 * b9 + v2 * b8 + v3 * b7 + v4 * b6 + v5 * b5 + v6 * b4 + v7 * b3 + v8 * b2 + v9 * b1 + v10 * b0 + 38 * (v11 * b15 + v12 * b14 + v13 * b13 + v14 * b12) + c9 + 65535;
      c10 = B.JSInt_methods._tdivFast$1(v26, _65536);
      v27 = v * b12 + v0 * b11 + v1 * b10 + v2 * b9 + v3 * b8 + v4 * b7 + v5 * b6 + v6 * b5 + v7 * b4 + v8 * b3 + v9 * b2 + v10 * b1 + v11 * b0 + 38 * (v12 * b15 + v13 * b14 + v14 * b13) + c10 + 65535;
      c11 = B.JSInt_methods._tdivFast$1(v27, _65536);
      v28 = v * b13 + v0 * b12 + v1 * b11 + v2 * b10 + v3 * b9 + v4 * b8 + v5 * b7 + v6 * b6 + v7 * b5 + v8 * b4 + v9 * b3 + v10 * b2 + v11 * b1 + v12 * b0 + 38 * (v13 * b15 + v14 * b14) + c11 + 65535;
      c12 = B.JSInt_methods._tdivFast$1(v28, _65536);
      v29 = v * b14 + v0 * b13 + v1 * b12 + v2 * b11 + v3 * b10 + v4 * b9 + v5 * b8 + v6 * b7 + v7 * b6 + v8 * b5 + v9 * b4 + v10 * b3 + v11 * b2 + v12 * b1 + v13 * b0 + 38 * (v14 * b15) + c12 + 65535;
      c13 = B.JSInt_methods._tdivFast$1(v29, _65536);
      v = v * b15 + v0 * b14 + v1 * b13 + v2 * b12 + v3 * b11 + v4 * b10 + v5 * b9 + v6 * b8 + v7 * b7 + v8 * b6 + v9 * b5 + v10 * b4 + v11 * b3 + v12 * b2 + v13 * b1 + v14 * b0 + c13 + 65535;
      c14 = B.JSInt_methods._tdivFast$1(v, _65536);
      v0 = v15 - c * 65536 + 38 * (c14 - 1) + 1 + 65535;
      c = B.JSInt_methods._tdivFast$1(v0, _65536);
      v1 = v16 - c0 * 65536 + c + 65535;
      c0 = B.JSInt_methods._tdivFast$1(v1, _65536);
      v2 = v17 - c1 * 65536 + c0 + 65535;
      c1 = B.JSInt_methods._tdivFast$1(v2, _65536);
      v3 = v18 - c2 * 65536 + c1 + 65535;
      c2 = B.JSInt_methods._tdivFast$1(v3, _65536);
      v4 = v19 - c3 * 65536 + c2 + 65535;
      c3 = B.JSInt_methods._tdivFast$1(v4, _65536);
      v5 = v20 - c4 * 65536 + c3 + 65535;
      c4 = B.JSInt_methods._tdivFast$1(v5, _65536);
      v6 = v21 - c5 * 65536 + c4 + 65535;
      c5 = B.JSInt_methods._tdivFast$1(v6, _65536);
      v7 = v22 - c6 * 65536 + c5 + 65535;
      c6 = B.JSInt_methods._tdivFast$1(v7, _65536);
      v8 = v23 - c7 * 65536 + c6 + 65535;
      c7 = B.JSInt_methods._tdivFast$1(v8, _65536);
      v9 = v24 - c8 * 65536 + c7 + 65535;
      c8 = B.JSInt_methods._tdivFast$1(v9, _65536);
      v10 = v25 - c9 * 65536 + c8 + 65535;
      c9 = B.JSInt_methods._tdivFast$1(v10, _65536);
      v11 = v26 - c10 * 65536 + c9 + 65535;
      c10 = B.JSInt_methods._tdivFast$1(v11, _65536);
      v12 = v27 - c11 * 65536 + c10 + 65535;
      c11 = B.JSInt_methods._tdivFast$1(v12, _65536);
      v13 = v28 - c12 * 65536 + c11 + 65535;
      c12 = B.JSInt_methods._tdivFast$1(v13, _65536);
      v14 = v29 - c13 * 65536 + c12 + 65535;
      c13 = B.JSInt_methods._tdivFast$1(v14, _65536);
      v = v - c14 * 65536 + c13 + 65535;
      c14 = B.JSInt_methods._tdivFast$1(v, _65536);
      o.$flags & 2 && A.throwUnsupportedOperation(o);
      if (!(ooff < 16))
        return A.ioore(o, ooff);
      o[ooff] = v0 - c * 65536 + 38 * (c14 - 1);
      t1 = 1 + ooff;
      if (!(t1 < 16))
        return A.ioore(o, t1);
      o[t1] = v1 - c0 * 65536;
      t1 = 2 + ooff;
      if (!(t1 < 16))
        return A.ioore(o, t1);
      o[t1] = v2 - c1 * 65536;
      t1 = 3 + ooff;
      if (!(t1 < 16))
        return A.ioore(o, t1);
      o[t1] = v3 - c2 * 65536;
      t1 = 4 + ooff;
      if (!(t1 < 16))
        return A.ioore(o, t1);
      o[t1] = v4 - c3 * 65536;
      t1 = 5 + ooff;
      if (!(t1 < 16))
        return A.ioore(o, t1);
      o[t1] = v5 - c4 * 65536;
      t1 = 6 + ooff;
      if (!(t1 < 16))
        return A.ioore(o, t1);
      o[t1] = v6 - c5 * 65536;
      t1 = 7 + ooff;
      if (!(t1 < 16))
        return A.ioore(o, t1);
      o[t1] = v7 - c6 * 65536;
      t1 = 8 + ooff;
      if (!(t1 < 16))
        return A.ioore(o, t1);
      o[t1] = v8 - c7 * 65536;
      t1 = 9 + ooff;
      if (!(t1 < 16))
        return A.ioore(o, t1);
      o[t1] = v9 - c8 * 65536;
      t1 = 10 + ooff;
      if (!(t1 < 16))
        return A.ioore(o, t1);
      o[t1] = v10 - c9 * 65536;
      t1 = 11 + ooff;
      if (!(t1 < 16))
        return A.ioore(o, t1);
      o[t1] = v11 - c10 * 65536;
      t1 = 12 + ooff;
      if (!(t1 < 16))
        return A.ioore(o, t1);
      o[t1] = v12 - c11 * 65536;
      t1 = 13 + ooff;
      if (!(t1 < 16))
        return A.ioore(o, t1);
      o[t1] = v13 - c12 * 65536;
      t1 = 14 + ooff;
      if (!(t1 < 16))
        return A.ioore(o, t1);
      o[t1] = v14 - c13 * 65536;
      t1 = 15 + ooff;
      if (!(t1 < 16))
        return A.ioore(o, t1);
      o[t1] = v - c14 * 65536;
    },
    TweetNaCl__inv25519(o, ooff, i, ioff) {
      var a, t1, t2, t3,
        c = new Int32Array(16);
      for (a = 0; a < 16; ++a) {
        t1 = a + ioff;
        if (!(t1 < 16))
          return A.ioore(i, t1);
        t1 = i[t1];
        if (!(a < 16))
          return A.ioore(c, a);
        c[a] = t1;
      }
      for (a = 253; a >= 0; --a) {
        A.TweetNaCl__M_off(c, 0, c, 0, c, 0);
        if (a !== 2 && a !== 4)
          A.TweetNaCl__M_off(c, 0, c, 0, i, ioff);
      }
      for (t1 = o.$flags | 0, a = 0; a < 16; ++a) {
        t2 = a + ooff;
        t3 = c[a];
        t1 & 2 && A.throwUnsupportedOperation(o);
        if (!(t2 < 16))
          return A.ioore(o, t2);
        o[t2] = t3;
      }
    },
    TweetNaCl__pow2523(o, i) {
      var a, t1, t2,
        c = new Int32Array(16);
      for (a = 0; a < 16; ++a) {
        t1 = i[a];
        if (!(a < 16))
          return A.ioore(c, a);
        c[a] = t1;
      }
      for (a = 250; a >= 0; --a) {
        A.TweetNaCl__M_off(c, 0, c, 0, c, 0);
        if (a !== 1)
          A.TweetNaCl__M_off(c, 0, c, 0, i, 0);
      }
      for (t1 = o.$flags | 0, a = 0; a < 16; ++a) {
        t2 = c[a];
        t1 & 2 && A.throwUnsupportedOperation(o);
        if (!(a < 16))
          return A.ioore(o, a);
        o[a] = t2;
      }
    },
    TweetNaCl__initAdd64(out, a, aoff) {
      var t3,
        t1 = aoff + 1,
        t2 = a.length;
      if (!(t1 >= 0 && t1 < t2))
        return A.ioore(a, t1);
      t3 = a[t1];
      out.$flags & 2 && A.throwUnsupportedOperation(out);
      out[0] = t3 & 65535;
      out[1] = a[t1] >>> 16;
      if (!(aoff >= 0 && aoff < t2))
        return A.ioore(a, aoff);
      out[2] = a[aoff] & 65535;
      out[3] = a[aoff] >>> 16;
    },
    TweetNaCl__updateAdd64(out, h, l) {
      var t1 = out[0];
      out.$flags & 2 && A.throwUnsupportedOperation(out);
      out[0] = t1 + (l & 65535);
      out[1] = out[1] + (l >>> 16);
      out[2] = out[2] + (h & 65535);
      out[3] = out[3] + (h >>> 16);
    },
    TweetNaCl__finalizeAdd64(out, ooff, ins) {
      var t3, t4,
        t1 = ins[1],
        t2 = ins[0];
      ins.$flags & 2 && A.throwUnsupportedOperation(ins);
      ins[1] = t1 + (t2 >>> 16);
      ins[2] = ins[2] + (ins[1] >>> 16);
      t2 = ins[3];
      t1 = ins[2];
      ins[3] = t2 + (t1 >>> 16);
      t2 = ins[3];
      out.$flags & 2 && A.throwUnsupportedOperation(out);
      t3 = out.length;
      if (!(ooff < t3))
        return A.ioore(out, ooff);
      out[ooff] = (t1 & 65535 | t2 << 16) >>> 0;
      t2 = ooff + 1;
      t1 = ins[0];
      t4 = ins[1];
      if (!(t2 < t3))
        return A.ioore(out, t2);
      out[t2] = (t1 & 65535 | t4 << 16) >>> 0;
    },
    TweetNaCl_crypto_hashblocks_hl(iv, m, moff, n) {
      var t1, t2, pos, j, t3, i, t4, t5, t6, t7, t8,
        w = new Uint32Array(160),
        a = new Uint32Array(2),
        b = new Uint32Array(2),
        c = new Uint32Array(2),
        d = new Uint32Array(2),
        e = new Uint32Array(2),
        f = new Uint32Array(2),
        g = new Uint32Array(2),
        h = new Uint32Array(2),
        $T1 = new Uint32Array(2),
        $T2 = new Uint32Array(2),
        partial = new Uint32Array(4);
      for (t1 = m.length, t2 = iv.length, pos = 0; n >= 128;) {
        if (0 >= t2)
          return A.ioore(iv, 0);
        a[0] = iv[0];
        if (2 >= t2)
          return A.ioore(iv, 2);
        b[0] = iv[2];
        if (4 >= t2)
          return A.ioore(iv, 4);
        c[0] = iv[4];
        if (6 >= t2)
          return A.ioore(iv, 6);
        d[0] = iv[6];
        if (8 >= t2)
          return A.ioore(iv, 8);
        e[0] = iv[8];
        if (10 >= t2)
          return A.ioore(iv, 10);
        f[0] = iv[10];
        if (12 >= t2)
          return A.ioore(iv, 12);
        g[0] = iv[12];
        if (14 >= t2)
          return A.ioore(iv, 14);
        h[0] = iv[14];
        a[1] = iv[1];
        b[1] = iv[3];
        c[1] = iv[5];
        d[1] = iv[7];
        e[1] = iv[9];
        f[1] = iv[11];
        g[1] = iv[13];
        if (15 >= t2)
          return A.ioore(iv, 15);
        h[1] = iv[15];
        for (j = 0; j < 80; ++j) {
          t3 = j * 2;
          if (j < 16) {
            i = (j << 3 >>> 0) + pos + moff;
            if (!(i < t1))
              return A.ioore(m, i);
            t4 = m[i];
            t5 = i + 1;
            if (!(t5 < t1))
              return A.ioore(m, t5);
            t5 = m[t5];
            t6 = i + 2;
            if (!(t6 < t1))
              return A.ioore(m, t6);
            t6 = m[t6];
            t7 = i + 3;
            if (!(t7 < t1))
              return A.ioore(m, t7);
            t7 = m[t7];
            if (!(t3 < 160))
              return A.ioore(w, t3);
            w[t3] = (t4 << 24 | t5 << 16 | t6 << 8 | t7) >>> 0;
            t7 = t3 + 1;
            t6 = i + 4;
            if (!(t6 < t1))
              return A.ioore(m, t6);
            t6 = m[t6];
            t5 = i + 5;
            if (!(t5 < t1))
              return A.ioore(m, t5);
            t5 = m[t5];
            t4 = i + 6;
            if (!(t4 < t1))
              return A.ioore(m, t4);
            t4 = m[t4];
            t8 = i + 7;
            if (!(t8 < t1))
              return A.ioore(m, t8);
            t8 = m[t8];
            if (!(t7 < 160))
              return A.ioore(w, t7);
            w[t7] = (t6 << 24 | t5 << 16 | t4 << 8 | t8) >>> 0;
          } else {
            t4 = (j - 15) * 2;
            if (!(t4 >= 0 && t4 < 160))
              return A.ioore(w, t4);
            t5 = w[t4];
            ++t4;
            if (!(t4 < 160))
              return A.ioore(w, t4);
            t4 = w[t4];
            t6 = (j - 2) * 2;
            if (!(t6 >= 0 && t6 < 160))
              return A.ioore(w, t6);
            t7 = w[t6];
            ++t6;
            if (!(t6 < 160))
              return A.ioore(w, t6);
            t6 = w[t6];
            A.TweetNaCl__initAdd64(partial, w, (j - 16) * 2);
            A.TweetNaCl__updateAdd64(partial, ((t5 >>> 1 | t4 << 31) ^ (t5 >>> 8 | t4 << 24) ^ t5 >>> 7) >>> 0, ((t4 >>> 1 | t5 << 31) ^ (t4 >>> 8 | t5 << 24) ^ (t4 >>> 7 | t5 << 25)) >>> 0);
            A.TweetNaCl__updateAdd64(partial, ((t7 >>> 19 | t6 << 13) ^ (t6 >>> 29 | t7 << 3) ^ t7 >>> 6) >>> 0, ((t6 >>> 19 | t7 << 13) ^ (t7 >>> 29 | t6 << 3) ^ (t6 >>> 6 | t7 << 26)) >>> 0);
            t7 = (j - 7) * 2;
            if (!(t7 >= 0 && t7 < 160))
              return A.ioore(w, t7);
            t6 = w[t7];
            ++t7;
            if (!(t7 < 160))
              return A.ioore(w, t7);
            A.TweetNaCl__updateAdd64(partial, t6, w[t7]);
            A.TweetNaCl__finalizeAdd64(w, t3, partial);
          }
          A.TweetNaCl__initAdd64(partial, h, 0);
          t4 = e[0];
          t5 = e[1];
          A.TweetNaCl__updateAdd64(partial, ((t4 >>> 14 | t5 << 18) ^ (t4 >>> 18 | t5 << 14) ^ (t5 >>> 9 | t4 << 23)) >>> 0, ((t5 >>> 14 | t4 << 18) ^ (t5 >>> 18 | t4 << 14) ^ (t4 >>> 9 | t5 << 23)) >>> 0);
          t5 = e[0];
          t4 = f[0];
          t6 = g[0];
          t7 = e[1];
          A.TweetNaCl__updateAdd64(partial, (t5 & t4 ^ ~t5 & t6) >>> 0, (t7 & f[1] ^ ~t7 & g[1]) >>> 0);
          if (!(t3 < 160))
            return A.ioore(B.List_INy, t3);
          t7 = B.List_INy[t3];
          t6 = t3 + 1;
          if (!(t6 < 160))
            return A.ioore(B.List_INy, t6);
          A.TweetNaCl__updateAdd64(partial, t7, B.List_INy[t6]);
          A.TweetNaCl__updateAdd64(partial, w[t3], w[t6]);
          A.TweetNaCl__finalizeAdd64($T1, 0, partial);
          A.TweetNaCl__initAdd64(partial, $T1, 0);
          t6 = a[0];
          t3 = a[1];
          A.TweetNaCl__updateAdd64(partial, ((t6 >>> 28 | t3 << 4) ^ (t3 >>> 2 | t6 << 30) ^ (t3 >>> 7 | t6 << 25)) >>> 0, ((t3 >>> 28 | t6 << 4) ^ (t6 >>> 2 | t3 << 30) ^ (t6 >>> 7 | t3 << 25)) >>> 0);
          t3 = a[0];
          t6 = b[0];
          t7 = c[0];
          t5 = a[1];
          t4 = b[1];
          t8 = c[1];
          A.TweetNaCl__updateAdd64(partial, (t3 & t6 ^ t3 & t7 ^ t6 & t7) >>> 0, (t5 & t4 ^ t5 & t8 ^ t4 & t8) >>> 0);
          A.TweetNaCl__finalizeAdd64($T2, 0, partial);
          h[0] = g[0];
          h[1] = g[1];
          g[0] = f[0];
          g[1] = f[1];
          f[0] = e[0];
          f[1] = e[1];
          A.TweetNaCl__initAdd64(partial, d, 0);
          A.TweetNaCl__updateAdd64(partial, $T1[0], $T1[1]);
          A.TweetNaCl__finalizeAdd64(e, 0, partial);
          d[0] = c[0];
          d[1] = c[1];
          c[0] = b[0];
          c[1] = b[1];
          b[0] = a[0];
          b[1] = a[1];
          a[0] = $T2[0];
          a[1] = $T2[1];
        }
        A.TweetNaCl__initAdd64(partial, iv, 0);
        A.TweetNaCl__updateAdd64(partial, a[0], a[1]);
        A.TweetNaCl__finalizeAdd64(iv, 0, partial);
        A.TweetNaCl__initAdd64(partial, iv, 2);
        A.TweetNaCl__updateAdd64(partial, b[0], b[1]);
        A.TweetNaCl__finalizeAdd64(iv, 2, partial);
        A.TweetNaCl__initAdd64(partial, iv, 4);
        A.TweetNaCl__updateAdd64(partial, c[0], c[1]);
        A.TweetNaCl__finalizeAdd64(iv, 4, partial);
        A.TweetNaCl__initAdd64(partial, iv, 6);
        A.TweetNaCl__updateAdd64(partial, d[0], d[1]);
        A.TweetNaCl__finalizeAdd64(iv, 6, partial);
        A.TweetNaCl__initAdd64(partial, iv, 8);
        A.TweetNaCl__updateAdd64(partial, e[0], e[1]);
        A.TweetNaCl__finalizeAdd64(iv, 8, partial);
        A.TweetNaCl__initAdd64(partial, iv, 10);
        A.TweetNaCl__updateAdd64(partial, f[0], f[1]);
        A.TweetNaCl__finalizeAdd64(iv, 10, partial);
        A.TweetNaCl__initAdd64(partial, iv, 12);
        A.TweetNaCl__updateAdd64(partial, g[0], g[1]);
        A.TweetNaCl__finalizeAdd64(iv, 12, partial);
        A.TweetNaCl__initAdd64(partial, iv, 14);
        A.TweetNaCl__updateAdd64(partial, h[0], h[1]);
        A.TweetNaCl__finalizeAdd64(iv, 14, partial);
        pos += 128;
        n -= 128;
      }
    },
    TweetNaCl__crypto_hash_off(out, m, moff, n) {
      var n0, t1, t2, i, t3, n1,
        x = new Uint8Array(256),
        iv = new Uint32Array(A._ensureNativeList(A._setArrayType([1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], type$.JSArray_int)));
      if (n >= 128) {
        A.TweetNaCl_crypto_hashblocks_hl(iv, m, moff, n);
        n0 = B.JSInt_methods.$mod(n, 128);
      } else
        n0 = n;
      for (t1 = n - n0, t2 = m.length, i = 0; i < n0; ++i) {
        t3 = t1 + i + moff;
        if (!(t3 >= 0 && t3 < t2))
          return A.ioore(m, t3);
        t3 = m[t3];
        if (!(i < 256))
          return A.ioore(x, i);
        x[i] = t3;
      }
      if (!(n0 < 256))
        return A.ioore(x, n0);
      x[n0] = 128;
      n1 = 256 - 128 * (n0 < 112 ? 1 : 0);
      t1 = n1 - 9;
      if (!(t1 >= 0 && t1 < 256))
        return A.ioore(x, t1);
      x[t1] = 0;
      A.TweetNaCl__ts64(x, n1 - 8, B.JSInt_methods._tdivFast$1(n, 536870912), n << 3 >>> 0);
      A.TweetNaCl_crypto_hashblocks_hl(iv, x, 0, n1);
      for (t1 = iv.length, i = 0; i < 8; ++i) {
        t2 = i * 2;
        if (!(t2 < t1))
          return A.ioore(iv, t2);
        t3 = iv[t2];
        ++t2;
        if (!(t2 < t1))
          return A.ioore(iv, t2);
        A.TweetNaCl__ts64(out, 8 * i, t3, iv[t2]);
      }
      return 0;
    },
    TweetNaCl_crypto_hash(out, m) {
      return A.TweetNaCl__crypto_hash_off(out, m, 0, m.length);
    },
    TweetNaCl__add(p, q) {
      var a = new Int32Array(16),
        b = new Int32Array(16),
        c = new Int32Array(16),
        d = new Int32Array(16),
        t = new Int32Array(16),
        e = new Int32Array(16),
        f = new Int32Array(16),
        g = new Int32Array(16),
        h = new Int32Array(16),
        p0 = p[0],
        p1 = p[1],
        p2 = p[2],
        p3 = p[3],
        q0 = q[0],
        q1 = q[1],
        q2 = q[2],
        q3 = q[3];
      A.TweetNaCl__Z_off(a, 0, p1, 0, p0, 0);
      A.TweetNaCl__Z_off(t, 0, q1, 0, q0, 0);
      A.TweetNaCl__M_off(a, 0, a, 0, t, 0);
      A.TweetNaCl__A_off(b, 0, p0, 0, p1, 0);
      A.TweetNaCl__A_off(t, 0, q0, 0, q1, 0);
      A.TweetNaCl__M_off(b, 0, b, 0, t, 0);
      A.TweetNaCl__M_off(c, 0, p3, 0, q3, 0);
      A.TweetNaCl__M_off(c, 0, c, 0, $.$get$TweetNaCl__D2(), 0);
      A.TweetNaCl__M_off(d, 0, p2, 0, q2, 0);
      A.TweetNaCl__A_off(d, 0, d, 0, d, 0);
      A.TweetNaCl__Z_off(e, 0, b, 0, a, 0);
      A.TweetNaCl__Z_off(f, 0, d, 0, c, 0);
      A.TweetNaCl__A_off(g, 0, d, 0, c, 0);
      A.TweetNaCl__A_off(h, 0, b, 0, a, 0);
      A.TweetNaCl__M_off(p0, 0, e, 0, f, 0);
      A.TweetNaCl__M_off(p1, 0, h, 0, g, 0);
      A.TweetNaCl__M_off(p2, 0, g, 0, f, 0);
      A.TweetNaCl__M_off(p3, 0, e, 0, h, 0);
    },
    TweetNaCl__cswap(p, q, b) {
      var i;
      for (i = 0; i < 4; ++i)
        A.TweetNaCl__sel25519_off(p[i], 0, q[i], 0, b);
    },
    TweetNaCl__pack(r, p) {
      var t1, t2,
        tx = new Int32Array(16),
        ty = new Int32Array(16),
        zi = new Int32Array(16);
      A.TweetNaCl__inv25519(zi, 0, p[2], 0);
      A.TweetNaCl__M_off(tx, 0, p[0], 0, zi, 0);
      A.TweetNaCl__M_off(ty, 0, p[1], 0, zi, 0);
      A.TweetNaCl__pack25519(r, ty, 0);
      if (31 >= r.length)
        return A.ioore(r, 31);
      t1 = r[31];
      t2 = A.TweetNaCl__par25519_off(tx, 0);
      r.$flags & 2 && A.throwUnsupportedOperation(r);
      r[31] = (t1 ^ t2 << 7) >>> 0;
    },
    TweetNaCl__scalarmult(p, q, s, soff) {
      var t3, i, b,
        t1 = p[0],
        t2 = $.$get$TweetNaCl__gf0();
      A.TweetNaCl__set25519(t1, t2);
      t1 = p[1];
      t3 = $.$get$TweetNaCl__gf1();
      A.TweetNaCl__set25519(t1, t3);
      A.TweetNaCl__set25519(p[2], t3);
      A.TweetNaCl__set25519(p[3], t2);
      for (t1 = s.length, i = 255; i >= 0; --i) {
        t2 = B.JSInt_methods._shrOtherPositive$1(i, 3) + soff;
        if (!(t2 < t1))
          return A.ioore(s, t2);
        b = s[t2] >>> (i & 7) & 1;
        A.TweetNaCl__cswap(p, q, b);
        A.TweetNaCl__add(q, p);
        A.TweetNaCl__add(p, p);
        A.TweetNaCl__cswap(p, q, b);
      }
    },
    TweetNaCl__scalarbase(p, s, soff) {
      var _i, t1, t2, t3,
        q = J.JSArray_JSArray$allocateGrowable(4, type$.Int32List);
      for (_i = 0; _i < 4; ++_i)
        q[_i] = new Int32Array(16);
      t1 = q[0];
      t2 = $.$get$TweetNaCl__X();
      A.TweetNaCl__set25519(t1, t2);
      t1 = q[1];
      t3 = $.$get$TweetNaCl__Y();
      A.TweetNaCl__set25519(t1, t3);
      A.TweetNaCl__set25519(q[2], $.$get$TweetNaCl__gf1());
      A.TweetNaCl__M_off(q[3], 0, t2, 0, t3, 0);
      A.TweetNaCl__scalarmult(p, q, s, soff);
    },
    TweetNaCl__modL(r, roff, x) {
      var t1, i, j, t2, j0, carry, t3, t4, t5, i0;
      for (t1 = x.$flags | 0, i = 63; i >= 32; --i) {
        for (j = i - 32, t2 = i - 12, j0 = j, carry = 0; j0 < t2; ++j0) {
          t3 = x[j0];
          t4 = x[i];
          t5 = j0 - j;
          if (!(t5 >= 0 && t5 < 32))
            return A.ioore(B.List_JAW, t5);
          t5 = B.List_JAW[t5];
          t1 & 2 && A.throwUnsupportedOperation(x);
          if (!(j0 < 64))
            return A.ioore(x, j0);
          x[j0] = t3 + (carry - 16 * t4 * t5);
          t5 = x[j0];
          carry = B.JSInt_methods._shrOtherPositive$1(t5 + 128, 8);
          x[j0] = t5 - (carry << 8 >>> 0);
        }
        if (!(j0 < 64))
          return A.ioore(x, j0);
        t2 = x[j0];
        t1 & 2 && A.throwUnsupportedOperation(x);
        if (!(j0 < 64))
          return A.ioore(x, j0);
        x[j0] = t2 + carry;
        if (!(i < 64))
          return A.ioore(x, i);
        x[i] = 0;
      }
      for (carry = 0, j = 0; j < 32; ++j) {
        t2 = x[j];
        t3 = B.JSInt_methods._shrOtherPositive$1(x[31], 4);
        t4 = B.List_JAW[j];
        t1 & 2 && A.throwUnsupportedOperation(x);
        if (!(j < 64))
          return A.ioore(x, j);
        x[j] = t2 + (carry - t3 * t4);
        t4 = x[j];
        carry = B.JSInt_methods._shrOtherPositive$1(t4, 8);
        x[j] = t4 & 255;
      }
      for (j = 0; j < 32; ++j) {
        t2 = x[j];
        t3 = B.List_JAW[j];
        t1 & 2 && A.throwUnsupportedOperation(x);
        if (!(j < 64))
          return A.ioore(x, j);
        x[j] = t2 - carry * t3;
      }
      for (t2 = r.$flags | 0, i = 0; i < 32; i = i0) {
        i0 = i + 1;
        t3 = x[i0];
        t4 = B.JSInt_methods._shrOtherPositive$1(x[i], 8);
        t1 & 2 && A.throwUnsupportedOperation(x);
        if (!(i0 < 64))
          return A.ioore(x, i0);
        x[i0] = t3 + t4;
        t4 = i + roff;
        t3 = x[i];
        t2 & 2 && A.throwUnsupportedOperation(r);
        if (!(t4 < r.length))
          return A.ioore(r, t4);
        r[t4] = t3 & 255;
      }
    },
    TweetNaCl__reduce(r) {
      var i, t1,
        x = new Int32Array(64);
      for (i = 0; i < 64; ++i) {
        t1 = r[i];
        if (!(i < 64))
          return A.ioore(x, i);
        x[i] = t1;
      }
      for (t1 = r.$flags | 0, i = 0; i < 64; ++i) {
        t1 & 2 && A.throwUnsupportedOperation(r);
        if (!(i < 64))
          return A.ioore(r, i);
        r[i] = 0;
      }
      A.TweetNaCl__modL(r, 0, x);
    },
    TweetNaCl_crypto_sign(sm, dummy, m, moff, n, sk, extended) {
      var _i, pk_offset, t1, i, t2, t3, t4, j,
        d = new Uint8Array(64),
        h = new Uint8Array(64),
        r = new Uint8Array(64),
        x = new Int32Array(64),
        p = J.JSArray_JSArray$allocateGrowable(4, type$.Int32List);
      for (_i = 0; _i < 4; ++_i)
        p[_i] = new Int32Array(16);
      pk_offset = extended ? 64 : 32;
      if (extended)
        for (t1 = sk.length, i = 0; i < pk_offset; ++i) {
          if (!(i < t1))
            return A.ioore(sk, i);
          t2 = sk[i];
          if (!(i < 64))
            return A.ioore(d, i);
          d[i] = t2;
        }
      else
        A.TweetNaCl__crypto_hash_off(d, sk, 0, 32);
      t1 = d[0];
      if (0 >= 64)
        return A.ioore(d, 0);
      d[0] = t1 & 248;
      t1 = d[31];
      if (31 >= 64)
        return A.ioore(d, 31);
      d[31] = t1 & 127;
      d[31] = d[31] | 64;
      for (t1 = m.length, t2 = sm.$flags | 0, i = 0; i < n; ++i) {
        t3 = 64 + i;
        t4 = i + moff;
        if (!(t4 < t1))
          return A.ioore(m, t4);
        t4 = m[t4];
        t2 & 2 && A.throwUnsupportedOperation(sm);
        if (!(t3 < sm.length))
          return A.ioore(sm, t3);
        sm[t3] = t4;
      }
      for (i = 0; i < 32; ++i) {
        t1 = 32 + i;
        t3 = d[t1];
        t2 & 2 && A.throwUnsupportedOperation(sm);
        if (!(t1 < sm.length))
          return A.ioore(sm, t1);
        sm[t1] = t3;
      }
      A.TweetNaCl__crypto_hash_off(r, sm, 32, n + 32);
      A.TweetNaCl__reduce(r);
      A.TweetNaCl__scalarbase(p, r, 0);
      A.TweetNaCl__pack(sm, p);
      for (t1 = sk.length, t2 = sm.$flags | 0, i = 0; i < 32; ++i) {
        t3 = i + 32;
        t4 = i + pk_offset;
        if (!(t4 < t1))
          return A.ioore(sk, t4);
        t4 = sk[t4];
        t2 & 2 && A.throwUnsupportedOperation(sm);
        if (!(t3 < sm.length))
          return A.ioore(sm, t3);
        sm[t3] = t4;
      }
      A.TweetNaCl__crypto_hash_off(h, sm, 0, n + 64);
      A.TweetNaCl__reduce(h);
      for (i = 0; i < 64; ++i) {
        if (!(i < 64))
          return A.ioore(x, i);
        x[i] = 0;
      }
      for (i = 0; i < 32; ++i) {
        t1 = r[i];
        if (!(i < 64))
          return A.ioore(x, i);
        x[i] = t1;
      }
      for (i = 0; i < 32; ++i)
        for (j = 0; j < 32; ++j) {
          t1 = i + j;
          t2 = x[t1];
          t3 = h[i];
          t4 = d[j];
          if (!(t1 < 64))
            return A.ioore(x, t1);
          x[t1] = t2 + t3 * t4;
        }
      A.TweetNaCl__modL(sm, 32, x);
      return 0;
    },
    TweetNaCl__unpackneg(r, p) {
      var t1,
        t = new Int32Array(16),
        chk = new Int32Array(16),
        inum = new Int32Array(16),
        den = new Int32Array(16),
        den2 = new Int32Array(16),
        den4 = new Int32Array(16),
        den6 = new Int32Array(16);
      A.TweetNaCl__set25519(r[2], $.$get$TweetNaCl__gf1());
      A.TweetNaCl__unpack25519(r[1], p);
      t1 = r[1];
      A.TweetNaCl__M_off(inum, 0, t1, 0, t1, 0);
      A.TweetNaCl__M_off(den, 0, inum, 0, new Int32Array(A._ensureNativeList($.$get$TweetNaCl__D())), 0);
      A.TweetNaCl__Z_off(inum, 0, inum, 0, r[2], 0);
      A.TweetNaCl__A_off(den, 0, r[2], 0, den, 0);
      A.TweetNaCl__M_off(den2, 0, den, 0, den, 0);
      A.TweetNaCl__M_off(den4, 0, den2, 0, den2, 0);
      A.TweetNaCl__M_off(den6, 0, den4, 0, den2, 0);
      A.TweetNaCl__M_off(t, 0, den6, 0, inum, 0);
      A.TweetNaCl__M_off(t, 0, t, 0, den, 0);
      A.TweetNaCl__pow2523(t, t);
      A.TweetNaCl__M_off(t, 0, t, 0, inum, 0);
      A.TweetNaCl__M_off(t, 0, t, 0, den, 0);
      A.TweetNaCl__M_off(t, 0, t, 0, den, 0);
      A.TweetNaCl__M_off(r[0], 0, t, 0, den, 0);
      t1 = r[0];
      A.TweetNaCl__M_off(chk, 0, t1, 0, t1, 0);
      A.TweetNaCl__M_off(chk, 0, chk, 0, den, 0);
      if (A.TweetNaCl__neq25519_off(chk, 0, inum, 0) !== 0) {
        t1 = r[0];
        A.TweetNaCl__M_off(t1, 0, t1, 0, $.$get$TweetNaCl__I(), 0);
      }
      t1 = r[0];
      A.TweetNaCl__M_off(chk, 0, t1, 0, t1, 0);
      A.TweetNaCl__M_off(chk, 0, chk, 0, den, 0);
      if (A.TweetNaCl__neq25519_off(chk, 0, inum, 0) !== 0)
        return -1;
      t1 = A.TweetNaCl__par25519_off(r[0], 0);
      if (31 >= p.length)
        return A.ioore(p, 31);
      if (t1 === p[31] >>> 7) {
        t1 = r[0];
        A.TweetNaCl__Z_off(t1, 0, $.$get$TweetNaCl__gf0(), 0, t1, 0);
      }
      A.TweetNaCl__M_off(r[3], 0, r[0], 0, r[1], 0);
      return 0;
    },
    TweetNaClExt_crypto_auth_hmacsha512(out, m, k) {
      var k0i, k0o,
        k0 = new Uint8Array(128),
        t1 = type$.int,
        t2 = A.List_List$_of(new Uint8Array(128), t1);
      B.JSArray_methods.addAll$1(t2, m);
      k0i = new Uint8Array(A._ensureNativeList(t2));
      k0o = new Uint8Array(128);
      t2 = k.length;
      if (t2 <= 128)
        A.PineNaClUtils_listCopy(k, t2, k0, 0);
      else
        A.TweetNaCl_crypto_hash(k0, k);
      A.TweetNaClExt__xor(k0i, k0, 128, B.List_dBO);
      A.TweetNaClExt__xor(k0o, k0, 128, B.List_L78);
      A.TweetNaCl_crypto_hash(out, k0i);
      t1 = A.List_List$_of(k0o, t1);
      B.JSArray_methods.addAll$1(t1, out);
      A.TweetNaCl_crypto_hash(out, new Uint8Array(A._ensureNativeList(t1)));
      A.PineNaClUtils_listZero(k0, -1);
      A.PineNaClUtils_listZero(k0o, 128);
      A.PineNaClUtils_listZero(k0i, 128);
      return 0;
    },
    TweetNaClExt_crypto_scalar_base(pk, sk) {
      var _i,
        p = J.JSArray_JSArray$allocateGrowable(4, type$.Int32List);
      for (_i = 0; _i < 4; ++_i)
        p[_i] = new Int32Array(16);
      A.TweetNaCl__scalarbase(p, sk, 0);
      A.TweetNaCl__pack(pk, p);
      return 0;
    },
    TweetNaClExt_crypto_point_add(out, p1, p2) {
      var _i, q,
        t1 = type$.Int32List,
        p = J.JSArray_JSArray$allocateFixed(4, t1);
      for (_i = 0; _i < 4; ++_i)
        p[_i] = new Int32Array(16);
      q = J.JSArray_JSArray$allocateFixed(4, t1);
      for (_i = 0; _i < 4; ++_i)
        q[_i] = new Int32Array(16);
      if (A.TweetNaCl__unpackneg(p, p1) !== 0)
        return -1;
      if (A.TweetNaCl__unpackneg(q, p2) !== 0)
        return -1;
      A.TweetNaCl__add(p, q);
      A.TweetNaCl__pack(out, p);
      t1 = out[31];
      out.$flags & 2 && A.throwUnsupportedOperation(out);
      if (31 >= 32)
        return A.ioore(out, 31);
      out[31] = (t1 ^ 128) >>> 0;
      return 0;
    },
    TweetNaClExt__crypto_auth(hasher, blockSize, out, message, key) {
      var k0i, k0o,
        k0 = new Uint8Array(blockSize),
        t1 = type$.int,
        t2 = A.List_List$_of(new Uint8Array(blockSize), t1);
      B.JSArray_methods.addAll$1(t2, message);
      k0i = new Uint8Array(A._ensureNativeList(t2));
      k0o = new Uint8Array(blockSize);
      t2 = key.length;
      if (t2 <= blockSize)
        A.PineNaClUtils_listCopy(key, t2, k0, 0);
      else
        hasher.call$2(k0, key);
      A.TweetNaClExt__xor(k0i, k0, blockSize, B.List_dBO);
      A.TweetNaClExt__xor(k0o, k0, blockSize, B.List_L78);
      hasher.call$2(out, k0i);
      t1 = A.List_List$_of(k0o, t1);
      B.JSArray_methods.addAll$1(t1, out);
      hasher.call$2(out, new Uint8Array(A._ensureNativeList(t1)));
      A.PineNaClUtils_listZero(k0, -1);
      A.PineNaClUtils_listZero(k0o, blockSize);
      A.PineNaClUtils_listZero(k0i, blockSize);
    },
    TweetNaClExt__xor(out, a, l, b) {
      var t1, t2, i, t3, t4;
      for (t1 = a.length, t2 = out.$flags | 0, i = 0; i < l; ++i) {
        if (!(i < t1))
          return A.ioore(a, i);
        t3 = a[i];
        if (!(i < 128))
          return A.ioore(b, i);
        t4 = b[i];
        t2 & 2 && A.throwUnsupportedOperation(out);
        if (!(i < out.length))
          return A.ioore(out, i);
        out[i] = t3 ^ t4;
      }
    },
    PineNaClUtils_listCopy(from, fromLength, to, toOffset) {
      var t1, t2, i, t3, t4;
      for (t1 = from.length, t2 = to.$flags | 0, i = 0; i < fromLength; ++i) {
        t3 = i + toOffset;
        if (!(i < t1))
          return A.ioore(from, i);
        t4 = from[i];
        t2 & 2 && A.throwUnsupportedOperation(to);
        if (!(t3 >= 0 && t3 < to.length))
          return A.ioore(to, t3);
        to[t3] = t4;
      }
    },
    PineNaClUtils_listZero(list, l) {
      var t1, i,
        $length = l >= 0 ? l : list.length;
      for (t1 = list.$flags | 0, i = 0; i < $length; ++i) {
        t1 & 2 && A.throwUnsupportedOperation(list);
        if (!(i < list.length))
          return A.ioore(list, i);
        list[i] = 0;
      }
    },
    mapUrl(url) {
      var root;
      if (B.JSString_methods.startsWith$1(url, "~")) {
        root = A.getRootUrl();
        if (root != null)
          url = root + B.JSString_methods.substring$1(url, 1);
      }
      return A.Uri_parse(url).normalizePath$0();
    },
    isSameInstance(a, b) {
      var t1;
      A._asObject(a);
      A._asObject(b);
      t1 = type$.JSObject;
      if (t1._is(a))
        t1 = t1._is(b) && A._asBool(init.G.Object.is(a, b));
      else
        t1 = !t1._is(b) && a === b;
      return t1;
    },
    UriChecker_exists(url) {
      return A.UriChecker_exists$body(url);
    },
    UriChecker_exists$body(url) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], res, t1, exception, $async$exception;
      var $async$UriChecker_exists = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (url.isScheme$1("data") || url.isScheme$1("blob")) {
                $async$returnValue = true;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait(A.promiseToFuture(A._asJSObject(init.G.fetch(url.toString$0(0), $.$get$UriChecker__headers())), type$.JSObject), $async$UriChecker_exists);
            case 7:
              // returning from await.
              res = $async$result;
              t1 = A._asBool(res.ok) && 200 <= A._asInt(res.status) && A._asInt(res.status) < 300;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$errorStack.pop();
              $async$returnValue = false;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$UriChecker_exists, $async$completer);
    },
    microsecTimeStamp(time) {
      return (time == null ? new A.DateTime(Date.now(), 0, false) : time).toUtc$0().difference$1($.$get$_latestUPDEpoch())._duration;
    },
    WorkerMessageImpl_unwrapTravelTime(_this) {
      var t1 = J.getInterceptor$asx(_this),
        t2 = A._asNumQ(t1.$index(_this, 0)),
        ts = t2 == null ? null : B.JSNumber_methods.toInt$0(t2);
      if (ts != null)
        t1.$indexSet(_this, 0, A.microsecTimeStamp(null) - ts);
    },
    WorkerRequestExt_unwrapInPlace(_this, logger) {
      var t1, t2;
      A.WorkerMessageImpl_unwrapTravelTime(_this);
      t1 = J.getInterceptor$asx(_this);
      t1.$indexSet(_this, 2, B.JSNumber_methods.toInt$0(A._asNum(t1.$index(_this, 2))));
      t2 = A._asNumQ(t1.$index(_this, 5));
      t1.$indexSet(_this, 5, t2 == null ? null : B.JSNumber_methods.toInt$0(t2));
      t2 = A._asJSObjectQ(t1.$index(_this, 1));
      t1.$indexSet(_this, 1, t2 == null ? null : new A._WebWorkerChannel(t2, logger));
      t1.$indexSet(_this, 4, A.SquadronCancelationToken_deserialize(type$.nullable_List_dynamic._as(t1.$index(_this, 4))));
      if (t1.$index(_this, 6) == null)
        t1.$indexSet(_this, 6, false);
      if (t1.$index(_this, 3) == null)
        t1.$indexSet(_this, 3, B.List_empty1);
    },
    WorkerRequestExt_wrapInPlace(_this) {
      var t1 = J.getInterceptor$asx(_this),
        token = t1.$index(_this, 4);
      if (type$.SquadronCancelationToken._is(token))
        t1.$indexSet(_this, 4, token.serialize$0());
      return _this;
    },
    WorkerRequestExt_from(data) {
      if (J.get$length$asx(data) !== 7)
        throw A.wrapException(A.SquadronError$_("Invalid worker request", null, null));
      return data;
    }
  },
  B = {};
  var holders = [A, J, B];
  var $ = {};
  A.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq(receiver, other) {
      return receiver === other;
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    toString$0(receiver) {
      return "Instance of '" + A.Primitives_objectTypeName(receiver) + "'";
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(A._instanceTypeFromConstructor(this));
    }
  };
  J.JSBool.prototype = {
    toString$0(receiver) {
      return String(receiver);
    },
    get$hashCode(receiver) {
      return receiver ? 519018 : 218159;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.bool);
    },
    $isTrustedGetRuntimeType: 1,
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq(receiver, other) {
      return null == other;
    },
    toString$0(receiver) {
      return "null";
    },
    get$hashCode(receiver) {
      return 0;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.Null);
    },
    $isTrustedGetRuntimeType: 1,
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {$isJSObject: 1};
  J.LegacyJavaScriptObject.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    get$runtimeType(receiver) {
      return B.Type_JSObject_ttY;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$LegacyJavaScriptObject$toString(receiver);
      return "JavaScript function for " + J.toString$0$(dartClosure);
    },
    $isFunction: 1
  };
  J.JavaScriptBigInt.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.JavaScriptSymbol.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.JSArray.prototype = {
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    add$1(receiver, value) {
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, 29);
      receiver.push(value);
    },
    removeAt$1(receiver, index) {
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "removeAt", 1);
      if (index < 0 || index >= receiver.length)
        throw A.wrapException(A.RangeError$value(index, null));
      return receiver.splice(index, 1)[0];
    },
    remove$1(receiver, element) {
      var i;
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "remove", 1);
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    },
    where$1(receiver, f) {
      var t1 = A._arrayInstanceType(receiver);
      return new A.WhereIterable(receiver, t1._eval$1("bool(1)")._as(f), t1._eval$1("WhereIterable<1>"));
    },
    addAll$1(receiver, collection) {
      var t1;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(collection);
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "addAll", 2);
      if (Array.isArray(collection)) {
        this._addAllFromArray$1(receiver, collection);
        return;
      }
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        receiver.push(t1.get$current());
    },
    _addAllFromArray$1(receiver, array) {
      var len, i;
      type$.JSArray_dynamic._as(array);
      len = array.length;
      if (len === 0)
        return;
      if (receiver === array)
        throw A.wrapException(A.ConcurrentModificationError$(receiver));
      for (i = 0; i < len; ++i)
        receiver.push(array[i]);
    },
    clear$0(receiver) {
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "clear", "clear");
      receiver.length = 0;
    },
    forEach$1(receiver, f) {
      var end, i;
      A._arrayInstanceType(receiver)._eval$1("~(1)")._as(f);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        f.call$1(receiver[i]);
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
    },
    map$1$1(receiver, f, $T) {
      var t1 = A._arrayInstanceType(receiver);
      return new A.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(2)")._as(f), t1._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    map$1(receiver, f) {
      return this.map$1$1(receiver, f, type$.dynamic);
    },
    join$1(receiver, separator) {
      var i,
        list = A.List_List$filled(receiver.length, "", false, type$.String);
      for (i = 0; i < receiver.length; ++i)
        this.$indexSet(list, i, A.S(receiver[i]));
      return list.join(separator);
    },
    join$0(receiver) {
      return this.join$1(receiver, "");
    },
    take$1(receiver, n) {
      return A.SubListIterable$(receiver, 0, A.checkNotNullable(n, "count", type$.int), A._arrayInstanceType(receiver)._precomputed1);
    },
    skip$1(receiver, n) {
      return A.SubListIterable$(receiver, n, null, A._arrayInstanceType(receiver)._precomputed1);
    },
    firstWhere$2$orElse(receiver, test, orElse) {
      var end, i, element,
        t1 = A._arrayInstanceType(receiver);
      t1._eval$1("bool(1)")._as(test);
      t1._eval$1("1()?")._as(orElse);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        element = receiver[i];
        if (test.call$1(element))
          return element;
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      if (orElse != null)
        return orElse.call$0();
      throw A.wrapException(A.IterableElementError_noElement());
    },
    firstWhere$1(receiver, test) {
      return this.firstWhere$2$orElse(receiver, test, null);
    },
    singleWhere$2$orElse(receiver, test, orElse) {
      var $length, match, matchFound, i, element,
        t1 = A._arrayInstanceType(receiver);
      t1._eval$1("bool(1)")._as(test);
      t1._eval$1("1()?")._as(orElse);
      $length = receiver.length;
      for (match = null, matchFound = false, i = 0; i < $length; ++i) {
        element = receiver[i];
        if (test.call$1(element)) {
          if (matchFound)
            throw A.wrapException(A.IterableElementError_tooMany());
          match = element;
          matchFound = true;
        }
        if ($length !== receiver.length)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      if (matchFound)
        return match == null ? t1._precomputed1._as(match) : match;
      if (orElse != null)
        return orElse.call$0();
      throw A.wrapException(A.IterableElementError_noElement());
    },
    singleWhere$1(receiver, test) {
      return this.singleWhere$2$orElse(receiver, test, null);
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, "start", null));
      if (end == null)
        end = receiver.length;
      else if (end < start || end > receiver.length)
        throw A.wrapException(A.RangeError$range(end, start, receiver.length, "end", null));
      if (start === end)
        return A._setArrayType([], A._arrayInstanceType(receiver));
      return A._setArrayType(receiver.slice(start, end), A._arrayInstanceType(receiver));
    },
    sublist$1(receiver, start) {
      return this.sublist$2(receiver, start, null);
    },
    get$first(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$last(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$single(receiver) {
      var t1 = receiver.length;
      if (t1 === 1) {
        if (0 >= t1)
          return A.ioore(receiver, 0);
        return receiver[0];
      }
      if (t1 === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      throw A.wrapException(A.IterableElementError_tooMany());
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherList, otherStart, t1, i;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(iterable);
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver, 5);
      A.RangeError_checkValidRange(start, end, receiver.length);
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (type$.List_dynamic._is(iterable)) {
        otherList = iterable;
        otherStart = skipCount;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
      else
        for (i = 0; i < $length; ++i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
    },
    any$1(receiver, test) {
      var end, i;
      A._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (test.call$1(receiver[i]))
          return true;
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    every$1(receiver, test) {
      var end, i;
      A._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (!test.call$1(receiver[i]))
          return false;
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return true;
    },
    get$reversed(receiver) {
      return new A.ReversedListIterable(receiver, A._arrayInstanceType(receiver)._eval$1("ReversedListIterable<1>"));
    },
    sort$1(receiver, compare) {
      var len, a, b, undefineds, i,
        t1 = A._arrayInstanceType(receiver);
      t1._eval$1("int(1,1)?")._as(compare);
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver, "sort");
      len = receiver.length;
      if (len < 2)
        return;
      if (compare == null)
        compare = J._interceptors_JSArray__compareAny$closure();
      if (len === 2) {
        a = receiver[0];
        b = receiver[1];
        t1 = compare.call$2(a, b);
        if (typeof t1 !== "number")
          return t1.$gt();
        if (t1 > 0) {
          receiver[0] = b;
          receiver[1] = a;
        }
        return;
      }
      undefineds = 0;
      if (t1._precomputed1._is(null))
        for (i = 0; i < receiver.length; ++i)
          if (receiver[i] === void 0) {
            receiver[i] = null;
            ++undefineds;
          }
      receiver.sort(A.convertDartClosureToJS(compare, 2));
      if (undefineds > 0)
        this._replaceSomeNullsWithUndefined$1(receiver, undefineds);
    },
    _replaceSomeNullsWithUndefined$1(receiver, count) {
      var i0,
        i = receiver.length;
      for (; i0 = i - 1, i > 0; i = i0)
        if (receiver[i0] === null) {
          receiver[i0] = void 0;
          --count;
          if (count === 0)
            break;
        }
    },
    indexOf$2(receiver, element, start) {
      var i,
        $length = receiver.length;
      if (start >= $length)
        return -1;
      for (i = start; i < $length; ++i) {
        if (!(i < receiver.length))
          return A.ioore(receiver, i);
        if (J.$eq$(receiver[i], element))
          return i;
      }
      return -1;
    },
    indexOf$1(receiver, element) {
      return this.indexOf$2(receiver, element, 0);
    },
    get$isEmpty(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty(receiver) {
      return receiver.length !== 0;
    },
    toString$0(receiver) {
      return A.Iterable_iterableToFullString(receiver, "[", "]");
    },
    toList$1$growable(receiver, growable) {
      var t1 = A._arrayInstanceType(receiver);
      return growable ? A._setArrayType(receiver.slice(0), t1) : J.JSArray_JSArray$markFixed(receiver.slice(0), t1._precomputed1);
    },
    toList$0(receiver) {
      return this.toList$1$growable(receiver, true);
    },
    get$iterator(receiver) {
      return new J.ArrayIterator(receiver, receiver.length, A._arrayInstanceType(receiver)._eval$1("ArrayIterator<1>"));
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    get$length(receiver) {
      return receiver.length;
    },
    set$length(receiver, newLength) {
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "set length", "change the length of");
      if (newLength < 0)
        throw A.wrapException(A.RangeError$range(newLength, 0, null, "newLength", null));
      if (newLength > receiver.length)
        A._arrayInstanceType(receiver)._precomputed1._as(null);
      receiver.length = newLength;
    },
    $index(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver);
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    $add(receiver, other) {
      var t1 = A._arrayInstanceType(receiver);
      t1._eval$1("List<1>")._as(other);
      t1 = A.List_List$_of(receiver, t1._precomputed1);
      this.addAll$1(t1, other);
      return t1;
    },
    indexWhere$2(receiver, test, start) {
      var i;
      A._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
      if (start >= receiver.length)
        return -1;
      for (i = start; i < receiver.length; ++i)
        if (test.call$1(receiver[i]))
          return i;
      return -1;
    },
    indexWhere$1(receiver, test) {
      return this.indexWhere$2(receiver, test, 0);
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(A._arrayInstanceType(receiver));
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSArraySafeToStringHook.prototype = {
    tryFormat$1(array) {
      var flags, info, base;
      if (!Array.isArray(array))
        return null;
      flags = array.$flags | 0;
      if ((flags & 4) !== 0)
        info = "const, ";
      else if ((flags & 2) !== 0)
        info = "unmodifiable, ";
      else
        info = (flags & 1) !== 0 ? "fixed, " : "";
      base = "Instance of '" + A.Primitives_objectTypeName(array) + "'";
      if (info === "")
        return base;
      return base + " (" + info + "length: " + array.length + ")";
    }
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current() {
      var t1 = this._current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._iterable,
        $length = t1.length;
      if (_this._length !== $length) {
        t1 = A.throwConcurrentModificationError(t1);
        throw A.wrapException(t1);
      }
      t2 = _this._index;
      if (t2 >= $length) {
        _this._current = null;
        return false;
      }
      _this._current = t1[t2];
      _this._index = t2 + 1;
      return true;
    },
    $isIterator: 1
  };
  J.JSNumber.prototype = {
    compareTo$1(receiver, b) {
      var bIsNegative;
      A._asNum(b);
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = this.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    },
    get$isNegative(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    },
    toInt$0(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".toInt()"));
    },
    ceil$0(receiver) {
      var truncated, d;
      if (receiver >= 0) {
        if (receiver <= 2147483647) {
          truncated = receiver | 0;
          return receiver === truncated ? truncated : truncated + 1;
        }
      } else if (receiver >= -2147483648)
        return receiver | 0;
      d = Math.ceil(receiver);
      if (isFinite(d))
        return d;
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".ceil()"));
    },
    floor$0(receiver) {
      var truncated, d;
      if (receiver >= 0) {
        if (receiver <= 2147483647)
          return receiver | 0;
      } else if (receiver >= -2147483648) {
        truncated = receiver | 0;
        return receiver === truncated ? truncated : truncated - 1;
      }
      d = Math.floor(receiver);
      if (isFinite(d))
        return d;
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".floor()"));
    },
    toRadixString$1(receiver, radix) {
      var result, t1, t2, match, exponent;
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", null));
      result = receiver.toString(radix);
      t1 = result.length;
      t2 = t1 - 1;
      if (!(t2 >= 0))
        return A.ioore(result, t2);
      if (result.charCodeAt(t2) !== 41)
        return result;
      match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
      if (match == null)
        A.throwExpression(A.UnsupportedError$("Unexpected toString result: " + result));
      t1 = match.length;
      if (1 >= t1)
        return A.ioore(match, 1);
      result = match[1];
      if (3 >= t1)
        return A.ioore(match, 3);
      exponent = +match[3];
      t1 = match[2];
      if (t1 != null) {
        result += t1;
        exponent -= t1.length;
      }
      return result + B.JSString_methods.$mul("0", exponent);
    },
    toString$0(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return intValue & 536870911;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259 & 536870911;
    },
    $mod(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      return result + other;
    },
    $tdiv(receiver, other) {
      if ((receiver | 0) === receiver)
        if (other >= 1 || other < -1)
          return receiver / other | 0;
      return this._tdivSlow$1(receiver, other);
    },
    _tdivFast$1(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw A.wrapException(A.UnsupportedError$("Result of truncating division is " + A.S(quotient) + ": " + A.S(receiver) + " ~/ " + other));
    },
    $shl(receiver, other) {
      if (other < 0)
        throw A.wrapException(A.argumentErrorValue(other));
      return other > 31 ? 0 : receiver << other >>> 0;
    },
    _shlPositive$1(receiver, other) {
      return other > 31 ? 0 : receiver << other >>> 0;
    },
    $shr(receiver, other) {
      var t1;
      if (other < 0)
        throw A.wrapException(A.argumentErrorValue(other));
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrOtherPositive$1(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrReceiverPositive$1(receiver, other) {
      if (0 > other)
        throw A.wrapException(A.argumentErrorValue(other));
      return this._shrBothPositive$1(receiver, other);
    },
    _shrBothPositive$1(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.num);
    },
    $isComparable: 1,
    $isdouble: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {
    get$bitLength(receiver) {
      var wordBits,
        t1 = receiver < 0 ? -receiver - 1 : receiver,
        nonneg = t1;
      for (wordBits = 32; nonneg >= 4294967296;) {
        nonneg = this._tdivFast$1(nonneg, 4294967296);
        wordBits += 32;
      }
      return wordBits - Math.clz32(nonneg);
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.int);
    },
    $isTrustedGetRuntimeType: 1,
    $isint: 1
  };
  J.JSNumNotInt.prototype = {
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.double);
    },
    $isTrustedGetRuntimeType: 1
  };
  J.JSString.prototype = {
    allMatches$2(receiver, string, start) {
      var t1 = string.length;
      if (start > t1)
        throw A.wrapException(A.RangeError$range(start, 0, t1, null, null));
      return new A._StringAllMatchesIterable(string, receiver, start);
    },
    allMatches$1(receiver, string) {
      return this.allMatches$2(receiver, string, 0);
    },
    matchAsPrefix$2(receiver, string, start) {
      var t1, t2, i, t3, _null = null;
      if (start < 0 || start > string.length)
        throw A.wrapException(A.RangeError$range(start, 0, string.length, _null, _null));
      t1 = receiver.length;
      t2 = string.length;
      if (start + t1 > t2)
        return _null;
      for (i = 0; i < t1; ++i) {
        t3 = start + i;
        if (!(t3 >= 0 && t3 < t2))
          return A.ioore(string, t3);
        if (string.charCodeAt(t3) !== receiver.charCodeAt(i))
          return _null;
      }
      return new A.StringMatch(start, receiver);
    },
    endsWith$1(receiver, other) {
      var otherLength = other.length,
        t1 = receiver.length;
      if (otherLength > t1)
        return false;
      return other === this.substring$1(receiver, t1 - otherLength);
    },
    replaceRange$3(receiver, start, end, replacement) {
      var e = A.RangeError_checkValidRange(start, end, receiver.length);
      return A.stringReplaceRangeUnchecked(receiver, start, e, replacement);
    },
    startsWith$2(receiver, pattern, index) {
      var endIndex;
      type$.Pattern._as(pattern);
      if (index < 0 || index > receiver.length)
        throw A.wrapException(A.RangeError$range(index, 0, receiver.length, null, null));
      if (typeof pattern == "string") {
        endIndex = index + pattern.length;
        if (endIndex > receiver.length)
          return false;
        return pattern === receiver.substring(index, endIndex);
      }
      return J.matchAsPrefix$2$s(pattern, receiver, index) != null;
    },
    startsWith$1(receiver, pattern) {
      return this.startsWith$2(receiver, pattern, 0);
    },
    substring$2(receiver, start, end) {
      return receiver.substring(start, A.RangeError_checkValidRange(start, end, receiver.length));
    },
    substring$1(receiver, start) {
      return this.substring$2(receiver, start, null);
    },
    trim$0(receiver) {
      var startIndex, t1, endIndex0,
        result = receiver.trim(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      if (0 >= endIndex)
        return A.ioore(result, 0);
      if (result.charCodeAt(0) === 133) {
        startIndex = J.JSString__skipLeadingWhitespace(result, 1);
        if (startIndex === endIndex)
          return "";
      } else
        startIndex = 0;
      t1 = endIndex - 1;
      if (!(t1 >= 0))
        return A.ioore(result, t1);
      endIndex0 = result.charCodeAt(t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
      if (startIndex === 0 && endIndex0 === endIndex)
        return result;
      return result.substring(startIndex, endIndex0);
    },
    $mul(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw A.wrapException(B.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    padLeft$2(receiver, width, padding) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return this.$mul(padding, delta) + receiver;
    },
    indexOf$2(receiver, pattern, start) {
      var t1;
      if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, null, null));
      t1 = receiver.indexOf(pattern, start);
      return t1;
    },
    indexOf$1(receiver, pattern) {
      return this.indexOf$2(receiver, pattern, 0);
    },
    lastIndexOf$1(receiver, pattern) {
      var start = receiver.length,
        t1 = pattern.length;
      if (start + t1 > start)
        start -= t1;
      return receiver.lastIndexOf(pattern, start);
    },
    contains$2(receiver, other, startIndex) {
      var t1;
      type$.Pattern._as(other);
      t1 = receiver.length;
      if (startIndex > t1)
        throw A.wrapException(A.RangeError$range(startIndex, 0, t1, null, null));
      return A.stringContainsUnchecked(receiver, other, startIndex);
    },
    contains$1(receiver, other) {
      return this.contains$2(receiver, other, 0);
    },
    compareTo$1(receiver, other) {
      var t1;
      A._asString(other);
      if (receiver === other)
        t1 = 0;
      else
        t1 = receiver < other ? -1 : 1;
      return t1;
    },
    toString$0(receiver) {
      return receiver;
    },
    get$hashCode(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = hash + receiver.charCodeAt(i) & 536870911;
        hash = hash + ((hash & 524287) << 10) & 536870911;
        hash ^= hash >> 6;
      }
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.String);
    },
    get$length(receiver) {
      return receiver.length;
    },
    $isJSIndexable: 1,
    $isTrustedGetRuntimeType: 1,
    $isComparable: 1,
    $isPattern: 1,
    $isString: 1
  };
  A._CastIterableBase.prototype = {
    get$iterator(_) {
      return new A.CastIterator(J.get$iterator$ax(this.get$_source()), A._instanceType(this)._eval$1("CastIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.get$_source());
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.get$_source());
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this.get$_source());
    },
    skip$1(_, count) {
      var t1 = A._instanceType(this);
      return A.CastIterable_CastIterable(J.skip$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    take$1(_, count) {
      var t1 = A._instanceType(this);
      return A.CastIterable_CastIterable(J.take$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    elementAt$1(_, index) {
      return A._instanceType(this)._rest[1]._as(J.elementAt$1$ax(this.get$_source(), index));
    },
    get$first(_) {
      return A._instanceType(this)._rest[1]._as(J.get$first$ax(this.get$_source()));
    },
    toString$0(_) {
      return J.toString$0$(this.get$_source());
    }
  };
  A.CastIterator.prototype = {
    moveNext$0() {
      return this._source.moveNext$0();
    },
    get$current() {
      return this.$ti._rest[1]._as(this._source.get$current());
    },
    $isIterator: 1
  };
  A.CastIterable.prototype = {
    cast$1$0(_, $R) {
      return A.CastIterable_CastIterable(this._source, A._instanceType(this)._precomputed1, $R);
    },
    get$_source() {
      return this._source;
    }
  };
  A._EfficientLengthCastIterable.prototype = {$isEfficientLengthIterable: 1};
  A._CastListBase.prototype = {
    $index(_, index) {
      return this.$ti._rest[1]._as(J.$index$asx(this._source, index));
    },
    $indexSet(_, index, value) {
      var t1 = this.$ti;
      J.$indexSet$ax(this._source, index, t1._precomputed1._as(t1._rest[1]._as(value)));
    },
    set$length(_, $length) {
      J.set$length$asx(this._source, $length);
    },
    $isEfficientLengthIterable: 1,
    $isList: 1
  };
  A.CastList.prototype = {
    cast$1$0(_, $R) {
      return new A.CastList(this._source, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    get$_source() {
      return this._source;
    }
  };
  A.CastSet.prototype = {
    remove$1(_, object) {
      return this._source.remove$1(0, object);
    },
    $isEfficientLengthIterable: 1,
    $isSet: 1,
    get$_source() {
      return this._source;
    }
  };
  A.LateError.prototype = {
    toString$0(_) {
      return "LateInitializationError: " + this._message;
    }
  };
  A.CodeUnits.prototype = {
    get$length(_) {
      return this._string.length;
    },
    $index(_, i) {
      var t1 = this._string;
      if (!(i >= 0 && i < t1.length))
        return A.ioore(t1, i);
      return t1.charCodeAt(i);
    }
  };
  A.nullFuture_closure.prototype = {
    call$0() {
      var t1 = new A._Future($.Zone__current, type$._Future_void);
      t1._asyncComplete$1(null);
      return t1;
    },
    $signature: 12
  };
  A.SentinelValue.prototype = {};
  A.EfficientLengthIterable.prototype = {};
  A.ListIterable.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A.ListIterator(_this, _this.get$length(_this), A._instanceType(_this)._eval$1("ListIterator<ListIterable.E>"));
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$first(_) {
      if (this.get$length(this) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.elementAt$1(0, 0);
    },
    join$1(_, separator) {
      var first, t1, i, _this = this,
        $length = _this.get$length(_this);
      if (separator.length !== 0) {
        if ($length === 0)
          return "";
        first = A.S(_this.elementAt$1(0, 0));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        for (t1 = first, i = 1; i < $length; ++i) {
          t1 = t1 + separator + A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      } else {
        for (i = 0, t1 = ""; i < $length; ++i) {
          t1 += A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    join$0(_) {
      return this.join$1(0, "");
    },
    map$1$1(_, toElement, $T) {
      var t1 = A._instanceType(this);
      return new A.MappedListIterable(this, t1._bind$1($T)._eval$1("1(ListIterable.E)")._as(toElement), t1._eval$1("@<ListIterable.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    map$1(_, toElement) {
      return this.map$1$1(0, toElement, type$.dynamic);
    },
    skip$1(_, count) {
      return A.SubListIterable$(this, count, null, A._instanceType(this)._eval$1("ListIterable.E"));
    },
    take$1(_, count) {
      return A.SubListIterable$(this, 0, A.checkNotNullable(count, "count", type$.int), A._instanceType(this)._eval$1("ListIterable.E"));
    },
    toList$1$growable(_, growable) {
      var t1 = A._instanceType(this)._eval$1("ListIterable.E");
      if (growable)
        t1 = A.List_List$_of(this, t1);
      else {
        t1 = A.List_List$_of(this, t1);
        t1.$flags = 1;
        t1 = t1;
      }
      return t1;
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    toSet$0(_) {
      var i, _this = this,
        result = A.LinkedHashSet_LinkedHashSet(A._instanceType(_this)._eval$1("ListIterable.E"));
      for (i = 0; i < _this.get$length(_this); ++i)
        result.add$1(0, _this.elementAt$1(0, i));
      return result;
    }
  };
  A.SubListIterable.prototype = {
    SubListIterable$3(_iterable, _start, _endOrLength, $E) {
      var endOrLength,
        t1 = this._start;
      A.RangeError_checkNotNegative(t1, "start");
      endOrLength = this._endOrLength;
      if (endOrLength != null) {
        A.RangeError_checkNotNegative(endOrLength, "end");
        if (t1 > endOrLength)
          throw A.wrapException(A.RangeError$range(t1, 0, endOrLength, "start", null));
      }
    },
    get$_endIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength > $length)
        return $length;
      return endOrLength;
    },
    get$_startIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 > $length)
        return $length;
      return t1;
    },
    get$length(_) {
      var endOrLength,
        $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 >= $length)
        return 0;
      endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength >= $length)
        return $length - t1;
      return endOrLength - t1;
    },
    elementAt$1(_, index) {
      var _this = this,
        realIndex = _this.get$_startIndex() + index;
      if (index < 0 || realIndex >= _this.get$_endIndex())
        throw A.wrapException(A.IndexError$withLength(index, _this.get$length(0), _this, null, "index"));
      return J.elementAt$1$ax(_this.__internal$_iterable, realIndex);
    },
    skip$1(_, count) {
      var newStart, endOrLength, _this = this;
      A.RangeError_checkNotNegative(count, "count");
      newStart = _this._start + count;
      endOrLength = _this._endOrLength;
      if (endOrLength != null && newStart >= endOrLength)
        return new A.EmptyIterable(_this.$ti._eval$1("EmptyIterable<1>"));
      return A.SubListIterable$(_this.__internal$_iterable, newStart, endOrLength, _this.$ti._precomputed1);
    },
    take$1(_, count) {
      var endOrLength, t1, newEnd, _this = this;
      A.RangeError_checkNotNegative(count, "count");
      endOrLength = _this._endOrLength;
      t1 = _this._start;
      newEnd = t1 + count;
      if (endOrLength == null)
        return A.SubListIterable$(_this.__internal$_iterable, t1, newEnd, _this.$ti._precomputed1);
      else {
        if (endOrLength < newEnd)
          return _this;
        return A.SubListIterable$(_this.__internal$_iterable, t1, newEnd, _this.$ti._precomputed1);
      }
    },
    toList$1$growable(_, growable) {
      var $length, result, i, _this = this,
        start = _this._start,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        end = t2.get$length(t1),
        endOrLength = _this._endOrLength;
      if (endOrLength != null && endOrLength < end)
        end = endOrLength;
      $length = end - start;
      if ($length <= 0) {
        t1 = _this.$ti._precomputed1;
        return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
      }
      result = A.List_List$filled($length, t2.elementAt$1(t1, start), growable, _this.$ti._precomputed1);
      for (i = 1; i < $length; ++i) {
        B.JSArray_methods.$indexSet(result, i, t2.elementAt$1(t1, start + i));
        if (t2.get$length(t1) < end)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return result;
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    }
  };
  A.ListIterator.prototype = {
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t3, _this = this,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length !== $length)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      t3 = _this.__internal$_index;
      if (t3 >= $length) {
        _this.__internal$_current = null;
        return false;
      }
      _this.__internal$_current = t2.elementAt$1(t1, t3);
      ++_this.__internal$_index;
      return true;
    },
    $isIterator: 1
  };
  A.MappedIterable.prototype = {
    get$iterator(_) {
      return new A.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, A._instanceType(this)._eval$1("MappedIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.__internal$_iterable);
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.__internal$_iterable);
    },
    get$first(_) {
      return this._f.call$1(J.get$first$ax(this.__internal$_iterable));
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this.__internal$_iterable, index));
    }
  };
  A.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};
  A.MappedIterator.prototype = {
    moveNext$0() {
      var _this = this,
        t1 = _this._iterator;
      if (t1.moveNext$0()) {
        _this.__internal$_current = _this._f.call$1(t1.get$current());
        return true;
      }
      _this.__internal$_current = null;
      return false;
    },
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    },
    $isIterator: 1
  };
  A.MappedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, index));
    }
  };
  A.WhereIterable.prototype = {
    get$iterator(_) {
      return new A.WhereIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti._eval$1("WhereIterator<1>"));
    },
    map$1$1(_, toElement, $T) {
      var t1 = this.$ti;
      return new A.MappedIterable(this, t1._bind$1($T)._eval$1("1(2)")._as(toElement), t1._eval$1("@<1>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    },
    map$1(_, toElement) {
      return this.map$1$1(0, toElement, type$.dynamic);
    }
  };
  A.WhereIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
        if (t2.call$1(t1.get$current()))
          return true;
      return false;
    },
    get$current() {
      return this._iterator.get$current();
    },
    $isIterator: 1
  };
  A.TakeIterable.prototype = {
    get$iterator(_) {
      var t1 = this.__internal$_iterable;
      return new A.TakeIterator(t1.get$iterator(t1), this._takeCount, A._instanceType(this)._eval$1("TakeIterator<1>"));
    }
  };
  A.EfficientLengthTakeIterable.prototype = {
    get$length(_) {
      var t1 = this.__internal$_iterable,
        iterableLength = t1.get$length(t1);
      t1 = this._takeCount;
      if (iterableLength > t1)
        return t1;
      return iterableLength;
    },
    $isEfficientLengthIterable: 1
  };
  A.TakeIterator.prototype = {
    moveNext$0() {
      if (--this._remaining >= 0)
        return this._iterator.moveNext$0();
      this._remaining = -1;
      return false;
    },
    get$current() {
      if (this._remaining < 0) {
        this.$ti._precomputed1._as(null);
        return null;
      }
      return this._iterator.get$current();
    },
    $isIterator: 1
  };
  A.SkipIterable.prototype = {
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count", type$.int);
      A.RangeError_checkNotNegative(count, "count");
      return new A.SkipIterable(this.__internal$_iterable, this._skipCount + count, A._instanceType(this)._eval$1("SkipIterable<1>"));
    },
    get$iterator(_) {
      var t1 = this.__internal$_iterable;
      return new A.SkipIterator(t1.get$iterator(t1), this._skipCount, A._instanceType(this)._eval$1("SkipIterator<1>"));
    }
  };
  A.EfficientLengthSkipIterable.prototype = {
    get$length(_) {
      var t1 = this.__internal$_iterable,
        $length = t1.get$length(t1) - this._skipCount;
      if ($length >= 0)
        return $length;
      return 0;
    },
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count", type$.int);
      A.RangeError_checkNotNegative(count, "count");
      return new A.EfficientLengthSkipIterable(this.__internal$_iterable, this._skipCount + count, this.$ti);
    },
    $isEfficientLengthIterable: 1
  };
  A.SkipIterator.prototype = {
    moveNext$0() {
      var t1, i;
      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
        t1.moveNext$0();
      this._skipCount = 0;
      return t1.moveNext$0();
    },
    get$current() {
      return this._iterator.get$current();
    },
    $isIterator: 1
  };
  A.EmptyIterable.prototype = {
    get$iterator(_) {
      return B.C_EmptyIterator;
    },
    get$isEmpty(_) {
      return true;
    },
    get$length(_) {
      return 0;
    },
    get$first(_) {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    elementAt$1(_, index) {
      throw A.wrapException(A.RangeError$range(index, 0, 0, "index", null));
    },
    map$1$1(_, toElement, $T) {
      this.$ti._bind$1($T)._eval$1("1(2)")._as(toElement);
      return new A.EmptyIterable($T._eval$1("EmptyIterable<0>"));
    },
    map$1(_, toElement) {
      return this.map$1$1(0, toElement, type$.dynamic);
    },
    skip$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this;
    },
    take$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this;
    },
    toList$1$growable(_, growable) {
      var t1 = this.$ti._precomputed1;
      return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    }
  };
  A.EmptyIterator.prototype = {
    moveNext$0() {
      return false;
    },
    get$current() {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    $isIterator: 1
  };
  A.WhereTypeIterable.prototype = {
    get$iterator(_) {
      return new A.WhereTypeIterator(J.get$iterator$ax(this._source), this.$ti._eval$1("WhereTypeIterator<1>"));
    }
  };
  A.WhereTypeIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._source, t2 = this.$ti._precomputed1; t1.moveNext$0();)
        if (t2._is(t1.get$current()))
          return true;
      return false;
    },
    get$current() {
      return this.$ti._precomputed1._as(this._source.get$current());
    },
    $isIterator: 1
  };
  A.NonNullsIterable.prototype = {
    get$_firstNonNull() {
      var t1, element;
      for (t1 = J.get$iterator$ax(this._source); t1.moveNext$0();) {
        element = t1.get$current();
        if (element != null)
          return element;
      }
      return null;
    },
    get$isEmpty(_) {
      return this.get$_firstNonNull() == null;
    },
    get$isNotEmpty(_) {
      return this.get$_firstNonNull() != null;
    },
    get$first(_) {
      var t1 = this.get$_firstNonNull();
      return t1 == null ? A.throwExpression(A.IterableElementError_noElement()) : t1;
    },
    get$iterator(_) {
      return new A.NonNullsIterator(J.get$iterator$ax(this._source), this.$ti._eval$1("NonNullsIterator<1>"));
    }
  };
  A.NonNullsIterator.prototype = {
    moveNext$0() {
      var t1, next;
      this.__internal$_current = null;
      for (t1 = this._source; t1.moveNext$0();) {
        next = t1.get$current();
        if (next != null) {
          this.__internal$_current = next;
          return true;
        }
      }
      return false;
    },
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? A.throwExpression(A.IterableElementError_noElement()) : t1;
    },
    $isIterator: 1
  };
  A.FixedLengthListMixin.prototype = {
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of a fixed-length list"));
    }
  };
  A.UnmodifiableListMixin.prototype = {
    $indexSet(_, index, value) {
      A._instanceType(this)._eval$1("UnmodifiableListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    set$length(_, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of an unmodifiable list"));
    }
  };
  A.UnmodifiableListBase.prototype = {};
  A._ListIndicesIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._backedList);
    },
    elementAt$1(_, index) {
      A.IndexError_check(index, J.get$length$asx(this._backedList), this);
      return index;
    }
  };
  A.ListMapView.prototype = {
    $index(_, key) {
      return this.containsKey$1(key) ? J.$index$asx(this._values, A._asInt(key)) : null;
    },
    get$length(_) {
      return J.get$length$asx(this._values);
    },
    get$keys() {
      return new A._ListIndicesIterable(this._values);
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this._values);
    },
    containsKey$1(key) {
      return A._isInt(key) && key >= 0 && key < J.get$length$asx(this._values);
    },
    forEach$1(_, f) {
      var t1, t2, $length, i;
      this.$ti._eval$1("~(int,1)")._as(f);
      t1 = this._values;
      t2 = J.getInterceptor$asx(t1);
      $length = t2.get$length(t1);
      for (i = 0; i < $length; ++i) {
        f.call$2(i, t2.$index(t1, i));
        if ($length !== t2.get$length(t1))
          throw A.wrapException(A.ConcurrentModificationError$(t1));
      }
    }
  };
  A.ReversedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      var t1 = this._source,
        t2 = J.getInterceptor$asx(t1);
      return t2.elementAt$1(t1, t2.get$length(t1) - 1 - index);
    }
  };
  A.Symbol.prototype = {};
  A.__CastListBase__CastIterableBase_ListMixin.prototype = {};
  A._Record_3_addr_keyCred_scriptCred.prototype = {$recipe: "+addr,keyCred,scriptCred(1,2,3)", $shape: 1};
  A._Record_3_keyId_requestedSigningAddressBytes_signingKeyPair.prototype = {$recipe: "+keyId,requestedSigningAddressBytes,signingKeyPair(1,2,3)", $shape: 2};
  A.ConstantMap.prototype = {
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    get$entries() {
      return new A._SyncStarIterable(this.entries$body$ConstantMap(), A._instanceType(this)._eval$1("_SyncStarIterable<MapEntry<1,2>>"));
    },
    entries$body$ConstantMap() {
      var $async$self = this;
      return function() {
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1, t2, t3, key, t4;
        return function $async$get$entries($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.get$keys(), t1 = t1.get$iterator(t1), t2 = A._instanceType($async$self), t3 = t2._rest[1], t2 = t2._eval$1("MapEntry<1,2>");
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                key = t1.get$current();
                t4 = $async$self.$index(0, key);
                $async$goto = 4;
                return $async$iterator._async$_current = new A.MapEntry(key, t4 == null ? t3._as(t4) : t4, t2), 1;
              case 4:
                // after yield
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    map$2$1(_, transform, $K2, $V2) {
      var result = A.LinkedHashMap_LinkedHashMap$_empty($K2, $V2);
      this.forEach$1(0, new A.ConstantMap_map_closure(this, A._instanceType(this)._bind$1($K2)._bind$1($V2)._eval$1("MapEntry<1,2>(3,4)")._as(transform), result));
      return result;
    },
    map$1(_, transform) {
      var t1 = type$.dynamic;
      return this.map$2$1(0, transform, t1, t1);
    },
    $isMap: 1
  };
  A.ConstantMap_map_closure.prototype = {
    call$2(key, value) {
      var t1 = A._instanceType(this.$this),
        entry = this.transform.call$2(t1._precomputed1._as(key), t1._rest[1]._as(value));
      this.result.$indexSet(0, entry.key, entry.value);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1,2)");
    }
  };
  A.GeneralConstantMap.prototype = {
    _getMap$0() {
      var _this = this,
        backingMap = _this.$map;
      if (backingMap == null) {
        backingMap = new A.JsConstantLinkedHashMap(_this.$ti._eval$1("JsConstantLinkedHashMap<1,2>"));
        A.fillLiteralMap(_this._jsData, backingMap);
        _this.$map = backingMap;
      }
      return backingMap;
    },
    $index(_, key) {
      return this._getMap$0().$index(0, key);
    },
    forEach$1(_, f) {
      this.$ti._eval$1("~(1,2)")._as(f);
      this._getMap$0().forEach$1(0, f);
    },
    get$keys() {
      var t1 = this._getMap$0();
      return new A.LinkedHashMapKeysIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeysIterable<1>"));
    },
    get$length(_) {
      return this._getMap$0().__js_helper$_length;
    }
  };
  A.Instantiation.prototype = {
    Instantiation$1(_genericClosure) {
      if (false)
        A.instantiatedGenericFunctionType(0, 0);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Instantiation1 && this._genericClosure.$eq(0, other._genericClosure) && A.getRuntimeTypeOfClosure(this) === A.getRuntimeTypeOfClosure(other);
    },
    get$hashCode(_) {
      return A.Object_hash(this._genericClosure, A.getRuntimeTypeOfClosure(this), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = B.JSArray_methods.join$1([A.createRuntimeType(this.$ti._precomputed1)], ", ");
      return this._genericClosure.toString$0(0) + " with " + ("<" + t1 + ">");
    }
  };
  A.Instantiation1.prototype = {
    call$1(a0) {
      return this._genericClosure.call$1$1(a0, this.$ti._rest[0]);
    },
    call$0() {
      return this._genericClosure.call$1$0(this.$ti._rest[0]);
    },
    $signature() {
      return A.instantiatedGenericFunctionType(A.closureFunctionType(this._genericClosure), this.$ti);
    }
  };
  A.SafeToStringHook.prototype = {};
  A.TypeErrorDecoder.prototype = {
    matchTypeError$1(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  A.NullError.prototype = {
    toString$0(_) {
      return "Null check operator used on a null value";
    }
  };
  A.JsNoSuchMethodError.prototype = {
    toString$0(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + _this.__js_helper$_message;
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + _this.__js_helper$_message + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + _this.__js_helper$_message + ")";
    }
  };
  A.UnknownJsTypeError.prototype = {
    toString$0(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  A.NullThrownFromJavaScriptException.prototype = {
    toString$0(_) {
      return "Throw of null ('" + (this._irritant === null ? "null" : "undefined") + "' from JavaScript)";
    }
  };
  A.ExceptionAndStackTrace.prototype = {};
  A._StackTrace.prototype = {
    toString$0(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  A.Closure.prototype = {
    toString$0(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + A.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    get$runtimeType(_) {
      var rti = A.closureFunctionType(this);
      return A.createRuntimeType(rti == null ? A.instanceType(this) : rti);
    },
    $isFunction: 1,
    get$$call() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  A.Closure0Args.prototype = {"call*": "call$0", $requiredArgCount: 0};
  A.Closure2Args.prototype = {"call*": "call$2", $requiredArgCount: 2};
  A.TearOffClosure.prototype = {};
  A.StaticClosure.prototype = {
    toString$0(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + A.unminifyOrTag($name) + "'";
    }
  };
  A.BoundClosure.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.BoundClosure))
        return false;
      return this.$_target === other.$_target && this._receiver === other._receiver;
    },
    get$hashCode(_) {
      return (A.objectHashCode(this._receiver) ^ A.Primitives_objectHashCode(this.$_target)) >>> 0;
    },
    toString$0(_) {
      return "Closure '" + this.$_name + "' of " + ("Instance of '" + A.Primitives_objectTypeName(this._receiver) + "'");
    }
  };
  A.RuntimeError.prototype = {
    toString$0(_) {
      return "RuntimeError: " + this.message;
    }
  };
  A.JsLinkedHashMap.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_length === 0;
    },
    get$keys() {
      return new A.LinkedHashMapKeysIterable(this, A._instanceType(this)._eval$1("LinkedHashMapKeysIterable<1>"));
    },
    get$entries() {
      return new A.LinkedHashMapEntriesIterable(this, A._instanceType(this)._eval$1("LinkedHashMapEntriesIterable<1,2>"));
    },
    containsKey$1(key) {
      var strings = this.__js_helper$_strings;
      if (strings == null)
        return false;
      return strings[key] != null;
    },
    addAll$1(_, other) {
      A._instanceType(this)._eval$1("Map<1,2>")._as(other).forEach$1(0, new A.JsLinkedHashMap_addAll_closure(this));
    },
    $index(_, key) {
      var strings, cell, t1, nums, _null = null;
      if (typeof key == "string") {
        strings = this.__js_helper$_strings;
        if (strings == null)
          return _null;
        cell = strings[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this.__js_helper$_nums;
        if (nums == null)
          return _null;
        cell = nums[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return this.internalGet$1(key);
    },
    internalGet$1(key) {
      var bucket, index,
        rest = this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = rest[this.internalComputeHashCode$1(key)];
      index = this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (typeof key == "string") {
        strings = _this.__js_helper$_strings;
        _this.__js_helper$_addHashTableEntry$3(strings == null ? _this.__js_helper$_strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = _this.__js_helper$_nums;
        _this.__js_helper$_addHashTableEntry$3(nums == null ? _this.__js_helper$_nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2(key, value) {
      var rest, hash, bucket, index, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      rest = _this.__js_helper$_rest;
      if (rest == null)
        rest = _this.__js_helper$_rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._newLinkedCell$2(key, value)];
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this._newLinkedCell$2(key, value));
      }
    },
    putIfAbsent$2(key, ifAbsent) {
      var t2, value, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._eval$1("2()")._as(ifAbsent);
      if (_this.containsKey$1(key)) {
        t2 = _this.$index(0, key);
        return t2 == null ? t1._rest[1]._as(t2) : t2;
      }
      value = ifAbsent.call$0();
      _this.$indexSet(0, key, value);
      return value;
    },
    remove$1(_, key) {
      var _this = this;
      if (typeof key == "string")
        return _this.__js_helper$_removeHashTableEntry$2(_this.__js_helper$_strings, key);
      else if (typeof key == "number" && (key & 0x3fffffff) === key)
        return _this.__js_helper$_removeHashTableEntry$2(_this.__js_helper$_nums, key);
      else
        return _this.internalRemove$1(key);
    },
    internalRemove$1(key) {
      var hash, bucket, index, cell, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      cell = bucket.splice(index, 1)[0];
      _this.__js_helper$_unlinkCell$1(cell);
      if (bucket.length === 0)
        delete rest[hash];
      return cell.hashMapCellValue;
    },
    forEach$1(_, action) {
      var cell, modifications, _this = this;
      A._instanceType(_this)._eval$1("~(1,2)")._as(action);
      cell = _this._first;
      modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    __js_helper$_addHashTableEntry$3(table, key, value) {
      var cell,
        t1 = A._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      cell = table[key];
      if (cell == null)
        table[key] = this._newLinkedCell$2(key, value);
      else
        cell.hashMapCellValue = value;
    },
    __js_helper$_removeHashTableEntry$2(table, key) {
      var cell;
      if (table == null)
        return null;
      cell = table[key];
      if (cell == null)
        return null;
      this.__js_helper$_unlinkCell$1(cell);
      delete table[key];
      return cell.hashMapCellValue;
    },
    _modified$0() {
      this._modifications = this._modifications + 1 & 1073741823;
    },
    _newLinkedCell$2(key, value) {
      var _this = this,
        t1 = A._instanceType(_this),
        cell = new A.LinkedHashMapCell(t1._precomputed1._as(key), t1._rest[1]._as(value));
      if (_this._first == null)
        _this._first = _this._last = cell;
      else {
        t1 = _this._last;
        t1.toString;
        cell._previous = t1;
        _this._last = t1._next = cell;
      }
      ++_this.__js_helper$_length;
      _this._modified$0();
      return cell;
    },
    __js_helper$_unlinkCell$1(cell) {
      var _this = this,
        previous = cell._previous,
        next = cell._next;
      if (previous == null)
        _this._first = next;
      else
        previous._next = next;
      if (next == null)
        _this._last = previous;
      else
        next._previous = previous;
      --_this.__js_helper$_length;
      _this._modified$0();
    },
    internalComputeHashCode$1(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    _newHashTable$0() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    $isLinkedHashMap: 1
  };
  A.JsLinkedHashMap_addAll_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = A._instanceType(t1);
      t1.$indexSet(0, t2._precomputed1._as(key), t2._rest[1]._as(value));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1,2)");
    }
  };
  A.LinkedHashMapCell.prototype = {};
  A.LinkedHashMapKeysIterable.prototype = {
    get$length(_) {
      return this.__js_helper$_map.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_map.__js_helper$_length === 0;
    },
    get$iterator(_) {
      var t1 = this.__js_helper$_map;
      return new A.LinkedHashMapKeyIterator(t1, t1._modifications, t1._first, this.$ti._eval$1("LinkedHashMapKeyIterator<1>"));
    }
  };
  A.LinkedHashMapKeyIterator.prototype = {
    get$current() {
      return this.__js_helper$_current;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this.__js_helper$_map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.__js_helper$_current = null;
        return false;
      } else {
        _this.__js_helper$_current = cell.hashMapCellKey;
        _this._cell = cell._next;
        return true;
      }
    },
    $isIterator: 1
  };
  A.LinkedHashMapValuesIterable.prototype = {
    get$length(_) {
      return this.__js_helper$_map.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_map.__js_helper$_length === 0;
    },
    get$iterator(_) {
      var t1 = this.__js_helper$_map;
      return new A.LinkedHashMapValueIterator(t1, t1._modifications, t1._first, this.$ti._eval$1("LinkedHashMapValueIterator<1>"));
    }
  };
  A.LinkedHashMapValueIterator.prototype = {
    get$current() {
      return this.__js_helper$_current;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this.__js_helper$_map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.__js_helper$_current = null;
        return false;
      } else {
        _this.__js_helper$_current = cell.hashMapCellValue;
        _this._cell = cell._next;
        return true;
      }
    },
    $isIterator: 1
  };
  A.LinkedHashMapEntriesIterable.prototype = {
    get$length(_) {
      return this.__js_helper$_map.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_map.__js_helper$_length === 0;
    },
    get$iterator(_) {
      var t1 = this.__js_helper$_map;
      return new A.LinkedHashMapEntryIterator(t1, t1._modifications, t1._first, this.$ti._eval$1("LinkedHashMapEntryIterator<1,2>"));
    }
  };
  A.LinkedHashMapEntryIterator.prototype = {
    get$current() {
      var t1 = this.__js_helper$_current;
      t1.toString;
      return t1;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this.__js_helper$_map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.__js_helper$_current = null;
        return false;
      } else {
        _this.__js_helper$_current = new A.MapEntry(cell.hashMapCellKey, cell.hashMapCellValue, _this.$ti._eval$1("MapEntry<1,2>"));
        _this._cell = cell._next;
        return true;
      }
    },
    $isIterator: 1
  };
  A.JsConstantLinkedHashMap.prototype = {
    internalComputeHashCode$1(key) {
      return A.constantHashCode(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    }
  };
  A.initHooks_closure.prototype = {
    call$1(o) {
      return this.getTag(o);
    },
    $signature: 2
  };
  A.initHooks_closure0.prototype = {
    call$2(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 160
  };
  A.initHooks_closure1.prototype = {
    call$1(tag) {
      return this.prototypeForTag(A._asString(tag));
    },
    $signature: 144
  };
  A._Record.prototype = {
    get$runtimeType(_) {
      return A.createRuntimeType(this._getRti$0());
    },
    _getRti$0() {
      return A.evaluateRtiForRecord(this.$recipe, this._getFieldValues$0());
    },
    toString$0(_) {
      return this._toString$1(false);
    },
    _toString$1(safe) {
      var t2, separator, i, key, value,
        keys = this._fieldKeys$0(),
        values = this._getFieldValues$0(),
        t1 = (safe ? "Record " : "") + "(";
      for (t2 = keys.length, separator = "", i = 0; i < t2; ++i, separator = ", ") {
        t1 += separator;
        key = keys[i];
        if (typeof key == "string")
          t1 = t1 + key + ": ";
        if (!(i < values.length))
          return A.ioore(values, i);
        value = values[i];
        t1 = safe ? t1 + A.Primitives_safeToString(value) : t1 + A.S(value);
      }
      t1 += ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _fieldKeys$0() {
      var t1,
        shapeTag = this.$shape;
      for (; $._Record__computedFieldKeys.length <= shapeTag;)
        B.JSArray_methods.add$1($._Record__computedFieldKeys, null);
      t1 = $._Record__computedFieldKeys[shapeTag];
      if (t1 == null) {
        t1 = this._computeFieldKeys$0();
        B.JSArray_methods.$indexSet($._Record__computedFieldKeys, shapeTag, t1);
      }
      return t1;
    },
    _computeFieldKeys$0() {
      var i, names, last,
        recipe = this.$recipe,
        position = recipe.indexOf("("),
        joinedNames = recipe.substring(1, position),
        fields = recipe.substring(position),
        arity = fields === "()" ? 0 : fields.replace(/[^,]/g, "").length + 1,
        t1 = type$.Object,
        result = J.JSArray_JSArray$allocateGrowable(arity, t1);
      for (i = 0; i < arity; ++i)
        result[i] = i;
      if (joinedNames !== "") {
        names = joinedNames.split(",");
        i = names.length;
        for (last = arity; i > 0;) {
          --last;
          --i;
          B.JSArray_methods.$indexSet(result, last, names[i]);
        }
      }
      return A.List_List$unmodifiable(result, t1);
    }
  };
  A._Record3.prototype = {
    _getFieldValues$0() {
      return [this._0, this._1, this._2];
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A._Record3 && _this.$shape === other.$shape && J.$eq$(_this._0, other._0) && J.$eq$(_this._1, other._1) && J.$eq$(_this._2, other._2);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.$shape, _this._0, _this._1, _this._2, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.JSSyntaxRegExp.prototype = {
    toString$0(_) {
      return "RegExp/" + this.pattern + "/" + this._nativeRegExp.flags;
    },
    get$_nativeGlobalVersion() {
      var _this = this,
        t1 = _this._nativeGlobalRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeGlobalRegExp = A.JSSyntaxRegExp_makeNative(_this.pattern, t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, "g");
    },
    get$_nativeAnchoredVersion() {
      var _this = this,
        t1 = _this._nativeAnchoredRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeAnchoredRegExp = A.JSSyntaxRegExp_makeNative(_this.pattern, t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, "y");
    },
    firstMatch$1(string) {
      var m = this._nativeRegExp.exec(string);
      if (m == null)
        return null;
      return new A._MatchImplementation(m);
    },
    allMatches$2(_, string, start) {
      var t1 = string.length;
      if (start > t1)
        throw A.wrapException(A.RangeError$range(start, 0, t1, null, null));
      return new A._AllMatchesIterable(this, string, start);
    },
    allMatches$1(_, string) {
      return this.allMatches$2(0, string, 0);
    },
    _execGlobal$2(string, start) {
      var match,
        regexp = this.get$_nativeGlobalVersion();
      if (regexp == null)
        regexp = A._asObject(regexp);
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return null;
      return new A._MatchImplementation(match);
    },
    _execAnchored$2(string, start) {
      var match,
        regexp = this.get$_nativeAnchoredVersion();
      if (regexp == null)
        regexp = A._asObject(regexp);
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return null;
      return new A._MatchImplementation(match);
    },
    matchAsPrefix$2(_, string, start) {
      if (start < 0 || start > string.length)
        throw A.wrapException(A.RangeError$range(start, 0, string.length, null, null));
      return this._execAnchored$2(string, start);
    },
    $isPattern: 1,
    $isRegExp: 1
  };
  A._MatchImplementation.prototype = {
    get$end() {
      var t1 = this._match;
      return t1.index + t1[0].length;
    },
    $isMatch: 1,
    $isRegExpMatch: 1
  };
  A._AllMatchesIterable.prototype = {
    get$iterator(_) {
      return new A._AllMatchesIterator(this._re, this.__js_helper$_string, this.__js_helper$_start);
    }
  };
  A._AllMatchesIterator.prototype = {
    get$current() {
      var t1 = this.__js_helper$_current;
      return t1 == null ? type$.RegExpMatch._as(t1) : t1;
    },
    moveNext$0() {
      var t1, t2, t3, match, nextIndex, t4, _this = this,
        string = _this.__js_helper$_string;
      if (string == null)
        return false;
      t1 = _this._nextIndex;
      t2 = string.length;
      if (t1 <= t2) {
        t3 = _this._regExp;
        match = t3._execGlobal$2(string, t1);
        if (match != null) {
          _this.__js_helper$_current = match;
          nextIndex = match.get$end();
          if (match._match.index === nextIndex) {
            t1 = false;
            if (t3._nativeRegExp.unicode) {
              t3 = _this._nextIndex;
              t4 = t3 + 1;
              if (t4 < t2) {
                if (!(t3 >= 0 && t3 < t2))
                  return A.ioore(string, t3);
                t3 = string.charCodeAt(t3);
                if (t3 >= 55296 && t3 <= 56319) {
                  if (!(t4 >= 0))
                    return A.ioore(string, t4);
                  t1 = string.charCodeAt(t4);
                  t1 = t1 >= 56320 && t1 <= 57343;
                }
              }
            }
            nextIndex = (t1 ? nextIndex + 1 : nextIndex) + 1;
          }
          _this._nextIndex = nextIndex;
          return true;
        }
      }
      _this.__js_helper$_string = _this.__js_helper$_current = null;
      return false;
    },
    $isIterator: 1
  };
  A.StringMatch.prototype = {$isMatch: 1};
  A._StringAllMatchesIterable.prototype = {
    get$iterator(_) {
      return new A._StringAllMatchesIterator(this._input, this._pattern, this.__js_helper$_index);
    },
    get$first(_) {
      var t1 = this._pattern,
        index = this._input.indexOf(t1, this.__js_helper$_index);
      if (index >= 0)
        return new A.StringMatch(index, t1);
      throw A.wrapException(A.IterableElementError_noElement());
    }
  };
  A._StringAllMatchesIterator.prototype = {
    moveNext$0() {
      var index, end, _this = this,
        t1 = _this.__js_helper$_index,
        t2 = _this._pattern,
        t3 = t2.length,
        t4 = _this._input,
        t5 = t4.length;
      if (t1 + t3 > t5) {
        _this.__js_helper$_current = null;
        return false;
      }
      index = t4.indexOf(t2, t1);
      if (index < 0) {
        _this.__js_helper$_index = t5 + 1;
        _this.__js_helper$_current = null;
        return false;
      }
      end = index + t3;
      _this.__js_helper$_current = new A.StringMatch(index, t2);
      _this.__js_helper$_index = end === _this.__js_helper$_index ? end + 1 : end;
      return true;
    },
    get$current() {
      var t1 = this.__js_helper$_current;
      t1.toString;
      return t1;
    },
    $isIterator: 1
  };
  A._Cell.prototype = {
    _readLocal$0() {
      var t1 = this._value;
      if (t1 === this)
        throw A.wrapException(new A.LateError("Local '" + this._name + "' has not been initialized."));
      return t1;
    },
    _readField$0() {
      var t1 = this._value;
      if (t1 === this)
        throw A.wrapException(A.LateError$fieldNI(this._name));
      return t1;
    },
    set$finalLocalValue(v) {
      var _this = this;
      if (_this._value !== _this)
        throw A.wrapException(new A.LateError("Local '" + _this._name + "' has already been initialized."));
      _this._value = v;
    }
  };
  A.NativeByteBuffer.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteBuffer_rqD;
    },
    asUint8List$2(receiver, offsetInBytes, $length) {
      A._checkViewArguments(receiver, offsetInBytes, $length);
      return $length == null ? new Uint8Array(receiver, offsetInBytes) : new Uint8Array(receiver, offsetInBytes, $length);
    },
    asUint8List$0(receiver) {
      return this.asUint8List$2(receiver, 0, null);
    },
    asFloat32List$2(receiver, offsetInBytes, $length) {
      A._checkViewArguments(receiver, offsetInBytes, $length);
      $length = B.JSInt_methods._tdivFast$1(receiver.byteLength - offsetInBytes, 4);
      return new Float32Array(receiver, offsetInBytes, $length);
    },
    asFloat32List$0(receiver) {
      return this.asFloat32List$2(receiver, 0, null);
    },
    asByteData$2(receiver, offsetInBytes, $length) {
      var t1;
      A._checkViewArguments(receiver, offsetInBytes, $length);
      t1 = new DataView(receiver, offsetInBytes);
      return t1;
    },
    asByteData$0(receiver) {
      return this.asByteData$2(receiver, 0, null);
    },
    $isTrustedGetRuntimeType: 1,
    $isNativeByteBuffer: 1,
    $isByteBuffer: 1
  };
  A.NativeTypedData.prototype = {
    get$buffer(receiver) {
      if (((receiver.$flags | 0) & 2) !== 0)
        return new A._UnmodifiableNativeByteBufferView(receiver.buffer);
      else
        return receiver.buffer;
    },
    _invalidPosition$3(receiver, position, $length, $name) {
      var t1 = A.RangeError$range(position, 0, $length, $name, null);
      throw A.wrapException(t1);
    },
    _checkPosition$3(receiver, position, $length, $name) {
      if (position >>> 0 !== position || position > $length)
        this._invalidPosition$3(receiver, position, $length, $name);
    },
    $isNativeTypedData: 1,
    $isTypedData: 1
  };
  A._UnmodifiableNativeByteBufferView.prototype = {
    asUint8List$2(_, offsetInBytes, $length) {
      var result = A.NativeUint8List_NativeUint8List$view(this._data, offsetInBytes, $length);
      result.$flags = 3;
      return result;
    },
    asUint8List$0(_) {
      return this.asUint8List$2(0, 0, null);
    },
    asFloat32List$0(_) {
      var result = A.NativeFloat32List_NativeFloat32List$view(this._data, 0, null);
      result.$flags = 3;
      return result;
    },
    asByteData$2(_, offsetInBytes, $length) {
      var result = A.NativeByteData_NativeByteData$view(this._data, offsetInBytes, $length);
      result.$flags = 3;
      return result;
    },
    asByteData$0(_) {
      return this.asByteData$2(0, 0, null);
    },
    $isByteBuffer: 1
  };
  A.NativeByteData.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteData_9dB;
    },
    $isTrustedGetRuntimeType: 1,
    $isByteData: 1
  };
  A.NativeTypedArray.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    _setRangeFast$4(receiver, start, end, source, skipCount) {
      var count, sourceLength,
        targetLength = receiver.length;
      this._checkPosition$3(receiver, start, targetLength, "start");
      this._checkPosition$3(receiver, end, targetLength, "end");
      if (start > end)
        throw A.wrapException(A.RangeError$range(start, 0, end, null, null));
      count = end - start;
      if (skipCount < 0)
        throw A.wrapException(A.ArgumentError$(skipCount, null));
      sourceLength = source.length;
      if (sourceLength - skipCount < count)
        throw A.wrapException(A.StateError$("Not enough elements"));
      if (skipCount !== 0 || sourceLength !== count)
        source = source.subarray(skipCount, skipCount + count);
      receiver.set(source, start);
    },
    $isJSIndexable: 1,
    $isJavaScriptIndexingBehavior: 1
  };
  A.NativeTypedArrayOfDouble.prototype = {
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._asDouble(value);
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver);
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeTypedArrayOfInt.prototype = {
    $indexSet(receiver, index, value) {
      A._asInt(value);
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver);
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      type$.Iterable_int._as(iterable);
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver, 5);
      if (type$.NativeTypedArrayOfInt._is(iterable)) {
        this._setRangeFast$4(receiver, start, end, iterable, skipCount);
        return;
      }
      this.super$ListBase$setRange(receiver, start, end, iterable, skipCount);
    },
    setRange$3(receiver, start, end, iterable) {
      return this.setRange$4(receiver, start, end, iterable, 0);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeFloat32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Float32List_9Kz;
    },
    $isTrustedGetRuntimeType: 1,
    $isTypedDataList: 1,
    $isFloat32List: 1
  };
  A.NativeFloat64List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Float64List_9Kz;
    },
    $isTrustedGetRuntimeType: 1,
    $isTypedDataList: 1,
    $isFloat64List: 1
  };
  A.NativeInt16List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int16List_s5h;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isTypedDataList: 1,
    $isInt16List: 1
  };
  A.NativeInt32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int32List_O8Z;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isTypedDataList: 1,
    $isInt32List: 1
  };
  A.NativeInt8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int8List_rFV;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isTypedDataList: 1,
    $isInt8List: 1
  };
  A.NativeUint16List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint16List_kmP;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isTypedDataList: 1,
    $isUint16List: 1
  };
  A.NativeUint32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint32List_kmP;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isTypedDataList: 1,
    $isUint32List: 1
  };
  A.NativeUint8ClampedList.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8ClampedList_04U;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isTypedDataList: 1,
    $isUint8ClampedList: 1
  };
  A.NativeUint8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8List_8Eb;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    asUnmodifiableView$0(receiver) {
      var t1;
      if (((receiver.$flags | 0) & 2) !== 0)
        return receiver;
      t1 = new Uint8Array(receiver.buffer, receiver.byteOffset, receiver.length);
      t1.$flags = 3;
      return t1;
    },
    sublist$2(receiver, start, end) {
      return new Uint8Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    sublist$1(receiver, start) {
      return this.sublist$2(receiver, start, null);
    },
    $isTrustedGetRuntimeType: 1,
    $isNativeUint8List: 1,
    $isTypedDataList: 1,
    $isUint8List: 1
  };
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A.Rti.prototype = {
    _eval$1(recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1(typeOrTuple) {
      return A._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  A._FunctionParameters.prototype = {};
  A._Type.prototype = {
    toString$0(_) {
      return A._rtiToString(this._rti, null);
    },
    $isType: 1
  };
  A._Error.prototype = {
    toString$0(_) {
      return this.__rti$_message;
    }
  };
  A._TypeError.prototype = {$isTypeError: 1};
  A._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1(__wc0_formal) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 30
  };
  A._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1(callback) {
      var t1, t2;
      this._box_0.storedCallback = type$.void_Function._as(callback);
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 214
  };
  A._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 5
  };
  A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 5
  };
  A._TimerImpl.prototype = {
    _TimerImpl$2(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setTimeout(A.convertDartClosureToJS(new A._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw A.wrapException(A.UnsupportedError$("`setTimeout()` not found."));
    },
    $isTimer: 1
  };
  A._TimerImpl_internalCallback.prototype = {
    call$0() {
      this.$this._handle = null;
      this.callback.call$0();
    },
    $signature: 0
  };
  A._AsyncAwaitCompleter.prototype = {
    complete$1(value) {
      var t2, _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/?")._as(value);
      if (value == null)
        value = t1._precomputed1._as(value);
      if (!_this.isSync)
        _this._future._asyncComplete$1(value);
      else {
        t2 = _this._future;
        if (t1._eval$1("Future<1>")._is(value))
          t2._chainFuture$1(value);
        else
          t2._completeWithValue$1(value);
      }
    },
    completeError$2(e, st) {
      var t1 = this._future;
      if (this.isSync)
        t1._completeErrorObject$1(new A.AsyncError(e, st));
      else
        t1._asyncCompleteErrorObject$1(new A.AsyncError(e, st));
    },
    $isCompleter: 1
  };
  A._awaitOnObject_closure.prototype = {
    call$1(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 6
  };
  A._awaitOnObject_closure0.prototype = {
    call$2(error, stackTrace) {
      this.bodyFunction.call$2(1, new A.ExceptionAndStackTrace(error, type$.StackTrace._as(stackTrace)));
    },
    $signature: 92
  };
  A._wrapJsFunctionForAsync_closure.prototype = {
    call$2(errorCode, result) {
      this.$protected(A._asInt(errorCode), result);
    },
    $signature: 140
  };
  A._SyncStarIterator.prototype = {
    get$current() {
      var t1 = this._async$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    _resumeBody$2(errorCode, errorValue) {
      var body, t1, exception;
      errorCode = A._asInt(errorCode);
      errorValue = errorValue;
      body = this._body;
      for (; true;)
        try {
          t1 = body(this, errorCode, errorValue);
          return t1;
        } catch (exception) {
          errorValue = exception;
          errorCode = 1;
        }
    },
    moveNext$0() {
      var nestedIterator, exception, value, suspendedBodies, _this = this, errorValue = null, errorCode = 0;
      for (; true;) {
        nestedIterator = _this._nestedIterator;
        if (nestedIterator != null)
          try {
            if (nestedIterator.moveNext$0()) {
              _this._async$_current = nestedIterator.get$current();
              return true;
            } else
              _this._nestedIterator = null;
          } catch (exception) {
            errorValue = exception;
            errorCode = 1;
            _this._nestedIterator = null;
          }
        value = _this._resumeBody$2(errorCode, errorValue);
        if (1 === value)
          return true;
        if (0 === value) {
          _this._async$_current = null;
          suspendedBodies = _this._suspendedBodies;
          if (suspendedBodies == null || suspendedBodies.length === 0) {
            _this._body = A._SyncStarIterator__terminatedBody;
            return false;
          }
          if (0 >= suspendedBodies.length)
            return A.ioore(suspendedBodies, -1);
          _this._body = suspendedBodies.pop();
          errorCode = 0;
          errorValue = null;
          continue;
        }
        if (2 === value) {
          errorCode = 0;
          errorValue = null;
          continue;
        }
        if (3 === value) {
          errorValue = _this._datum;
          _this._datum = null;
          suspendedBodies = _this._suspendedBodies;
          if (suspendedBodies == null || suspendedBodies.length === 0) {
            _this._async$_current = null;
            _this._body = A._SyncStarIterator__terminatedBody;
            throw errorValue;
            return false;
          }
          if (0 >= suspendedBodies.length)
            return A.ioore(suspendedBodies, -1);
          _this._body = suspendedBodies.pop();
          errorCode = 1;
          continue;
        }
        throw A.wrapException(A.StateError$("sync*"));
      }
      return false;
    },
    _yieldStar$1(iterable) {
      var t1, t2, _this = this;
      if (iterable instanceof A._SyncStarIterable) {
        t1 = iterable._outerHelper();
        t2 = _this._suspendedBodies;
        if (t2 == null)
          t2 = _this._suspendedBodies = [];
        B.JSArray_methods.add$1(t2, _this._body);
        _this._body = t1;
        return 2;
      } else {
        _this._nestedIterator = J.get$iterator$ax(iterable);
        return 2;
      }
    },
    $isIterator: 1
  };
  A._SyncStarIterable.prototype = {
    get$iterator(_) {
      return new A._SyncStarIterator(this._outerHelper(), this.$ti._eval$1("_SyncStarIterator<1>"));
    }
  };
  A.AsyncError.prototype = {
    toString$0(_) {
      return A.S(this.error);
    },
    $isError: 1,
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A.Future_wait_handleError.prototype = {
    call$2(theError, theStackTrace) {
      var t1, t2, _this = this;
      A._asObject(theError);
      type$.StackTrace._as(theStackTrace);
      t1 = _this._box_0;
      t2 = --t1.remaining;
      if (t1.values != null) {
        t1.values = null;
        t1.error = theError;
        t1.stackTrace = theStackTrace;
        if (t2 === 0 || _this.eagerError)
          _this._future._completeErrorObject$1(new A.AsyncError(theError, theStackTrace));
      } else if (t2 === 0 && !_this.eagerError) {
        t2 = t1.error;
        t2.toString;
        t1 = t1.stackTrace;
        t1.toString;
        _this._future._completeErrorObject$1(new A.AsyncError(t2, t1));
      }
    },
    $signature: 37
  };
  A.Future_wait_closure.prototype = {
    call$1(value) {
      var remainingResults, valueList, t1, value0, t3, t4, _i, t5, _this = this,
        t2 = _this.T;
      t2._as(value);
      t3 = _this._box_0;
      remainingResults = --t3.remaining;
      valueList = t3.values;
      if (valueList != null) {
        J.$indexSet$ax(valueList, _this.pos, value);
        if (J.$eq$(remainingResults, 0)) {
          t1 = A._setArrayType([], t2._eval$1("JSArray<0>"));
          for (t3 = valueList, t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
            value0 = t3[_i];
            t5 = value0;
            if (t5 == null)
              t5 = t2._as(t5);
            J.add$1$ax(t1, t5);
          }
          _this._future._completeWithValue$1(t1);
        }
      } else if (J.$eq$(remainingResults, 0) && !_this.eagerError) {
        t1 = t3.error;
        t1.toString;
        t3 = t3.stackTrace;
        t3.toString;
        _this._future._completeErrorObject$1(new A.AsyncError(t1, t3));
      }
    },
    $signature() {
      return this.T._eval$1("Null(0)");
    }
  };
  A._Completer.prototype = {
    completeError$2(error, stackTrace) {
      var t1 = this.future;
      if ((t1._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      t1._asyncCompleteErrorObject$1(A._interceptUserError(error, stackTrace));
    },
    completeError$1(error) {
      return this.completeError$2(error, null);
    },
    $isCompleter: 1
  };
  A._AsyncCompleter.prototype = {
    complete$1(value) {
      var t2,
        t1 = this.$ti;
      t1._eval$1("1/?")._as(value);
      t2 = this.future;
      if ((t2._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      t2._asyncComplete$1(t1._eval$1("1/")._as(value));
    },
    complete$0() {
      return this.complete$1(null);
    }
  };
  A._FutureListener.prototype = {
    matchesErrorTest$1(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2$2(type$.bool_Function_Object._as(this.callback), asyncError.error, type$.bool, type$.Object);
    },
    handleError$1(asyncError) {
      var exception, _this = this,
        errorCallback = _this.errorCallback,
        result = null,
        t1 = type$.dynamic,
        t2 = type$.Object,
        t3 = asyncError.error,
        t4 = _this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        result = t4.runBinary$3$3(errorCallback, t3, asyncError.stackTrace, t1, t2, type$.StackTrace);
      else
        result = t4.runUnary$2$2(type$.dynamic_Function_Object._as(errorCallback), t3, t1, t2);
      try {
        t1 = _this.$ti._eval$1("2/")._as(result);
        return t1;
      } catch (exception) {
        if (type$.TypeError._is(A.unwrapException(exception))) {
          if ((_this.state & 1) !== 0)
            throw A.wrapException(A.ArgumentError$("The error handler of Future.then must return a value of the returned future's type", "onError"));
          throw A.wrapException(A.ArgumentError$("The error handler of Future.catchError must return a value of the future's type", "onError"));
        } else
          throw exception;
      }
    }
  };
  A._Future.prototype = {
    then$1$2$onError(f, onError, $R) {
      var currentZone, result, t2,
        t1 = this.$ti;
      t1._bind$1($R)._eval$1("1/(2)")._as(f);
      currentZone = $.Zone__current;
      if (currentZone === B.C__RootZone) {
        if (onError != null && !type$.dynamic_Function_Object_StackTrace._is(onError) && !type$.dynamic_Function_Object._is(onError))
          throw A.wrapException(A.ArgumentError$value(onError, "onError", string$.Error_));
      } else {
        $R._eval$1("@<0/>")._bind$1(t1._precomputed1)._eval$1("1(2)")._as(f);
        if (onError != null)
          onError = A._registerErrorHandler(onError, currentZone);
      }
      result = new A._Future(currentZone, $R._eval$1("_Future<0>"));
      t2 = onError == null ? 1 : 3;
      this._addListener$1(new A._FutureListener(result, t2, f, onError, t1._eval$1("@<1>")._bind$1($R)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    then$1$1(f, $R) {
      return this.then$1$2$onError(f, null, $R);
    },
    _thenAwait$1$2(f, onError, $E) {
      var result,
        t1 = this.$ti;
      t1._bind$1($E)._eval$1("1/(2)")._as(f);
      result = new A._Future($.Zone__current, $E._eval$1("_Future<0>"));
      this._addListener$1(new A._FutureListener(result, 19, f, onError, t1._eval$1("@<1>")._bind$1($E)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    _ignore$0() {
      var t1, source, t2;
      if (((this._state |= 1) & 4) !== 0) {
        t1 = type$._Future_dynamic;
        source = this;
        do
          source = t1._as(source._resultOrListeners);
        while (t2 = source._state, (t2 & 4) !== 0);
        source._state = t2 | 1;
      }
    },
    whenComplete$1(action) {
      var t1, result;
      type$.dynamic_Function._as(action);
      t1 = this.$ti;
      result = new A._Future($.Zone__current, t1);
      this._addListener$1(new A._FutureListener(result, 8, action, null, t1._eval$1("_FutureListener<1,1>")));
      return result;
    },
    _setErrorObject$1(error) {
      this._state = this._state & 1 | 16;
      this._resultOrListeners = error;
    },
    _cloneResult$1(source) {
      this._state = source._state & 30 | this._state & 1;
      this._resultOrListeners = source._resultOrListeners;
    },
    _addListener$1(listener) {
      var source, _this = this,
        t1 = _this._state;
      if (t1 <= 3) {
        listener._nextListener = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listener;
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._addListener$1(listener);
            return;
          }
          _this._cloneResult$1(source);
        }
        A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__addListener_closure(_this, listener)));
      }
    },
    _prependListeners$1(listeners) {
      var t1, existingListeners, next, cursor, next0, source, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 3) {
        existingListeners = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          next = listeners._nextListener;
          for (cursor = listeners; next != null; cursor = next, next = next0)
            next0 = next._nextListener;
          cursor._nextListener = existingListeners;
        }
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._prependListeners$1(listeners);
            return;
          }
          _this._cloneResult$1(source);
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__prependListeners_closure(_box_0, _this)));
      }
    },
    _removeListeners$0() {
      var current = type$.nullable__FutureListener_dynamic_dynamic._as(this._resultOrListeners);
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _complete$1(value) {
      var listeners, _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/")._as(value);
      listeners = _this._removeListeners$0();
      t1._precomputed1._as(value);
      _this._state = 8;
      _this._resultOrListeners = value;
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeWithValue$1(value) {
      var listeners, _this = this;
      _this.$ti._precomputed1._as(value);
      listeners = _this._removeListeners$0();
      _this._state = 8;
      _this._resultOrListeners = value;
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeWithResultOf$1(source) {
      var t1, listeners, _this = this;
      if ((source._state & 16) !== 0) {
        t1 = _this._zone === source._zone;
        t1 = !(t1 || t1);
      } else
        t1 = false;
      if (t1)
        return;
      listeners = _this._removeListeners$0();
      _this._cloneResult$1(source);
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeErrorObject$1(error) {
      var listeners = this._removeListeners$0();
      this._setErrorObject$1(error);
      A._Future__propagateToListeners(this, listeners);
    },
    _completeError$2(error, stackTrace) {
      A._asObject(error);
      type$.StackTrace._as(stackTrace);
      this._completeErrorObject$1(new A.AsyncError(error, stackTrace));
    },
    _asyncComplete$1(value) {
      var t1 = this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value)) {
        this._chainFuture$1(value);
        return;
      }
      this._asyncCompleteWithValue$1(value);
    },
    _asyncCompleteWithValue$1(value) {
      var _this = this;
      _this.$ti._precomputed1._as(value);
      _this._state ^= 2;
      A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__asyncCompleteWithValue_closure(_this, value)));
    },
    _chainFuture$1(value) {
      A._Future__chainCoreFuture(this.$ti._eval$1("Future<1>")._as(value), this, false);
      return;
    },
    _asyncCompleteErrorObject$1(error) {
      this._state ^= 2;
      A._rootScheduleMicrotask(null, null, this._zone, type$.void_Function._as(new A._Future__asyncCompleteErrorObject_closure(this, error)));
    },
    $isFuture: 1
  };
  A._Future__addListener_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 0
  };
  A._Future__prependListeners_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 0
  };
  A._Future__chainCoreFuture_closure.prototype = {
    call$0() {
      A._Future__chainCoreFuture(this._box_0.source, this.target, true);
    },
    $signature: 0
  };
  A._Future__asyncCompleteWithValue_closure.prototype = {
    call$0() {
      this.$this._completeWithValue$1(this.value);
    },
    $signature: 0
  };
  A._Future__asyncCompleteErrorObject_closure.prototype = {
    call$0() {
      this.$this._completeErrorObject$1(this.error);
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0() {
      var e, s, t1, exception, t2, t3, originalSource, joinedResult, _this = this, completeResult = null;
      try {
        t1 = _this._box_0.listener;
        completeResult = t1.result._zone.run$1$1(type$.dynamic_Function._as(t1.callback), type$.dynamic);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        if (_this.hasError && type$.AsyncError._as(_this._box_1.source._resultOrListeners).error === e) {
          t1 = _this._box_0;
          t1.listenerValueOrError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        } else {
          t1 = e;
          t2 = s;
          if (t2 == null)
            t2 = A.AsyncError_defaultStackTrace(t1);
          t3 = _this._box_0;
          t3.listenerValueOrError = new A.AsyncError(t1, t2);
          t1 = t3;
        }
        t1.listenerHasError = true;
        return;
      }
      if (completeResult instanceof A._Future && (completeResult._state & 24) !== 0) {
        if ((completeResult._state & 16) !== 0) {
          t1 = _this._box_0;
          t1.listenerValueOrError = type$.AsyncError._as(completeResult._resultOrListeners);
          t1.listenerHasError = true;
        }
        return;
      }
      if (completeResult instanceof A._Future) {
        originalSource = _this._box_1.source;
        joinedResult = new A._Future(originalSource._zone, originalSource.$ti);
        completeResult.then$1$2$onError(new A._Future__propagateToListeners_handleWhenCompleteCallback_closure(joinedResult, originalSource), new A._Future__propagateToListeners_handleWhenCompleteCallback_closure0(joinedResult), type$.void);
        t1 = _this._box_0;
        t1.listenerValueOrError = joinedResult;
        t1.listenerHasError = false;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1(__wc0_formal) {
      this.joinedResult._completeWithResultOf$1(this.originalSource);
    },
    $signature: 30
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback_closure0.prototype = {
    call$2(e, s) {
      A._asObject(e);
      type$.StackTrace._as(s);
      this.joinedResult._completeErrorObject$1(new A.AsyncError(e, s));
    },
    $signature: 147
  };
  A._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0() {
      var e, s, t1, t2, t3, t4, t5, exception;
      try {
        t1 = this._box_0;
        t2 = t1.listener;
        t3 = t2.$ti;
        t4 = t3._precomputed1;
        t5 = t4._as(this.sourceResult);
        t1.listenerValueOrError = t2.result._zone.runUnary$2$2(t3._eval$1("2/(1)")._as(t2.callback), t5, t3._eval$1("2/"), t4);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = e;
        t2 = s;
        if (t2 == null)
          t2 = A.AsyncError_defaultStackTrace(t1);
        t3 = this._box_0;
        t3.listenerValueOrError = new A.AsyncError(t1, t2);
        t3.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleError.prototype = {
    call$0() {
      var asyncError, e, s, t1, exception, t2, t3, _this = this;
      try {
        asyncError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t1 = _this._box_0;
        if (t1.listener.matchesErrorTest$1(asyncError) && t1.listener.errorCallback != null) {
          t1.listenerValueOrError = t1.listener.handleError$1(asyncError);
          t1.listenerHasError = false;
        }
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        if (t1.error === e) {
          t2 = _this._box_0;
          t2.listenerValueOrError = t1;
          t1 = t2;
        } else {
          t1 = e;
          t2 = s;
          if (t2 == null)
            t2 = A.AsyncError_defaultStackTrace(t1);
          t3 = _this._box_0;
          t3.listenerValueOrError = new A.AsyncError(t1, t2);
          t1 = t3;
        }
        t1.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._AsyncCallbackEntry.prototype = {};
  A.Stream.prototype = {
    map$1(_, convert) {
      var t1 = A._instanceType(this);
      return new A._MapStream(t1._eval$1("@(Stream.T)")._as(convert), this, t1._eval$1("_MapStream<Stream.T,@>"));
    },
    get$length(_) {
      var t1 = {},
        future = new A._Future($.Zone__current, type$._Future_int);
      t1.count = 0;
      this.listen$4$cancelOnError$onDone$onError(new A.Stream_length_closure(t1, this), true, new A.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    }
  };
  A.Stream_length_closure.prototype = {
    call$1(__wc0_formal) {
      A._instanceType(this.$this)._eval$1("Stream.T")._as(__wc0_formal);
      ++this._box_0.count;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(Stream.T)");
    }
  };
  A.Stream_length_closure0.prototype = {
    call$0() {
      this.future._complete$1(this._box_0.count);
    },
    $signature: 0
  };
  A._StreamController.prototype = {
    get$_pendingEvents() {
      var t1, _this = this;
      if ((_this._state & 8) === 0)
        return A._instanceType(_this)._eval$1("_PendingEvents<1>?")._as(_this._varData);
      t1 = A._instanceType(_this);
      return t1._eval$1("_PendingEvents<1>?")._as(t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).get$_varData());
    },
    _ensurePendingEvents$0() {
      var events, t1, _this = this;
      if ((_this._state & 8) === 0) {
        events = _this._varData;
        if (events == null)
          events = _this._varData = new A._PendingEvents(A._instanceType(_this)._eval$1("_PendingEvents<1>"));
        return A._instanceType(_this)._eval$1("_PendingEvents<1>")._as(events);
      }
      t1 = A._instanceType(_this);
      events = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).get$_varData();
      return t1._eval$1("_PendingEvents<1>")._as(events);
    },
    get$_subscription() {
      var varData = this._varData;
      if ((this._state & 8) !== 0)
        varData = type$._StreamControllerAddStreamState_nullable_Object._as(varData).get$_varData();
      return A._instanceType(this)._eval$1("_ControllerSubscription<1>")._as(varData);
    },
    _badEventState$0() {
      if ((this._state & 4) !== 0)
        return new A.StateError("Cannot add event after closing");
      return new A.StateError("Cannot add event while adding a stream");
    },
    _ensureDoneFuture$0() {
      var t1 = this._doneFuture;
      if (t1 == null)
        t1 = this._doneFuture = (this._state & 2) !== 0 ? $.$get$Future__nullFuture() : new A._Future($.Zone__current, type$._Future_void);
      return t1;
    },
    add$1(_, value) {
      var t2, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(value);
      t2 = _this._state;
      if (t2 >= 4)
        throw A.wrapException(_this._badEventState$0());
      if ((t2 & 1) !== 0)
        _this._sendData$1(value);
      else if ((t2 & 3) === 0)
        _this._ensurePendingEvents$0().add$1(0, new A._DelayedData(value, t1._eval$1("_DelayedData<1>")));
    },
    addError$1(error) {
      var _0_0, stackTrace, t1, _this = this;
      if (_this._state >= 4)
        throw A.wrapException(_this._badEventState$0());
      _0_0 = A._interceptUserError(error, null);
      error = _0_0.error;
      stackTrace = _0_0.stackTrace;
      t1 = _this._state;
      if ((t1 & 1) !== 0)
        _this._sendError$2(error, stackTrace);
      else if ((t1 & 3) === 0)
        _this._ensurePendingEvents$0().add$1(0, new A._DelayedError(error, stackTrace));
    },
    close$0() {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 4) !== 0)
        return _this._ensureDoneFuture$0();
      if (t1 >= 4)
        throw A.wrapException(_this._badEventState$0());
      t1 = _this._state = t1 | 4;
      if ((t1 & 1) !== 0)
        _this._sendDone$0();
      else if ((t1 & 3) === 0)
        _this._ensurePendingEvents$0().add$1(0, B.C__DelayedDone);
      return _this._ensureDoneFuture$0();
    },
    _subscribe$4(onData, onError, onDone, cancelOnError) {
      var t2, t3, t4, t5, subscription, pendingEvents, addState, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      if ((_this._state & 3) !== 0)
        throw A.wrapException(A.StateError$("Stream has already been listened to."));
      t2 = $.Zone__current;
      t3 = cancelOnError ? 1 : 0;
      t4 = A._BufferingStreamSubscription__registerDataHandler(t2, onData, t1._precomputed1);
      t5 = A._BufferingStreamSubscription__registerErrorHandler(t2, onError);
      subscription = new A._ControllerSubscription(_this, t4, t5, type$.void_Function._as(onDone), t2, t3 | 32, t1._eval$1("_ControllerSubscription<1>"));
      pendingEvents = _this.get$_pendingEvents();
      if (((_this._state |= 1) & 8) !== 0) {
        addState = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData);
        addState.set$_varData(subscription);
        addState.resume$0();
      } else
        _this._varData = subscription;
      subscription._setPendingEvents$1(pendingEvents);
      subscription._guardCallback$1(new A._StreamController__subscribe_closure(_this));
      return subscription;
    },
    _recordCancel$1(subscription) {
      var result, onCancel, cancelResult, e, s, exception, result0, t2, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("StreamSubscription<1>")._as(subscription);
      result = null;
      if ((_this._state & 8) !== 0)
        result = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).cancel$0();
      _this._varData = null;
      _this._state = _this._state & 4294967286 | 2;
      onCancel = _this.onCancel;
      if (onCancel != null)
        if (result == null)
          try {
            cancelResult = onCancel.call$0();
            if (cancelResult instanceof A._Future)
              result = cancelResult;
          } catch (exception) {
            e = A.unwrapException(exception);
            s = A.getTraceFromException(exception);
            result0 = new A._Future($.Zone__current, type$._Future_void);
            t1 = A._asObject(e);
            t2 = type$.StackTrace._as(s);
            result0._asyncCompleteErrorObject$1(new A.AsyncError(t1, t2));
            result = result0;
          }
        else
          result = result.whenComplete$1(onCancel);
      t1 = new A._StreamController__recordCancel_complete(_this);
      if (result != null)
        result = result.whenComplete$1(t1);
      else
        t1.call$0();
      return result;
    },
    set$onPause(onPause) {
      this.onPause = type$.nullable_void_Function._as(onPause);
    },
    set$onResume(onResume) {
      this.onResume = type$.nullable_void_Function._as(onResume);
    },
    $isStreamController: 1,
    $is_StreamControllerLifecycle: 1,
    $is_EventSink: 1,
    $is_EventDispatch: 1,
    $isSink: 1
  };
  A._StreamController__subscribe_closure.prototype = {
    call$0() {
      A._runGuarded(this.$this.onListen);
    },
    $signature: 0
  };
  A._StreamController__recordCancel_complete.prototype = {
    call$0() {
      var doneFuture = this.$this._doneFuture;
      if (doneFuture != null && (doneFuture._state & 30) === 0)
        doneFuture._asyncComplete$1(null);
    },
    $signature: 0
  };
  A._AsyncStreamControllerDispatch.prototype = {
    _sendData$1(data) {
      var t1 = this.$ti;
      t1._precomputed1._as(data);
      this.get$_subscription()._addPending$1(new A._DelayedData(data, t1._eval$1("_DelayedData<1>")));
    },
    _sendError$2(error, stackTrace) {
      this.get$_subscription()._addPending$1(new A._DelayedError(error, stackTrace));
    },
    _sendDone$0() {
      this.get$_subscription()._addPending$1(B.C__DelayedDone);
    }
  };
  A._AsyncStreamController.prototype = {};
  A._ControllerStream.prototype = {
    get$hashCode(_) {
      return (A.Primitives_objectHashCode(this._controller) ^ 892482866) >>> 0;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A._ControllerStream && other._controller === this._controller;
    }
  };
  A._ControllerSubscription.prototype = {
    _onCancel$0() {
      return this._controller._recordCancel$1(this);
    },
    _onPause$0() {
      var t1 = this._controller,
        t2 = A._instanceType(t1);
      t2._eval$1("StreamSubscription<1>")._as(this);
      if ((t1._state & 8) !== 0)
        t2._eval$1("_StreamControllerAddStreamState<1>")._as(t1._varData).pause$0();
      A._runGuarded(t1.onPause);
    },
    _onResume$0() {
      var t1 = this._controller,
        t2 = A._instanceType(t1);
      t2._eval$1("StreamSubscription<1>")._as(this);
      if ((t1._state & 8) !== 0)
        t2._eval$1("_StreamControllerAddStreamState<1>")._as(t1._varData).resume$0();
      A._runGuarded(t1.onResume);
    }
  };
  A._BufferingStreamSubscription.prototype = {
    _setPendingEvents$1(pendingEvents) {
      var _this = this;
      A._instanceType(_this)._eval$1("_PendingEvents<_BufferingStreamSubscription.T>?")._as(pendingEvents);
      if (pendingEvents == null)
        return;
      _this._pending = pendingEvents;
      if (pendingEvents.lastPendingEvent != null) {
        _this._state = (_this._state | 128) >>> 0;
        pendingEvents.schedule$1(_this);
      }
    },
    pause$1(resumeSignal) {
      var t2, t3, _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      t2 = (t1 + 256 | 4) >>> 0;
      _this._state = t2;
      if (t1 < 256) {
        t3 = _this._pending;
        if (t3 != null)
          if (t3._state === 1)
            t3._state = 3;
      }
      if ((t1 & 4) === 0 && (t2 & 64) === 0)
        _this._guardCallback$1(_this.get$_onPause());
    },
    pause$0() {
      return this.pause$1(null);
    },
    resume$0() {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 >= 256) {
        t1 = _this._state = t1 - 256;
        if (t1 < 256)
          if ((t1 & 128) !== 0 && _this._pending.lastPendingEvent != null)
            _this._pending.schedule$1(_this);
          else {
            t1 = (t1 & 4294967291) >>> 0;
            _this._state = t1;
            if ((t1 & 64) === 0)
              _this._guardCallback$1(_this.get$_onResume());
          }
      }
    },
    cancel$0() {
      var _this = this,
        t1 = (_this._state & 4294967279) >>> 0;
      _this._state = t1;
      if ((t1 & 8) === 0)
        _this._cancel$0();
      t1 = _this._cancelFuture;
      return t1 == null ? $.$get$Future__nullFuture() : t1;
    },
    _cancel$0() {
      var t2, _this = this,
        t1 = _this._state = (_this._state | 8) >>> 0;
      if ((t1 & 128) !== 0) {
        t2 = _this._pending;
        if (t2._state === 1)
          t2._state = 3;
      }
      if ((t1 & 64) === 0)
        _this._pending = null;
      _this._cancelFuture = _this._onCancel$0();
    },
    _async$_add$1(data) {
      var t2, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("_BufferingStreamSubscription.T")._as(data);
      t2 = _this._state;
      if ((t2 & 8) !== 0)
        return;
      if (t2 < 64)
        _this._sendData$1(data);
      else
        _this._addPending$1(new A._DelayedData(data, t1._eval$1("_DelayedData<_BufferingStreamSubscription.T>")));
    },
    _addError$2(error, stackTrace) {
      var t1;
      if (type$.Error._is(error))
        A.Primitives_trySetStackTrace(error, stackTrace);
      t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 < 64)
        this._sendError$2(error, stackTrace);
      else
        this._addPending$1(new A._DelayedError(error, stackTrace));
    },
    _close$0() {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      t1 = (t1 | 2) >>> 0;
      _this._state = t1;
      if (t1 < 64)
        _this._sendDone$0();
      else
        _this._addPending$1(B.C__DelayedDone);
    },
    _onPause$0() {
    },
    _onResume$0() {
    },
    _onCancel$0() {
      return null;
    },
    _addPending$1($event) {
      var t1, _this = this,
        pending = _this._pending;
      if (pending == null)
        pending = _this._pending = new A._PendingEvents(A._instanceType(_this)._eval$1("_PendingEvents<_BufferingStreamSubscription.T>"));
      pending.add$1(0, $event);
      t1 = _this._state;
      if ((t1 & 128) === 0) {
        t1 = (t1 | 128) >>> 0;
        _this._state = t1;
        if (t1 < 256)
          pending.schedule$1(_this);
      }
    },
    _sendData$1(data) {
      var t2, _this = this,
        t1 = A._instanceType(_this)._eval$1("_BufferingStreamSubscription.T");
      t1._as(data);
      t2 = _this._state;
      _this._state = (t2 | 64) >>> 0;
      _this._zone.runUnaryGuarded$1$2(_this._onData, data, t1);
      _this._state = (_this._state & 4294967231) >>> 0;
      _this._checkState$1((t2 & 4) !== 0);
    },
    _sendError$2(error, stackTrace) {
      var cancelFuture, _this = this,
        t1 = _this._state,
        t2 = new A._BufferingStreamSubscription__sendError_sendError(_this, error, stackTrace);
      if ((t1 & 1) !== 0) {
        _this._state = (t1 | 16) >>> 0;
        _this._cancel$0();
        cancelFuture = _this._cancelFuture;
        if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture())
          cancelFuture.whenComplete$1(t2);
        else
          t2.call$0();
      } else {
        t2.call$0();
        _this._checkState$1((t1 & 4) !== 0);
      }
    },
    _sendDone$0() {
      var cancelFuture, _this = this,
        t1 = new A._BufferingStreamSubscription__sendDone_sendDone(_this);
      _this._cancel$0();
      _this._state = (_this._state | 16) >>> 0;
      cancelFuture = _this._cancelFuture;
      if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture())
        cancelFuture.whenComplete$1(t1);
      else
        t1.call$0();
    },
    _guardCallback$1(callback) {
      var t1, _this = this;
      type$.void_Function._as(callback);
      t1 = _this._state;
      _this._state = (t1 | 64) >>> 0;
      callback.call$0();
      _this._state = (_this._state & 4294967231) >>> 0;
      _this._checkState$1((t1 & 4) !== 0);
    },
    _checkState$1(wasInputPaused) {
      var t2, isInputPaused, _this = this,
        t1 = _this._state;
      if ((t1 & 128) !== 0 && _this._pending.lastPendingEvent == null) {
        t1 = _this._state = (t1 & 4294967167) >>> 0;
        t2 = false;
        if ((t1 & 4) !== 0)
          if (t1 < 256) {
            t2 = _this._pending;
            t2 = t2 == null ? null : t2.lastPendingEvent == null;
            t2 = t2 !== false;
          }
        if (t2) {
          t1 = (t1 & 4294967291) >>> 0;
          _this._state = t1;
        }
      }
      for (; true; wasInputPaused = isInputPaused) {
        if ((t1 & 8) !== 0) {
          _this._pending = null;
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        _this._state = (t1 ^ 64) >>> 0;
        if (isInputPaused)
          _this._onPause$0();
        else
          _this._onResume$0();
        t1 = (_this._state & 4294967231) >>> 0;
        _this._state = t1;
      }
      if ((t1 & 128) !== 0 && t1 < 256)
        _this._pending.schedule$1(_this);
    },
    $isStreamSubscription: 1,
    $is_EventSink: 1,
    $is_EventDispatch: 1
  };
  A._BufferingStreamSubscription__sendError_sendError.prototype = {
    call$0() {
      var onError, t3, t4,
        t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 8) !== 0 && (t2 & 16) === 0)
        return;
      t1._state = (t2 | 64) >>> 0;
      onError = t1._onError;
      t2 = this.error;
      t3 = type$.Object;
      t4 = t1._zone;
      if (type$.void_Function_Object_StackTrace._is(onError))
        t4.runBinaryGuarded$2$3(onError, t2, this.stackTrace, t3, type$.StackTrace);
      else
        t4.runUnaryGuarded$1$2(type$.void_Function_Object._as(onError), t2, t3);
      t1._state = (t1._state & 4294967231) >>> 0;
    },
    $signature: 0
  };
  A._BufferingStreamSubscription__sendDone_sendDone.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = (t2 | 74) >>> 0;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state = (t1._state & 4294967231) >>> 0;
    },
    $signature: 0
  };
  A._StreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t1 = this.$ti;
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      return this._controller._subscribe$4(t1._eval$1("~(1)?")._as(onData), onError, onDone, cancelOnError === true);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }
  };
  A._DelayedEvent.prototype = {
    set$next(next) {
      this.next = type$.nullable__DelayedEvent_dynamic._as(next);
    },
    get$next() {
      return this.next;
    }
  };
  A._DelayedData.prototype = {
    perform$1(dispatch) {
      this.$ti._eval$1("_EventDispatch<1>")._as(dispatch)._sendData$1(this.value);
    }
  };
  A._DelayedError.prototype = {
    perform$1(dispatch) {
      dispatch._sendError$2(this.error, this.stackTrace);
    }
  };
  A._DelayedDone.prototype = {
    perform$1(dispatch) {
      dispatch._sendDone$0();
    },
    get$next() {
      return null;
    },
    set$next(__wc0_formal) {
      throw A.wrapException(A.StateError$("No events after a done."));
    },
    $is_DelayedEvent: 1
  };
  A._PendingEvents.prototype = {
    schedule$1(dispatch) {
      var t1, _this = this;
      _this.$ti._eval$1("_EventDispatch<1>")._as(dispatch);
      t1 = _this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        _this._state = 1;
        return;
      }
      A.scheduleMicrotask(new A._PendingEvents_schedule_closure(_this, dispatch));
      _this._state = 1;
    },
    add$1(_, $event) {
      var _this = this,
        lastEvent = _this.lastPendingEvent;
      if (lastEvent == null)
        _this.firstPendingEvent = _this.lastPendingEvent = $event;
      else {
        lastEvent.set$next($event);
        _this.lastPendingEvent = $event;
      }
    }
  };
  A._PendingEvents_schedule_closure.prototype = {
    call$0() {
      var t2, $event, nextEvent,
        t1 = this.$this,
        oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      t2 = t1.$ti._eval$1("_EventDispatch<1>")._as(this.dispatch);
      $event = t1.firstPendingEvent;
      nextEvent = $event.get$next();
      t1.firstPendingEvent = nextEvent;
      if (nextEvent == null)
        t1.lastPendingEvent = null;
      $event.perform$1(t2);
    },
    $signature: 0
  };
  A._StreamIterator.prototype = {};
  A._ForwardingStream.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t2, t3, t4, t5,
        t1 = this.$ti;
      t1._eval$1("~(2)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      t2 = $.Zone__current;
      t3 = cancelOnError === true ? 1 : 0;
      t4 = A._BufferingStreamSubscription__registerDataHandler(t2, onData, t1._rest[1]);
      t5 = A._BufferingStreamSubscription__registerErrorHandler(t2, onError);
      t1 = new A._ForwardingStreamSubscription(this, t4, t5, type$.void_Function._as(onDone), t2, t3 | 32, t1._eval$1("_ForwardingStreamSubscription<1,2>"));
      t1._subscription = this._async$_source.listen$3$onDone$onError(t1.get$_handleData(), t1.get$_handleDone(), t1.get$_handleError());
      return t1;
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }
  };
  A._ForwardingStreamSubscription.prototype = {
    _async$_add$1(data) {
      this.$ti._rest[1]._as(data);
      if ((this._state & 2) !== 0)
        return;
      this.super$_BufferingStreamSubscription$_add(data);
    },
    _addError$2(error, stackTrace) {
      if ((this._state & 2) !== 0)
        return;
      this.super$_BufferingStreamSubscription$_addError(error, stackTrace);
    },
    _onPause$0() {
      var t1 = this._subscription;
      if (t1 != null)
        t1.pause$0();
    },
    _onResume$0() {
      var t1 = this._subscription;
      if (t1 != null)
        t1.resume$0();
    },
    _onCancel$0() {
      var subscription = this._subscription;
      if (subscription != null) {
        this._subscription = null;
        return subscription.cancel$0();
      }
      return null;
    },
    _handleData$1(data) {
      this._stream._handleData$2(this.$ti._precomputed1._as(data), this);
    },
    _handleError$2(error, stackTrace) {
      var t1;
      type$.StackTrace._as(stackTrace);
      t1 = error == null ? A._asObject(error) : error;
      this._stream.$ti._eval$1("_EventSink<2>")._as(this)._addError$2(t1, stackTrace);
    },
    _handleDone$0() {
      this._stream.$ti._eval$1("_EventSink<2>")._as(this)._close$0();
    }
  };
  A._MapStream.prototype = {
    _handleData$2(inputEvent, sink) {
      var outputEvent, e, s, exception, t2,
        t1 = this.$ti;
      t1._precomputed1._as(inputEvent);
      t1._eval$1("_EventSink<2>")._as(sink);
      outputEvent = null;
      try {
        outputEvent = this._transform.call$1(inputEvent);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = e;
        t2 = s;
        A._interceptError(t1, t2);
        sink._addError$2(t1, t2);
        return;
      }
      sink._async$_add$1(outputEvent);
    }
  };
  A._Zone.prototype = {$isZone: 1};
  A._rootHandleError_closure.prototype = {
    call$0() {
      A.Error_throwWithStackTrace(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._RootZone.prototype = {
    runGuarded$1(f) {
      var e, s, exception;
      type$.void_Function._as(f);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        A._rootRun(null, null, this, f, type$.void);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(A._asObject(e), type$.StackTrace._as(s));
      }
    },
    runUnaryGuarded$1$2(f, arg, $T) {
      var e, s, exception;
      $T._eval$1("~(0)")._as(f);
      $T._as(arg);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        A._rootRunUnary(null, null, this, f, arg, type$.void, $T);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(A._asObject(e), type$.StackTrace._as(s));
      }
    },
    runBinaryGuarded$2$3(f, arg1, arg2, $T1, $T2) {
      var e, s, exception;
      $T1._eval$1("@<0>")._bind$1($T2)._eval$1("~(1,2)")._as(f);
      $T1._as(arg1);
      $T2._as(arg2);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$2(arg1, arg2);
          return;
        }
        A._rootRunBinary(null, null, this, f, arg1, arg2, type$.void, $T1, $T2);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(A._asObject(e), type$.StackTrace._as(s));
      }
    },
    bindCallbackGuarded$1(f) {
      return new A._RootZone_bindCallbackGuarded_closure(this, type$.void_Function._as(f));
    },
    run$1$1(f, $R) {
      $R._eval$1("0()")._as(f);
      if ($.Zone__current === B.C__RootZone)
        return f.call$0();
      return A._rootRun(null, null, this, f, $R);
    },
    runUnary$2$2(f, arg, $R, $T) {
      $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
      $T._as(arg);
      if ($.Zone__current === B.C__RootZone)
        return f.call$1(arg);
      return A._rootRunUnary(null, null, this, f, arg, $R, $T);
    },
    runBinary$3$3(f, arg1, arg2, $R, $T1, $T2) {
      $R._eval$1("@<0>")._bind$1($T1)._bind$1($T2)._eval$1("1(2,3)")._as(f);
      $T1._as(arg1);
      $T2._as(arg2);
      if ($.Zone__current === B.C__RootZone)
        return f.call$2(arg1, arg2);
      return A._rootRunBinary(null, null, this, f, arg1, arg2, $R, $T1, $T2);
    },
    registerBinaryCallback$3$1(f, $R, $T1, $T2) {
      return $R._eval$1("@<0>")._bind$1($T1)._bind$1($T2)._eval$1("1(2,3)")._as(f);
    }
  };
  A._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 0
  };
  A._HashMap.prototype = {
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$keys() {
      return new A._HashMapKeyIterable(this, A._instanceType(this)._eval$1("_HashMapKeyIterable<1>"));
    },
    containsKey$1(key) {
      var strings, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._strings;
        return strings == null ? false : strings[key] != null;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._nums;
        return nums == null ? false : nums[key] != null;
      } else
        return this._containsKey$1(key);
    },
    _containsKey$1(key) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;
    },
    $index(_, key) {
      var strings, t1, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._strings;
        t1 = strings == null ? null : A._HashMap__getTableEntry(strings, key);
        return t1;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._nums;
        t1 = nums == null ? null : A._HashMap__getTableEntry(nums, key);
        return t1;
      } else
        return this._get$1(key);
    },
    _get$1(key) {
      var bucket, index,
        rest = this._collection$_rest;
      if (rest == null)
        return null;
      bucket = this._getBucket$2(rest, key);
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (typeof key == "string" && key !== "__proto__") {
        strings = _this._strings;
        _this._addHashTableEntry$3(strings == null ? _this._strings = A._HashMap__newHashTable() : strings, key, value);
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = _this._nums;
        _this._addHashTableEntry$3(nums == null ? _this._nums = A._HashMap__newHashTable() : nums, key, value);
      } else
        _this._set$2(key, value);
    },
    _set$2(key, value) {
      var rest, hash, bucket, index, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._HashMap__newHashTable();
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null) {
        A._HashMap__setTableEntry(rest, hash, [key, value]);
        ++_this._collection$_length;
        _this._keys = null;
      } else {
        index = _this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          ++_this._collection$_length;
          _this._keys = null;
        }
      }
    },
    forEach$1(_, action) {
      var keys, $length, t2, i, key, t3, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("~(1,2)")._as(action);
      keys = _this._computeKeys$0();
      for ($length = keys.length, t2 = t1._precomputed1, t1 = t1._rest[1], i = 0; i < $length; ++i) {
        key = keys[i];
        t2._as(key);
        t3 = _this.$index(0, key);
        action.call$2(key, t3 == null ? t1._as(t3) : t3);
        if (keys !== _this._keys)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0() {
      var strings, index, names, entries, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._keys;
      if (result != null)
        return result;
      result = A.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._strings;
      index = 0;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      }
      nums = _this._nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._keys = result;
    },
    _addHashTableEntry$3(table, key, value) {
      var t1 = A._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (table[key] == null) {
        ++this._collection$_length;
        this._keys = null;
      }
      A._HashMap__setTableEntry(table, key, value);
    },
    _computeHashCode$1(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    _getBucket$2(table, key) {
      return table[this._computeHashCode$1(key)];
    },
    _findBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (J.$eq$(bucket[i], key))
          return i;
      return -1;
    },
    $isHashMap: 1
  };
  A._IdentityHashMap.prototype = {
    _computeHashCode$1(key) {
      return A.objectHashCode(key) & 1073741823;
    },
    _findBucketIndex$2(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2) {
        t1 = bucket[i];
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  A._CustomHashMap.prototype = {
    $index(_, key) {
      if (!this._validKey.call$1(key))
        return null;
      return this.super$_HashMap$_get(key);
    },
    $indexSet(_, key, value) {
      var t1 = this.$ti;
      this.super$_HashMap$_set(t1._precomputed1._as(key), t1._rest[1]._as(value));
    },
    containsKey$1(key) {
      if (!this._validKey.call$1(key))
        return false;
      return this.super$_HashMap$_containsKey(key);
    },
    _computeHashCode$1(key) {
      return this._hashCode.call$1(this.$ti._precomputed1._as(key)) & 1073741823;
    },
    _findBucketIndex$2(bucket, key) {
      var $length, t1, t2, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (t1 = this.$ti._precomputed1, t2 = this._equals, i = 0; i < $length; i += 2)
        if (t2.call$2(bucket[i], t1._as(key)))
          return i;
      return -1;
    }
  };
  A._CustomHashMap_closure.prototype = {
    call$1(v) {
      return this.K._is(v);
    },
    $signature: 80
  };
  A._HashMapKeyIterable.prototype = {
    get$length(_) {
      return this._map._collection$_length;
    },
    get$isEmpty(_) {
      return this._map._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._map._collection$_length !== 0;
    },
    get$iterator(_) {
      var t1 = this._map;
      return new A._HashMapKeyIterator(t1, t1._computeKeys$0(), this.$ti._eval$1("_HashMapKeyIterator<1>"));
    }
  };
  A._HashMapKeyIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        keys = _this._keys,
        offset = _this._offset,
        t1 = _this._map;
      if (keys !== t1._keys)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = keys[offset];
        _this._offset = offset + 1;
        return true;
      }
    },
    $isIterator: 1
  };
  A._LinkedHashSet.prototype = {
    _newSimilarSet$1$0($R) {
      return new A._LinkedHashSet($R._eval$1("_LinkedHashSet<0>"));
    },
    _newSimilarSet$0() {
      return this._newSimilarSet$1$0(type$.dynamic);
    },
    get$iterator(_) {
      var _this = this,
        t1 = new A._LinkedHashSetIterator(_this, _this._collection$_modifications, A._instanceType(_this)._eval$1("_LinkedHashSetIterator<1>"));
      t1._collection$_cell = _this._collection$_first;
      return t1;
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    contains$1(_, object) {
      var strings, t1;
      if (object !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          return false;
        return type$.nullable__LinkedHashSetCell._as(strings[object]) != null;
      } else {
        t1 = this._contains$1(object);
        return t1;
      }
    },
    _contains$1(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    get$first(_) {
      var first = this._collection$_first;
      if (first == null)
        throw A.wrapException(A.StateError$("No elements"));
      return A._instanceType(this)._precomputed1._as(first._element);
    },
    add$1(_, element) {
      var strings, nums, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._strings;
        return _this._addHashTableEntry$2(strings == null ? _this._strings = A._LinkedHashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._nums;
        return _this._addHashTableEntry$2(nums == null ? _this._nums = A._LinkedHashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(element);
    },
    _add$1(element) {
      var rest, hash, bucket, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._LinkedHashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._collection$_newLinkedCell$1(element)];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(_this._collection$_newLinkedCell$1(element));
      }
      return true;
    },
    remove$1(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._removeHashTableEntry$2(_this._strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._removeHashTableEntry$2(_this._nums, object);
      else
        return _this._remove$1(object);
    },
    _remove$1(object) {
      var hash, bucket, index, cell, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      cell = bucket.splice(index, 1)[0];
      if (0 === bucket.length)
        delete rest[hash];
      _this._unlinkCell$1(cell);
      return true;
    },
    _addHashTableEntry$2(table, element) {
      A._instanceType(this)._precomputed1._as(element);
      if (type$.nullable__LinkedHashSetCell._as(table[element]) != null)
        return false;
      table[element] = this._collection$_newLinkedCell$1(element);
      return true;
    },
    _removeHashTableEntry$2(table, element) {
      var cell;
      if (table == null)
        return false;
      cell = type$.nullable__LinkedHashSetCell._as(table[element]);
      if (cell == null)
        return false;
      this._unlinkCell$1(cell);
      delete table[element];
      return true;
    },
    _collection$_modified$0() {
      this._collection$_modifications = this._collection$_modifications + 1 & 1073741823;
    },
    _collection$_newLinkedCell$1(element) {
      var t1, _this = this,
        cell = new A._LinkedHashSetCell(A._instanceType(_this)._precomputed1._as(element));
      if (_this._collection$_first == null)
        _this._collection$_first = _this._collection$_last = cell;
      else {
        t1 = _this._collection$_last;
        t1.toString;
        cell._collection$_previous = t1;
        _this._collection$_last = t1._collection$_next = cell;
      }
      ++_this._collection$_length;
      _this._collection$_modified$0();
      return cell;
    },
    _unlinkCell$1(cell) {
      var _this = this,
        previous = cell._collection$_previous,
        next = cell._collection$_next;
      if (previous == null)
        _this._collection$_first = next;
      else
        previous._collection$_next = next;
      if (next == null)
        _this._collection$_last = previous;
      else
        next._collection$_previous = previous;
      --_this._collection$_length;
      _this._collection$_modified$0();
    },
    _computeHashCode$1(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i]._element, element))
          return i;
      return -1;
    },
    $isLinkedHashSet: 1
  };
  A._LinkedHashSetCell.prototype = {};
  A._LinkedHashSetIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        cell = _this._collection$_cell,
        t1 = _this._set;
      if (_this._collection$_modifications !== t1._collection$_modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (cell == null) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = _this.$ti._eval$1("1?")._as(cell._element);
        _this._collection$_cell = cell._collection$_next;
        return true;
      }
    },
    $isIterator: 1
  };
  A.UnmodifiableListView.prototype = {
    cast$1$0(_, $R) {
      return new A.UnmodifiableListView(J.cast$1$0$ax(this._collection$_source, $R), $R._eval$1("UnmodifiableListView<0>"));
    },
    get$length(_) {
      return J.get$length$asx(this._collection$_source);
    },
    $index(_, index) {
      return J.elementAt$1$ax(this._collection$_source, index);
    }
  };
  A.LinkedHashMap_LinkedHashMap$from_closure.prototype = {
    call$2(k, v) {
      this.result.$indexSet(0, this.K._as(k), this.V._as(v));
    },
    $signature: 223
  };
  A.ListBase.prototype = {
    get$iterator(receiver) {
      return new A.ListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("ListIterator<ListBase.E>"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    get$isEmpty(receiver) {
      return this.get$length(receiver) === 0;
    },
    get$isNotEmpty(receiver) {
      return !this.get$isEmpty(receiver);
    },
    get$first(receiver) {
      if (this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.$index(receiver, 0);
    },
    contains$1(receiver, element) {
      var i,
        $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        if (J.$eq$(this.$index(receiver, i), element))
          return true;
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    any$1(receiver, test) {
      var $length, i;
      A.instanceType(receiver)._eval$1("bool(ListBase.E)")._as(test);
      $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        if (test.call$1(this.$index(receiver, i)))
          return true;
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    join$1(receiver, separator) {
      var t1;
      if (this.get$length(receiver) === 0)
        return "";
      t1 = A.StringBuffer__writeAll("", receiver, separator);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    where$1(receiver, test) {
      var t1 = A.instanceType(receiver);
      return new A.WhereIterable(receiver, t1._eval$1("bool(ListBase.E)")._as(test), t1._eval$1("WhereIterable<ListBase.E>"));
    },
    map$1$1(receiver, f, $T) {
      var t1 = A.instanceType(receiver);
      return new A.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(ListBase.E)")._as(f), t1._eval$1("@<ListBase.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    map$1(receiver, f) {
      return this.map$1$1(receiver, f, type$.dynamic);
    },
    skip$1(receiver, count) {
      return A.SubListIterable$(receiver, count, null, A.instanceType(receiver)._eval$1("ListBase.E"));
    },
    take$1(receiver, count) {
      return A.SubListIterable$(receiver, 0, A.checkNotNullable(count, "count", type$.int), A.instanceType(receiver)._eval$1("ListBase.E"));
    },
    toList$1$growable(receiver, growable) {
      var t1, first, result, i, _this = this;
      if (_this.get$isEmpty(receiver)) {
        t1 = A.instanceType(receiver)._eval$1("ListBase.E");
        return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
      }
      first = _this.$index(receiver, 0);
      result = A.List_List$filled(_this.get$length(receiver), first, growable, A.instanceType(receiver)._eval$1("ListBase.E"));
      for (i = 1; i < _this.get$length(receiver); ++i)
        B.JSArray_methods.$indexSet(result, i, _this.$index(receiver, i));
      return result;
    },
    toList$0(receiver) {
      return this.toList$1$growable(receiver, true);
    },
    _closeGap$2(receiver, start, end) {
      var i, _this = this,
        $length = _this.get$length(receiver),
        size = end - start;
      for (i = end; i < $length; ++i)
        _this.$indexSet(receiver, i - size, _this.$index(receiver, i));
      _this.set$length(receiver, $length - size);
    },
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A.instanceType(receiver)._eval$1("@<ListBase.E>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    removeRange$2(receiver, start, end) {
      A.RangeError_checkValidRange(start, end, this.get$length(receiver));
      if (end > start)
        this._closeGap$2(receiver, start, end);
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherStart, otherList, t1, i;
      A.instanceType(receiver)._eval$1("Iterable<ListBase.E>")._as(iterable);
      A.RangeError_checkValidRange(start, end, this.get$length(receiver));
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (type$.List_dynamic._is(iterable)) {
        otherStart = skipCount;
        otherList = iterable;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
      else
        for (i = 0; i < $length; ++i)
          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
    },
    get$reversed(receiver) {
      return new A.ReversedListIterable(receiver, A.instanceType(receiver)._eval$1("ReversedListIterable<ListBase.E>"));
    },
    toString$0(receiver) {
      return A.Iterable_iterableToFullString(receiver, "[", "]");
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.MapBase.prototype = {
    forEach$1(_, action) {
      var t2, key, t3,
        t1 = A._instanceType(this);
      t1._eval$1("~(MapBase.K,MapBase.V)")._as(action);
      for (t2 = this.get$keys(), t2 = t2.get$iterator(t2), t1 = t1._eval$1("MapBase.V"); t2.moveNext$0();) {
        key = t2.get$current();
        t3 = this.$index(0, key);
        action.call$2(key, t3 == null ? t1._as(t3) : t3);
      }
    },
    get$entries() {
      return this.get$keys().map$1$1(0, new A.MapBase_entries_closure(this), A._instanceType(this)._eval$1("MapEntry<MapBase.K,MapBase.V>"));
    },
    map$2$1(_, transform, $K2, $V2) {
      var result, t2, key, t3, entry,
        t1 = A._instanceType(this);
      t1._bind$1($K2)._bind$1($V2)._eval$1("MapEntry<1,2>(MapBase.K,MapBase.V)")._as(transform);
      result = A.LinkedHashMap_LinkedHashMap$_empty($K2, $V2);
      for (t2 = this.get$keys(), t2 = t2.get$iterator(t2), t1 = t1._eval$1("MapBase.V"); t2.moveNext$0();) {
        key = t2.get$current();
        t3 = this.$index(0, key);
        entry = transform.call$2(key, t3 == null ? t1._as(t3) : t3);
        result.$indexSet(0, entry.key, entry.value);
      }
      return result;
    },
    map$1(_, transform) {
      var t1 = type$.dynamic;
      return this.map$2$1(0, transform, t1, t1);
    },
    addEntries$1(newEntries) {
      var t1, t2;
      A._instanceType(this)._eval$1("Iterable<MapEntry<MapBase.K,MapBase.V>>")._as(newEntries);
      for (t1 = newEntries.get$iterator(newEntries); t1.moveNext$0();) {
        t2 = t1.get$current();
        this.$indexSet(0, t2.key, t2.value);
      }
    },
    get$length(_) {
      var t1 = this.get$keys();
      return t1.get$length(t1);
    },
    get$isEmpty(_) {
      var t1 = this.get$keys();
      return t1.get$isEmpty(t1);
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    $isMap: 1
  };
  A.MapBase_entries_closure.prototype = {
    call$1(key) {
      var t1 = this.$this,
        t2 = A._instanceType(t1);
      t2._eval$1("MapBase.K")._as(key);
      t1 = t1.$index(0, key);
      if (t1 == null)
        t1 = t2._eval$1("MapBase.V")._as(t1);
      return new A.MapEntry(key, t1, t2._eval$1("MapEntry<MapBase.K,MapBase.V>"));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("MapEntry<MapBase.K,MapBase.V>(MapBase.K)");
    }
  };
  A.MapBase_mapToString_closure.prototype = {
    call$2(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = A.S(k);
      t1._contents = (t1._contents += t2) + ": ";
      t2 = A.S(v);
      t1._contents += t2;
    },
    $signature: 28
  };
  A.UnmodifiableMapBase.prototype = {};
  A._UnmodifiableMapMixin.prototype = {
    $indexSet(_, key, value) {
      var t1 = A._instanceType(this);
      t1._eval$1("_UnmodifiableMapMixin.K")._as(key);
      t1._eval$1("_UnmodifiableMapMixin.V")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot modify unmodifiable map"));
    }
  };
  A.MapView.prototype = {
    $index(_, key) {
      return this._map.$index(0, key);
    },
    forEach$1(_, action) {
      this._map.forEach$1(0, A._instanceType(this)._eval$1("~(1,2)")._as(action));
    },
    get$isEmpty(_) {
      return this._map.__js_helper$_length === 0;
    },
    get$length(_) {
      return this._map.__js_helper$_length;
    },
    get$keys() {
      var t1 = this._map;
      return new A.LinkedHashMapKeysIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeysIterable<1>"));
    },
    toString$0(_) {
      return A.MapBase_mapToString(this._map);
    },
    get$entries() {
      var t1 = this._map;
      return new A.LinkedHashMapEntriesIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapEntriesIterable<1,2>"));
    },
    map$2$1(_, transform, $K2, $V2) {
      return this._map.map$2$1(0, A._instanceType(this)._bind$1($K2)._bind$1($V2)._eval$1("MapEntry<1,2>(3,4)")._as(transform), $K2, $V2);
    },
    map$1(_, transform) {
      var t1 = type$.dynamic;
      return this.map$2$1(0, transform, t1, t1);
    },
    $isMap: 1
  };
  A.UnmodifiableMapView.prototype = {};
  A.ListQueue.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A._ListQueueIterator(_this, _this._tail, _this._modificationCount, _this._head, _this.$ti._eval$1("_ListQueueIterator<1>"));
    },
    get$isEmpty(_) {
      return this._head === this._tail;
    },
    get$length(_) {
      return (this._tail - this._head & this._table.length - 1) >>> 0;
    },
    get$first(_) {
      var t2, _this = this,
        t1 = _this._head;
      if (t1 === _this._tail)
        throw A.wrapException(A.IterableElementError_noElement());
      t2 = _this._table;
      if (!(t1 < t2.length))
        return A.ioore(t2, t1);
      t1 = t2[t1];
      return t1 == null ? _this.$ti._precomputed1._as(t1) : t1;
    },
    elementAt$1(_, index) {
      var t1, t2, t3, _this = this;
      A.IndexError_check(index, _this.get$length(0), _this);
      t1 = _this._table;
      t2 = t1.length;
      t3 = (_this._head + index & t2 - 1) >>> 0;
      if (!(t3 >= 0 && t3 < t2))
        return A.ioore(t1, t3);
      t3 = t1[t3];
      return t3 == null ? _this.$ti._precomputed1._as(t3) : t3;
    },
    toList$1$growable(_, growable) {
      var t1, list, i, t2, t3, _this = this,
        mask = _this._table.length - 1,
        $length = (_this._tail - _this._head & mask) >>> 0;
      if ($length === 0) {
        t1 = _this.$ti._precomputed1;
        return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
      }
      t1 = _this.$ti._precomputed1;
      list = A.List_List$filled($length, _this.get$first(0), growable, t1);
      for (i = 0; i < $length; ++i) {
        t2 = _this._table;
        t3 = (_this._head + i & mask) >>> 0;
        if (!(t3 < t2.length))
          return A.ioore(t2, t3);
        t3 = t2[t3];
        B.JSArray_methods.$indexSet(list, i, t3 == null ? t1._as(t3) : t3);
      }
      return list;
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this, "{", "}");
    },
    removeFirst$0() {
      var t2, result, _this = this,
        t1 = _this._head;
      if (t1 === _this._tail)
        throw A.wrapException(A.IterableElementError_noElement());
      ++_this._modificationCount;
      t2 = _this._table;
      if (!(t1 < t2.length))
        return A.ioore(t2, t1);
      result = t2[t1];
      if (result == null)
        result = _this.$ti._precomputed1._as(result);
      B.JSArray_methods.$indexSet(t2, t1, null);
      _this._head = (_this._head + 1 & _this._table.length - 1) >>> 0;
      return result;
    },
    _add$1(element) {
      var t2, t3, newTable, split, _this = this,
        t1 = _this.$ti;
      t1._precomputed1._as(element);
      B.JSArray_methods.$indexSet(_this._table, _this._tail, element);
      t2 = _this._tail;
      t3 = _this._table.length;
      t2 = (t2 + 1 & t3 - 1) >>> 0;
      _this._tail = t2;
      if (_this._head === t2) {
        newTable = A.List_List$filled(t3 * 2, null, false, t1._eval$1("1?"));
        t1 = _this._table;
        t2 = _this._head;
        split = t1.length - t2;
        B.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
        B.JSArray_methods.setRange$4(newTable, split, split + _this._head, _this._table, 0);
        _this._head = 0;
        _this._tail = _this._table.length;
        _this._table = newTable;
      }
      ++_this._modificationCount;
    },
    $isQueue: 1
  };
  A._ListQueueIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, t3, _this = this,
        t1 = _this._collection$_queue;
      if (_this._modificationCount !== t1._modificationCount)
        A.throwExpression(A.ConcurrentModificationError$(t1));
      t2 = _this._position;
      if (t2 === _this._collection$_end) {
        _this._collection$_current = null;
        return false;
      }
      t1 = t1._table;
      t3 = t1.length;
      if (!(t2 < t3))
        return A.ioore(t1, t2);
      _this._collection$_current = t1[t2];
      _this._position = (t2 + 1 & t3 - 1) >>> 0;
      return true;
    },
    $isIterator: 1
  };
  A.SetBase.prototype = {
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    addAll$1(_, elements) {
      var t1;
      for (t1 = J.get$iterator$ax(A._instanceType(this)._eval$1("Iterable<1>")._as(elements)); t1.moveNext$0();)
        this.add$1(0, t1.get$current());
    },
    toList$1$growable(_, growable) {
      var t1 = A._instanceType(this)._precomputed1;
      if (growable)
        t1 = A.List_List$_of(this, t1);
      else {
        t1 = A.List_List$_of(this, t1);
        t1.$flags = 1;
        t1 = t1;
      }
      return t1;
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    map$1$1(_, f, $T) {
      var t1 = A._instanceType(this);
      return new A.EfficientLengthMappedIterable(this, t1._bind$1($T)._eval$1("1(2)")._as(f), t1._eval$1("@<1>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
    },
    map$1(_, f) {
      return this.map$1$1(0, f, type$.dynamic);
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this, "{", "}");
    },
    where$1(_, f) {
      var t1 = A._instanceType(this);
      return new A.WhereIterable(this, t1._eval$1("bool(1)")._as(f), t1._eval$1("WhereIterable<1>"));
    },
    join$1(_, separator) {
      var t1, first, t2, t3,
        iterator = A._LinkedHashSetIterator$(this, this._collection$_modifications, A._instanceType(this)._precomputed1);
      if (!iterator.moveNext$0())
        return "";
      t1 = iterator._collection$_current;
      first = J.toString$0$(t1 == null ? iterator.$ti._precomputed1._as(t1) : t1);
      if (!iterator.moveNext$0())
        return first;
      t1 = iterator.$ti._precomputed1;
      if (separator.length === 0) {
        t2 = first;
        do {
          t3 = iterator._collection$_current;
          t2 += A.S(t3 == null ? t1._as(t3) : t3);
        } while (iterator.moveNext$0());
        t1 = t2;
      } else {
        t2 = first;
        do {
          t3 = iterator._collection$_current;
          t2 = t2 + separator + A.S(t3 == null ? t1._as(t3) : t3);
        } while (iterator.moveNext$0());
        t1 = t2;
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    any$1(_, test) {
      var t2, element,
        t1 = A._instanceType(this);
      t1._eval$1("bool(1)")._as(test);
      for (t1 = A._LinkedHashSetIterator$(this, this._collection$_modifications, t1._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        element = t1._collection$_current;
        if (test.call$1(element == null ? t2._as(element) : element))
          return true;
      }
      return false;
    },
    take$1(_, n) {
      return A.TakeIterable_TakeIterable(this, n, A._instanceType(this)._precomputed1);
    },
    skip$1(_, n) {
      return A.SkipIterable_SkipIterable(this, n, A._instanceType(this)._precomputed1);
    },
    get$first(_) {
      var t1,
        it = A._LinkedHashSetIterator$(this, this._collection$_modifications, A._instanceType(this)._precomputed1);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      t1 = it._collection$_current;
      return t1 == null ? it.$ti._precomputed1._as(t1) : t1;
    },
    elementAt$1(_, index) {
      var iterator, skipCount, t1, _this = this;
      A.RangeError_checkNotNegative(index, "index");
      iterator = A._LinkedHashSetIterator$(_this, _this._collection$_modifications, A._instanceType(_this)._precomputed1);
      for (skipCount = index; iterator.moveNext$0();) {
        if (skipCount === 0) {
          t1 = iterator._collection$_current;
          return t1 == null ? iterator.$ti._precomputed1._as(t1) : t1;
        }
        --skipCount;
      }
      throw A.wrapException(A.IndexError$withLength(index, index - skipCount, _this, null, "index"));
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isSet: 1
  };
  A._SetBase.prototype = {
    cast$1$0(_, $R) {
      return A.Set_castFrom(this, this.get$_newSimilarSet(), A._instanceType(this)._precomputed1, $R);
    }
  };
  A._UnmodifiableMapView_MapView__UnmodifiableMapMixin.prototype = {};
  A._JsonMap.prototype = {
    $index(_, key) {
      var result,
        t1 = this._processed;
      if (t1 == null)
        return this._convert$_data.$index(0, key);
      else if (typeof key != "string")
        return null;
      else {
        result = t1[key];
        return typeof result == "undefined" ? this._process$1(key) : result;
      }
    },
    get$length(_) {
      return this._processed == null ? this._convert$_data.__js_helper$_length : this._convert$_computeKeys$0().length;
    },
    get$isEmpty(_) {
      return this.get$length(0) === 0;
    },
    get$keys() {
      if (this._processed == null) {
        var t1 = this._convert$_data;
        return new A.LinkedHashMapKeysIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeysIterable<1>"));
      }
      return new A._JsonMapKeyIterable(this);
    },
    $indexSet(_, key, value) {
      var processed, original, _this = this;
      A._asString(key);
      if (_this._processed == null)
        _this._convert$_data.$indexSet(0, key, value);
      else if (_this.containsKey$1(key)) {
        processed = _this._processed;
        processed[key] = value;
        original = _this._original;
        if (original == null ? processed != null : original !== processed)
          original[key] = null;
      } else
        _this._upgrade$0().$indexSet(0, key, value);
    },
    containsKey$1(key) {
      if (this._processed == null)
        return this._convert$_data.containsKey$1(key);
      return Object.prototype.hasOwnProperty.call(this._original, key);
    },
    forEach$1(_, f) {
      var keys, i, key, value, _this = this;
      type$.void_Function_String_dynamic._as(f);
      if (_this._processed == null)
        return _this._convert$_data.forEach$1(0, f);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        value = _this._processed[key];
        if (typeof value == "undefined") {
          value = A._convertJsonToDartLazy(_this._original[key]);
          _this._processed[key] = value;
        }
        f.call$2(key, value);
        if (keys !== _this._convert$_data)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _convert$_computeKeys$0() {
      var keys = type$.nullable_List_dynamic._as(this._convert$_data);
      if (keys == null)
        keys = this._convert$_data = A._setArrayType(Object.keys(this._original), type$.JSArray_String);
      return keys;
    },
    _upgrade$0() {
      var result, keys, i, t1, key, _this = this;
      if (_this._processed == null)
        return _this._convert$_data;
      result = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; t1 = keys.length, i < t1; ++i) {
        key = keys[i];
        result.$indexSet(0, key, _this.$index(0, key));
      }
      if (t1 === 0)
        B.JSArray_methods.add$1(keys, "");
      else
        B.JSArray_methods.clear$0(keys);
      _this._original = _this._processed = null;
      return _this._convert$_data = result;
    },
    _process$1(key) {
      var result;
      if (!Object.prototype.hasOwnProperty.call(this._original, key))
        return null;
      result = A._convertJsonToDartLazy(this._original[key]);
      return this._processed[key] = result;
    }
  };
  A._JsonMapKeyIterable.prototype = {
    get$length(_) {
      return this._parent.get$length(0);
    },
    elementAt$1(_, index) {
      var t1 = this._parent;
      if (t1._processed == null)
        t1 = t1.get$keys().elementAt$1(0, index);
      else {
        t1 = t1._convert$_computeKeys$0();
        if (!(index >= 0 && index < t1.length))
          return A.ioore(t1, index);
        t1 = t1[index];
      }
      return t1;
    },
    get$iterator(_) {
      var t1 = this._parent;
      if (t1._processed == null) {
        t1 = t1.get$keys();
        t1 = t1.get$iterator(t1);
      } else {
        t1 = t1._convert$_computeKeys$0();
        t1 = new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
      }
      return t1;
    }
  };
  A._Utf8Decoder__decoder_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: true});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 79
  };
  A._Utf8Decoder__decoderNonfatal_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: false});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 79
  };
  A.Base64Codec.prototype = {
    get$encoder() {
      return this._encoder;
    },
    normalize$3(source, start, end) {
      var inverseAlphabet, t2, i, sliceStart, buffer, firstPadding, firstPaddingSourceIndex, paddingCount, i0, char, i1, digit1, t3, digit2, char0, value, t4, endLength, $length,
        _s64_ = string$.ABCDEF,
        _s31_ = "Invalid base64 encoding length ",
        t1 = source.length;
      end = A.RangeError_checkValidRange(start, end, t1);
      inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
      for (t2 = inverseAlphabet.length, i = start, sliceStart = i, buffer = null, firstPadding = -1, firstPaddingSourceIndex = -1, paddingCount = 0; i < end; i = i0) {
        i0 = i + 1;
        if (!(i < t1))
          return A.ioore(source, i);
        char = source.charCodeAt(i);
        if (char === 37) {
          i1 = i0 + 2;
          if (i1 <= end) {
            if (!(i0 < t1))
              return A.ioore(source, i0);
            digit1 = A.hexDigitValue(source.charCodeAt(i0));
            t3 = i0 + 1;
            if (!(t3 < t1))
              return A.ioore(source, t3);
            digit2 = A.hexDigitValue(source.charCodeAt(t3));
            char0 = digit1 * 16 + digit2 - (digit2 & 256);
            if (char0 === 37)
              char0 = -1;
            i0 = i1;
          } else
            char0 = -1;
        } else
          char0 = char;
        if (0 <= char0 && char0 <= 127) {
          if (!(char0 >= 0 && char0 < t2))
            return A.ioore(inverseAlphabet, char0);
          value = inverseAlphabet[char0];
          if (value >= 0) {
            if (!(value < 64))
              return A.ioore(_s64_, value);
            char0 = _s64_.charCodeAt(value);
            if (char0 === char)
              continue;
            char = char0;
          } else {
            if (value === -1) {
              if (firstPadding < 0) {
                t3 = buffer == null ? null : buffer._contents.length;
                if (t3 == null)
                  t3 = 0;
                firstPadding = t3 + (i - sliceStart);
                firstPaddingSourceIndex = i;
              }
              ++paddingCount;
              if (char === 61)
                continue;
            }
            char = char0;
          }
          if (value !== -2) {
            if (buffer == null) {
              buffer = new A.StringBuffer("");
              t3 = buffer;
            } else
              t3 = buffer;
            t3._contents += B.JSString_methods.substring$2(source, sliceStart, i);
            t4 = A.Primitives_stringFromCharCode(char);
            t3._contents += t4;
            sliceStart = i0;
            continue;
          }
        }
        throw A.wrapException(A.FormatException$("Invalid base64 data", source, i));
      }
      if (buffer != null) {
        t1 = B.JSString_methods.substring$2(source, sliceStart, end);
        t1 = buffer._contents += t1;
        t2 = t1.length;
        if (firstPadding >= 0)
          A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, t2);
        else {
          endLength = B.JSInt_methods.$mod(t2 - 1, 4) + 1;
          if (endLength === 1)
            throw A.wrapException(A.FormatException$(_s31_, source, end));
          for (; endLength < 4;) {
            t1 += "=";
            buffer._contents = t1;
            ++endLength;
          }
        }
        t1 = buffer._contents;
        return B.JSString_methods.replaceRange$3(source, start, end, t1.charCodeAt(0) == 0 ? t1 : t1);
      }
      $length = end - start;
      if (firstPadding >= 0)
        A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, $length);
      else {
        endLength = B.JSInt_methods.$mod($length, 4);
        if (endLength === 1)
          throw A.wrapException(A.FormatException$(_s31_, source, end));
        if (endLength > 1)
          source = B.JSString_methods.replaceRange$3(source, end, end, endLength === 2 ? "==" : "=");
      }
      return source;
    }
  };
  A.Base64Encoder.prototype = {
    convert$1(input) {
      var t1, t2;
      type$.List_int._as(input);
      t1 = J.getInterceptor$asx(input);
      if (t1.get$isEmpty(input))
        return "";
      t2 = this._urlSafe ? "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_" : string$.ABCDEF;
      t1 = new A._Base64Encoder(t2).encode$4(input, 0, t1.get$length(input), true);
      t1.toString;
      return A.String_String$fromCharCodes(t1, 0, null);
    }
  };
  A._Base64Encoder.prototype = {
    encode$4(bytes, start, end, isLast) {
      var t1, byteCount, fullChunks, bufferLength, output;
      type$.List_int._as(bytes);
      t1 = this._convert$_state;
      byteCount = (t1 & 3) + (end - start);
      fullChunks = B.JSInt_methods._tdivFast$1(byteCount, 3);
      bufferLength = fullChunks * 4;
      if (byteCount - fullChunks * 3 > 0)
        bufferLength += 4;
      output = new Uint8Array(bufferLength);
      this._convert$_state = A._Base64Encoder_encodeChunk(this._alphabet, bytes, start, end, true, output, 0, t1);
      if (bufferLength > 0)
        return output;
      return null;
    }
  };
  A.ByteConversionSink.prototype = {$isSink: 1};
  A._SimpleCallbackSink.prototype = {$isSink: 1};
  A.Codec.prototype = {};
  A.Converter.prototype = {};
  A.Encoding.prototype = {};
  A.JsonUnsupportedObjectError.prototype = {
    toString$0(_) {
      var safeString = A.Error_safeToString(this.unsupportedObject);
      return (this.cause != null ? "Converting object to an encodable object failed:" : "Converting object did not return an encodable object:") + " " + safeString;
    }
  };
  A.JsonCyclicError.prototype = {
    toString$0(_) {
      return "Cyclic error in JSON stringify";
    }
  };
  A.JsonCodec.prototype = {
    decode$2$reviver(source, reviver) {
      var t1 = A._parseJson(source, this.get$decoder()._reviver);
      return t1;
    },
    encode$2$toEncodable(value, toEncodable) {
      var t1 = this.get$encoder();
      t1 = A._JsonStringStringifier_stringify(value, t1._toEncodable, t1.indent);
      return t1;
    },
    encode$1(value) {
      return this.encode$2$toEncodable(value, null);
    },
    get$encoder() {
      return B.JsonEncoder_null_null;
    },
    get$decoder() {
      return B.JsonDecoder_null;
    }
  };
  A.JsonEncoder.prototype = {};
  A.JsonDecoder.prototype = {};
  A._JsonStringifier.prototype = {
    writeStringContent$1(s) {
      var offset, i, charCode, t1, t2, _this = this,
        $length = s.length;
      for (offset = 0, i = 0; i < $length; ++i) {
        charCode = s.charCodeAt(i);
        if (charCode > 92) {
          if (charCode >= 55296) {
            t1 = charCode & 64512;
            if (t1 === 55296) {
              t2 = i + 1;
              t2 = !(t2 < $length && (s.charCodeAt(t2) & 64512) === 56320);
            } else
              t2 = false;
            if (!t2)
              if (t1 === 56320) {
                t1 = i - 1;
                t1 = !(t1 >= 0 && (s.charCodeAt(t1) & 64512) === 55296);
              } else
                t1 = false;
            else
              t1 = true;
            if (t1) {
              if (i > offset)
                _this.writeStringSlice$3(s, offset, i);
              offset = i + 1;
              _this.writeCharCode$1(92);
              _this.writeCharCode$1(117);
              _this.writeCharCode$1(100);
              t1 = charCode >>> 8 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode >>> 4 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
            }
          }
          continue;
        }
        if (charCode < 32) {
          if (i > offset)
            _this.writeStringSlice$3(s, offset, i);
          offset = i + 1;
          _this.writeCharCode$1(92);
          switch (charCode) {
            case 8:
              _this.writeCharCode$1(98);
              break;
            case 9:
              _this.writeCharCode$1(116);
              break;
            case 10:
              _this.writeCharCode$1(110);
              break;
            case 12:
              _this.writeCharCode$1(102);
              break;
            case 13:
              _this.writeCharCode$1(114);
              break;
            default:
              _this.writeCharCode$1(117);
              _this.writeCharCode$1(48);
              _this.writeCharCode$1(48);
              t1 = charCode >>> 4 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              break;
          }
        } else if (charCode === 34 || charCode === 92) {
          if (i > offset)
            _this.writeStringSlice$3(s, offset, i);
          offset = i + 1;
          _this.writeCharCode$1(92);
          _this.writeCharCode$1(charCode);
        }
      }
      if (offset === 0)
        _this.writeString$1(s);
      else if (offset < $length)
        _this.writeStringSlice$3(s, offset, $length);
    },
    _checkCycle$1(object) {
      var t1, t2, i, t3;
      for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
        t3 = t1[i];
        if (object == null ? t3 == null : object === t3)
          throw A.wrapException(new A.JsonCyclicError(object, null));
      }
      B.JSArray_methods.add$1(t1, object);
    },
    writeObject$1(object) {
      var customJson, e, t1, exception, _this = this;
      if (_this.writeJsonValue$1(object))
        return;
      _this._checkCycle$1(object);
      try {
        customJson = _this._toEncodable.call$1(object);
        if (!_this.writeJsonValue$1(customJson)) {
          t1 = A.JsonUnsupportedObjectError$(object, null, _this.get$_partialResult());
          throw A.wrapException(t1);
        }
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.JsonUnsupportedObjectError$(object, e, _this.get$_partialResult());
        throw A.wrapException(t1);
      }
    },
    writeJsonValue$1(object) {
      var t1, success, _this = this;
      if (typeof object == "number") {
        if (!isFinite(object))
          return false;
        _this.writeNumber$1(object);
        return true;
      } else if (object === true) {
        _this.writeString$1("true");
        return true;
      } else if (object === false) {
        _this.writeString$1("false");
        return true;
      } else if (object == null) {
        _this.writeString$1("null");
        return true;
      } else if (typeof object == "string") {
        _this.writeString$1('"');
        _this.writeStringContent$1(object);
        _this.writeString$1('"');
        return true;
      } else if (type$.List_dynamic._is(object)) {
        _this._checkCycle$1(object);
        _this.writeList$1(object);
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        return true;
      } else if (type$.Map_dynamic_dynamic._is(object)) {
        _this._checkCycle$1(object);
        success = _this.writeMap$1(object);
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        return success;
      } else
        return false;
    },
    writeList$1(list) {
      var t1, i, _this = this;
      _this.writeString$1("[");
      t1 = J.getInterceptor$asx(list);
      if (t1.get$isNotEmpty(list)) {
        _this.writeObject$1(t1.$index(list, 0));
        for (i = 1; i < t1.get$length(list); ++i) {
          _this.writeString$1(",");
          _this.writeObject$1(t1.$index(list, i));
        }
      }
      _this.writeString$1("]");
    },
    writeMap$1(map) {
      var t1, keyValueList, i, separator, t2, _this = this, _box_0 = {};
      if (map.get$isEmpty(map)) {
        _this.writeString$1("{}");
        return true;
      }
      t1 = map.get$length(map) * 2;
      keyValueList = A.List_List$filled(t1, null, false, type$.nullable_Object);
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      map.forEach$1(0, new A._JsonStringifier_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      _this.writeString$1("{");
      for (separator = '"'; i < t1; i += 2, separator = ',"') {
        _this.writeString$1(separator);
        _this.writeStringContent$1(A._asString(keyValueList[i]));
        _this.writeString$1('":');
        t2 = i + 1;
        if (!(t2 < t1))
          return A.ioore(keyValueList, t2);
        _this.writeObject$1(keyValueList[t2]);
      }
      _this.writeString$1("}");
      return true;
    }
  };
  A._JsonStringifier_writeMap_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      B.JSArray_methods.$indexSet(t1, t2.i++, key);
      B.JSArray_methods.$indexSet(t1, t2.i++, value);
    },
    $signature: 28
  };
  A._JsonPrettyPrintMixin.prototype = {
    writeList$1(list) {
      var i, _this = this,
        t1 = J.getInterceptor$asx(list);
      if (t1.get$isEmpty(list))
        _this.writeString$1("[]");
      else {
        _this.writeString$1("[\n");
        _this.writeIndentation$1(++_this._JsonPrettyPrintMixin__indentLevel);
        _this.writeObject$1(t1.$index(list, 0));
        for (i = 1; i < t1.get$length(list); ++i) {
          _this.writeString$1(",\n");
          _this.writeIndentation$1(_this._JsonPrettyPrintMixin__indentLevel);
          _this.writeObject$1(t1.$index(list, i));
        }
        _this.writeString$1("\n");
        _this.writeIndentation$1(--_this._JsonPrettyPrintMixin__indentLevel);
        _this.writeString$1("]");
      }
    },
    writeMap$1(map) {
      var t1, keyValueList, i, separator, t2, _this = this, _box_0 = {};
      if (map.get$isEmpty(map)) {
        _this.writeString$1("{}");
        return true;
      }
      t1 = map.get$length(map) * 2;
      keyValueList = A.List_List$filled(t1, null, false, type$.nullable_Object);
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      map.forEach$1(0, new A._JsonPrettyPrintMixin_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      _this.writeString$1("{\n");
      ++_this._JsonPrettyPrintMixin__indentLevel;
      for (separator = ""; i < t1; i += 2, separator = ",\n") {
        _this.writeString$1(separator);
        _this.writeIndentation$1(_this._JsonPrettyPrintMixin__indentLevel);
        _this.writeString$1('"');
        _this.writeStringContent$1(A._asString(keyValueList[i]));
        _this.writeString$1('": ');
        t2 = i + 1;
        if (!(t2 < t1))
          return A.ioore(keyValueList, t2);
        _this.writeObject$1(keyValueList[t2]);
      }
      _this.writeString$1("\n");
      _this.writeIndentation$1(--_this._JsonPrettyPrintMixin__indentLevel);
      _this.writeString$1("}");
      return true;
    }
  };
  A._JsonPrettyPrintMixin_writeMap_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      B.JSArray_methods.$indexSet(t1, t2.i++, key);
      B.JSArray_methods.$indexSet(t1, t2.i++, value);
    },
    $signature: 28
  };
  A._JsonStringStringifier.prototype = {
    get$_partialResult() {
      var t1 = this._sink._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    writeNumber$1(number) {
      this._sink._contents += B.JSNumber_methods.toString$0(number);
    },
    writeString$1(string) {
      this._sink._contents += string;
    },
    writeStringSlice$3(string, start, end) {
      this._sink._contents += B.JSString_methods.substring$2(string, start, end);
    },
    writeCharCode$1(charCode) {
      var t1 = this._sink,
        t2 = A.Primitives_stringFromCharCode(charCode);
      t1._contents += t2;
    }
  };
  A._JsonStringStringifierPretty.prototype = {
    writeIndentation$1(count) {
      var t1, t2, i;
      for (t1 = this._indent, t2 = this._sink, i = 0; i < count; ++i)
        t2._contents += t1;
    }
  };
  A.Utf8Codec.prototype = {
    decode$1(codeUnits) {
      type$.List_int._as(codeUnits);
      return new A._Utf8Decoder(false)._convertGeneral$4(codeUnits, 0, null, true);
    }
  };
  A.Utf8Encoder.prototype = {
    convert$1(string) {
      var stringLength, end, t1, encoder, t2;
      A._asString(string);
      stringLength = string.length;
      end = A.RangeError_checkValidRange(0, null, stringLength);
      if (end === 0)
        return new Uint8Array(0);
      t1 = new Uint8Array(end * 3);
      encoder = new A._Utf8Encoder(t1);
      if (encoder._fillBuffer$3(string, 0, end) !== end) {
        t2 = end - 1;
        if (!(t2 >= 0 && t2 < stringLength))
          return A.ioore(string, t2);
        encoder._writeReplacementCharacter$0();
      }
      return B.NativeUint8List_methods.sublist$2(t1, 0, encoder._bufferIndex);
    }
  };
  A._Utf8Encoder.prototype = {
    _writeReplacementCharacter$0() {
      var t4, _this = this,
        t1 = _this._convert$_buffer,
        t2 = _this._bufferIndex,
        t3 = _this._bufferIndex = t2 + 1;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t4 = t1.length;
      if (!(t2 < t4))
        return A.ioore(t1, t2);
      t1[t2] = 239;
      t2 = _this._bufferIndex = t3 + 1;
      if (!(t3 < t4))
        return A.ioore(t1, t3);
      t1[t3] = 191;
      _this._bufferIndex = t2 + 1;
      if (!(t2 < t4))
        return A.ioore(t1, t2);
      t1[t2] = 189;
    },
    _writeSurrogate$2(leadingSurrogate, nextCodeUnit) {
      var rune, t1, t2, t3, t4, _this = this;
      if ((nextCodeUnit & 64512) === 56320) {
        rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;
        t1 = _this._convert$_buffer;
        t2 = _this._bufferIndex;
        t3 = _this._bufferIndex = t2 + 1;
        t1.$flags & 2 && A.throwUnsupportedOperation(t1);
        t4 = t1.length;
        if (!(t2 < t4))
          return A.ioore(t1, t2);
        t1[t2] = rune >>> 18 | 240;
        t2 = _this._bufferIndex = t3 + 1;
        if (!(t3 < t4))
          return A.ioore(t1, t3);
        t1[t3] = rune >>> 12 & 63 | 128;
        t3 = _this._bufferIndex = t2 + 1;
        if (!(t2 < t4))
          return A.ioore(t1, t2);
        t1[t2] = rune >>> 6 & 63 | 128;
        _this._bufferIndex = t3 + 1;
        if (!(t3 < t4))
          return A.ioore(t1, t3);
        t1[t3] = rune & 63 | 128;
        return true;
      } else {
        _this._writeReplacementCharacter$0();
        return false;
      }
    },
    _fillBuffer$3(str, start, end) {
      var t1, t2, t3, t4, stringIndex, codeUnit, t5, t6, _this = this;
      if (start !== end) {
        t1 = end - 1;
        if (!(t1 >= 0 && t1 < str.length))
          return A.ioore(str, t1);
        t1 = (str.charCodeAt(t1) & 64512) === 55296;
      } else
        t1 = false;
      if (t1)
        --end;
      for (t1 = _this._convert$_buffer, t2 = t1.$flags | 0, t3 = t1.length, t4 = str.length, stringIndex = start; stringIndex < end; ++stringIndex) {
        if (!(stringIndex < t4))
          return A.ioore(str, stringIndex);
        codeUnit = str.charCodeAt(stringIndex);
        if (codeUnit <= 127) {
          t5 = _this._bufferIndex;
          if (t5 >= t3)
            break;
          _this._bufferIndex = t5 + 1;
          t2 & 2 && A.throwUnsupportedOperation(t1);
          t1[t5] = codeUnit;
        } else {
          t5 = codeUnit & 64512;
          if (t5 === 55296) {
            if (_this._bufferIndex + 4 > t3)
              break;
            t5 = stringIndex + 1;
            if (!(t5 < t4))
              return A.ioore(str, t5);
            if (_this._writeSurrogate$2(codeUnit, str.charCodeAt(t5)))
              stringIndex = t5;
          } else if (t5 === 56320) {
            if (_this._bufferIndex + 3 > t3)
              break;
            _this._writeReplacementCharacter$0();
          } else if (codeUnit <= 2047) {
            t5 = _this._bufferIndex;
            t6 = t5 + 1;
            if (t6 >= t3)
              break;
            _this._bufferIndex = t6;
            t2 & 2 && A.throwUnsupportedOperation(t1);
            if (!(t5 < t3))
              return A.ioore(t1, t5);
            t1[t5] = codeUnit >>> 6 | 192;
            _this._bufferIndex = t6 + 1;
            t1[t6] = codeUnit & 63 | 128;
          } else {
            t5 = _this._bufferIndex;
            if (t5 + 2 >= t3)
              break;
            t6 = _this._bufferIndex = t5 + 1;
            t2 & 2 && A.throwUnsupportedOperation(t1);
            if (!(t5 < t3))
              return A.ioore(t1, t5);
            t1[t5] = codeUnit >>> 12 | 224;
            t5 = _this._bufferIndex = t6 + 1;
            if (!(t6 < t3))
              return A.ioore(t1, t6);
            t1[t6] = codeUnit >>> 6 & 63 | 128;
            _this._bufferIndex = t5 + 1;
            if (!(t5 < t3))
              return A.ioore(t1, t5);
            t1[t5] = codeUnit & 63 | 128;
          }
        }
      }
      return stringIndex;
    }
  };
  A.Utf8Decoder.prototype = {
    convert$3(codeUnits, start, end) {
      return new A._Utf8Decoder(this._allowMalformed)._convertGeneral$4(type$.List_int._as(codeUnits), A._asInt(start), A._asIntQ(end), true);
    },
    convert$1(codeUnits) {
      return this.convert$3(codeUnits, 0, null);
    },
    convert$2(codeUnits, start) {
      return this.convert$3(codeUnits, start, null);
    }
  };
  A._Utf8Decoder.prototype = {
    _convertGeneral$4(codeUnits, start, maybeEnd, single) {
      var end, casted, bytes, errorOffset, t1, result, message, _this = this;
      type$.List_int._as(codeUnits);
      end = A.RangeError_checkValidRange(start, maybeEnd, J.get$length$asx(codeUnits));
      if (start === end)
        return "";
      if (codeUnits instanceof Uint8Array) {
        casted = codeUnits;
        bytes = casted;
        errorOffset = 0;
      } else {
        bytes = A._Utf8Decoder__makeNativeUint8List(codeUnits, start, end);
        end -= start;
        errorOffset = start;
        start = 0;
      }
      if (end - start >= 15) {
        t1 = _this.allowMalformed;
        result = A._Utf8Decoder__convertInterceptedUint8List(t1, bytes, start, end);
        if (result != null) {
          if (!t1)
            return result;
          if (result.indexOf("\ufffd") < 0)
            return result;
        }
      }
      result = _this._decodeRecursive$4(bytes, start, end, true);
      t1 = _this._convert$_state;
      if ((t1 & 1) !== 0) {
        message = A._Utf8Decoder_errorDescription(t1);
        _this._convert$_state = 0;
        throw A.wrapException(A.FormatException$(message, codeUnits, errorOffset + _this._charOrIndex));
      }
      return result;
    },
    _decodeRecursive$4(bytes, start, end, single) {
      var mid, s1, _this = this;
      if (end - start > 1000) {
        mid = B.JSInt_methods._tdivFast$1(start + end, 2);
        s1 = _this._decodeRecursive$4(bytes, start, mid, false);
        if ((_this._convert$_state & 1) !== 0)
          return s1;
        return s1 + _this._decodeRecursive$4(bytes, mid, end, single);
      }
      return _this.decodeGeneral$4(bytes, start, end, single);
    },
    decodeGeneral$4(bytes, start, end, single) {
      var byte, t2, type, t3, i0, markEnd, i1, m, _this = this,
        _s256_ = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHJEEBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBKCCCCCCCCCCCCDCLONNNMEEEEEEEEEEE",
        _s144_ = " \x000:XECCCCCN:lDb \x000:XECCCCCNvlDb \x000:XECCCCCN:lDb AAAAA\x00\x00\x00\x00\x00AAAAA00000AAAAA:::::AAAAAGG000AAAAA00KKKAAAAAG::::AAAAA:IIIIAAAAA000\x800AAAAA\x00\x00\x00\x00 AAAAA",
        _65533 = 65533,
        state = _this._convert$_state,
        char = _this._charOrIndex,
        buffer = new A.StringBuffer(""),
        i = start + 1,
        t1 = bytes.length;
      if (!(start >= 0 && start < t1))
        return A.ioore(bytes, start);
      byte = bytes[start];
      $label0$0:
        for (t2 = _this.allowMalformed; true;) {
          for (; true; i = i0) {
            if (!(byte >= 0 && byte < 256))
              return A.ioore(_s256_, byte);
            type = _s256_.charCodeAt(byte) & 31;
            char = state <= 32 ? byte & 61694 >>> type : (byte & 63 | char << 6) >>> 0;
            t3 = state + type;
            if (!(t3 >= 0 && t3 < 144))
              return A.ioore(_s144_, t3);
            state = _s144_.charCodeAt(t3);
            if (state === 0) {
              t3 = A.Primitives_stringFromCharCode(char);
              buffer._contents += t3;
              if (i === end)
                break $label0$0;
              break;
            } else if ((state & 1) !== 0) {
              if (t2)
                switch (state) {
                  case 69:
                  case 67:
                    t3 = A.Primitives_stringFromCharCode(_65533);
                    buffer._contents += t3;
                    break;
                  case 65:
                    t3 = A.Primitives_stringFromCharCode(_65533);
                    buffer._contents += t3;
                    --i;
                    break;
                  default:
                    t3 = A.Primitives_stringFromCharCode(_65533);
                    buffer._contents = (buffer._contents += t3) + t3;
                    break;
                }
              else {
                _this._convert$_state = state;
                _this._charOrIndex = i - 1;
                return "";
              }
              state = 0;
            }
            if (i === end)
              break $label0$0;
            i0 = i + 1;
            if (!(i >= 0 && i < t1))
              return A.ioore(bytes, i);
            byte = bytes[i];
          }
          i0 = i + 1;
          if (!(i >= 0 && i < t1))
            return A.ioore(bytes, i);
          byte = bytes[i];
          if (byte < 128) {
            while (true) {
              if (!(i0 < end)) {
                markEnd = end;
                break;
              }
              i1 = i0 + 1;
              if (!(i0 >= 0 && i0 < t1))
                return A.ioore(bytes, i0);
              byte = bytes[i0];
              if (byte >= 128) {
                markEnd = i1 - 1;
                i0 = i1;
                break;
              }
              i0 = i1;
            }
            if (markEnd - i < 20)
              for (m = i; m < markEnd; ++m) {
                if (!(m < t1))
                  return A.ioore(bytes, m);
                t3 = A.Primitives_stringFromCharCode(bytes[m]);
                buffer._contents += t3;
              }
            else {
              t3 = A.String_String$fromCharCodes(bytes, i, markEnd);
              buffer._contents += t3;
            }
            if (markEnd === end)
              break $label0$0;
            i = i0;
          } else
            i = i0;
        }
      if (single && state > 32)
        if (t2) {
          t1 = A.Primitives_stringFromCharCode(_65533);
          buffer._contents += t1;
        } else {
          _this._convert$_state = 77;
          _this._charOrIndex = end;
          return "";
        }
      _this._convert$_state = state;
      _this._charOrIndex = char;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.__JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin.prototype = {};
  A._BigIntImpl.prototype = {
    $negate(_) {
      var t2, t3, _this = this,
        t1 = _this._used;
      if (t1 === 0)
        return _this;
      t2 = !_this._isNegative;
      t3 = _this._digits;
      t1 = A._BigIntImpl__normalize(t1, t3);
      return new A._BigIntImpl(t1 === 0 ? false : t2, t3, t1);
    },
    _dlShift$1(n) {
      var resultUsed, digits, resultDigits, i, t1, t2, t3,
        used = this._used;
      if (used === 0)
        return $.$get$_BigIntImpl_zero();
      resultUsed = used + n;
      digits = this._digits;
      resultDigits = new Uint16Array(resultUsed);
      for (i = used - 1, t1 = digits.length; i >= 0; --i) {
        t2 = i + n;
        if (!(i < t1))
          return A.ioore(digits, i);
        t3 = digits[i];
        if (!(t2 >= 0 && t2 < resultUsed))
          return A.ioore(resultDigits, t2);
        resultDigits[t2] = t3;
      }
      t1 = this._isNegative;
      t2 = A._BigIntImpl__normalize(resultUsed, resultDigits);
      return new A._BigIntImpl(t2 === 0 ? false : t1, resultDigits, t2);
    },
    _drShift$1(n) {
      var resultUsed, digits, resultDigits, t1, i, t2, t3, result, _this = this,
        used = _this._used;
      if (used === 0)
        return $.$get$_BigIntImpl_zero();
      resultUsed = used - n;
      if (resultUsed <= 0)
        return _this._isNegative ? $.$get$_BigIntImpl__minusOne() : $.$get$_BigIntImpl_zero();
      digits = _this._digits;
      resultDigits = new Uint16Array(resultUsed);
      for (t1 = digits.length, i = n; i < used; ++i) {
        t2 = i - n;
        if (!(i >= 0 && i < t1))
          return A.ioore(digits, i);
        t3 = digits[i];
        if (!(t2 < resultUsed))
          return A.ioore(resultDigits, t2);
        resultDigits[t2] = t3;
      }
      t2 = _this._isNegative;
      t3 = A._BigIntImpl__normalize(resultUsed, resultDigits);
      result = new A._BigIntImpl(t3 === 0 ? false : t2, resultDigits, t3);
      if (t2)
        for (i = 0; i < n; ++i) {
          if (!(i < t1))
            return A.ioore(digits, i);
          if (digits[i] !== 0)
            return result.$sub(0, $.$get$_BigIntImpl_one());
        }
      return result;
    },
    $shl(_, shiftAmount) {
      var t1, digitShift, resultUsed, resultDigits, t2, _this = this;
      if (shiftAmount < 0)
        throw A.wrapException(A.ArgumentError$("shift-amount must be posititve " + shiftAmount, null));
      t1 = _this._used;
      if (t1 === 0)
        return _this;
      digitShift = B.JSInt_methods._tdivFast$1(shiftAmount, 16);
      if (B.JSInt_methods.$mod(shiftAmount, 16) === 0)
        return _this._dlShift$1(digitShift);
      resultUsed = t1 + digitShift + 1;
      resultDigits = new Uint16Array(resultUsed);
      A._BigIntImpl__lsh(_this._digits, t1, shiftAmount, resultDigits);
      t1 = _this._isNegative;
      t2 = A._BigIntImpl__normalize(resultUsed, resultDigits);
      return new A._BigIntImpl(t2 === 0 ? false : t1, resultDigits, t2);
    },
    $shr(_, shiftAmount) {
      var t1, digitShift, bitShift, resultUsed, digits, resultDigits, t2, result, i, _this = this;
      if (shiftAmount < 0)
        throw A.wrapException(A.ArgumentError$("shift-amount must be posititve " + shiftAmount, null));
      t1 = _this._used;
      if (t1 === 0)
        return _this;
      digitShift = B.JSInt_methods._tdivFast$1(shiftAmount, 16);
      bitShift = B.JSInt_methods.$mod(shiftAmount, 16);
      if (bitShift === 0)
        return _this._drShift$1(digitShift);
      resultUsed = t1 - digitShift;
      if (resultUsed <= 0)
        return _this._isNegative ? $.$get$_BigIntImpl__minusOne() : $.$get$_BigIntImpl_zero();
      digits = _this._digits;
      resultDigits = new Uint16Array(resultUsed);
      A._BigIntImpl__rsh(digits, t1, shiftAmount, resultDigits);
      t1 = _this._isNegative;
      t2 = A._BigIntImpl__normalize(resultUsed, resultDigits);
      result = new A._BigIntImpl(t2 === 0 ? false : t1, resultDigits, t2);
      if (t1) {
        t1 = digits.length;
        if (!(digitShift >= 0 && digitShift < t1))
          return A.ioore(digits, digitShift);
        if ((digits[digitShift] & B.JSInt_methods.$shl(1, bitShift) - 1) !== 0)
          return result.$sub(0, $.$get$_BigIntImpl_one());
        for (i = 0; i < digitShift; ++i) {
          if (!(i < t1))
            return A.ioore(digits, i);
          if (digits[i] !== 0)
            return result.$sub(0, $.$get$_BigIntImpl_one());
        }
      }
      return result;
    },
    compareTo$1(_, other) {
      var t1, result;
      type$._BigIntImpl._as(other);
      t1 = this._isNegative;
      if (t1 === other._isNegative) {
        result = A._BigIntImpl__compareDigits(this._digits, this._used, other._digits, other._used);
        return t1 ? 0 - result : result;
      }
      return t1 ? -1 : 1;
    },
    _absAddSetSign$2(other, isNegative) {
      var resultUsed, resultDigits, t1, _this = this,
        used = _this._used,
        otherUsed = other._used;
      if (used < otherUsed)
        return other._absAddSetSign$2(_this, isNegative);
      if (used === 0)
        return $.$get$_BigIntImpl_zero();
      if (otherUsed === 0)
        return _this._isNegative === isNegative ? _this : _this.$negate(0);
      resultUsed = used + 1;
      resultDigits = new Uint16Array(resultUsed);
      A._BigIntImpl__absAdd(_this._digits, used, other._digits, otherUsed, resultDigits);
      t1 = A._BigIntImpl__normalize(resultUsed, resultDigits);
      return new A._BigIntImpl(t1 === 0 ? false : isNegative, resultDigits, t1);
    },
    _absSubSetSign$2(other, isNegative) {
      var otherUsed, resultDigits, t1, _this = this,
        used = _this._used;
      if (used === 0)
        return $.$get$_BigIntImpl_zero();
      otherUsed = other._used;
      if (otherUsed === 0)
        return _this._isNegative === isNegative ? _this : _this.$negate(0);
      resultDigits = new Uint16Array(used);
      A._BigIntImpl__absSub(_this._digits, used, other._digits, otherUsed, resultDigits);
      t1 = A._BigIntImpl__normalize(used, resultDigits);
      return new A._BigIntImpl(t1 === 0 ? false : isNegative, resultDigits, t1);
    },
    _absAndSetSign$2(other, isNegative) {
      var digits, otherDigits, resultDigits, t1, t2, i, t3, t4,
        resultUsed = this._used,
        resultUsed0 = other._used;
      resultUsed = resultUsed < resultUsed0 ? resultUsed : resultUsed0;
      digits = this._digits;
      otherDigits = other._digits;
      resultDigits = new Uint16Array(resultUsed);
      for (t1 = digits.length, t2 = otherDigits.length, i = 0; i < resultUsed; ++i) {
        if (!(i < t1))
          return A.ioore(digits, i);
        t3 = digits[i];
        if (!(i < t2))
          return A.ioore(otherDigits, i);
        t4 = otherDigits[i];
        if (!(i < resultUsed))
          return A.ioore(resultDigits, i);
        resultDigits[i] = t3 & t4;
      }
      t1 = A._BigIntImpl__normalize(resultUsed, resultDigits);
      return new A._BigIntImpl(t1 === 0 ? false : isNegative, resultDigits, t1);
    },
    _absAndNotSetSign$2(other, isNegative) {
      var t1, t2, i, t3, t4,
        resultUsed = this._used,
        digits = this._digits,
        otherDigits = other._digits,
        resultDigits = new Uint16Array(resultUsed),
        m = other._used;
      if (resultUsed < m)
        m = resultUsed;
      for (t1 = digits.length, t2 = otherDigits.length, i = 0; i < m; ++i) {
        if (!(i < t1))
          return A.ioore(digits, i);
        t3 = digits[i];
        if (!(i < t2))
          return A.ioore(otherDigits, i);
        t4 = otherDigits[i];
        if (!(i < resultUsed))
          return A.ioore(resultDigits, i);
        resultDigits[i] = t3 & ~t4;
      }
      for (i = m; i < resultUsed; ++i) {
        if (!(i >= 0 && i < t1))
          return A.ioore(digits, i);
        t2 = digits[i];
        if (!(i < resultUsed))
          return A.ioore(resultDigits, i);
        resultDigits[i] = t2;
      }
      t1 = A._BigIntImpl__normalize(resultUsed, resultDigits);
      return new A._BigIntImpl(t1 === 0 ? false : isNegative, resultDigits, t1);
    },
    _absOrSetSign$2(other, isNegative) {
      var m, l, t1, t2, i, t3, t4, lDigits,
        used = this._used,
        otherUsed = other._used,
        resultUsed = used > otherUsed ? used : otherUsed,
        digits = this._digits,
        otherDigits = other._digits,
        resultDigits = new Uint16Array(resultUsed);
      if (used < otherUsed) {
        m = used;
        l = other;
      } else {
        m = otherUsed;
        l = this;
      }
      for (t1 = digits.length, t2 = otherDigits.length, i = 0; i < m; ++i) {
        if (!(i < t1))
          return A.ioore(digits, i);
        t3 = digits[i];
        if (!(i < t2))
          return A.ioore(otherDigits, i);
        t4 = otherDigits[i];
        if (!(i < resultUsed))
          return A.ioore(resultDigits, i);
        resultDigits[i] = t3 | t4;
      }
      lDigits = l._digits;
      for (t1 = lDigits.length, i = m; i < resultUsed; ++i) {
        if (!(i >= 0 && i < t1))
          return A.ioore(lDigits, i);
        t2 = lDigits[i];
        if (!(i < resultUsed))
          return A.ioore(resultDigits, i);
        resultDigits[i] = t2;
      }
      t1 = A._BigIntImpl__normalize(resultUsed, resultDigits);
      return new A._BigIntImpl(t1 === 0 ? false : isNegative, resultDigits, t1);
    },
    $and(_, other) {
      var t1, n, p, _this = this;
      type$._BigIntImpl._as(other);
      if (_this._used === 0 || other._used === 0)
        return $.$get$_BigIntImpl_zero();
      t1 = _this._isNegative;
      if (t1 === other._isNegative) {
        if (t1) {
          t1 = $.$get$_BigIntImpl_one();
          return _this._absSubSetSign$2(t1, true)._absOrSetSign$2(other._absSubSetSign$2(t1, true), true)._absAddSetSign$2(t1, true);
        }
        return _this._absAndSetSign$2(other, false);
      }
      if (t1) {
        n = _this;
        p = other;
      } else {
        n = other;
        p = _this;
      }
      return p._absAndNotSetSign$2(n._absSubSetSign$2($.$get$_BigIntImpl_one(), false), false);
    },
    $or(_, other) {
      var t1, n, p, _this = this;
      if (_this._used === 0)
        return other;
      if (other._used === 0)
        return _this;
      t1 = _this._isNegative;
      if (t1 === other._isNegative) {
        if (t1) {
          t1 = $.$get$_BigIntImpl_one();
          return _this._absSubSetSign$2(t1, true)._absAndSetSign$2(other._absSubSetSign$2(t1, true), true)._absAddSetSign$2(t1, true);
        }
        return _this._absOrSetSign$2(other, false);
      }
      if (t1) {
        n = _this;
        p = other;
      } else {
        n = other;
        p = _this;
      }
      t1 = $.$get$_BigIntImpl_one();
      return n._absSubSetSign$2(t1, true)._absAndNotSetSign$2(p, true)._absAddSetSign$2(t1, true);
    },
    $not(_) {
      var _this = this;
      if (_this._used === 0)
        return $.$get$_BigIntImpl__minusOne();
      if (_this._isNegative)
        return _this._absSubSetSign$2($.$get$_BigIntImpl_one(), false);
      return _this._absAddSetSign$2($.$get$_BigIntImpl_one(), true);
    },
    $add(_, other) {
      var t2, isNegative, _this = this,
        t1 = _this._used;
      if (t1 === 0)
        return other;
      t2 = other._used;
      if (t2 === 0)
        return _this;
      isNegative = _this._isNegative;
      if (isNegative === other._isNegative)
        return _this._absAddSetSign$2(other, isNegative);
      if (A._BigIntImpl__compareDigits(_this._digits, t1, other._digits, t2) >= 0)
        return _this._absSubSetSign$2(other, isNegative);
      return other._absSubSetSign$2(_this, !isNegative);
    },
    $sub(_, other) {
      var t2, isNegative, _this = this,
        t1 = _this._used;
      if (t1 === 0)
        return other.$negate(0);
      t2 = other._used;
      if (t2 === 0)
        return _this;
      isNegative = _this._isNegative;
      if (isNegative !== other._isNegative)
        return _this._absAddSetSign$2(other, isNegative);
      if (A._BigIntImpl__compareDigits(_this._digits, t1, other._digits, t2) >= 0)
        return _this._absSubSetSign$2(other, isNegative);
      return other._absSubSetSign$2(_this, !isNegative);
    },
    $mul(_, other) {
      var resultUsed, digits, otherDigits, resultDigits, t1, i, t2,
        used = this._used,
        otherUsed = other._used;
      if (used === 0 || otherUsed === 0)
        return $.$get$_BigIntImpl_zero();
      resultUsed = used + otherUsed;
      digits = this._digits;
      otherDigits = other._digits;
      resultDigits = new Uint16Array(resultUsed);
      for (t1 = otherDigits.length, i = 0; i < otherUsed;) {
        if (!(i < t1))
          return A.ioore(otherDigits, i);
        A._BigIntImpl__mulAdd(otherDigits[i], digits, 0, resultDigits, i, used);
        ++i;
      }
      t1 = this._isNegative !== other._isNegative;
      t2 = A._BigIntImpl__normalize(resultUsed, resultDigits);
      return new A._BigIntImpl(t2 === 0 ? false : t1, resultDigits, t2);
    },
    _div$1(other) {
      var lastQuo_used, quo_digits, t1, quo;
      if (this._used < other._used)
        return $.$get$_BigIntImpl_zero();
      this._divRem$1(other);
      lastQuo_used = $._BigIntImpl____lastQuoRemUsed._readField$0() - $._BigIntImpl____lastRemUsed._readField$0();
      quo_digits = A._BigIntImpl__cloneDigits($._BigIntImpl____lastQuoRemDigits._readField$0(), $._BigIntImpl____lastRemUsed._readField$0(), $._BigIntImpl____lastQuoRemUsed._readField$0(), lastQuo_used);
      t1 = A._BigIntImpl__normalize(lastQuo_used, quo_digits);
      quo = new A._BigIntImpl(false, quo_digits, t1);
      return this._isNegative !== other._isNegative && t1 > 0 ? quo.$negate(0) : quo;
    },
    _rem$1(other) {
      var remDigits, t1, rem, _this = this;
      if (_this._used < other._used)
        return _this;
      _this._divRem$1(other);
      remDigits = A._BigIntImpl__cloneDigits($._BigIntImpl____lastQuoRemDigits._readField$0(), 0, $._BigIntImpl____lastRemUsed._readField$0(), $._BigIntImpl____lastRemUsed._readField$0());
      t1 = A._BigIntImpl__normalize($._BigIntImpl____lastRemUsed._readField$0(), remDigits);
      rem = new A._BigIntImpl(false, remDigits, t1);
      if ($._BigIntImpl____lastRem_nsh._readField$0() > 0)
        rem = rem.$shr(0, $._BigIntImpl____lastRem_nsh._readField$0());
      return _this._isNegative && rem._used > 0 ? rem.$negate(0) : rem;
    },
    _divRem$1(other) {
      var yDigits, yUsed, t1, nsh, yDigits0, yUsed0, resultDigits, resultUsed0, topDigitDivisor, j, tmpDigits, tmpUsed, resultUsed1, nyDigits, i, estimatedQuotientDigit, _this = this,
        resultUsed = _this._used;
      if (resultUsed === $._BigIntImpl__lastDividendUsed && other._used === $._BigIntImpl__lastDivisorUsed && _this._digits === $._BigIntImpl__lastDividendDigits && other._digits === $._BigIntImpl__lastDivisorDigits)
        return;
      yDigits = other._digits;
      yUsed = other._used;
      t1 = yUsed - 1;
      if (!(t1 >= 0 && t1 < yDigits.length))
        return A.ioore(yDigits, t1);
      nsh = 16 - B.JSInt_methods.get$bitLength(yDigits[t1]);
      if (nsh > 0) {
        yDigits0 = new Uint16Array(yUsed + 5);
        yUsed0 = A._BigIntImpl__lShiftDigits(yDigits, yUsed, nsh, yDigits0);
        resultDigits = new Uint16Array(resultUsed + 5);
        resultUsed0 = A._BigIntImpl__lShiftDigits(_this._digits, resultUsed, nsh, resultDigits);
      } else {
        resultDigits = A._BigIntImpl__cloneDigits(_this._digits, 0, resultUsed, resultUsed + 2);
        yUsed0 = yUsed;
        yDigits0 = yDigits;
        resultUsed0 = resultUsed;
      }
      t1 = yUsed0 - 1;
      if (!(t1 >= 0 && t1 < yDigits0.length))
        return A.ioore(yDigits0, t1);
      topDigitDivisor = yDigits0[t1];
      j = resultUsed0 - yUsed0;
      tmpDigits = new Uint16Array(resultUsed0);
      tmpUsed = A._BigIntImpl__dlShiftDigits(yDigits0, yUsed0, j, tmpDigits);
      resultUsed1 = resultUsed0 + 1;
      t1 = resultDigits.$flags | 0;
      if (A._BigIntImpl__compareDigits(resultDigits, resultUsed0, tmpDigits, tmpUsed) >= 0) {
        t1 & 2 && A.throwUnsupportedOperation(resultDigits);
        if (!(resultUsed0 >= 0 && resultUsed0 < resultDigits.length))
          return A.ioore(resultDigits, resultUsed0);
        resultDigits[resultUsed0] = 1;
        A._BigIntImpl__absSub(resultDigits, resultUsed1, tmpDigits, tmpUsed, resultDigits);
      } else {
        t1 & 2 && A.throwUnsupportedOperation(resultDigits);
        if (!(resultUsed0 >= 0 && resultUsed0 < resultDigits.length))
          return A.ioore(resultDigits, resultUsed0);
        resultDigits[resultUsed0] = 0;
      }
      t1 = yUsed0 + 2;
      nyDigits = new Uint16Array(t1);
      if (!(yUsed0 >= 0 && yUsed0 < t1))
        return A.ioore(nyDigits, yUsed0);
      nyDigits[yUsed0] = 1;
      A._BigIntImpl__absSub(nyDigits, yUsed0 + 1, yDigits0, yUsed0, nyDigits);
      i = resultUsed0 - 1;
      for (t1 = resultDigits.length; j > 0;) {
        estimatedQuotientDigit = A._BigIntImpl__estimateQuotientDigit(topDigitDivisor, resultDigits, i);
        --j;
        A._BigIntImpl__mulAdd(estimatedQuotientDigit, nyDigits, 0, resultDigits, j, yUsed0);
        if (!(i >= 0 && i < t1))
          return A.ioore(resultDigits, i);
        if (resultDigits[i] < estimatedQuotientDigit) {
          tmpUsed = A._BigIntImpl__dlShiftDigits(nyDigits, yUsed0, j, tmpDigits);
          A._BigIntImpl__absSub(resultDigits, resultUsed1, tmpDigits, tmpUsed, resultDigits);
          for (; --estimatedQuotientDigit, resultDigits[i] < estimatedQuotientDigit;)
            A._BigIntImpl__absSub(resultDigits, resultUsed1, tmpDigits, tmpUsed, resultDigits);
        }
        --i;
      }
      $._BigIntImpl__lastDividendDigits = _this._digits;
      $._BigIntImpl__lastDividendUsed = resultUsed;
      $._BigIntImpl__lastDivisorDigits = yDigits;
      $._BigIntImpl__lastDivisorUsed = yUsed;
      $._BigIntImpl____lastQuoRemDigits._value = resultDigits;
      $._BigIntImpl____lastQuoRemUsed._value = resultUsed1;
      $._BigIntImpl____lastRemUsed._value = yUsed0;
      $._BigIntImpl____lastRem_nsh._value = nsh;
    },
    get$hashCode(_) {
      var hash, t2, t3, i,
        combine = new A._BigIntImpl_hashCode_combine(),
        t1 = this._used;
      if (t1 === 0)
        return 6707;
      hash = this._isNegative ? 83585 : 429689;
      for (t2 = this._digits, t3 = t2.length, i = 0; i < t1; ++i) {
        if (!(i < t3))
          return A.ioore(t2, i);
        hash = combine.call$2(hash, t2[i]);
      }
      return new A._BigIntImpl_hashCode_finish().call$1(hash);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A._BigIntImpl && this.compareTo$1(0, other) === 0;
    },
    get$bitLength(_) {
      var t2, t3, t4, highBits, $length, i,
        t1 = this._used;
      if (t1 === 0)
        return 0;
      t2 = this._digits;
      t3 = t1 - 1;
      t4 = t2.length;
      if (!(t3 >= 0 && t3 < t4))
        return A.ioore(t2, t3);
      highBits = t2[t3];
      $length = 16 * t3 + B.JSInt_methods.get$bitLength(highBits);
      if (!this._isNegative)
        return $length;
      if ((highBits & highBits - 1) !== 0)
        return $length;
      for (i = t1 - 2; i >= 0; --i) {
        if (!(i < t4))
          return A.ioore(t2, i);
        if (t2[i] !== 0)
          return $length;
      }
      return $length - 1;
    },
    get$isEven(_) {
      var t1;
      if (this._used !== 0) {
        t1 = this._digits;
        if (0 >= t1.length)
          return A.ioore(t1, 0);
        t1 = (t1[0] & 1) === 0;
      } else
        t1 = true;
      return t1;
    },
    get$isValidInt() {
      var asInt, t1;
      if (this._used <= 3)
        return true;
      asInt = this.toInt$0(0);
      if (!isFinite(asInt))
        return false;
      t1 = this.compareTo$1(0, A._BigIntImpl__BigIntImpl$_fromInt(asInt));
      return t1 === 0;
    },
    toInt$0(_) {
      var i, t1, t2, result;
      for (i = this._used - 1, t1 = this._digits, t2 = t1.length, result = 0; i >= 0; --i) {
        if (!(i < t2))
          return A.ioore(t1, i);
        result = result * 65536 + t1[i];
      }
      return this._isNegative ? -result : result;
    },
    toString$0(_) {
      var decimalDigitChunks, rest, t2, digits4, t3, _this = this,
        t1 = _this._used;
      if (t1 === 0)
        return "0";
      if (t1 === 1) {
        if (_this._isNegative) {
          t1 = _this._digits;
          if (0 >= t1.length)
            return A.ioore(t1, 0);
          return B.JSInt_methods.toString$0(-t1[0]);
        }
        t1 = _this._digits;
        if (0 >= t1.length)
          return A.ioore(t1, 0);
        return B.JSInt_methods.toString$0(t1[0]);
      }
      decimalDigitChunks = A._setArrayType([], type$.JSArray_String);
      t1 = _this._isNegative;
      rest = t1 ? _this.$negate(0) : _this;
      for (; rest._used > 1;) {
        t2 = $.$get$_BigIntImpl__bigInt10000();
        if (t2._used === 0)
          A.throwExpression(B.C_IntegerDivisionByZeroException);
        digits4 = rest._rem$1(t2).toString$0(0);
        B.JSArray_methods.add$1(decimalDigitChunks, digits4);
        t3 = digits4.length;
        if (t3 === 1)
          B.JSArray_methods.add$1(decimalDigitChunks, "000");
        if (t3 === 2)
          B.JSArray_methods.add$1(decimalDigitChunks, "00");
        if (t3 === 3)
          B.JSArray_methods.add$1(decimalDigitChunks, "0");
        rest = rest._div$1(t2);
      }
      t2 = rest._digits;
      if (0 >= t2.length)
        return A.ioore(t2, 0);
      B.JSArray_methods.add$1(decimalDigitChunks, B.JSInt_methods.toString$0(t2[0]));
      if (t1)
        B.JSArray_methods.add$1(decimalDigitChunks, "-");
      return new A.ReversedListIterable(decimalDigitChunks, type$.ReversedListIterable_String).join$0(0);
    },
    $isBigInt: 1,
    $isComparable: 1
  };
  A._BigIntImpl_hashCode_combine.prototype = {
    call$2(hash, value) {
      hash = hash + value & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    $signature: 77
  };
  A._BigIntImpl_hashCode_finish.prototype = {
    call$1(hash) {
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    $signature: 19
  };
  A.DateTime.prototype = {
    difference$1(other) {
      return A.Duration$(this._microsecond - other._microsecond, this._core$_value - other._core$_value);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.DateTime && this._core$_value === other._core$_value && this._microsecond === other._microsecond && this.isUtc === other.isUtc;
    },
    get$hashCode(_) {
      return A.Object_hash(this._core$_value, this._microsecond, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    compareTo$1(_, other) {
      var r;
      type$.DateTime._as(other);
      r = B.JSInt_methods.compareTo$1(this._core$_value, other._core$_value);
      if (r !== 0)
        return r;
      return B.JSInt_methods.compareTo$1(this._microsecond, other._microsecond);
    },
    toUtc$0() {
      var _this = this;
      if (_this.isUtc)
        return _this;
      return new A.DateTime(_this._core$_value, _this._microsecond, true);
    },
    toString$0(_) {
      var _this = this,
        y = A.DateTime__fourDigits(A.Primitives_getYear(_this)),
        m = A.DateTime__twoDigits(A.Primitives_getMonth(_this)),
        d = A.DateTime__twoDigits(A.Primitives_getDay(_this)),
        h = A.DateTime__twoDigits(A.Primitives_getHours(_this)),
        min = A.DateTime__twoDigits(A.Primitives_getMinutes(_this)),
        sec = A.DateTime__twoDigits(A.Primitives_getSeconds(_this)),
        ms = A.DateTime__threeDigits(A.Primitives_getMilliseconds(_this)),
        t1 = _this._microsecond,
        us = t1 === 0 ? "" : A.DateTime__threeDigits(t1);
      t1 = y + "-" + m;
      if (_this.isUtc)
        return t1 + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + us + "Z";
      else
        return t1 + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + us;
    },
    $isComparable: 1
  };
  A.Duration.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Duration && this._duration === other._duration;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this._duration);
    },
    compareTo$1(_, other) {
      return B.JSInt_methods.compareTo$1(this._duration, type$.Duration._as(other)._duration);
    },
    toString$0(_) {
      var sign, minutes, minutesPadding, seconds, secondsPadding,
        microseconds = this._duration,
        hours = B.JSInt_methods._tdivFast$1(microseconds, 3600000000),
        microseconds0 = microseconds % 3600000000;
      if (microseconds < 0) {
        hours = 0 - hours;
        microseconds = 0 - microseconds0;
        sign = "-";
      } else {
        microseconds = microseconds0;
        sign = "";
      }
      minutes = B.JSInt_methods._tdivFast$1(microseconds, 60000000);
      microseconds %= 60000000;
      minutesPadding = minutes < 10 ? "0" : "";
      seconds = B.JSInt_methods._tdivFast$1(microseconds, 1000000);
      secondsPadding = seconds < 10 ? "0" : "";
      return sign + hours + ":" + minutesPadding + minutes + ":" + secondsPadding + seconds + "." + B.JSString_methods.padLeft$2(B.JSInt_methods.toString$0(microseconds % 1000000), 6, "0");
    },
    $isComparable: 1
  };
  A._Enum.prototype = {
    toString$0(_) {
      return this._enumToString$0();
    }
  };
  A.Error.prototype = {
    get$stackTrace() {
      return A.Primitives_extractStackTrace(this);
    }
  };
  A.AssertionError.prototype = {
    toString$0(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + A.Error_safeToString(t1);
      return "Assertion failed";
    }
  };
  A.TypeError.prototype = {};
  A.ArgumentError.prototype = {
    get$_errorName() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation() {
      return "";
    },
    toString$0(_) {
      var _this = this,
        $name = _this.name,
        nameString = $name == null ? "" : " (" + $name + ")",
        message = _this.message,
        messageString = message == null ? "" : ": " + A.S(message),
        prefix = _this.get$_errorName() + nameString + messageString;
      if (!_this._hasValue)
        return prefix;
      return prefix + _this.get$_errorExplanation() + ": " + A.Error_safeToString(_this.get$invalidValue());
    },
    get$invalidValue() {
      return this.invalidValue;
    }
  };
  A.RangeError.prototype = {
    get$invalidValue() {
      return A._asNumQ(this.invalidValue);
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      var explanation,
        start = this.start,
        end = this.end;
      if (start == null)
        explanation = end != null ? ": Not less than or equal to " + A.S(end) : "";
      else if (end == null)
        explanation = ": Not greater than or equal to " + A.S(start);
      else if (end > start)
        explanation = ": Not in inclusive range " + A.S(start) + ".." + A.S(end);
      else
        explanation = end < start ? ": Valid value range is empty" : ": Only valid value is " + A.S(start);
      return explanation;
    }
  };
  A.IndexError.prototype = {
    get$invalidValue() {
      return A._asInt(this.invalidValue);
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      if (A._asInt(this.invalidValue) < 0)
        return ": index must not be negative";
      var t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + t1;
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.UnsupportedError.prototype = {
    toString$0(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  A.UnimplementedError.prototype = {
    toString$0(_) {
      var message = this.message;
      return message != null ? "UnimplementedError: " + message : "UnimplementedError";
    }
  };
  A.StateError.prototype = {
    toString$0(_) {
      return "Bad state: " + this.message;
    }
  };
  A.ConcurrentModificationError.prototype = {
    toString$0(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + A.Error_safeToString(t1) + ".";
    }
  };
  A.OutOfMemoryError.prototype = {
    toString$0(_) {
      return "Out of Memory";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.StackOverflowError.prototype = {
    toString$0(_) {
      return "Stack Overflow";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A._Exception.prototype = {
    toString$0(_) {
      var message = this.message;
      if (message == null)
        return "Exception";
      return "Exception: " + message;
    }
  };
  A.FormatException.prototype = {
    toString$0(_) {
      var t1, lineEnd, lineNum, lineStart, previousCharWasCR, i, char, prefix, postfix, end, start,
        message = this.message,
        report = "" !== message ? "FormatException: " + message : "FormatException",
        offset = this.offset,
        source = this.source;
      if (typeof source == "string") {
        if (offset != null)
          t1 = offset < 0 || offset > source.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          if (source.length > 78)
            source = B.JSString_methods.substring$2(source, 0, 75) + "...";
          return report + "\n" + source;
        }
        for (lineEnd = source.length, lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          if (!(i < lineEnd))
            return A.ioore(source, i);
          char = source.charCodeAt(i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        for (i = offset; i < lineEnd; ++i) {
          if (!(i >= 0))
            return A.ioore(source, i);
          char = source.charCodeAt(i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        prefix = "";
        if (lineEnd - lineStart > 78) {
          postfix = "...";
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
            }
            prefix = "...";
          }
        } else {
          end = lineEnd;
          start = lineStart;
          postfix = "";
        }
        return report + prefix + B.JSString_methods.substring$2(source, start, end) + postfix + "\n" + B.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      } else
        return offset != null ? report + (" (at offset " + A.S(offset) + ")") : report;
    }
  };
  A.IntegerDivisionByZeroException.prototype = {
    get$stackTrace() {
      return null;
    },
    toString$0(_) {
      return "IntegerDivisionByZeroException";
    },
    $isError: 1
  };
  A.Iterable.prototype = {
    cast$1$0(_, $R) {
      return A.CastIterable_CastIterable(this, A._instanceType(this)._eval$1("Iterable.E"), $R);
    },
    map$1$1(_, toElement, $T) {
      var t1 = A._instanceType(this);
      return A.MappedIterable_MappedIterable(this, t1._bind$1($T)._eval$1("1(Iterable.E)")._as(toElement), t1._eval$1("Iterable.E"), $T);
    },
    map$1(_, toElement) {
      return this.map$1$1(0, toElement, type$.dynamic);
    },
    where$1(_, test) {
      var t1 = A._instanceType(this);
      return new A.WhereIterable(this, t1._eval$1("bool(Iterable.E)")._as(test), t1._eval$1("WhereIterable<Iterable.E>"));
    },
    forEach$1(_, action) {
      var t1;
      A._instanceType(this)._eval$1("~(Iterable.E)")._as(action);
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        action.call$1(t1.get$current());
    },
    fold$1$2(_, initialValue, combine, $T) {
      var t1, value;
      $T._as(initialValue);
      A._instanceType(this)._bind$1($T)._eval$1("1(1,Iterable.E)")._as(combine);
      for (t1 = this.get$iterator(this), value = initialValue; t1.moveNext$0();)
        value = combine.call$2(value, t1.get$current());
      return value;
    },
    join$1(_, separator) {
      var first, t1,
        iterator = this.get$iterator(this);
      if (!iterator.moveNext$0())
        return "";
      first = J.toString$0$(iterator.get$current());
      if (!iterator.moveNext$0())
        return first;
      if (separator.length === 0) {
        t1 = first;
        do
          t1 += J.toString$0$(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        t1 = first;
        do
          t1 = t1 + separator + J.toString$0$(iterator.get$current());
        while (iterator.moveNext$0());
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    any$1(_, test) {
      var t1;
      A._instanceType(this)._eval$1("bool(Iterable.E)")._as(test);
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (test.call$1(t1.get$current()))
          return true;
      return false;
    },
    toList$1$growable(_, growable) {
      var t1 = A._instanceType(this)._eval$1("Iterable.E");
      if (growable)
        t1 = A.List_List$_of(this, t1);
      else {
        t1 = A.List_List$_of(this, t1);
        t1.$flags = 1;
        t1 = t1;
      }
      return t1;
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    toSet$0(_) {
      return A.LinkedHashSet_LinkedHashSet$of(this, A._instanceType(this)._eval$1("Iterable.E"));
    },
    get$length(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$isEmpty(_) {
      return !this.get$iterator(this).moveNext$0();
    },
    get$isNotEmpty(_) {
      return !this.get$isEmpty(this);
    },
    take$1(_, count) {
      return A.TakeIterable_TakeIterable(this, count, A._instanceType(this)._eval$1("Iterable.E"));
    },
    skip$1(_, count) {
      return A.SkipIterable_SkipIterable(this, count, A._instanceType(this)._eval$1("Iterable.E"));
    },
    get$first(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current();
    },
    get$last(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      do
        result = it.get$current();
      while (it.moveNext$0());
      return result;
    },
    elementAt$1(_, index) {
      var iterator, skipCount;
      A.RangeError_checkNotNegative(index, "index");
      iterator = this.get$iterator(this);
      for (skipCount = index; iterator.moveNext$0();) {
        if (skipCount === 0)
          return iterator.get$current();
        --skipCount;
      }
      throw A.wrapException(A.IndexError$withLength(index, index - skipCount, this, null, "index"));
    },
    toString$0(_) {
      return A.Iterable_iterableToShortString(this, "(", ")");
    }
  };
  A.MapEntry.prototype = {
    toString$0(_) {
      return "MapEntry(" + A.S(this.key) + ": " + A.S(this.value) + ")";
    }
  };
  A.Null.prototype = {
    get$hashCode(_) {
      return A.Object.prototype.get$hashCode.call(this, 0);
    },
    toString$0(_) {
      return "null";
    }
  };
  A.Object.prototype = {$isObject: 1,
    $eq(_, other) {
      return this === other;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this);
    },
    toString$0(_) {
      return "Instance of '" + A.Primitives_objectTypeName(this) + "'";
    },
    get$runtimeType(_) {
      return A.getRuntimeTypeOfDartObject(this);
    },
    toString() {
      return this.toString$0(this);
    }
  };
  A._StringStackTrace.prototype = {
    toString$0(_) {
      return this._stackTrace;
    },
    $isStackTrace: 1
  };
  A.Runes.prototype = {
    get$iterator(_) {
      return new A.RuneIterator(this.string);
    }
  };
  A.RuneIterator.prototype = {
    get$current() {
      return this._currentCodePoint;
    },
    moveNext$0() {
      var codeUnit, nextPosition, nextCodeUnit, _this = this,
        t1 = _this._core$_position = _this._nextPosition,
        t2 = _this.string,
        t3 = t2.length;
      if (t1 === t3) {
        _this._currentCodePoint = -1;
        return false;
      }
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      codeUnit = t2.charCodeAt(t1);
      nextPosition = t1 + 1;
      if ((codeUnit & 64512) === 55296 && nextPosition < t3) {
        if (!(nextPosition < t3))
          return A.ioore(t2, nextPosition);
        nextCodeUnit = t2.charCodeAt(nextPosition);
        if ((nextCodeUnit & 64512) === 56320) {
          _this._nextPosition = nextPosition + 1;
          _this._currentCodePoint = A._combineSurrogatePair(codeUnit, nextCodeUnit);
          return true;
        }
      }
      _this._nextPosition = nextPosition;
      _this._currentCodePoint = codeUnit;
      return true;
    },
    $isIterator: 1
  };
  A.StringBuffer.prototype = {
    get$length(_) {
      return this._contents.length;
    },
    toString$0(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isStringSink: 1
  };
  A.Uri__parseIPv4Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv4 address, " + msg, this.host, position));
    },
    $signature: 153
  };
  A.Uri_parseIPv6Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv6 address, " + msg, this.host, position));
    },
    $signature: 154
  };
  A.Uri_parseIPv6Address_parseHex.prototype = {
    call$2(start, end) {
      var value;
      if (end - start > 4)
        this.error.call$2("an IPv6 part can only contain a maximum of 4 hex digits", start);
      value = A.int_parse(B.JSString_methods.substring$2(this.host, start, end), 16);
      if (value < 0 || value > 65535)
        this.error.call$2("each part must be in the range of `0x0..0xFFFF`", start);
      return value;
    },
    $signature: 77
  };
  A._Uri.prototype = {
    get$_text() {
      var t1, t2, t3, t4, _this = this,
        value = _this.___Uri__text_FI;
      if (value === $) {
        t1 = _this.scheme;
        t2 = t1.length !== 0 ? t1 + ":" : "";
        t3 = _this._host;
        t4 = t3 == null;
        if (!t4 || t1 === "file") {
          t1 = t2 + "//";
          t2 = _this._userInfo;
          if (t2.length !== 0)
            t1 = t1 + t2 + "@";
          if (!t4)
            t1 += t3;
          t2 = _this._port;
          if (t2 != null)
            t1 = t1 + ":" + A.S(t2);
        } else
          t1 = t2;
        t1 += _this.path;
        t2 = _this._query;
        if (t2 != null)
          t1 = t1 + "?" + t2;
        t2 = _this._fragment;
        if (t2 != null)
          t1 = t1 + "#" + t2;
        value = _this.___Uri__text_FI = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      return value;
    },
    get$pathSegments() {
      var pathToSplit, t1, result, _this = this,
        value = _this.___Uri_pathSegments_FI;
      if (value === $) {
        pathToSplit = _this.path;
        t1 = pathToSplit.length;
        if (t1 !== 0) {
          if (0 >= t1)
            return A.ioore(pathToSplit, 0);
          t1 = pathToSplit.charCodeAt(0) === 47;
        } else
          t1 = false;
        if (t1)
          pathToSplit = B.JSString_methods.substring$1(pathToSplit, 1);
        result = pathToSplit.length === 0 ? B.List_empty2 : A.List_List$unmodifiable(new A.MappedListIterable(A._setArrayType(pathToSplit.split("/"), type$.JSArray_String), type$.dynamic_Function_String._as(A.core_Uri_decodeComponent$closure()), type$.MappedListIterable_String_dynamic), type$.String);
        _this.___Uri_pathSegments_FI !== $ && A.throwLateFieldADI("pathSegments");
        value = _this.___Uri_pathSegments_FI = result;
      }
      return value;
    },
    get$hashCode(_) {
      var result, _this = this,
        value = _this.___Uri_hashCode_FI;
      if (value === $) {
        result = B.JSString_methods.get$hashCode(_this.get$_text());
        _this.___Uri_hashCode_FI !== $ && A.throwLateFieldADI("hashCode");
        _this.___Uri_hashCode_FI = result;
        value = result;
      }
      return value;
    },
    get$userInfo() {
      return this._userInfo;
    },
    get$host() {
      var host = this._host;
      if (host == null)
        return "";
      if (B.JSString_methods.startsWith$1(host, "[") && !B.JSString_methods.startsWith$2(host, "v", 1))
        return B.JSString_methods.substring$2(host, 1, host.length - 1);
      return host;
    },
    get$port() {
      var t1 = this._port;
      return t1 == null ? A._Uri__defaultPort(this.scheme) : t1;
    },
    get$query() {
      var t1 = this._query;
      return t1 == null ? "" : t1;
    },
    get$fragment() {
      var t1 = this._fragment;
      return t1 == null ? "" : t1;
    },
    isScheme$1(scheme) {
      var thisScheme = this.scheme;
      if (scheme.length !== thisScheme.length)
        return false;
      return A._caseInsensitiveCompareStart(scheme, thisScheme, 0) >= 0;
    },
    normalizePath$0() {
      var isFile, userInfo, port, _this = this,
        t1 = _this.path,
        scheme = _this.scheme,
        host = _this._host,
        t2 = host != null,
        path = A._Uri__normalizePath(t1, scheme, t2);
      if (path === t1)
        return _this;
      isFile = scheme === "file";
      userInfo = _this._userInfo;
      port = _this._port;
      if (!t2)
        host = userInfo.length !== 0 || port != null || isFile ? "" : null;
      path = A._Uri__makePath(path, 0, path.length, null, scheme, host != null);
      return A._Uri$_internal(scheme, userInfo, host, port, path, _this._query, _this._fragment);
    },
    get$hasAuthority() {
      return this._host != null;
    },
    get$hasQuery() {
      return this._query != null;
    },
    get$hasFragment() {
      return this._fragment != null;
    },
    toString$0(_) {
      return this.get$_text();
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      t1 = false;
      if (type$.Uri._is(other))
        if (_this.scheme === other.get$scheme())
          if (_this._host != null === other.get$hasAuthority())
            if (_this._userInfo === other.get$userInfo())
              if (_this.get$host() === other.get$host())
                if (_this.get$port() === other.get$port())
                  if (_this.path === other.get$path()) {
                    t2 = _this._query;
                    t3 = t2 == null;
                    if (!t3 === other.get$hasQuery()) {
                      if (t3)
                        t2 = "";
                      if (t2 === other.get$query()) {
                        t2 = _this._fragment;
                        t3 = t2 == null;
                        if (!t3 === other.get$hasFragment()) {
                          t1 = t3 ? "" : t2;
                          t1 = t1 === other.get$fragment();
                        }
                      }
                    }
                  }
      return t1;
    },
    $isUri: 1,
    get$scheme() {
      return this.scheme;
    },
    get$path() {
      return this.path;
    }
  };
  A.UriData.prototype = {
    get$uri() {
      var t2, queryIndex, end, query, _this = this, _null = null,
        t1 = _this._uriCache;
      if (t1 == null) {
        t1 = _this._separatorIndices;
        if (0 >= t1.length)
          return A.ioore(t1, 0);
        t2 = _this._text;
        t1 = t1[0] + 1;
        queryIndex = B.JSString_methods.indexOf$2(t2, "?", t1);
        end = t2.length;
        if (queryIndex >= 0) {
          query = A._Uri__normalizeOrSubstring(t2, queryIndex + 1, end, 256, false, false);
          end = queryIndex;
        } else
          query = _null;
        t1 = _this._uriCache = new A._DataUri("data", "", _null, _null, A._Uri__normalizeOrSubstring(t2, t1, end, 128, false, false), query, _null);
      }
      return t1;
    },
    toString$0(_) {
      var t2,
        t1 = this._separatorIndices;
      if (0 >= t1.length)
        return A.ioore(t1, 0);
      t2 = this._text;
      return t1[0] === -1 ? "data:" + t2 : t2;
    }
  };
  A._SimpleUri.prototype = {
    get$hasAuthority() {
      return this._hostStart > 0;
    },
    get$hasQuery() {
      return this._queryStart < this._fragmentStart;
    },
    get$hasFragment() {
      return this._fragmentStart < this._uri.length;
    },
    isScheme$1(scheme) {
      var t1 = scheme.length;
      if (t1 === 0)
        return this._schemeEnd < 0;
      if (t1 !== this._schemeEnd)
        return false;
      return A._caseInsensitiveCompareStart(scheme, this._uri, 0) >= 0;
    },
    get$scheme() {
      var t1 = this._schemeCache;
      return t1 == null ? this._schemeCache = this._computeScheme$0() : t1;
    },
    _computeScheme$0() {
      var t2, _this = this,
        t1 = _this._schemeEnd;
      if (t1 <= 0)
        return "";
      t2 = t1 === 4;
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return "http";
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return "https";
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "file"))
        return "file";
      if (t1 === 7 && B.JSString_methods.startsWith$1(_this._uri, "package"))
        return "package";
      return B.JSString_methods.substring$2(_this._uri, 0, t1);
    },
    get$userInfo() {
      var t1 = this._hostStart,
        t2 = this._schemeEnd + 3;
      return t1 > t2 ? B.JSString_methods.substring$2(this._uri, t2, t1 - 1) : "";
    },
    get$host() {
      var t1 = this._hostStart;
      return t1 > 0 ? B.JSString_methods.substring$2(this._uri, t1, this._portStart) : "";
    },
    get$port() {
      var t1, _this = this;
      if (_this._hostStart > 0 && _this._portStart + 1 < _this._pathStart)
        return A.int_parse(B.JSString_methods.substring$2(_this._uri, _this._portStart + 1, _this._pathStart), null);
      t1 = _this._schemeEnd;
      if (t1 === 4 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return 80;
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return 443;
      return 0;
    },
    get$path() {
      return B.JSString_methods.substring$2(this._uri, this._pathStart, this._queryStart);
    },
    get$query() {
      var t1 = this._queryStart,
        t2 = this._fragmentStart;
      return t1 < t2 ? B.JSString_methods.substring$2(this._uri, t1 + 1, t2) : "";
    },
    get$fragment() {
      var t1 = this._fragmentStart,
        t2 = this._uri;
      return t1 < t2.length ? B.JSString_methods.substring$1(t2, t1 + 1) : "";
    },
    get$pathSegments() {
      var parts, t2, i,
        start = this._pathStart,
        end = this._queryStart,
        t1 = this._uri;
      if (B.JSString_methods.startsWith$2(t1, "/", start))
        ++start;
      if (start === end)
        return B.List_empty2;
      parts = A._setArrayType([], type$.JSArray_String);
      for (t2 = t1.length, i = start; i < end; ++i) {
        if (!(i >= 0 && i < t2))
          return A.ioore(t1, i);
        if (t1.charCodeAt(i) === 47) {
          B.JSArray_methods.add$1(parts, B.JSString_methods.substring$2(t1, start, i));
          start = i + 1;
        }
      }
      B.JSArray_methods.add$1(parts, B.JSString_methods.substring$2(t1, start, end));
      return A.List_List$unmodifiable(parts, type$.String);
    },
    normalizePath$0() {
      return this;
    },
    get$hashCode(_) {
      var t1 = this._hashCodeCache;
      return t1 == null ? this._hashCodeCache = B.JSString_methods.get$hashCode(this._uri) : t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return type$.Uri._is(other) && this._uri === other.toString$0(0);
    },
    toString$0(_) {
      return this._uri;
    },
    $isUri: 1
  };
  A._DataUri.prototype = {};
  A.jsify__convert.prototype = {
    call$1(o) {
      var t1, convertedMap, key, convertedList;
      if (A._noJsifyRequired(o))
        return o;
      t1 = this._convertedObjects;
      if (t1.containsKey$1(o))
        return t1.$index(0, o);
      if (type$.Map_dynamic_dynamic._is(o)) {
        convertedMap = {};
        t1.$indexSet(0, o, convertedMap);
        for (t1 = o.get$keys(), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
          key = t1.get$current();
          convertedMap[key] = this.call$1(o.$index(0, key));
        }
        return convertedMap;
      } else if (type$.Iterable_dynamic._is(o)) {
        convertedList = [];
        t1.$indexSet(0, o, convertedList);
        B.JSArray_methods.addAll$1(convertedList, J.map$1$1$ax(o, this, type$.dynamic));
        return convertedList;
      } else
        return o;
    },
    $signature: 8
  };
  A.promiseToFuture_closure.prototype = {
    call$1(r) {
      return this.completer.complete$1(this.T._eval$1("0/?")._as(r));
    },
    $signature: 6
  };
  A.promiseToFuture_closure0.prototype = {
    call$1(e) {
      if (e == null)
        return this.completer.completeError$1(new A.NullRejectionException(e === undefined));
      return this.completer.completeError$1(e);
    },
    $signature: 6
  };
  A.dartify_convert.prototype = {
    call$1(o) {
      var t1, millisSinceEpoch, proto, t2, dartObject, originalKeys, dartKeys, i, jsKey, dartKey, l, $length;
      if (A._noDartifyRequired(o))
        return o;
      t1 = this._convertedObjects;
      o.toString;
      if (t1.containsKey$1(o))
        return t1.$index(0, o);
      if (o instanceof Date) {
        millisSinceEpoch = o.getTime();
        if (millisSinceEpoch < -864e13 || millisSinceEpoch > 864e13)
          A.throwExpression(A.RangeError$range(millisSinceEpoch, -864e13, 864e13, "millisecondsSinceEpoch", null));
        A.checkNotNullable(true, "isUtc", type$.bool);
        return new A.DateTime(millisSinceEpoch, 0, true);
      }
      if (o instanceof RegExp)
        throw A.wrapException(A.ArgumentError$("structured clone of RegExp", null));
      if (typeof Promise != "undefined" && o instanceof Promise)
        return A.promiseToFuture(o, type$.nullable_Object);
      proto = Object.getPrototypeOf(o);
      if (proto === Object.prototype || proto === null) {
        t2 = type$.nullable_Object;
        dartObject = A.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
        t1.$indexSet(0, o, dartObject);
        originalKeys = Object.keys(o);
        dartKeys = [];
        for (t1 = J.getInterceptor$ax(originalKeys), t2 = t1.get$iterator(originalKeys); t2.moveNext$0();)
          dartKeys.push(A.dartify(t2.get$current()));
        for (i = 0; i < t1.get$length(originalKeys); ++i) {
          jsKey = t1.$index(originalKeys, i);
          if (!(i < dartKeys.length))
            return A.ioore(dartKeys, i);
          dartKey = dartKeys[i];
          if (jsKey != null)
            dartObject.$indexSet(0, dartKey, this.call$1(o[jsKey]));
        }
        return dartObject;
      }
      if (o instanceof Array) {
        l = o;
        dartObject = [];
        t1.$indexSet(0, o, dartObject);
        $length = A._asInt(o.length);
        for (t1 = J.getInterceptor$asx(l), i = 0; i < $length; ++i)
          dartObject.push(this.call$1(t1.$index(l, i)));
        return dartObject;
      }
      return o;
    },
    $signature: 8
  };
  A.NullRejectionException.prototype = {
    toString$0(_) {
      return "Promise was rejected with a value of `" + (this.isUndefined ? "undefined" : "null") + "`.";
    }
  };
  A.Endian.prototype = {};
  A.ChainCode.prototype = {};
  A.Bip32PrivateKey.prototype = {};
  A.Bip32PublicKey.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1, $isBip32Key: 1, $isByteList: 1};
  A.InvalidBip23Ed25519DerivationKeyError.prototype = {};
  A.MaxDepthExceededBip23Ed25519DerivationKeyError.prototype = {};
  A.InvalidBip32Ed25519IndexException.prototype = {};
  A.Bip32Ed25519KeyDerivation.prototype = {
    ckdPub$2(parentKey, index) {
      var t1 = type$.Bip32PublicKey;
      return t1._as(A.Bip32Ed25519KeyDerivation__ckd(t1._as(parentKey), A._asInt(index)));
    }
  };
  A.Bip32VerifyKey.prototype = {
    get$prefixLength() {
      return 32;
    },
    get$rawKey() {
      var _this = this,
        t1 = A.SubListIterable$(_this, 0, A.checkNotNullable(_this.get$prefixLength(), "count", type$.int), A._instanceType(_this)._eval$1("ListBase.E")),
        t2 = _this.get$prefixLength();
      return new A.ByteList(A.ByteList__constructList(t1, t2, t2));
    },
    get$chainCode() {
      var t1 = this.__Bip32VerifyKey__chainCode_F;
      t1 === $ && A.throwLateFieldNI("_chainCode");
      return t1;
    },
    $isBip32Key: 1
  };
  A.Bip32SigningKey.prototype = {
    get$prefixLength() {
      return 64;
    },
    get$rawKey() {
      var _this = this,
        t1 = A.SubListIterable$(_this, 0, A.checkNotNullable(_this.get$prefixLength(), "count", type$.int), A._instanceType(_this)._eval$1("ListBase.E")),
        t2 = _this.get$prefixLength();
      return new A.ByteList(A.ByteList__constructList(t1, t2, t2));
    },
    get$chainCode() {
      var t1 = this.__Bip32SigningKey__chainCode_F;
      t1 === $ && A.throwLateFieldNI("_chainCode");
      return t1;
    },
    get$publicKey() {
      return this._ed25519_bip32$_verifyKey;
    },
    $isBip32Key: 1
  };
  A._Bip32SigningKey_ExtendedSigningKey_Bip32PrivateKey.prototype = {};
  A._Bip32VerifyKey_VerifyKey_Suffix.prototype = {};
  A._Bip32VerifyKey_VerifyKey_Suffix_Bip32PublicKey.prototype = {};
  A.InvalidSigningKeyError.prototype = {};
  A.ExtendedSigningKey.prototype = {
    get$prefixLength() {
      return 64;
    },
    sign$1(_, message) {
      var t1, t2, sm, t3, t4, t5, kb, _this = this;
      type$.List_int._as(message);
      t1 = message.length;
      t2 = t1 + 64;
      sm = new Uint8Array(t2);
      t3 = A.SubListIterable$(_this, 0, A.checkNotNullable(_this.get$prefixLength(), "count", type$.int), A._instanceType(_this)._eval$1("ListBase.E"));
      t4 = _this.get$prefixLength();
      t4 = A.ByteList__constructList(t3, t4, t4);
      t3 = type$.ByteList;
      t5 = t3._eval$1("List<ListBase.E>")._as(_this._ed25519_bip32$_verifyKey);
      t3 = A.List_List$_of(new A.ByteList(t4), t3._eval$1("ListBase.E"));
      B.JSArray_methods.addAll$1(t3, t5);
      kb = new Uint8Array(A._ensureNativeList(t3));
      if (A.TweetNaCl_crypto_sign(sm, -1, new Uint8Array(A._ensureNativeList(message)), 0, t1, kb, true) !== 0)
        throw A.wrapException(A.Exception_Exception("Signing the massage is failed"));
      return new A.SignedMessage(A.ByteList__constructList(sm, t2, t2));
    }
  };
  A._bytesToBinary_closure.prototype = {
    call$1(byte) {
      return B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(A._asInt(byte), 2), 8, "0");
    },
    $signature: 31
  };
  A.mnemonicToEntropy_closure.prototype = {
    call$1(word) {
      var index = B.JSArray_methods.indexOf$1(this.wordlist, A._asString(word));
      if (index === -1)
        throw A.wrapException(A.ArgumentError$("Invalid mnemonic", null));
      return B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(index, 2), 11, "0");
    },
    $signature: 74
  };
  A.mnemonicToEntropy_closure0.prototype = {
    call$1(match) {
      var t1 = type$.RegExpMatch._as(match)._match;
      if (0 >= t1.length)
        return A.ioore(t1, 0);
      t1 = t1[0];
      t1.toString;
      return A.int_parse(t1, 2);
    },
    $signature: 171
  };
  A.mnemonicToEntropy_closure1.prototype = {
    call$1(byte) {
      return B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(A._asInt(byte), 16), 2, "0");
    },
    $signature: 31
  };
  A.CancelationToken.prototype = {
    throwIfCanceled$0() {
      var t1 = this.__squadron_cancelation_token$_exception;
      if (t1 != null)
        throw A.wrapException(t1);
    }
  };
  A.BinaryReader.prototype = {};
  A.BinaryReaderImpl.prototype = {
    readDouble$0() {
      var value, _this = this,
        t1 = _this._binary_reader_impl$_offset;
      if (t1 + 8 > _this._bufferLimit)
        A.throwExpression(A.RangeError$("Not enough bytes available."));
      value = _this._byteData.getFloat64(t1, true);
      _this._binary_reader_impl$_offset += 8;
      return value;
    },
    readString$2(byteCount, decoder) {
      var t1, t2, t3, t4, t5, t6, _this = this,
        _s27_ = "Not enough bytes available.";
      type$.Converter_of_List_int_and_String._as(decoder);
      t1 = _this._binary_reader_impl$_offset + 4;
      if (t1 > _this._bufferLimit)
        A.throwExpression(A.RangeError$(_s27_));
      _this._binary_reader_impl$_offset = t1;
      t2 = _this._binary_reader_impl$_buffer;
      t1 -= 4;
      t3 = t2.length;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      t4 = t2[t1];
      t5 = t1 + 1;
      if (!(t5 < t3))
        return A.ioore(t2, t5);
      t5 = t2[t5];
      t6 = t1 + 2;
      if (!(t6 < t3))
        return A.ioore(t2, t6);
      t6 = t2[t6];
      t1 += 3;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      byteCount = (t4 | t5 << 8 | t6 << 16 | t2[t1] << 24) >>> 0;
      t1 = _this._binary_reader_impl$_offset + byteCount;
      if (t1 > _this._bufferLimit)
        A.throwExpression(A.RangeError$(_s27_));
      _this._binary_reader_impl$_offset = t1;
      t2 = _this._binary_reader_impl$_buffer;
      return new A._Utf8Decoder(decoder._allowMalformed)._convertGeneral$4(type$.List_int._as(J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(t2), t2.byteOffset + (t1 - byteCount), byteCount)), 0, null, true);
    },
    readString$0() {
      return this.readString$2(null, B.Utf8Decoder_false);
    },
    readByteList$0() {
      var t2, t3, t4, t5, t6, $length, byteList, _this = this,
        _s27_ = "Not enough bytes available.",
        t1 = _this._binary_reader_impl$_offset + 4;
      if (t1 > _this._bufferLimit)
        A.throwExpression(A.RangeError$(_s27_));
      _this._binary_reader_impl$_offset = t1;
      t2 = _this._binary_reader_impl$_buffer;
      t1 -= 4;
      t3 = t2.length;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      t4 = t2[t1];
      t5 = t1 + 1;
      if (!(t5 < t3))
        return A.ioore(t2, t5);
      t5 = t2[t5];
      t6 = t1 + 2;
      if (!(t6 < t3))
        return A.ioore(t2, t6);
      t6 = t2[t6];
      t1 += 3;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      $length = (t4 | t5 << 8 | t6 << 16 | t2[t1] << 24) >>> 0;
      t1 = _this._binary_reader_impl$_offset;
      t2 = t1 + $length;
      if (t2 > _this._bufferLimit)
        A.throwExpression(A.RangeError$(_s27_));
      byteList = B.NativeUint8List_methods.sublist$2(_this._binary_reader_impl$_buffer, t1, t2);
      _this._binary_reader_impl$_offset += $length;
      return byteList;
    },
    readIntList$0() {
      var t2, t3, t4, t5, t6, $length, byteData, list, i, _this = this,
        _s27_ = "Not enough bytes available.",
        t1 = _this._binary_reader_impl$_offset + 4;
      if (t1 > _this._bufferLimit)
        A.throwExpression(A.RangeError$(_s27_));
      _this._binary_reader_impl$_offset = t1;
      t2 = _this._binary_reader_impl$_buffer;
      t1 -= 4;
      t3 = t2.length;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      t4 = t2[t1];
      t5 = t1 + 1;
      if (!(t5 < t3))
        return A.ioore(t2, t5);
      t5 = t2[t5];
      t6 = t1 + 2;
      if (!(t6 < t3))
        return A.ioore(t2, t6);
      t6 = t2[t6];
      t1 += 3;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      $length = (t4 | t5 << 8 | t6 << 16 | t2[t1] << 24) >>> 0;
      if (_this._binary_reader_impl$_offset + $length * 8 > _this._bufferLimit)
        A.throwExpression(A.RangeError$(_s27_));
      byteData = _this._byteData;
      list = A.List_List$filled($length, 0, true, type$.int);
      for (i = 0; i < $length; ++i) {
        B.JSArray_methods.$indexSet(list, i, B.JSNumber_methods.toInt$0(byteData.getFloat64(_this._binary_reader_impl$_offset, true)));
        _this._binary_reader_impl$_offset += 8;
      }
      return list;
    },
    readDoubleList$0() {
      var t2, t3, t4, t5, t6, $length, byteData, list, i, _this = this,
        _s27_ = "Not enough bytes available.",
        t1 = _this._binary_reader_impl$_offset + 4;
      if (t1 > _this._bufferLimit)
        A.throwExpression(A.RangeError$(_s27_));
      _this._binary_reader_impl$_offset = t1;
      t2 = _this._binary_reader_impl$_buffer;
      t1 -= 4;
      t3 = t2.length;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      t4 = t2[t1];
      t5 = t1 + 1;
      if (!(t5 < t3))
        return A.ioore(t2, t5);
      t5 = t2[t5];
      t6 = t1 + 2;
      if (!(t6 < t3))
        return A.ioore(t2, t6);
      t6 = t2[t6];
      t1 += 3;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      $length = (t4 | t5 << 8 | t6 << 16 | t2[t1] << 24) >>> 0;
      if (_this._binary_reader_impl$_offset + $length * 8 > _this._bufferLimit)
        A.throwExpression(A.RangeError$(_s27_));
      byteData = _this._byteData;
      list = A.List_List$filled($length, 0, true, type$.double);
      for (i = 0; i < $length; ++i) {
        B.JSArray_methods.$indexSet(list, i, byteData.getFloat64(_this._binary_reader_impl$_offset, true));
        _this._binary_reader_impl$_offset += 8;
      }
      return list;
    },
    readBoolList$0() {
      var t2, t3, t4, t5, t6, $length, list, i, _this = this,
        _s27_ = "Not enough bytes available.",
        t1 = _this._binary_reader_impl$_offset + 4;
      if (t1 > _this._bufferLimit)
        A.throwExpression(A.RangeError$(_s27_));
      _this._binary_reader_impl$_offset = t1;
      t2 = _this._binary_reader_impl$_buffer;
      t1 -= 4;
      t3 = t2.length;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      t4 = t2[t1];
      t5 = t1 + 1;
      if (!(t5 < t3))
        return A.ioore(t2, t5);
      t5 = t2[t5];
      t6 = t1 + 2;
      if (!(t6 < t3))
        return A.ioore(t2, t6);
      t6 = t2[t6];
      t1 += 3;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      $length = (t4 | t5 << 8 | t6 << 16 | t2[t1] << 24) >>> 0;
      if (_this._binary_reader_impl$_offset + $length > _this._bufferLimit)
        A.throwExpression(A.RangeError$(_s27_));
      list = A.List_List$filled($length, false, true, type$.bool);
      for (t1 = _this._binary_reader_impl$_buffer, t2 = t1.length, i = 0; i < $length; ++i) {
        t3 = _this._binary_reader_impl$_offset++;
        if (!(t3 < t2))
          return A.ioore(t1, t3);
        B.JSArray_methods.$indexSet(list, i, t1[t3] > 0);
      }
      return list;
    },
    readStringList$0() {
      var t2, t3, t4, t5, t6, $length, list, i, t7, t8, t9, byteCount, _this = this,
        _s27_ = "Not enough bytes available.",
        t1 = _this._binary_reader_impl$_offset + 4;
      if (t1 > _this._bufferLimit)
        A.throwExpression(A.RangeError$(_s27_));
      _this._binary_reader_impl$_offset = t1;
      t2 = _this._binary_reader_impl$_buffer;
      t1 -= 4;
      t3 = t2.length;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      t4 = t2[t1];
      t5 = t1 + 1;
      if (!(t5 < t3))
        return A.ioore(t2, t5);
      t5 = t2[t5];
      t6 = t1 + 2;
      if (!(t6 < t3))
        return A.ioore(t2, t6);
      t6 = t2[t6];
      t1 += 3;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      $length = (t4 | t5 << 8 | t6 << 16 | t2[t1] << 24) >>> 0;
      list = A.List_List$filled($length, "", true, type$.String);
      for (t1 = _this._binary_reader_impl$_buffer, t2 = type$.List_int, t3 = _this._bufferLimit, t4 = type$.Converter_of_List_int_and_String, t5 = t1.length, i = 0; i < $length; ++i) {
        t4._as(B.Utf8Decoder_false);
        t6 = _this._binary_reader_impl$_offset + 4;
        if (t6 > t3)
          A.throwExpression(A.RangeError$(_s27_));
        _this._binary_reader_impl$_offset = t6;
        t6 -= 4;
        if (!(t6 < t5))
          return A.ioore(t1, t6);
        t7 = t1[t6];
        t8 = t6 + 1;
        if (!(t8 < t5))
          return A.ioore(t1, t8);
        t8 = t1[t8];
        t9 = t6 + 2;
        if (!(t9 < t5))
          return A.ioore(t1, t9);
        t9 = t1[t9];
        t6 += 3;
        if (!(t6 < t5))
          return A.ioore(t1, t6);
        byteCount = (t7 | t8 << 8 | t9 << 16 | t1[t6] << 24) >>> 0;
        t6 = _this._binary_reader_impl$_offset + byteCount;
        if (t6 > t3)
          A.throwExpression(A.RangeError$(_s27_));
        _this._binary_reader_impl$_offset = t6;
        B.JSArray_methods.$indexSet(list, i, new A._Utf8Decoder(B.Utf8Decoder_false._allowMalformed)._convertGeneral$4(t2._as(J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(t1), t1.byteOffset + (t6 - byteCount), byteCount)), 0, null, true));
      }
      return list;
    },
    readList$0() {
      var t2, t3, t4, t5, t6, $length, list, i, _this = this,
        t1 = _this._binary_reader_impl$_offset + 4;
      if (t1 > _this._bufferLimit)
        A.throwExpression(A.RangeError$("Not enough bytes available."));
      _this._binary_reader_impl$_offset = t1;
      t2 = _this._binary_reader_impl$_buffer;
      t1 -= 4;
      t3 = t2.length;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      t4 = t2[t1];
      t5 = t1 + 1;
      if (!(t5 < t3))
        return A.ioore(t2, t5);
      t5 = t2[t5];
      t6 = t1 + 2;
      if (!(t6 < t3))
        return A.ioore(t2, t6);
      t6 = t2[t6];
      t1 += 3;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      $length = (t4 | t5 << 8 | t6 << 16 | t2[t1] << 24) >>> 0;
      list = A.List_List$filled($length, null, true, type$.dynamic);
      for (i = 0; i < $length; ++i)
        B.JSArray_methods.$indexSet(list, i, _this.read$0());
      return list;
    },
    readBytesList$0() {
      var t2, t3, t4, t5, t6, $length, _list, index, _this = this,
        t1 = _this._binary_reader_impl$_offset + 4;
      if (t1 > _this._bufferLimit)
        A.throwExpression(A.RangeError$("Not enough bytes available."));
      _this._binary_reader_impl$_offset = t1;
      t2 = _this._binary_reader_impl$_buffer;
      t1 -= 4;
      t3 = t2.length;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      t4 = t2[t1];
      t5 = t1 + 1;
      if (!(t5 < t3))
        return A.ioore(t2, t5);
      t5 = t2[t5];
      t6 = t1 + 2;
      if (!(t6 < t3))
        return A.ioore(t2, t6);
      t6 = t2[t6];
      t1 += 3;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      $length = (t4 | t5 << 8 | t6 << 16 | t2[t1] << 24) >>> 0;
      _list = J.JSArray_JSArray$allocateGrowable($length, type$.Uint8List);
      for (index = 0; index < $length; ++index)
        _list[index] = _this.readByteList$0();
      return _list;
    },
    readMap$0() {
      var t2, t3, t4, t5, t6, $length, map, i, _this = this,
        t1 = _this._binary_reader_impl$_offset + 4;
      if (t1 > _this._bufferLimit)
        A.throwExpression(A.RangeError$("Not enough bytes available."));
      _this._binary_reader_impl$_offset = t1;
      t2 = _this._binary_reader_impl$_buffer;
      t1 -= 4;
      t3 = t2.length;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      t4 = t2[t1];
      t5 = t1 + 1;
      if (!(t5 < t3))
        return A.ioore(t2, t5);
      t5 = t2[t5];
      t6 = t1 + 2;
      if (!(t6 < t3))
        return A.ioore(t2, t6);
      t6 = t2[t6];
      t1 += 3;
      if (!(t1 < t3))
        return A.ioore(t2, t1);
      $length = (t4 | t5 << 8 | t6 << 16 | t2[t1] << 24) >>> 0;
      t1 = type$.dynamic;
      map = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (i = 0; i < $length; ++i)
        map.$indexSet(0, _this.read$0(), _this.read$0());
      return map;
    },
    read$0() {
      var t3, typeId, _this = this,
        _s27_ = "Not enough bytes available.",
        t1 = _this._binary_reader_impl$_offset,
        t2 = t1 + 1;
      if (t2 > _this._bufferLimit)
        A.throwExpression(A.RangeError$(_s27_));
      t3 = _this._binary_reader_impl$_buffer;
      _this._binary_reader_impl$_offset = t2;
      if (!(t1 < t3.length))
        return A.ioore(t3, t1);
      typeId = t3[t1];
      switch (typeId) {
        case 0:
          return null;
        case 1:
          return B.JSNumber_methods.toInt$0(_this.readDouble$0());
        case 2:
          return _this.readDouble$0();
        case 3:
          t1 = _this._binary_reader_impl$_offset;
          t2 = t1 + 1;
          if (t2 > _this._bufferLimit)
            A.throwExpression(A.RangeError$(_s27_));
          t3 = _this._binary_reader_impl$_buffer;
          _this._binary_reader_impl$_offset = t2;
          if (!(t1 < t3.length))
            return A.ioore(t3, t1);
          return t3[t1] > 0;
        case 4:
          return _this.readString$0();
        case 5:
          return _this.readByteList$0();
        case 6:
          return _this.readIntList$0();
        case 7:
          return _this.readDoubleList$0();
        case 8:
          return _this.readBoolList$0();
        case 9:
          return _this.readStringList$0();
        case 10:
          return _this.readList$0();
        case 11:
          return _this.readMap$0();
        default:
          throw A.wrapException(A.Exception_Exception("Cannot read, unknown typeId: " + A.S(typeId) + ". Did you forget to register an adapter?"));
      }
    }
  };
  A.BinaryWriterImpl.prototype = {
    _increaseBufferSize$1(count) {
      var newBuffer, _this = this,
        t1 = _this._binary_writer_impl$_offset,
        x = (t1 + count) * 2 - 1;
      x |= B.JSInt_methods._shrOtherPositive$1(x, 1);
      x |= x >>> 2;
      x |= x >>> 4;
      x |= x >>> 8;
      newBuffer = new Uint8Array(((x | x >>> 16) >>> 0) + 1);
      B.NativeUint8List_methods.setRange$3(newBuffer, 0, t1, _this._buffer);
      _this._buffer = newBuffer;
      _this._byteDataInstance = null;
    },
    writeDouble$1(value) {
      var t1, t2, _this = this;
      A.ArgumentError_checkNotNull(value, null, type$.double);
      if (_this._buffer.length - _this._binary_writer_impl$_offset < 8)
        _this._increaseBufferSize$1(8);
      t1 = _this._byteDataInstance;
      if (t1 == null)
        t1 = _this._byteDataInstance = J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(_this._buffer), 0, null);
      t2 = _this._binary_writer_impl$_offset;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1, 13);
      t1.setFloat64(t2, value, true);
      _this._binary_writer_impl$_offset += 8;
    },
    writeString$1(value) {
      var bytes, t1, t2, t3, t4, t5, _this = this;
      A.ArgumentError_checkNotNull(value, null, type$.String);
      bytes = B.C_Utf8Encoder.convert$1(value);
      t1 = bytes.length;
      A.ArgumentError_checkNotNull(t1, null, type$.int);
      if (_this._buffer.length - _this._binary_writer_impl$_offset < 4)
        _this._increaseBufferSize$1(4);
      t2 = _this._buffer;
      t3 = _this._binary_writer_impl$_offset;
      t2.$flags & 2 && A.throwUnsupportedOperation(t2);
      t4 = t2.length;
      if (!(t3 < t4))
        return A.ioore(t2, t3);
      t2[t3] = t1;
      t5 = t3 + 1;
      if (!(t5 < t4))
        return A.ioore(t2, t5);
      t2[t5] = t1 >>> 8;
      t5 = t3 + 2;
      if (!(t5 < t4))
        return A.ioore(t2, t5);
      t2[t5] = t1 >>> 16;
      t5 = t3 + 3;
      if (!(t5 < t4))
        return A.ioore(t2, t5);
      t2[t5] = t1 >>> 24;
      _this._binary_writer_impl$_offset = t3 + 4;
      t2 = type$.List_int;
      t2._as(bytes);
      A.ArgumentError_checkNotNull(bytes, null, t2);
      if (_this._buffer.length - _this._binary_writer_impl$_offset < t1)
        _this._increaseBufferSize$1(t1);
      t2 = _this._buffer;
      t3 = _this._binary_writer_impl$_offset;
      B.NativeUint8List_methods.setRange$3(t2, t3, t3 + t1, bytes);
      _this._binary_writer_impl$_offset += t1;
    },
    writeByteList$1(bytes) {
      var t1, t2, t3, t4, t5, _this = this;
      A.ArgumentError_checkNotNull(bytes, null, type$.Uint8List);
      t1 = bytes.length;
      A.ArgumentError_checkNotNull(t1, null, type$.int);
      if (_this._buffer.length - _this._binary_writer_impl$_offset < 4)
        _this._increaseBufferSize$1(4);
      t2 = _this._buffer;
      t3 = _this._binary_writer_impl$_offset;
      t2.$flags & 2 && A.throwUnsupportedOperation(t2);
      t4 = t2.length;
      if (!(t3 < t4))
        return A.ioore(t2, t3);
      t2[t3] = t1;
      t5 = t3 + 1;
      if (!(t5 < t4))
        return A.ioore(t2, t5);
      t2[t5] = t1 >>> 8;
      t5 = t3 + 2;
      if (!(t5 < t4))
        return A.ioore(t2, t5);
      t2[t5] = t1 >>> 16;
      t5 = t3 + 3;
      if (!(t5 < t4))
        return A.ioore(t2, t5);
      t2[t5] = t1 >>> 24;
      _this._binary_writer_impl$_offset = t3 + 4;
      t2 = type$.List_int;
      t2._as(bytes);
      A.ArgumentError_checkNotNull(bytes, null, t2);
      if (_this._buffer.length - _this._binary_writer_impl$_offset < t1)
        _this._increaseBufferSize$1(t1);
      t2 = _this._buffer;
      t3 = _this._binary_writer_impl$_offset;
      B.NativeUint8List_methods.setRange$3(t2, t3, t3 + t1, bytes);
      _this._binary_writer_impl$_offset += t1;
    },
    writeIntList$1(list) {
      var $length, t2, t3, t4, t5, byteData, i, _this = this,
        t1 = type$.List_int;
      t1._as(list);
      A.ArgumentError_checkNotNull(list, null, t1);
      t1 = J.getInterceptor$asx(list);
      $length = t1.get$length(list);
      A.ArgumentError_checkNotNull($length, null, type$.int);
      if (_this._buffer.length - _this._binary_writer_impl$_offset < 4)
        _this._increaseBufferSize$1(4);
      t2 = _this._buffer;
      t3 = _this._binary_writer_impl$_offset;
      t2.$flags & 2 && A.throwUnsupportedOperation(t2);
      t4 = t2.length;
      if (!(t3 < t4))
        return A.ioore(t2, t3);
      t2[t3] = $length;
      t5 = t3 + 1;
      if (!(t5 < t4))
        return A.ioore(t2, t5);
      t2[t5] = $length >>> 8;
      t5 = t3 + 2;
      if (!(t5 < t4))
        return A.ioore(t2, t5);
      t2[t5] = $length >>> 16;
      t5 = t3 + 3;
      if (!(t5 < t4))
        return A.ioore(t2, t5);
      t2[t5] = $length >>> 24;
      _this._binary_writer_impl$_offset = t3 + 4;
      t2 = $length * 8;
      if (_this._buffer.length - _this._binary_writer_impl$_offset < t2)
        _this._increaseBufferSize$1(t2);
      byteData = _this._byteDataInstance;
      if (byteData == null)
        byteData = _this._byteDataInstance = J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(_this._buffer), 0, null);
      for (t2 = byteData.$flags | 0, i = 0; i < $length; ++i) {
        t3 = _this._binary_writer_impl$_offset;
        t4 = t1.$index(list, i);
        t2 & 2 && A.throwUnsupportedOperation(byteData, 13);
        byteData.setFloat64(t3, t4, true);
        _this._binary_writer_impl$_offset += 8;
      }
    },
    writeStringList$1(list) {
      var t2, t3, t4, t5, t6, t7, strBytes, _this = this,
        t1 = type$.List_String;
      t1._as(list);
      A.ArgumentError_checkNotNull(list, null, t1);
      t1 = J.getInterceptor$asx(list);
      t2 = t1.get$length(list);
      A.ArgumentError_checkNotNull(t2, null, type$.int);
      if (_this._buffer.length - _this._binary_writer_impl$_offset < 4)
        _this._increaseBufferSize$1(4);
      t3 = _this._buffer;
      t4 = _this._binary_writer_impl$_offset;
      t3.$flags & 2 && A.throwUnsupportedOperation(t3);
      t5 = t3.length;
      if (!(t4 < t5))
        return A.ioore(t3, t4);
      t3[t4] = t2;
      t6 = t4 + 1;
      t7 = B.JSInt_methods._shrOtherPositive$1(t2, 8);
      if (!(t6 < t5))
        return A.ioore(t3, t6);
      t3[t6] = t7;
      t7 = t4 + 2;
      t6 = B.JSInt_methods._shrOtherPositive$1(t2, 16);
      if (!(t7 < t5))
        return A.ioore(t3, t7);
      t3[t7] = t6;
      t6 = t4 + 3;
      t2 = B.JSInt_methods._shrOtherPositive$1(t2, 24);
      if (!(t6 < t5))
        return A.ioore(t3, t6);
      t3[t6] = t2;
      _this._binary_writer_impl$_offset = t4 + 4;
      for (t1 = t1.get$iterator(list), t2 = type$.List_int; t1.moveNext$0();) {
        strBytes = B.C_Utf8Encoder.convert$1(t1.get$current());
        t3 = strBytes.length;
        if (_this._buffer.length - _this._binary_writer_impl$_offset < 4)
          _this._increaseBufferSize$1(4);
        t4 = _this._buffer;
        t5 = _this._binary_writer_impl$_offset;
        t4.$flags & 2 && A.throwUnsupportedOperation(t4);
        t6 = t4.length;
        if (!(t5 < t6))
          return A.ioore(t4, t5);
        t4[t5] = t3;
        t7 = t5 + 1;
        if (!(t7 < t6))
          return A.ioore(t4, t7);
        t4[t7] = t3 >>> 8;
        t7 = t5 + 2;
        if (!(t7 < t6))
          return A.ioore(t4, t7);
        t4[t7] = t3 >>> 16;
        t7 = t5 + 3;
        if (!(t7 < t6))
          return A.ioore(t4, t7);
        t4[t7] = t3 >>> 24;
        t5 += 4;
        _this._binary_writer_impl$_offset = t5;
        t2._as(strBytes);
        if (t6 - t5 < t3)
          _this._increaseBufferSize$1(t3);
        t4 = _this._buffer;
        t5 = _this._binary_writer_impl$_offset;
        B.NativeUint8List_methods.setRange$3(t4, t5, t5 + t3, strBytes);
        _this._binary_writer_impl$_offset += t3;
      }
    },
    writeBytesList$1(list) {
      var t2, t3, t4, t5, i, t6, t7, _this = this,
        t1 = type$.List_Uint8List;
      t1._as(list);
      A.ArgumentError_checkNotNull(list, null, t1);
      t1 = list.length;
      A.ArgumentError_checkNotNull(t1, null, type$.int);
      if (_this._buffer.length - _this._binary_writer_impl$_offset < 4)
        _this._increaseBufferSize$1(4);
      t2 = _this._buffer;
      t3 = _this._binary_writer_impl$_offset;
      t2.$flags & 2 && A.throwUnsupportedOperation(t2);
      t4 = t2.length;
      if (!(t3 < t4))
        return A.ioore(t2, t3);
      t2[t3] = t1;
      t5 = t3 + 1;
      if (!(t5 < t4))
        return A.ioore(t2, t5);
      t2[t5] = t1 >>> 8;
      t5 = t3 + 2;
      if (!(t5 < t4))
        return A.ioore(t2, t5);
      t2[t5] = t1 >>> 16;
      t5 = t3 + 3;
      if (!(t5 < t4))
        return A.ioore(t2, t5);
      t2[t5] = t1 >>> 24;
      _this._binary_writer_impl$_offset = t3 + 4;
      for (t1 = type$.List_int, i = 0; i < list.length; ++i) {
        t2 = list[i];
        t3 = t2.length;
        if (_this._buffer.length - _this._binary_writer_impl$_offset < 4)
          _this._increaseBufferSize$1(4);
        t4 = _this._buffer;
        t5 = _this._binary_writer_impl$_offset;
        t4.$flags & 2 && A.throwUnsupportedOperation(t4);
        t6 = t4.length;
        if (!(t5 < t6))
          return A.ioore(t4, t5);
        t4[t5] = t3;
        t7 = t5 + 1;
        if (!(t7 < t6))
          return A.ioore(t4, t7);
        t4[t7] = t3 >>> 8;
        t7 = t5 + 2;
        if (!(t7 < t6))
          return A.ioore(t4, t7);
        t4[t7] = t3 >>> 16;
        t7 = t5 + 3;
        if (!(t7 < t6))
          return A.ioore(t4, t7);
        t4[t7] = t3 >>> 24;
        _this._binary_writer_impl$_offset = t5 + 4;
        t1._as(t2);
        if (_this._buffer.length - _this._binary_writer_impl$_offset < t3)
          _this._increaseBufferSize$1(t3);
        t4 = _this._buffer;
        t5 = _this._binary_writer_impl$_offset;
        B.NativeUint8List_methods.setRange$3(t4, t5, t5 + t3, t2);
        _this._binary_writer_impl$_offset += t3;
      }
    },
    writeList$1(list) {
      var t1, t2, t3, t4, t5, i, _this = this;
      A.ArgumentError_checkNotNull(list, null, type$.List_dynamic);
      t1 = list.length;
      A.ArgumentError_checkNotNull(t1, null, type$.int);
      if (_this._buffer.length - _this._binary_writer_impl$_offset < 4)
        _this._increaseBufferSize$1(4);
      t2 = _this._buffer;
      t3 = _this._binary_writer_impl$_offset;
      t2.$flags & 2 && A.throwUnsupportedOperation(t2);
      t4 = t2.length;
      if (!(t3 < t4))
        return A.ioore(t2, t3);
      t2[t3] = t1;
      t5 = t3 + 1;
      if (!(t5 < t4))
        return A.ioore(t2, t5);
      t2[t5] = t1 >>> 8;
      t5 = t3 + 2;
      if (!(t5 < t4))
        return A.ioore(t2, t5);
      t2[t5] = t1 >>> 16;
      t5 = t3 + 3;
      if (!(t5 < t4))
        return A.ioore(t2, t5);
      t2[t5] = t1 >>> 24;
      _this._binary_writer_impl$_offset = t3 + 4;
      for (t2 = type$.dynamic, i = 0; i < t1; ++i)
        _this.write$1$1(list[i], t2);
    },
    write$1$1(value, $T) {
      var t1, t2, _this = this, _null = null;
      $T._as(value);
      if (value == null) {
        A.ArgumentError_checkNotNull(0, _null, type$.int);
        if (_this._buffer.length - _this._binary_writer_impl$_offset < 1)
          _this._increaseBufferSize$1(1);
        t1 = _this._buffer;
        t2 = _this._binary_writer_impl$_offset++;
        t1.$flags & 2 && A.throwUnsupportedOperation(t1);
        if (!(t2 < t1.length))
          return A.ioore(t1, t2);
        t1[t2] = 0;
      } else if (A._isInt(value)) {
        A.ArgumentError_checkNotNull(1, _null, type$.int);
        if (_this._buffer.length - _this._binary_writer_impl$_offset < 1)
          _this._increaseBufferSize$1(1);
        t1 = _this._buffer;
        t2 = _this._binary_writer_impl$_offset++;
        t1.$flags & 2 && A.throwUnsupportedOperation(t1);
        if (!(t2 < t1.length))
          return A.ioore(t1, t2);
        t1[t2] = 1;
        _this.writeDouble$1(value);
      } else if (typeof value == "number") {
        A.ArgumentError_checkNotNull(2, _null, type$.int);
        if (_this._buffer.length - _this._binary_writer_impl$_offset < 1)
          _this._increaseBufferSize$1(1);
        t1 = _this._buffer;
        t2 = _this._binary_writer_impl$_offset++;
        t1.$flags & 2 && A.throwUnsupportedOperation(t1);
        if (!(t2 < t1.length))
          return A.ioore(t1, t2);
        t1[t2] = 2;
        _this.writeDouble$1(value);
      } else if (typeof value == "string") {
        A.ArgumentError_checkNotNull(4, _null, type$.int);
        if (_this._buffer.length - _this._binary_writer_impl$_offset < 1)
          _this._increaseBufferSize$1(1);
        t1 = _this._buffer;
        t2 = _this._binary_writer_impl$_offset++;
        t1.$flags & 2 && A.throwUnsupportedOperation(t1);
        if (!(t2 < t1.length))
          return A.ioore(t1, t2);
        t1[t2] = 4;
        _this.writeString$1(value);
      } else if (type$.List_dynamic._is(value))
        if (B.NativeUint8List_methods.contains$1(value, _null)) {
          A.ArgumentError_checkNotNull(10, _null, type$.int);
          if (_this._buffer.length - _this._binary_writer_impl$_offset < 1)
            _this._increaseBufferSize$1(1);
          t1 = _this._buffer;
          t2 = _this._binary_writer_impl$_offset++;
          t1.$flags & 2 && A.throwUnsupportedOperation(t1);
          if (!(t2 < t1.length))
            return A.ioore(t1, t2);
          t1[t2] = 10;
          _this.writeList$1(value);
        } else {
          A.ArgumentError_checkNotNull(5, _null, type$.int);
          if (_this._buffer.length - _this._binary_writer_impl$_offset < 1)
            _this._increaseBufferSize$1(1);
          t1 = _this._buffer;
          t2 = _this._binary_writer_impl$_offset++;
          t1.$flags & 2 && A.throwUnsupportedOperation(t1);
          if (!(t2 < t1.length))
            return A.ioore(t1, t2);
          t1[t2] = 5;
          _this.writeByteList$1(value);
        }
      else {
        t1 = A.Exception_Exception("Cannot write, unknown type: " + J.get$runtimeType$(value).toString$0(0) + ". Did you forget to register an adapter?");
        throw A.wrapException(t1);
      }
    }
  };
  A.CardanoTransactionInput.prototype = {
    serialize$1$forJson(forJson) {
      var t1 = type$.HexCodec._eval$1("Codec.T")._as(this.transactionHash);
      t1 = new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(t1)));
      t1 = A.List_List$_of(A._setArrayType([new A._CborBytesImpl(t1, B.List_empty), new A._CborSmallIntImpl(this.index, B.List_empty)], type$.JSArray_CborValue), type$.CborValue);
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, t1);
    }
  };
  A._$CardanoTransactionInput.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._CardanoTransactionInput) {
            t2 = other.transactionHash === _this.transactionHash;
            if (t2 || t2) {
              t1 = other.index === _this.index;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.transactionHash, this.index, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return string$.Cardan + this.transactionHash + ", index: " + this.index + ")";
    }
  };
  A._CardanoTransactionInput.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._CardanoTransactionInput) {
            t2 = other.transactionHash === _this.transactionHash;
            if (t2 || t2) {
              t1 = other.index === _this.index;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.transactionHash, this.index, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return string$.Cardan + this.transactionHash + ", index: " + this.index + ")";
    }
  };
  A._CardanoTransactionInput_Object__$CardanoTransactionInput.prototype = {};
  A.CardanoTransactionInputs.prototype = {
    serialize$1$forJson(forJson) {
      var t1 = type$.CborValue,
        t2 = A.List_List$_of(J.map$1$1$ax(this.get$data(), new A.CardanoTransactionInputs_serialize_closure(false), t1), t1),
        t3 = A._setArrayType([], type$.JSArray_CborValue);
      B.JSArray_methods.addAll$1(t2, t3);
      t3 = this.get$cborTags();
      t1 = A.List_List$_of(t2, t1);
      return new A._CborListImpl(t3, B.CborLengthType_0, t1);
    }
  };
  A.CardanoTransactionInputs_CardanoTransactionInputs$deserialize_closure.prototype = {
    call$1(e) {
      return A.CardanoTransactionInput_CardanoTransactionInput$deserialize(type$.CborList._as(type$.CborValue._as(e)));
    },
    $signature: 173
  };
  A.CardanoTransactionInputs_serialize_closure.prototype = {
    call$1(input) {
      return type$.CardanoTransactionInput._as(input).serialize$1$forJson(this.forJson);
    },
    $signature: 211
  };
  A._$CardanoTransactionInputs.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this) && other instanceof A._CardanoTransactionInputs && B.DeepCollectionEquality_false.equals$2(other.get$data(), _this.get$data()) && B.DeepCollectionEquality_false.equals$2(other.get$cborTags(), _this.get$cborTags());
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.get$data()), B.DeepCollectionEquality_false.hash$1(this.get$cborTags()), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "CardanoTransactionInputs(data: " + A.S(this.get$data()) + ", cborTags: " + A.S(this.get$cborTags()) + ")";
    }
  };
  A._CardanoTransactionInputs.prototype = {
    get$data() {
      var t1 = this._transaction_inputs$_data;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_CardanoTransactionInput);
    },
    get$cborTags() {
      var t1 = this._transaction_inputs$_cborTags;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_int);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this) && other instanceof A._CardanoTransactionInputs && B.DeepCollectionEquality_false.equals$2(other._transaction_inputs$_data, _this._transaction_inputs$_data) && B.DeepCollectionEquality_false.equals$2(other._transaction_inputs$_cborTags, _this._transaction_inputs$_cborTags);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this._transaction_inputs$_data), B.DeepCollectionEquality_false.hash$1(this._transaction_inputs$_cborTags), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "CardanoTransactionInputs(data: " + A.S(this.get$data()) + ", cborTags: " + A.S(this.get$cborTags()) + ")";
    }
  };
  A._CardanoTransactionInputs_Object__$CardanoTransactionInputs.prototype = {};
  A.RequiredSigners.prototype = {
    serialize$1$forJson(forJson) {
      var t1 = type$.CborValue;
      t1 = A.List_List$_of(J.map$1$1$ax(this.get$signersBytes(), new A.RequiredSigners_serialize_closure(false), t1), t1);
      return new A._CborListImpl(this.get$cborTags(), B.CborLengthType_0, t1);
    }
  };
  A.RequiredSigners_serialize_closure.prototype = {
    call$1(e) {
      return A.IntListExtensions_serializeCbor(type$.Uint8List._as(e), this.forJson, B.List_empty);
    },
    $signature: 73
  };
  A.RequiredSigners_deserialize_closure.prototype = {
    call$1(signer) {
      type$.CborValue._as(signer);
      if (!type$.CborBytes._is(signer))
        throw A.wrapException(A.CborDeserializationException$("RequiredSigners - signersBytes deserialization failed. Expected a cbor bytes but got " + A.getRuntimeTypeOfDartObject(signer).toString$0(0)));
      return new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(signer.get$bytes(), false)));
    },
    $signature: 20
  };
  A._$RequiredSigners.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this) && other instanceof A._RequiredSigner && B.DeepCollectionEquality_false.equals$2(other.get$signersBytes(), _this.get$signersBytes()) && B.DeepCollectionEquality_false.equals$2(other.get$cborTags(), _this.get$cborTags());
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.get$signersBytes()), B.DeepCollectionEquality_false.hash$1(this.get$cborTags()), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "RequiredSigners(signersBytes: " + A.S(this.get$signersBytes()) + ", cborTags: " + A.S(this.get$cborTags()) + ")";
    }
  };
  A._RequiredSigner.prototype = {
    get$signersBytes() {
      var t1 = this._signersBytes;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_Uint8List);
    },
    get$cborTags() {
      var t1 = this._cborTags;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_int);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this) && other instanceof A._RequiredSigner && B.DeepCollectionEquality_false.equals$2(other._signersBytes, _this._signersBytes) && B.DeepCollectionEquality_false.equals$2(other._cborTags, _this._cborTags);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this._signersBytes), B.DeepCollectionEquality_false.hash$1(this._cborTags), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "RequiredSigners(signersBytes: " + A.S(this.get$signersBytes()) + ", cborTags: " + A.S(this.get$cborTags()) + ")";
    }
  };
  A._RequiredSigners_Object__$RequiredSigners.prototype = {};
  A.GovActionId.prototype = {
    get$bech32() {
      var value = this.__GovActionId_bech32_FI;
      return value === $ ? this.__GovActionId_bech32_FI = new A.Lazy(new A.GovActionId_bech32_closure(this), type$.Lazy_String) : value;
    },
    serialize$1$forJson(forJson) {
      var t1 = type$.HexCodec._eval$1("Codec.T")._as(this.transactionId);
      t1 = new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(t1)));
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, A._setArrayType([new A._CborBytesImpl(t1, B.List_empty), new A._CborSmallIntImpl(this.govActionIndex, B.List_empty)], type$.JSArray_CborValue));
    }
  };
  A.GovActionId_bech32_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1 = type$.HexCodec._eval$1("Codec.T")._as(t1.transactionId + B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(t1.govActionIndex, 16), 2, "0"));
      return new A.Bech32Encoder("gov_action").encode$1(B.NativeUint8List_methods.toList$1$growable(new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(t1))), false));
    },
    $signature: 1
  };
  A._$GovActionId.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._GovActionId) {
            t2 = other.get$bech32() === _this.get$bech32();
            if (t2 || t2) {
              t2 = other.transactionId === _this.transactionId;
              if (t2 || t2) {
                t1 = other.govActionIndex === _this.govActionIndex;
                t1 = t1 || t1;
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.get$bech32(), _this.transactionId, _this.govActionIndex, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "GovActionId(bech32: " + this.get$bech32().toString$0(0) + ", transactionId: " + this.transactionId + ", govActionIndex: " + this.govActionIndex + ")";
    }
  };
  A._GovActionId.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._GovActionId) {
            t2 = other.transactionId === _this.transactionId;
            if (t2 || t2) {
              t1 = other.govActionIndex === _this.govActionIndex;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.transactionId, this.govActionIndex, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "GovActionId(transactionId: " + this.transactionId + ", govActionIndex: " + this.govActionIndex + ")";
    }
  };
  A._GovActionId_Object__$GovActionId.prototype = {};
  A.Vote.prototype = {
    _enumToString$0() {
      return "Vote." + this._core$_name;
    },
    serialize$1$forJson(forJson) {
      return new A._CborSmallIntImpl(this.serializeIntValue, B.List_empty);
    }
  };
  A.Vote_fromSerializeIntValue_closure.prototype = {
    call$1(element) {
      return type$.Vote._as(element).serializeIntValue === this.value;
    },
    $signature: 232
  };
  A.Vote_fromSerializeIntValue_closure0.prototype = {
    call$0() {
      return A.throwExpression(A.Exception_Exception("Invalid Vote serializeIntValue " + this.value));
    },
    $signature: 34
  };
  A.Voter.prototype = {
    serialize$1$forJson(forJson) {
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, A._setArrayType([new A._CborSmallIntImpl(this.voterType.serializeIntValue, B.List_empty), new A._CborBytesImpl(this.vKeyHash, B.List_empty)], type$.JSArray_CborValue));
    }
  };
  A._$Voter.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._Voter) {
            t1 = other.voterType === _this.voterType;
            t1 = (t1 || t1) && B.DeepCollectionEquality_false.equals$2(other.vKeyHash, _this.vKeyHash);
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.voterType, B.DeepCollectionEquality_false.hash$1(this.vKeyHash), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Voter(voterType: " + this.voterType.toString$0(0) + ", vKeyHash: " + A.S(this.vKeyHash) + ")";
    }
  };
  A._Voter.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._Voter) {
            t1 = other.voterType === _this.voterType;
            t1 = (t1 || t1) && B.DeepCollectionEquality_false.equals$2(other.vKeyHash, _this.vKeyHash);
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.voterType, B.DeepCollectionEquality_false.hash$1(this.vKeyHash), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Voter(voterType: " + this.voterType.toString$0(0) + ", vKeyHash: " + A.S(this.vKeyHash) + ")";
    }
  };
  A._Voter_Object__$Voter.prototype = {};
  A.VoterType.prototype = {
    _enumToString$0() {
      return "VoterType." + this._core$_name;
    }
  };
  A.VoterType_fromSerializeIntValue_closure.prototype = {
    call$1(element) {
      return type$.VoterType._as(element).serializeIntValue === this.value;
    },
    $signature: 109
  };
  A.VoterType_fromSerializeIntValue_closure0.prototype = {
    call$0() {
      return A.throwExpression(A.Exception_Exception("Invalid VoterType serializeIntValue " + this.value));
    },
    $signature: 34
  };
  A.VotingProcedure.prototype = {
    serialize$1$forJson(forJson) {
      var anchor = this.anchor,
        t1 = anchor == null ? B._CborNullImpl_22_List_empty : anchor.serialize$1$forJson(false);
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, A._setArrayType([new A._CborSmallIntImpl(this.vote.serializeIntValue, B.List_empty), t1], type$.JSArray_CborValue));
    }
  };
  A._$VotingProcedure.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._VotingProcedure) {
            t2 = other.vote === _this.vote;
            if (t2 || t2) {
              t1 = other.anchor;
              t2 = _this.anchor;
              t1 = t1 == t2 || J.$eq$(t1, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.vote, this.anchor, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "VotingProcedure(vote: " + this.vote.toString$0(0) + ", anchor: " + A.S(this.anchor) + ")";
    }
  };
  A._VotingProcedure.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._VotingProcedure) {
            t2 = other.vote === _this.vote;
            if (t2 || t2) {
              t1 = other.anchor;
              t2 = _this.anchor;
              t1 = t1 == t2 || J.$eq$(t1, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.vote, this.anchor, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "VotingProcedure(vote: " + this.vote.toString$0(0) + ", anchor: " + A.S(this.anchor) + ")";
    }
  };
  A._VotingProcedure_Object__$VotingProcedure.prototype = {};
  A.VotingProcedures.prototype = {
    serialize$1$forJson(forJson) {
      var t1 = this.get$voting().get$entries(),
        t2 = t1.$ti,
        t3 = type$.CborValue;
      return new A._CborMapImpl(B.List_empty, B.CborLengthType_2, A.Map_Map$fromEntries(A.MappedIterable_MappedIterable(t1, t2._eval$1("MapEntry<CborValue,CborValue>(Iterable.E)")._as(new A.VotingProcedures_serialize_closure(false)), t2._eval$1("Iterable.E"), type$.MapEntry_CborValue_CborValue), t3, t3));
    }
  };
  A.VotingProcedures_VotingProcedures$deserialize_closure.prototype = {
    call$1(e) {
      var t1, t2, t3, vKeyHash,
        _s48_ = "Voter deserialization failed. Invalid cbor type ";
      type$.MapEntry_CborValue_CborValue._as(e);
      t1 = e.key;
      if (!type$.CborList._is(t1))
        A.throwExpression(A.CborDeserializationException$(_s48_ + A.getRuntimeTypeOfDartObject(t1).toString$0(0) + " ; expected CborList"));
      t2 = t1._base;
      t3 = t2.length;
      if (t3 !== 2)
        A.throwExpression(A.CborDeserializationException$("Voter deserialization failed. Invalid number of DataItem(s) : " + t1.get$length(0) + " ; expected  2"));
      if (1 >= t3)
        return A.ioore(t2, 1);
      vKeyHash = t2[1];
      if (!type$.CborBytes._is(vKeyHash))
        A.throwExpression(A.CborDeserializationException$(_s48_ + A.getRuntimeTypeOfDartObject(vKeyHash).toString$0(0) + " ; expected CborBytes"));
      t1 = t2[0];
      if (!type$.CborInt._is(t1))
        A.throwExpression(A.CborDeserializationException$("VoterType deserialization failed. Invalid cbor type " + A.getRuntimeTypeOfDartObject(t1).toString$0(0) + " ; expected CborInt"));
      return new A.MapEntry(new A._Voter(A.VoterType_fromSerializeIntValue(t1.toInt$0(0)), new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(vKeyHash.get$bytes(), false)))), A._deserializeVotingProcedureMap(e.value), type$.MapEntry_of_Voter_and_Map_GovActionId_VotingProcedure);
    },
    $signature: 114
  };
  A.VotingProcedures_serialize_closure.prototype = {
    call$1(e) {
      var t1;
      type$.MapEntry_of_Voter_and_Map_GovActionId_VotingProcedure._as(e);
      t1 = this.forJson;
      return new A.MapEntry(e.key.serialize$1$forJson(t1), A.VotingProcedureMapX_serialize(e.value, t1), type$.MapEntry_CborValue_CborValue);
    },
    $signature: 116
  };
  A._deserializeVotingProcedureMap_closure.prototype = {
    call$1(e) {
      var govActionId, t1, t2, t3, vote;
      type$.MapEntry_CborValue_CborValue._as(e);
      govActionId = A.GovActionId_deserialize(e.key);
      t1 = e.value;
      if (!type$.CborList._is(t1))
        A.throwExpression(A.CborDeserializationException$(string$.GovActE + A.getRuntimeTypeOfDartObject(t1).toString$0(0)));
      t2 = t1._base;
      t3 = t2.length;
      if (t3 !== 2)
        A.throwExpression(A.CborDeserializationException$(string$.GovActI + t1.get$length(0) + " ; expected  2"));
      if (0 >= t3)
        return A.ioore(t2, 0);
      vote = A.Vote_deserialize(t2[0]);
      if (1 >= t2.length)
        return A.ioore(t2, 1);
      t1 = t2[1];
      return new A.MapEntry(govActionId, new A._VotingProcedure(vote, t1 instanceof A._CborNullImpl ? null : A.Anchor_Anchor$deserialize(t1)), type$.MapEntry_GovActionId_VotingProcedure);
    },
    $signature: 120
  };
  A.VotingProcedureMapX_serialize_closure.prototype = {
    call$1(e) {
      var t1;
      type$.MapEntry_GovActionId_VotingProcedure._as(e);
      t1 = this.forJson;
      return new A.MapEntry(e.key.serialize$1$forJson(t1), e.value.serialize$1$forJson(t1), type$.MapEntry_CborValue_CborValue);
    },
    $signature: 127
  };
  A._$VotingProcedures.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A._VotingProcedures && B.DeepCollectionEquality_false.equals$2(other.get$voting(), this.get$voting());
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.get$voting()), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "VotingProcedures(voting: " + this.get$voting().toString$0(0) + ")";
    }
  };
  A._VotingProcedures.prototype = {
    get$voting() {
      var t1 = this._voting;
      return new A.EqualUnmodifiableMapView(t1, t1, type$.EqualUnmodifiableMapView_of_Voter_and_Map_GovActionId_VotingProcedure);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A._VotingProcedures && B.DeepCollectionEquality_false.equals$2(other._voting, this._voting);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this._voting), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "VotingProcedures(voting: " + this.get$voting().toString$0(0) + ")";
    }
  };
  A._VotingProcedures_Object__$VotingProcedures.prototype = {};
  A.OutputDatum.prototype = {
    serialize$1$forJson(forJson) {
      var t1, _this = this;
      $label0$0: {
        if (_this instanceof A.OutputDatum_Hash) {
          t1 = A.IntListExtensions_serializeCbor(_this.datumHash, false, B.List_empty);
          break $label0$0;
        }
        if (_this instanceof A.OutputDatum_Inline) {
          t1 = _this.plutusData.serialize$1$forJson(false);
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    }
  };
  A._$OutputDatum.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.OutputDatum;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(A.getRuntimeTypeOfDartObject(this));
    },
    toString$0(_) {
      return "OutputDatum()";
    }
  };
  A.OutputDatum_Hash.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.OutputDatum_Hash && B.DeepCollectionEquality_false.equals$2(other.datumHash, this.datumHash);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.datumHash), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "OutputDatum.hash(datumHash: " + A.S(this.datumHash) + ")";
    }
  };
  A.OutputDatum_Inline.prototype = {
    $eq(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this))
          if (other instanceof A.OutputDatum_Inline) {
            t1 = other.plutusData;
            t2 = this.plutusData;
            t1 = t1 === t2 || t1.$eq(0, t2);
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.plutusData, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "OutputDatum.inline(plutusData: " + this.plutusData.toString$0(0) + ")";
    }
  };
  A._OutputDatum_Object__$OutputDatum.prototype = {};
  A.CardanoTransactionOutput.prototype = {
    get$datum() {
      var outDatum, t1, datumHash, _this = this,
        value = _this.__CardanoTransactionOutput_datum_FI;
      if (value === $) {
        $label0$0: {
          if (_this instanceof A.CardanoTransactionOutput_PostAlonzo) {
            outDatum = _this.outDatum;
            t1 = outDatum;
            break $label0$0;
          }
          if (_this instanceof A.CardanoTransactionOutput_Legacy) {
            datumHash = _this.outDatumHash;
            t1 = datumHash;
            break $label0$0;
          }
          t1 = null;
        }
        value = _this.__CardanoTransactionOutput_datum_FI = t1;
      }
      return value;
    },
    toString$0(_) {
      var t1, _this = this,
        addr = A.IntListExtensions_addressBase58Orbech32Encode(_this.get$addressBytes());
      $label0$0: {
        if (_this instanceof A.CardanoTransactionOutput_PostAlonzo) {
          t1 = "CardanoTransactionOutput.postAlonzo(addressBytes: " + addr + ", value: " + _this.value.toString$0(0) + ", datum: " + A.S(_this.get$datum()) + ", scriptRef: " + A.S(_this.scriptRef) + ", lengthType: " + _this.lengthType.toString$0(0) + ")";
          break $label0$0;
        }
        if (_this instanceof A.CardanoTransactionOutput_Legacy) {
          t1 = "CardanoTransactionOutput.legacy(addressBytes: " + addr + ", value: " + _this.value.toString$0(0) + ", datum: " + A.S(_this.get$datum()) + ", lengthType: " + _this.lengthType.toString$0(0) + ")";
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    },
    serialize$1$forJson(forJson) {
      var t1, t2, _this = this;
      $label0$0: {
        if (_this instanceof A.CardanoTransactionOutput_PostAlonzo) {
          t1 = A._CardanoTxOutputPostAlonzoExtensions__serializePostAlonzo(_this, false);
          break $label0$0;
        }
        if (_this instanceof A.CardanoTransactionOutput_Legacy) {
          t1 = A._setArrayType([], type$.JSArray_nullable_CborValue);
          t1.push(new A._CborBytesImpl(_this.addressBytes, B.List_empty));
          t1.push(_this.value.serialize$1$forJson(false));
          t2 = _this.get$datum();
          t1.push(t2 == null ? null : t2.serialize$1$forJson(false));
          t1 = A.List_List$_of(new A.WhereTypeIterable(t1, type$.WhereTypeIterable_CborValue), type$.CborValue);
          t1 = new A._CborListImpl(B.List_empty, _this.lengthType, t1);
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    }
  };
  A.CardanoTransactionOutput_CardanoTransactionOutput$deserializePostAlonzo_closure.prototype = {
    call$1(cborDatum) {
      var t1, t2, cborDatumOption, cborDatumContent, _0_0;
      type$.CborValue._as(cborDatum);
      if (!type$.CborList._is(cborDatum))
        throw A.wrapException(A.TransactionOutputParseException$("deserializePostAlonzo: cborDatum type: " + A.getRuntimeTypeOfDartObject(cborDatum).toString$0(0)));
      t1 = cborDatum._base;
      t2 = t1.length;
      if (t2 !== 2)
        throw A.wrapException(A.TransactionOutputParseException$("deserializePostAlonzo: cborDatum length: " + cborDatum.get$length(0)));
      if (0 >= t2)
        return A.ioore(t1, 0);
      cborDatumOption = type$.CborSmallInt._as(t1[0]);
      if (1 >= t2)
        return A.ioore(t1, 1);
      cborDatumContent = t1[1];
      _0_0 = cborDatumOption.value;
      $label0$0: {
        if (0 === _0_0) {
          t1 = new A.OutputDatum_Hash(new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(type$.CborBytes._as(cborDatumContent).get$bytes(), false))));
          break $label0$0;
        }
        if (1 === _0_0) {
          t1 = new A.OutputDatum_Inline(A.PlutusData_PlutusData$deserialize(cborDatumContent));
          break $label0$0;
        }
        t1 = A.throwExpression(A.TransactionOutputParseException$("deserializePostAlonzo: cborDatumOption value: " + _0_0));
      }
      return t1;
    },
    $signature: 129
  };
  A.CardanoTransactionOutput_CardanoTransactionOutput$deserializePostAlonzo_closure0.prototype = {
    call$1(p0) {
      return new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(type$.CborBytes._as(type$.CborValue._as(p0)).get$bytes(), false)));
    },
    $signature: 20
  };
  A.CardanoTransactionOutput_CardanoTransactionOutput$deserializeAlonzo_closure.prototype = {
    call$1(cborDatum) {
      type$.CborValue._as(cborDatum);
      if (!type$.CborBytes._is(cborDatum))
        throw A.wrapException(A.TransactionOutputParseException$("deserializeAlonzo: cborDatum type: " + A.getRuntimeTypeOfDartObject(cborDatum).toString$0(0)));
      return new A.OutputDatum_Hash(new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(cborDatum.get$bytes(), false))));
    },
    $signature: 130
  };
  A._CardanoTxOutputPostAlonzoExtensions__serializePostAlonzo_closure.prototype = {
    call$1(p0) {
      var t1;
      type$.OutputDatum._as(p0);
      $label0$0: {
        if (p0 instanceof A.OutputDatum_Hash) {
          t1 = 0;
          break $label0$0;
        }
        if (p0 instanceof A.OutputDatum_Inline) {
          t1 = 1;
          break $label0$0;
        }
        t1 = null;
      }
      return new A.MapEntry(B._CborSmallIntImpl_2_List_empty, new A._CborListImpl(B.List_empty, B.CborLengthType_2, A._setArrayType([new A._CborSmallIntImpl(t1, B.List_empty), p0.serialize$1$forJson(this.forJson)], type$.JSArray_CborValue)), type$.MapEntry_CborValue_CborList);
    },
    $signature: 277
  };
  A._CardanoTxOutputPostAlonzoExtensions__serializePostAlonzo_closure0.prototype = {
    call$1(p0) {
      var t1;
      type$.Uint8List._as(p0);
      t1 = A._setArrayType([24], type$.JSArray_int);
      return new A.MapEntry(B._CborSmallIntImpl_3_List_empty, new A._CborBytesImpl(p0, t1), type$.MapEntry_CborValue_CborValue);
    },
    $signature: 35
  };
  A.TransactionOutputIterableExtension_serialize_closure.prototype = {
    call$1(output) {
      return type$.CardanoTransactionOutput._as(output).serialize$1$forJson(this.forJson);
    },
    $signature: 143
  };
  A._$CardanoTransactionOutput.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.CardanoTransactionOutput) {
            t2 = other.get$datum();
            t3 = _this.get$datum();
            if (t2 == t3 || J.$eq$(t2, t3))
              if (B.DeepCollectionEquality_false.equals$2(other.get$addressBytes(), _this.get$addressBytes()))
                if (other.get$value() === _this.get$value() || other.get$value().$eq(0, _this.get$value()))
                  t1 = other.get$lengthType() === _this.get$lengthType() || other.get$lengthType() === _this.get$lengthType();
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.get$datum(), B.DeepCollectionEquality_false.hash$1(_this.get$addressBytes()), _this.get$value(), _this.get$lengthType(), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.CardanoTransactionOutput_Legacy.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.CardanoTransactionOutput_Legacy)
            if (B.DeepCollectionEquality_false.equals$2(other.addressBytes, _this.addressBytes)) {
              t2 = other.value;
              t3 = _this.value;
              if (t2 === t3 || t2.$eq(0, t3))
                if (B.DeepCollectionEquality_false.equals$2(other.outDatumHash, _this.outDatumHash)) {
                  t1 = other.lengthType === _this.lengthType;
                  t1 = t1 || t1;
                }
            }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), B.DeepCollectionEquality_false.hash$1(_this.addressBytes), _this.value, B.DeepCollectionEquality_false.hash$1(_this.outDatumHash), _this.lengthType, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    get$addressBytes() {
      return this.addressBytes;
    },
    get$value() {
      return this.value;
    },
    get$lengthType() {
      return this.lengthType;
    }
  };
  A.CardanoTransactionOutput_PostAlonzo.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.CardanoTransactionOutput_PostAlonzo)
            if (B.DeepCollectionEquality_false.equals$2(other.addressBytes, _this.addressBytes)) {
              t2 = other.value;
              t3 = _this.value;
              if (t2 === t3 || t2.$eq(0, t3)) {
                t2 = other.outDatum;
                t3 = _this.outDatum;
                if (t2 == t3 || J.$eq$(t2, t3))
                  if (B.DeepCollectionEquality_false.equals$2(other.scriptRef, _this.scriptRef)) {
                    t1 = other.lengthType === _this.lengthType;
                    t1 = t1 || t1;
                  }
              }
            }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), B.DeepCollectionEquality_false.hash$1(_this.addressBytes), _this.value, _this.outDatum, B.DeepCollectionEquality_false.hash$1(_this.scriptRef), _this.lengthType, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    get$addressBytes() {
      return this.addressBytes;
    },
    get$value() {
      return this.value;
    },
    get$lengthType() {
      return this.lengthType;
    }
  };
  A._CardanoTransactionOutput_Object__$CardanoTransactionOutput.prototype = {};
  A.Constitution.prototype = {
    serialize$1$forJson(forJson) {
      var t2,
        scriptHash = this.scriptHash,
        t1 = this.anchor.serialize$1$forJson(false);
      if (scriptHash == null)
        t2 = B._CborNullImpl_22_List_empty;
      else {
        type$.HexCodec._eval$1("Codec.T")._as(scriptHash);
        t2 = new A._CborBytesImpl(new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(scriptHash))), B.List_empty);
      }
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, A._setArrayType([t1, t2], type$.JSArray_CborValue));
    }
  };
  A._$Constitution.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._Constitution) {
            t2 = other.anchor;
            t3 = _this.anchor;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.scriptHash == _this.scriptHash;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.anchor, this.scriptHash, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Constitution(anchor: " + this.anchor.toString$0(0) + ", scriptHash: " + A.S(this.scriptHash) + ")";
    }
  };
  A._Constitution.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._Constitution) {
            t2 = other.anchor;
            t3 = _this.anchor;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.scriptHash == _this.scriptHash;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.anchor, this.scriptHash, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Constitution(anchor: " + this.anchor.toString$0(0) + ", scriptHash: " + A.S(this.scriptHash) + ")";
    }
  };
  A._Constitution_Object__$Constitution.prototype = {};
  A.GovAction.prototype = {
    serialize$1$forJson(forJson) {
      var policyHash, t1, t2, t3, _this = this;
      $label0$0: {
        if (_this instanceof A.GovAction_ParameterChange) {
          policyHash = _this.policyHash;
          t1 = _this.prevGovActionId.serialize$1$forJson(false);
          t2 = _this.protocolParamUpdate.serialize$1$forJson(false);
          if (policyHash == null)
            t3 = B._CborNullImpl_22_List_empty;
          else
            t3 = new A._CborBytesImpl(policyHash, B.List_empty);
          t3 = new A._CborListImpl(B.List_empty, B.CborLengthType_2, A._setArrayType([B._CborSmallIntImpl_0_List_empty, t1, t2, t3], type$.JSArray_CborValue));
          t1 = t3;
          break $label0$0;
        }
        if (_this instanceof A.GovAction_HardForkInitiation) {
          t1 = _this.protocolVersion;
          t2 = type$.JSArray_CborValue;
          t2 = new A._CborListImpl(B.List_empty, B.CborLengthType_2, A._setArrayType([B._CborSmallIntImpl_1_List_empty, _this.prevGovActionId.serialize$1$forJson(false), new A._CborListImpl(B.List_empty, B.CborLengthType_2, A._setArrayType([new A._CborSmallIntImpl(t1.major, B.List_empty), new A._CborSmallIntImpl(t1.minor, B.List_empty)], t2))], t2));
          t1 = t2;
          break $label0$0;
        }
        if (_this instanceof A.GovAction_TreasuryWithdrawals) {
          t1 = A._TreasuryWithdrawalsX_serializeAction(_this, false);
          break $label0$0;
        }
        if (_this instanceof A.GovAction_NoConfidence) {
          t1 = new A._CborListImpl(B.List_empty, B.CborLengthType_2, A._setArrayType([B._CborSmallIntImpl_3_List_empty, _this.prevGovActionId.serialize$1$forJson(false)], type$.JSArray_CborValue));
          break $label0$0;
        }
        if (_this instanceof A.GovAction_UpdateCommittee) {
          t1 = A._UpdateCommitteeX_serializeAction(_this, false);
          break $label0$0;
        }
        if (_this instanceof A.GovAction_NewConstitution) {
          t1 = new A._CborListImpl(B.List_empty, B.CborLengthType_2, A._setArrayType([B._CborSmallIntImpl_5_List_empty, _this.prevGovActionId.serialize$1$forJson(false), _this.constitution.serialize$1$forJson(false)], type$.JSArray_CborValue));
          break $label0$0;
        }
        if (_this instanceof A.GovAction_InfoAction) {
          t1 = new A._CborListImpl(B.List_empty, B.CborLengthType_2, A._setArrayType([B._CborSmallIntImpl_6_List_empty], type$.JSArray_CborValue));
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    }
  };
  A.GovAction_GovAction$deserialize_closure.prototype = {
    call$1(e) {
      var t1, t2, base, extension;
      type$.MapEntry_CborValue_CborValue._as(e);
      t1 = type$.CborBytes._as(e.key);
      t2 = type$.CborInt._as(e.value);
      t1 = new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(t1.get$bytes(), false)));
      base = A.CardanoAddress__getAddressBech32BaseHrp(t1);
      extension = (0 === (B.NativeUint8List_methods.get$first(t1) & 15) ? B.NetworkId_0_0_testnet : B.NetworkId_1_1_mainnet) === B.NetworkId_1_1_mainnet ? "" : "_test";
      return new A._Withdraw(new A.Bech32Encoder(base + extension).encode$1(B.NativeUint8List_methods.toList$1$growable(t1, false)), t2.toBigInt$0());
    },
    $signature: 68
  };
  A.GovAction_GovAction$deserialize_closure0.prototype = {
    call$1(e) {
      type$.MapEntry_CborValue_CborValue._as(e);
      return new A.MapEntry(A.Credential_Credential$deserialize(e.key), type$.CborInt._as(e.value).toInt$0(0), type$.MapEntry_Credential_int);
    },
    $signature: 146
  };
  A._TreasuryWithdrawalsX_serializeAction_closure.prototype = {
    call$1(withdraw) {
      return type$.Withdraw._as(withdraw).serializeEntry$1$forJson(this.forJson);
    },
    $signature: 67
  };
  A._UpdateCommitteeX_serializeAction_closure.prototype = {
    call$1(member) {
      return type$.Credential._as(member).serialize$1$forJson(this.forJson);
    },
    $signature: 148
  };
  A._UpdateCommitteeX_serializeAction_closure0.prototype = {
    call$1(e) {
      type$.MapEntry_Credential_int._as(e);
      return new A.MapEntry(e.key.serialize$1$forJson(this.forJson), new A._CborSmallIntImpl(e.value, B.List_empty), type$.MapEntry_CborValue_CborValue);
    },
    $signature: 149
  };
  A._$GovAction.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.GovAction;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(A.getRuntimeTypeOfDartObject(this));
    },
    toString$0(_) {
      return "GovAction()";
    }
  };
  A.GovAction_ParameterChange.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.GovAction_ParameterChange) {
            t2 = other.prevGovActionId;
            t3 = _this.prevGovActionId;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.protocolParamUpdate;
              t2 = _this.protocolParamUpdate;
              t1 = (t1 === t2 || t1.$eq(0, t2)) && B.DeepCollectionEquality_false.equals$2(other.policyHash, _this.policyHash);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.prevGovActionId, _this.protocolParamUpdate, B.DeepCollectionEquality_false.hash$1(_this.policyHash), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "GovAction.parameterChange(prevGovActionId: " + this.prevGovActionId.toString$0(0) + ", protocolParamUpdate: " + this.protocolParamUpdate.toString$0(0) + ", policyHash: " + A.S(this.policyHash) + ")";
    }
  };
  A.GovAction_HardForkInitiation.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.GovAction_HardForkInitiation) {
            t2 = other.prevGovActionId;
            t3 = _this.prevGovActionId;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.protocolVersion;
              t2 = _this.protocolVersion;
              t1 = t1 === t2 || t1.$eq(0, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.prevGovActionId, this.protocolVersion, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "GovAction.hardForkInitiation(prevGovActionId: " + this.prevGovActionId.toString$0(0) + ", protocolVersion: " + this.protocolVersion.toString$0(0) + ")";
    }
  };
  A.GovAction_TreasuryWithdrawals.prototype = {
    get$withdrawals() {
      var t1 = this._withdrawals;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_Withdraw);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this) && other instanceof A.GovAction_TreasuryWithdrawals && B.DeepCollectionEquality_false.equals$2(other._withdrawals, _this._withdrawals) && B.DeepCollectionEquality_false.equals$2(other.policyHash, _this.policyHash);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this._withdrawals), B.DeepCollectionEquality_false.hash$1(this.policyHash), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "GovAction.treasuryWithdrawals(withdrawals: " + A.S(this.get$withdrawals()) + ", policyHash: " + A.S(this.policyHash) + ")";
    }
  };
  A.GovAction_NoConfidence.prototype = {
    $eq(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this))
          if (other instanceof A.GovAction_NoConfidence) {
            t1 = other.prevGovActionId;
            t2 = this.prevGovActionId;
            t1 = t1 === t2 || t1.$eq(0, t2);
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.prevGovActionId, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "GovAction.noConfidence(prevGovActionId: " + this.prevGovActionId.toString$0(0) + ")";
    }
  };
  A.GovAction_UpdateCommittee.prototype = {
    get$membersForRemoval() {
      var t1 = this._membersForRemoval;
      return new A.EqualUnmodifiableSetView(t1, t1, type$.EqualUnmodifiableSetView_Credential);
    },
    get$newMembersAndTerms() {
      var t1 = this._newMembersAndTerms;
      return new A.EqualUnmodifiableMapView(t1, t1, type$.EqualUnmodifiableMapView_Credential_int);
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.GovAction_UpdateCommittee) {
            t2 = other.prevGovActionId;
            t3 = _this.prevGovActionId;
            if (t2 === t3 || t2.$eq(0, t3))
              if (B.DeepCollectionEquality_false.equals$2(other._membersForRemoval, _this._membersForRemoval))
                if (B.DeepCollectionEquality_false.equals$2(other._newMembersAndTerms, _this._newMembersAndTerms)) {
                  t1 = other.quorumThreshold;
                  t2 = _this.quorumThreshold;
                  t1 = t1 === t2 || t1.$eq(0, t2);
                }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.prevGovActionId, B.DeepCollectionEquality_false.hash$1(_this._membersForRemoval), B.DeepCollectionEquality_false.hash$1(_this._newMembersAndTerms), _this.quorumThreshold, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "GovAction.updateCommittee(prevGovActionId: " + _this.prevGovActionId.toString$0(0) + ", membersForRemoval: " + _this.get$membersForRemoval().toString$0(0) + ", newMembersAndTerms: " + _this.get$newMembersAndTerms().toString$0(0) + ", quorumThreshold: " + _this.quorumThreshold.toString$0(0) + ")";
    }
  };
  A.GovAction_NewConstitution.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.GovAction_NewConstitution) {
            t2 = other.prevGovActionId;
            t3 = _this.prevGovActionId;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.constitution;
              t2 = _this.constitution;
              t1 = t1 === t2 || t1.$eq(0, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.prevGovActionId, this.constitution, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "GovAction.newConstitution(prevGovActionId: " + this.prevGovActionId.toString$0(0) + ", constitution: " + this.constitution.toString$0(0) + ")";
    }
  };
  A.GovAction_InfoAction.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.GovAction_InfoAction;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(A.getRuntimeTypeOfDartObject(this));
    },
    toString$0(_) {
      return "GovAction.infoAction()";
    }
  };
  A._GovAction_Object__$GovAction.prototype = {};
  A.ProposalProcedure.prototype = {
    serialize$1$forJson(forJson) {
      var _this = this;
      return new A._CborListImpl(B.List_empty, _this.cborLengthType, A._setArrayType([_this.deposit, new A._CborBytesImpl(_this.rewardAccount, B.List_empty), _this.govAction.serialize$1$forJson(false), _this.anchor.serialize$1$forJson(false)], type$.JSArray_CborValue));
    }
  };
  A._$ProposalProcedure.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._ProposalProcedure) {
            t2 = other.deposit;
            t3 = _this.deposit;
            if (t2 === t3 || t2.$eq(0, t3))
              if (B.DeepCollectionEquality_false.equals$2(other.rewardAccount, _this.rewardAccount)) {
                t2 = other.govAction;
                t3 = _this.govAction;
                if (t2 === t3 || t2.$eq(0, t3)) {
                  t2 = other.anchor;
                  t3 = _this.anchor;
                  if (t2 === t3 || t2.$eq(0, t3)) {
                    t1 = other.cborLengthType === _this.cborLengthType;
                    t1 = t1 || t1;
                  }
                }
              }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.deposit, B.DeepCollectionEquality_false.hash$1(_this.rewardAccount), _this.govAction, _this.anchor, _this.cborLengthType, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "ProposalProcedure(deposit: " + _this.deposit.toString$0(0) + ", rewardAccount: " + A.S(_this.rewardAccount) + ", govAction: " + _this.govAction.toString$0(0) + ", anchor: " + _this.anchor.toString$0(0) + ", cborLengthType: " + _this.cborLengthType.toString$0(0) + ")";
    }
  };
  A._ProposalProcedure.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._ProposalProcedure) {
            t2 = other.deposit;
            t3 = _this.deposit;
            if (t2 === t3 || t2.$eq(0, t3))
              if (B.DeepCollectionEquality_false.equals$2(other.rewardAccount, _this.rewardAccount)) {
                t2 = other.govAction;
                t3 = _this.govAction;
                if (t2 === t3 || t2.$eq(0, t3)) {
                  t2 = other.anchor;
                  t3 = _this.anchor;
                  if (t2 === t3 || t2.$eq(0, t3)) {
                    t1 = other.cborLengthType === _this.cborLengthType;
                    t1 = t1 || t1;
                  }
                }
              }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.deposit, B.DeepCollectionEquality_false.hash$1(_this.rewardAccount), _this.govAction, _this.anchor, _this.cborLengthType, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "ProposalProcedure(deposit: " + _this.deposit.toString$0(0) + ", rewardAccount: " + A.S(_this.rewardAccount) + ", govAction: " + _this.govAction.toString$0(0) + ", anchor: " + _this.anchor.toString$0(0) + ", cborLengthType: " + _this.cborLengthType.toString$0(0) + ")";
    }
  };
  A._ProposalProcedure_Object__$ProposalProcedure.prototype = {};
  A.ProtocolParamUpdate.prototype = {
    serialize$1$forJson(forJson) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, _this = this, _null = null,
        t1 = _this.minFeeA;
      t1 = t1 == null ? _null : new A.ProtocolParamUpdate_serialize_closure().call$1(t1);
      t2 = _this.minFeeB;
      t2 = t2 == null ? _null : new A.ProtocolParamUpdate_serialize_closure0().call$1(t2);
      t3 = _this.maxBlockSize;
      t3 = t3 == null ? _null : new A.ProtocolParamUpdate_serialize_closure1().call$1(t3);
      t4 = _this.maxTxSize;
      t4 = t4 == null ? _null : new A.ProtocolParamUpdate_serialize_closure2().call$1(t4);
      t5 = _this.maxBlockHeaderSize;
      t5 = t5 == null ? _null : new A.ProtocolParamUpdate_serialize_closure3().call$1(t5);
      t6 = _this.keyDeposit;
      t6 = t6 == null ? _null : new A.ProtocolParamUpdate_serialize_closure4().call$1(t6);
      t7 = _this.poolDeposit;
      t7 = t7 == null ? _null : new A.ProtocolParamUpdate_serialize_closure5().call$1(t7);
      t8 = _this.maxEpoch;
      t8 = t8 == null ? _null : new A.ProtocolParamUpdate_serialize_closure6().call$1(t8);
      t9 = _this.nOpt;
      t9 = t9 == null ? _null : new A.ProtocolParamUpdate_serialize_closure7().call$1(t9);
      t10 = _this.poolPledgeInfluence;
      t10 = t10 == null ? _null : new A.ProtocolParamUpdate_serialize_closure8(false).call$1(t10);
      t11 = _this.expansionRate;
      t11 = t11 == null ? _null : new A.ProtocolParamUpdate_serialize_closure9(false).call$1(t11);
      t12 = _this.treasuryGrowth;
      t12 = t12 == null ? _null : new A.ProtocolParamUpdate_serialize_closure10(false).call$1(t12);
      t13 = _this.decentralisationConstant;
      t13 = t13 == null ? _null : new A.ProtocolParamUpdate_serialize_closure11(false).call$1(t13);
      t14 = _this.extraEntropy;
      t14 = t14 == null ? _null : new A.ProtocolParamUpdate_serialize_closure12(false).call$1(t14);
      t15 = _this.protocolVersion;
      t15 = t15 == null ? _null : new A.ProtocolParamUpdate_serialize_closure13(false).call$1(t15);
      t16 = _this.minUtxo;
      t16 = t16 == null ? _null : new A.ProtocolParamUpdate_serialize_closure14().call$1(t16);
      t17 = _this.minPoolCost;
      t17 = t17 == null ? _null : new A.ProtocolParamUpdate_serialize_closure15().call$1(t17);
      t18 = _this.adaPerUtxoByte;
      t18 = t18 == null ? _null : new A.ProtocolParamUpdate_serialize_closure16().call$1(t18);
      t19 = _this.costmdls;
      t19 = t19 == null ? _null : new A.ProtocolParamUpdate_serialize_closure17().call$1(t19);
      t20 = _this.executionCosts;
      t20 = t20 == null ? _null : new A.ProtocolParamUpdate_serialize_closure18().call$1(t20);
      t21 = _this.maxTxExUnits;
      t21 = t21 == null ? _null : new A.ProtocolParamUpdate_serialize_closure19().call$1(t21);
      t22 = _this.maxBlockExUnits;
      t22 = t22 == null ? _null : new A.ProtocolParamUpdate_serialize_closure20().call$1(t22);
      t23 = _this.maxValSize;
      t23 = t23 == null ? _null : new A.ProtocolParamUpdate_serialize_closure21().call$1(t23);
      t24 = _this.collateralPercentage;
      t24 = t24 == null ? _null : new A.ProtocolParamUpdate_serialize_closure22().call$1(t24);
      t25 = _this.maxCollateralInputs;
      t26 = type$.CborValue;
      return new A._CborMapImpl(B.List_empty, B.CborLengthType_2, A.Map_Map$fromEntries(new A.NonNullsIterable(A._setArrayType([t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25 == null ? _null : new A.ProtocolParamUpdate_serialize_closure23().call$1(t25)], type$.JSArray_nullable_MapEntry_CborSmallInt_CborValue), type$.NonNullsIterable_MapEntry_CborSmallInt_CborValue), t26, t26));
    }
  };
  A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure.prototype = {
    call$2(key, value) {
      var t1 = type$.CborValue;
      t1._as(key);
      t1._as(value);
      if (!type$.CborInt._is(key))
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected key to be cbor int but got " + A.getRuntimeTypeOfDartObject(key).toString$0(0)));
      return new A.MapEntry(key.toInt$0(0), value, type$.MapEntry_int_CborValue);
    },
    $signature: 150
  };
  A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure0.prototype = {
    call$1(cValue) {
      type$.CborValue._as(cValue);
      if (!type$.CborInt._is(cValue))
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected minFeeA to be cbor int but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return cValue.toBigInt$0();
    },
    $signature: 7
  };
  A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure1.prototype = {
    call$1(cValue) {
      type$.CborValue._as(cValue);
      if (!type$.CborInt._is(cValue))
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected minFeeB to be cbor int but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return cValue.toBigInt$0();
    },
    $signature: 7
  };
  A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure2.prototype = {
    call$1(cValue) {
      type$.CborValue._as(cValue);
      if (!type$.CborInt._is(cValue) || !cValue.toBigInt$0().get$isValidInt())
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected maxBlockSize to be cbor small int but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return cValue.toInt$0(0);
    },
    $signature: 10
  };
  A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure3.prototype = {
    call$1(cValue) {
      type$.CborValue._as(cValue);
      if (!type$.CborInt._is(cValue) || !cValue.toBigInt$0().get$isValidInt())
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected maxTxSize to be cbor small int but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return cValue.toInt$0(0);
    },
    $signature: 10
  };
  A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure4.prototype = {
    call$1(cValue) {
      type$.CborValue._as(cValue);
      if (!type$.CborInt._is(cValue) || !cValue.toBigInt$0().get$isValidInt())
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected maxBlockHeaderSize to be cbor small int but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return cValue.toInt$0(0);
    },
    $signature: 10
  };
  A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure5.prototype = {
    call$1(cValue) {
      type$.CborValue._as(cValue);
      if (!type$.CborInt._is(cValue))
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected keyDeposit to be cbor int but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return cValue.toBigInt$0();
    },
    $signature: 7
  };
  A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure6.prototype = {
    call$1(cValue) {
      type$.CborValue._as(cValue);
      if (!type$.CborInt._is(cValue))
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected poolDeposit to be cbor int but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return cValue.toBigInt$0();
    },
    $signature: 7
  };
  A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure7.prototype = {
    call$1(cValue) {
      type$.CborValue._as(cValue);
      if (!type$.CborInt._is(cValue) || !cValue.toBigInt$0().get$isValidInt())
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected maxEpoch to be cbor small int but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return cValue.toInt$0(0);
    },
    $signature: 10
  };
  A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure8.prototype = {
    call$1(cValue) {
      type$.CborValue._as(cValue);
      if (!type$.CborInt._is(cValue) || !cValue.toBigInt$0().get$isValidInt())
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected nOpt to be cbor small int but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return cValue.toInt$0(0);
    },
    $signature: 10
  };
  A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure9.prototype = {
    call$1(cValue) {
      type$.CborValue._as(cValue);
      if (!type$.CborInt._is(cValue))
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected minUtxo to be cbor int but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return cValue.toBigInt$0();
    },
    $signature: 7
  };
  A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure10.prototype = {
    call$1(cValue) {
      type$.CborValue._as(cValue);
      if (!type$.CborInt._is(cValue))
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected minPoolCost to be cbor int but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return cValue.toBigInt$0();
    },
    $signature: 7
  };
  A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure11.prototype = {
    call$1(cValue) {
      type$.CborValue._as(cValue);
      if (!type$.CborInt._is(cValue))
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected adaPerUtxoByte to be cbor int but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return cValue.toBigInt$0();
    },
    $signature: 7
  };
  A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure12.prototype = {
    call$1(cValue) {
      type$.CborValue._as(cValue);
      if (!type$.CborInt._is(cValue))
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected maxValSize to be cbor int but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return cValue.toBigInt$0();
    },
    $signature: 7
  };
  A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure13.prototype = {
    call$1(cValue) {
      type$.CborValue._as(cValue);
      if (!type$.CborInt._is(cValue) || !cValue.toBigInt$0().get$isValidInt())
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected collateralPercentage to be cbor small int but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return cValue.toInt$0(0);
    },
    $signature: 10
  };
  A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure14.prototype = {
    call$1(cValue) {
      type$.CborValue._as(cValue);
      if (!type$.CborInt._is(cValue) || !cValue.toBigInt$0().get$isValidInt())
        throw A.wrapException(A.Exception_Exception("ProtocolParamUpdate deserialization failed. Expected maxCollateralInputs to be cbor small int but got " + A.getRuntimeTypeOfDartObject(cValue).toString$0(0)));
      return cValue.toInt$0(0);
    },
    $signature: 10
  };
  A.ProtocolParamUpdate_serialize_closure.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_0_List_empty, A.CborInt_CborInt(type$.BigInt._as(value)), type$.MapEntry_CborSmallInt_CborInt);
    },
    $signature: 9
  };
  A.ProtocolParamUpdate_serialize_closure0.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_1_List_empty, A.CborInt_CborInt(type$.BigInt._as(value)), type$.MapEntry_CborSmallInt_CborInt);
    },
    $signature: 9
  };
  A.ProtocolParamUpdate_serialize_closure1.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_2_List_empty, new A._CborSmallIntImpl(A._asInt(value), B.List_empty), type$.MapEntry_CborSmallInt_CborSmallInt);
    },
    $signature: 11
  };
  A.ProtocolParamUpdate_serialize_closure2.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_3_List_empty, new A._CborSmallIntImpl(A._asInt(value), B.List_empty), type$.MapEntry_CborSmallInt_CborSmallInt);
    },
    $signature: 11
  };
  A.ProtocolParamUpdate_serialize_closure3.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_4_List_empty, new A._CborSmallIntImpl(A._asInt(value), B.List_empty), type$.MapEntry_CborSmallInt_CborSmallInt);
    },
    $signature: 11
  };
  A.ProtocolParamUpdate_serialize_closure4.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_5_List_empty, A.CborInt_CborInt(type$.BigInt._as(value)), type$.MapEntry_CborSmallInt_CborInt);
    },
    $signature: 9
  };
  A.ProtocolParamUpdate_serialize_closure5.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_6_List_empty, A.CborInt_CborInt(type$.BigInt._as(value)), type$.MapEntry_CborSmallInt_CborInt);
    },
    $signature: 9
  };
  A.ProtocolParamUpdate_serialize_closure6.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_7_List_empty, new A._CborSmallIntImpl(A._asInt(value), B.List_empty), type$.MapEntry_CborSmallInt_CborSmallInt);
    },
    $signature: 11
  };
  A.ProtocolParamUpdate_serialize_closure7.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_8_List_empty, new A._CborSmallIntImpl(A._asInt(value), B.List_empty), type$.MapEntry_CborSmallInt_CborSmallInt);
    },
    $signature: 11
  };
  A.ProtocolParamUpdate_serialize_closure8.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_9_List_empty, type$.RationalNumber._as(value).serialize$1$forJson(this.forJson), type$.MapEntry_CborSmallInt_CborValue);
    },
    $signature: 23
  };
  A.ProtocolParamUpdate_serialize_closure9.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_10_List_empty, type$.RationalNumber._as(value).serialize$1$forJson(this.forJson), type$.MapEntry_CborSmallInt_CborValue);
    },
    $signature: 23
  };
  A.ProtocolParamUpdate_serialize_closure10.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_11_List_empty, type$.RationalNumber._as(value).serialize$1$forJson(this.forJson), type$.MapEntry_CborSmallInt_CborValue);
    },
    $signature: 23
  };
  A.ProtocolParamUpdate_serialize_closure11.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_12_List_empty, type$.RationalNumber._as(value).serialize$1$forJson(this.forJson), type$.MapEntry_CborSmallInt_CborValue);
    },
    $signature: 23
  };
  A.ProtocolParamUpdate_serialize_closure12.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_13_List_empty, type$.Nonce._as(value).serialize$1$forJson(this.forJson), type$.MapEntry_CborSmallInt_CborValue);
    },
    $signature: 162
  };
  A.ProtocolParamUpdate_serialize_closure13.prototype = {
    call$1(value) {
      type$.ProtocolVersion._as(value);
      return new A.MapEntry(B._CborSmallIntImpl_14_List_empty, new A._CborListImpl(B.List_empty, B.CborLengthType_2, A._setArrayType([new A._CborSmallIntImpl(value.major, B.List_empty), new A._CborSmallIntImpl(value.minor, B.List_empty)], type$.JSArray_CborValue)), type$.MapEntry_CborSmallInt_CborValue);
    },
    $signature: 165
  };
  A.ProtocolParamUpdate_serialize_closure14.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_15_List_empty, A.CborInt_CborInt(type$.BigInt._as(value)), type$.MapEntry_CborSmallInt_CborInt);
    },
    $signature: 9
  };
  A.ProtocolParamUpdate_serialize_closure15.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_16_List_empty, A.CborInt_CborInt(type$.BigInt._as(value)), type$.MapEntry_CborSmallInt_CborInt);
    },
    $signature: 9
  };
  A.ProtocolParamUpdate_serialize_closure16.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_17_List_empty, A.CborInt_CborInt(type$.BigInt._as(value)), type$.MapEntry_CborSmallInt_CborInt);
    },
    $signature: 9
  };
  A.ProtocolParamUpdate_serialize_closure17.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_18_List_empty, type$.CborValue._as(value), type$.MapEntry_CborSmallInt_CborValue);
    },
    $signature: 24
  };
  A.ProtocolParamUpdate_serialize_closure18.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_19_List_empty, type$.CborValue._as(value), type$.MapEntry_CborSmallInt_CborValue);
    },
    $signature: 24
  };
  A.ProtocolParamUpdate_serialize_closure19.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_20_List_empty, type$.CborValue._as(value), type$.MapEntry_CborSmallInt_CborValue);
    },
    $signature: 24
  };
  A.ProtocolParamUpdate_serialize_closure20.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_21_List_empty, type$.CborValue._as(value), type$.MapEntry_CborSmallInt_CborValue);
    },
    $signature: 24
  };
  A.ProtocolParamUpdate_serialize_closure21.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_22_List_empty, A.CborInt_CborInt(type$.BigInt._as(value)), type$.MapEntry_CborSmallInt_CborInt);
    },
    $signature: 9
  };
  A.ProtocolParamUpdate_serialize_closure22.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_23_List_empty, new A._CborSmallIntImpl(A._asInt(value), B.List_empty), type$.MapEntry_CborSmallInt_CborSmallInt);
    },
    $signature: 11
  };
  A.ProtocolParamUpdate_serialize_closure23.prototype = {
    call$1(value) {
      return new A.MapEntry(B._CborSmallIntImpl_24_List_empty, new A._CborSmallIntImpl(A._asInt(value), B.List_empty), type$.MapEntry_CborSmallInt_CborSmallInt);
    },
    $signature: 11
  };
  A._$ProtocolParamUpdate.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._ProtocolParamUpdate) {
            t2 = other.minFeeA;
            t3 = _this.minFeeA;
            if (t2 == t3 || J.$eq$(t2, t3)) {
              t2 = other.minFeeB;
              t3 = _this.minFeeB;
              if (t2 == t3 || J.$eq$(t2, t3)) {
                t2 = other.maxBlockSize == _this.maxBlockSize;
                if (t2 || t2) {
                  t2 = other.maxTxSize == _this.maxTxSize;
                  if (t2 || t2) {
                    t2 = other.maxBlockHeaderSize == _this.maxBlockHeaderSize;
                    if (t2 || t2) {
                      t2 = other.keyDeposit;
                      t3 = _this.keyDeposit;
                      if (t2 == t3 || J.$eq$(t2, t3)) {
                        t2 = other.poolDeposit;
                        t3 = _this.poolDeposit;
                        if (t2 == t3 || J.$eq$(t2, t3)) {
                          t2 = other.maxEpoch == _this.maxEpoch;
                          if (t2 || t2) {
                            t2 = other.nOpt == _this.nOpt;
                            if (t2 || t2) {
                              t2 = other.poolPledgeInfluence;
                              t3 = _this.poolPledgeInfluence;
                              if (t2 == t3 || J.$eq$(t2, t3)) {
                                t2 = other.expansionRate;
                                t3 = _this.expansionRate;
                                if (t2 == t3 || J.$eq$(t2, t3)) {
                                  t2 = other.treasuryGrowth;
                                  t3 = _this.treasuryGrowth;
                                  if (t2 == t3 || J.$eq$(t2, t3)) {
                                    t2 = other.decentralisationConstant;
                                    t3 = _this.decentralisationConstant;
                                    if (t2 == t3 || J.$eq$(t2, t3)) {
                                      t2 = other.extraEntropy;
                                      t3 = _this.extraEntropy;
                                      if (t2 == t3 || J.$eq$(t2, t3)) {
                                        t2 = other.protocolVersion;
                                        t3 = _this.protocolVersion;
                                        if (t2 == t3 || J.$eq$(t2, t3)) {
                                          t2 = other.minUtxo;
                                          t3 = _this.minUtxo;
                                          if (t2 == t3 || J.$eq$(t2, t3)) {
                                            t2 = other.minPoolCost;
                                            t3 = _this.minPoolCost;
                                            if (t2 == t3 || J.$eq$(t2, t3)) {
                                              t2 = other.adaPerUtxoByte;
                                              t3 = _this.adaPerUtxoByte;
                                              if (t2 == t3 || J.$eq$(t2, t3)) {
                                                t2 = other.costmdls;
                                                t3 = _this.costmdls;
                                                if (t2 == t3 || J.$eq$(t2, t3)) {
                                                  t2 = other.executionCosts;
                                                  t3 = _this.executionCosts;
                                                  if (t2 == t3 || J.$eq$(t2, t3)) {
                                                    t2 = other.maxTxExUnits;
                                                    t3 = _this.maxTxExUnits;
                                                    if (t2 == t3 || J.$eq$(t2, t3)) {
                                                      t2 = other.maxBlockExUnits;
                                                      t3 = _this.maxBlockExUnits;
                                                      if (t2 == t3 || J.$eq$(t2, t3)) {
                                                        t2 = other.maxValSize;
                                                        t3 = _this.maxValSize;
                                                        if (t2 == t3 || J.$eq$(t2, t3)) {
                                                          t2 = other.collateralPercentage == _this.collateralPercentage;
                                                          if (t2 || t2) {
                                                            t1 = other.maxCollateralInputs == _this.maxCollateralInputs;
                                                            t1 = t1 || t1;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hashAll([A.getRuntimeTypeOfDartObject(_this), _this.minFeeA, _this.minFeeB, _this.maxBlockSize, _this.maxTxSize, _this.maxBlockHeaderSize, _this.keyDeposit, _this.poolDeposit, _this.maxEpoch, _this.nOpt, _this.poolPledgeInfluence, _this.expansionRate, _this.treasuryGrowth, _this.decentralisationConstant, _this.extraEntropy, _this.protocolVersion, _this.minUtxo, _this.minPoolCost, _this.adaPerUtxoByte, _this.costmdls, _this.executionCosts, _this.maxTxExUnits, _this.maxBlockExUnits, _this.maxValSize, _this.collateralPercentage, _this.maxCollateralInputs]);
    },
    toString$0(_) {
      var _this = this;
      return "ProtocolParamUpdate(minFeeA: " + A.S(_this.minFeeA) + ", minFeeB: " + A.S(_this.minFeeB) + ", maxBlockSize: " + A.S(_this.maxBlockSize) + ", maxTxSize: " + A.S(_this.maxTxSize) + ", maxBlockHeaderSize: " + A.S(_this.maxBlockHeaderSize) + ", keyDeposit: " + A.S(_this.keyDeposit) + ", poolDeposit: " + A.S(_this.poolDeposit) + ", maxEpoch: " + A.S(_this.maxEpoch) + ", nOpt: " + A.S(_this.nOpt) + ", poolPledgeInfluence: " + A.S(_this.poolPledgeInfluence) + ", expansionRate: " + A.S(_this.expansionRate) + ", treasuryGrowth: " + A.S(_this.treasuryGrowth) + ", decentralisationConstant: " + A.S(_this.decentralisationConstant) + ", extraEntropy: " + A.S(_this.extraEntropy) + ", protocolVersion: " + A.S(_this.protocolVersion) + ", minUtxo: " + A.S(_this.minUtxo) + ", minPoolCost: " + A.S(_this.minPoolCost) + ", adaPerUtxoByte: " + A.S(_this.adaPerUtxoByte) + ", costmdls: " + A.S(_this.costmdls) + ", executionCosts: " + A.S(_this.executionCosts) + ", maxTxExUnits: " + A.S(_this.maxTxExUnits) + ", maxBlockExUnits: " + A.S(_this.maxBlockExUnits) + ", maxValSize: " + A.S(_this.maxValSize) + ", collateralPercentage: " + A.S(_this.collateralPercentage) + ", maxCollateralInputs: " + A.S(_this.maxCollateralInputs) + ")";
    }
  };
  A._ProtocolParamUpdate.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._ProtocolParamUpdate) {
            t2 = other.minFeeA;
            t3 = _this.minFeeA;
            if (t2 == t3 || J.$eq$(t2, t3)) {
              t2 = other.minFeeB;
              t3 = _this.minFeeB;
              if (t2 == t3 || J.$eq$(t2, t3)) {
                t2 = other.maxBlockSize == _this.maxBlockSize;
                if (t2 || t2) {
                  t2 = other.maxTxSize == _this.maxTxSize;
                  if (t2 || t2) {
                    t2 = other.maxBlockHeaderSize == _this.maxBlockHeaderSize;
                    if (t2 || t2) {
                      t2 = other.keyDeposit;
                      t3 = _this.keyDeposit;
                      if (t2 == t3 || J.$eq$(t2, t3)) {
                        t2 = other.poolDeposit;
                        t3 = _this.poolDeposit;
                        if (t2 == t3 || J.$eq$(t2, t3)) {
                          t2 = other.maxEpoch == _this.maxEpoch;
                          if (t2 || t2) {
                            t2 = other.nOpt == _this.nOpt;
                            if (t2 || t2) {
                              t2 = other.poolPledgeInfluence;
                              t3 = _this.poolPledgeInfluence;
                              if (t2 == t3 || J.$eq$(t2, t3)) {
                                t2 = other.expansionRate;
                                t3 = _this.expansionRate;
                                if (t2 == t3 || J.$eq$(t2, t3)) {
                                  t2 = other.treasuryGrowth;
                                  t3 = _this.treasuryGrowth;
                                  if (t2 == t3 || J.$eq$(t2, t3)) {
                                    t2 = other.decentralisationConstant;
                                    t3 = _this.decentralisationConstant;
                                    if (t2 == t3 || J.$eq$(t2, t3)) {
                                      t2 = other.extraEntropy;
                                      t3 = _this.extraEntropy;
                                      if (t2 == t3 || J.$eq$(t2, t3)) {
                                        t2 = other.protocolVersion;
                                        t3 = _this.protocolVersion;
                                        if (t2 == t3 || J.$eq$(t2, t3)) {
                                          t2 = other.minUtxo;
                                          t3 = _this.minUtxo;
                                          if (t2 == t3 || J.$eq$(t2, t3)) {
                                            t2 = other.minPoolCost;
                                            t3 = _this.minPoolCost;
                                            if (t2 == t3 || J.$eq$(t2, t3)) {
                                              t2 = other.adaPerUtxoByte;
                                              t3 = _this.adaPerUtxoByte;
                                              if (t2 == t3 || J.$eq$(t2, t3)) {
                                                t2 = other.costmdls;
                                                t3 = _this.costmdls;
                                                if (t2 == t3 || J.$eq$(t2, t3)) {
                                                  t2 = other.executionCosts;
                                                  t3 = _this.executionCosts;
                                                  if (t2 == t3 || J.$eq$(t2, t3)) {
                                                    t2 = other.maxTxExUnits;
                                                    t3 = _this.maxTxExUnits;
                                                    if (t2 == t3 || J.$eq$(t2, t3)) {
                                                      t2 = other.maxBlockExUnits;
                                                      t3 = _this.maxBlockExUnits;
                                                      if (t2 == t3 || J.$eq$(t2, t3)) {
                                                        t2 = other.maxValSize;
                                                        t3 = _this.maxValSize;
                                                        if (t2 == t3 || J.$eq$(t2, t3)) {
                                                          t2 = other.collateralPercentage == _this.collateralPercentage;
                                                          if (t2 || t2) {
                                                            t1 = other.maxCollateralInputs == _this.maxCollateralInputs;
                                                            t1 = t1 || t1;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hashAll([A.getRuntimeTypeOfDartObject(_this), _this.minFeeA, _this.minFeeB, _this.maxBlockSize, _this.maxTxSize, _this.maxBlockHeaderSize, _this.keyDeposit, _this.poolDeposit, _this.maxEpoch, _this.nOpt, _this.poolPledgeInfluence, _this.expansionRate, _this.treasuryGrowth, _this.decentralisationConstant, _this.extraEntropy, _this.protocolVersion, _this.minUtxo, _this.minPoolCost, _this.adaPerUtxoByte, _this.costmdls, _this.executionCosts, _this.maxTxExUnits, _this.maxBlockExUnits, _this.maxValSize, _this.collateralPercentage, _this.maxCollateralInputs]);
    },
    toString$0(_) {
      var _this = this;
      return "ProtocolParamUpdate(minFeeA: " + A.S(_this.minFeeA) + ", minFeeB: " + A.S(_this.minFeeB) + ", maxBlockSize: " + A.S(_this.maxBlockSize) + ", maxTxSize: " + A.S(_this.maxTxSize) + ", maxBlockHeaderSize: " + A.S(_this.maxBlockHeaderSize) + ", keyDeposit: " + A.S(_this.keyDeposit) + ", poolDeposit: " + A.S(_this.poolDeposit) + ", maxEpoch: " + A.S(_this.maxEpoch) + ", nOpt: " + A.S(_this.nOpt) + ", poolPledgeInfluence: " + A.S(_this.poolPledgeInfluence) + ", expansionRate: " + A.S(_this.expansionRate) + ", treasuryGrowth: " + A.S(_this.treasuryGrowth) + ", decentralisationConstant: " + A.S(_this.decentralisationConstant) + ", extraEntropy: " + A.S(_this.extraEntropy) + ", protocolVersion: " + A.S(_this.protocolVersion) + ", minUtxo: " + A.S(_this.minUtxo) + ", minPoolCost: " + A.S(_this.minPoolCost) + ", adaPerUtxoByte: " + A.S(_this.adaPerUtxoByte) + ", costmdls: " + A.S(_this.costmdls) + ", executionCosts: " + A.S(_this.executionCosts) + ", maxTxExUnits: " + A.S(_this.maxTxExUnits) + ", maxBlockExUnits: " + A.S(_this.maxBlockExUnits) + ", maxValSize: " + A.S(_this.maxValSize) + ", collateralPercentage: " + A.S(_this.collateralPercentage) + ", maxCollateralInputs: " + A.S(_this.maxCollateralInputs) + ")";
    }
  };
  A._ProtocolParamUpdate_Object__$ProtocolParamUpdate.prototype = {};
  A.ProtocolVersion.prototype = {};
  A._$ProtocolVersion.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._ProtocolVersion) {
            t2 = other.major === _this.major;
            if (t2 || t2) {
              t1 = other.minor === _this.minor;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.major, this.minor, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "ProtocolVersion(major: " + this.major + ", minor: " + this.minor + ")";
    }
  };
  A._ProtocolVersion.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._ProtocolVersion) {
            t2 = other.major === _this.major;
            if (t2 || t2) {
              t1 = other.minor === _this.minor;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.major, this.minor, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "ProtocolVersion(major: " + this.major + ", minor: " + this.minor + ")";
    }
  };
  A._ProtocolVersion_Object__$ProtocolVersion.prototype = {};
  A.Certificate.prototype = {
    get$certType() {
      var t1, _this = this,
        value = _this.__Certificate_certType_FI;
      if (value === $) {
        $label0$0: {
          if (_this instanceof A.Certificate_StakeRegistrationLegacy) {
            t1 = 0;
            break $label0$0;
          }
          if (_this instanceof A.Certificate_StakeDeRegistrationLegacy) {
            t1 = 1;
            break $label0$0;
          }
          if (_this instanceof A.Certificate_StakeDelegation) {
            t1 = 2;
            break $label0$0;
          }
          if (_this instanceof A.Certificate_PoolRegistration) {
            t1 = 3;
            break $label0$0;
          }
          if (_this instanceof A.Certificate_PoolRetirement) {
            t1 = 4;
            break $label0$0;
          }
          if (_this instanceof A.Certificate_StakeRegistration) {
            t1 = 7;
            break $label0$0;
          }
          if (_this instanceof A.Certificate_StakeDeRegistration) {
            t1 = 8;
            break $label0$0;
          }
          if (_this instanceof A.Certificate_VoteDelegation) {
            t1 = 9;
            break $label0$0;
          }
          if (_this instanceof A.Certificate_StakeVoteDelegation) {
            t1 = 10;
            break $label0$0;
          }
          if (_this instanceof A.Certificate_StakeRegistrationDelegation) {
            t1 = 11;
            break $label0$0;
          }
          if (_this instanceof A.Certificate_VoteRegistrationDelegation) {
            t1 = 12;
            break $label0$0;
          }
          if (_this instanceof A.Certificate_StakeVoteRegistrationDelegation) {
            t1 = 13;
            break $label0$0;
          }
          if (_this instanceof A.Certificate_AuthorizeCommitteeHot) {
            t1 = 14;
            break $label0$0;
          }
          if (_this instanceof A.Certificate_ResignCommitteeCold) {
            t1 = 15;
            break $label0$0;
          }
          if (_this instanceof A.Certificate_RegisterDRep) {
            t1 = 16;
            break $label0$0;
          }
          if (_this instanceof A.Certificate_UnregisterDRep) {
            t1 = 17;
            break $label0$0;
          }
          if (_this instanceof A.Certificate_UpdateDRep) {
            t1 = 18;
            break $label0$0;
          }
          t1 = null;
        }
        value = _this.__Certificate_certType_FI = t1;
      }
      return value;
    },
    serialize$1$forJson(forJson) {
      var t3, t4, t5, _this = this, _null = null,
        t1 = _this.get$certType(),
        t2 = type$.JSArray_CborValue;
      t1 = A._setArrayType([new A._CborSmallIntImpl(t1, B.List_empty)], t2);
      $label0$0: {
        if (_this instanceof A.Certificate_StakeRegistrationLegacy) {
          t2 = A._setArrayType([_this.stakeCredential.serialize$1$forJson(false)], t2);
          break $label0$0;
        }
        if (_this instanceof A.Certificate_StakeDeRegistrationLegacy) {
          t2 = A._setArrayType([_this.stakeCredential.serialize$1$forJson(false)], t2);
          break $label0$0;
        }
        if (_this instanceof A.Certificate_StakeDelegation) {
          t3 = _this.stakeCredential.serialize$1$forJson(false);
          t2 = A._setArrayType([t3, new A._CborBytesImpl(_this.stakePoolId.poolKeyHash, B.List_empty)], t2);
          break $label0$0;
        }
        if (_this instanceof A.Certificate_PoolRegistration) {
          t3 = _this.margin.serialize$1$forJson(false);
          t4 = type$.CborValue;
          t4 = A.List_List$_of(J.map$1$1$ax(_this.get$poolOwners(), A.bytes_CborBytes___new_tearOff$closure(), t4), t4);
          t5 = _this.poolMetadata;
          t5 = t5 == null ? _null : t5.serialize$1$forJson(false);
          if (t5 == null)
            t5 = B._CborNullImpl_22_List_empty;
          t2 = A._setArrayType([new A._CborBytesImpl(_this.operator.poolKeyHash, B.List_empty), new A._CborBytesImpl(_this.vrfKeyHash, B.List_empty), _this.pledge, _this.cost, t3, new A._CborBytesImpl(_this.rewardAccount, B.List_empty), new A._CborListImpl(B.List_empty, B.CborLengthType_2, t4), _this.relays, t5], t2);
          break $label0$0;
        }
        if (_this instanceof A.Certificate_PoolRetirement) {
          t2 = A._setArrayType([new A._CborBytesImpl(_this.operator.poolKeyHash, B.List_empty), _this.epoch], t2);
          break $label0$0;
        }
        if (_this instanceof A.Certificate_StakeRegistration) {
          t2 = A._setArrayType([_this.stakeCredential.serialize$1$forJson(false), _this.coin], t2);
          break $label0$0;
        }
        if (_this instanceof A.Certificate_StakeDeRegistration) {
          t2 = A._setArrayType([_this.stakeCredential.serialize$1$forJson(false), _this.coin], t2);
          break $label0$0;
        }
        if (_this instanceof A.Certificate_VoteDelegation) {
          t2 = A._setArrayType([_this.stakeCredential.serialize$1$forJson(false), _this.dRep.serialize$1$forJson(false)], t2);
          break $label0$0;
        }
        if (_this instanceof A.Certificate_StakeVoteDelegation) {
          t3 = _this.stakeCredential.serialize$1$forJson(false);
          t2 = A._setArrayType([t3, new A._CborBytesImpl(_this.stakePoolId.poolKeyHash, B.List_empty), _this.dRep.serialize$1$forJson(false)], t2);
          break $label0$0;
        }
        if (_this instanceof A.Certificate_StakeRegistrationDelegation) {
          t3 = _this.stakeCredential.serialize$1$forJson(false);
          t2 = A._setArrayType([t3, new A._CborBytesImpl(_this.stakePoolId.poolKeyHash, B.List_empty), _this.coin], t2);
          break $label0$0;
        }
        if (_this instanceof A.Certificate_VoteRegistrationDelegation) {
          t2 = A._setArrayType([_this.stakeCredential.serialize$1$forJson(false), _this.dRep.serialize$1$forJson(false), _this.coin], t2);
          break $label0$0;
        }
        if (_this instanceof A.Certificate_StakeVoteRegistrationDelegation) {
          t3 = _this.stakeCredential.serialize$1$forJson(false);
          t2 = A._setArrayType([t3, new A._CborBytesImpl(_this.stakePoolId.poolKeyHash, B.List_empty), _this.dRep.serialize$1$forJson(false), _this.coin], t2);
          break $label0$0;
        }
        if (_this instanceof A.Certificate_AuthorizeCommitteeHot) {
          t2 = A._setArrayType([_this.committeeColdCredential.serialize$1$forJson(false), _this.committeeHotCredential.serialize$1$forJson(false)], t2);
          break $label0$0;
        }
        if (_this instanceof A.Certificate_ResignCommitteeCold) {
          t3 = _this.committeeColdCredential.serialize$1$forJson(false);
          t4 = _this.anchor;
          t4 = t4 == null ? _null : t4.serialize$1$forJson(false);
          t2 = A._setArrayType([t3, t4 == null ? B._CborNullImpl_22_List_empty : t4], t2);
          break $label0$0;
        }
        if (_this instanceof A.Certificate_RegisterDRep) {
          t3 = _this.dRepCredential.serialize$1$forJson(false);
          t4 = _this.anchor;
          t4 = t4 == null ? _null : t4.serialize$1$forJson(false);
          if (t4 == null)
            t4 = B._CborNullImpl_22_List_empty;
          t2 = A._setArrayType([t3, _this.coin, t4], t2);
          break $label0$0;
        }
        if (_this instanceof A.Certificate_UnregisterDRep) {
          t2 = A._setArrayType([_this.dRepCredential.serialize$1$forJson(false), _this.coin], t2);
          break $label0$0;
        }
        if (_this instanceof A.Certificate_UpdateDRep) {
          t3 = _this.dRepCredential.serialize$1$forJson(false);
          t4 = _this.anchor;
          t4 = t4 == null ? _null : t4.serialize$1$forJson(false);
          t2 = A._setArrayType([t3, t4 == null ? B._CborNullImpl_22_List_empty : t4], t2);
          break $label0$0;
        }
        t2 = _null;
      }
      B.JSArray_methods.addAll$1(t1, t2);
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, t1);
    }
  };
  A.CertificateIterableExtension_serialize_closure.prototype = {
    call$1(withdrawEntry) {
      return type$.Certificate._as(withdrawEntry).serialize$1$forJson(this.forJson);
    },
    $signature: 168
  };
  A._deserializePoolRegistration_closure.prototype = {
    call$1(poolOwner) {
      return new Uint8Array(A._ensureNativeList(type$.CborBytes._as(type$.CborValue._as(poolOwner)).get$bytes()));
    },
    $signature: 20
  };
  A._$Certificate.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this))
          if (other instanceof A.Certificate) {
            t1 = other.get$certType() === this.get$certType();
            t1 = t1 || t1;
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.get$certType(), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Certificate(certType: " + this.get$certType() + ")";
    }
  };
  A.Certificate_StakeRegistrationLegacy.prototype = {
    $eq(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this))
          if (other instanceof A.Certificate_StakeRegistrationLegacy) {
            t1 = other.stakeCredential;
            t2 = this.stakeCredential;
            t1 = t1 === t2 || t1.$eq(0, t2);
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.stakeCredential, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Certificate.stakeRegistrationLegacy(stakeCredential: " + this.stakeCredential.toString$0(0) + ")";
    }
  };
  A.Certificate_StakeDeRegistrationLegacy.prototype = {
    $eq(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this))
          if (other instanceof A.Certificate_StakeDeRegistrationLegacy) {
            t1 = other.stakeCredential;
            t2 = this.stakeCredential;
            t1 = t1 === t2 || t1.$eq(0, t2);
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.stakeCredential, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Certificate.stakeDeRegistrationLegacy(stakeCredential: " + this.stakeCredential.toString$0(0) + ")";
    }
  };
  A.Certificate_StakeDelegation.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Certificate_StakeDelegation) {
            t2 = other.stakeCredential;
            t3 = _this.stakeCredential;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.stakePoolId;
              t2 = _this.stakePoolId;
              t1 = t1 === t2 || t1.$eq(0, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.stakeCredential, this.stakePoolId, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Certificate.stakeDelegation(stakeCredential: " + this.stakeCredential.toString$0(0) + ", stakePoolId: " + this.stakePoolId.toString$0(0) + ")";
    }
  };
  A.Certificate_PoolRegistration.prototype = {
    get$poolOwners() {
      var t1 = this._poolOwners;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_Uint8List);
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Certificate_PoolRegistration) {
            t2 = other.operator;
            t3 = _this.operator;
            if (t2 === t3 || t2.$eq(0, t3))
              if (B.DeepCollectionEquality_false.equals$2(other.vrfKeyHash, _this.vrfKeyHash)) {
                t2 = other.pledge;
                t3 = _this.pledge;
                if (t2 === t3 || t2.$eq(0, t3)) {
                  t2 = other.cost;
                  t3 = _this.cost;
                  if (t2 === t3 || t2.$eq(0, t3)) {
                    t2 = other.margin;
                    t3 = _this.margin;
                    if (t2 === t3 || t2.$eq(0, t3))
                      if (B.DeepCollectionEquality_false.equals$2(other.rewardAccount, _this.rewardAccount))
                        if (B.DeepCollectionEquality_false.equals$2(other._poolOwners, _this._poolOwners)) {
                          t2 = other.relays;
                          t3 = _this.relays;
                          if (t2 === t3 || t2.$eq(0, t3)) {
                            t1 = other.poolMetadata;
                            t2 = _this.poolMetadata;
                            t1 = t1 == t2 || J.$eq$(t1, t2);
                          }
                        }
                  }
                }
              }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.operator, B.DeepCollectionEquality_false.hash$1(_this.vrfKeyHash), _this.pledge, _this.cost, _this.margin, B.DeepCollectionEquality_false.hash$1(_this.rewardAccount), B.DeepCollectionEquality_false.hash$1(_this._poolOwners), _this.relays, _this.poolMetadata, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "Certificate.poolRegistration(operator: " + _this.operator.toString$0(0) + ", vrfKeyHash: " + A.S(_this.vrfKeyHash) + ", pledge: " + _this.pledge.toString$0(0) + ", cost: " + _this.cost.toString$0(0) + ", margin: " + _this.margin.toString$0(0) + ", rewardAccount: " + A.S(_this.rewardAccount) + ", poolOwners: " + A.S(_this.get$poolOwners()) + ", relays: " + _this.relays.toString$0(0) + ", poolMetadata: " + A.S(_this.poolMetadata) + ")";
    }
  };
  A.Certificate_PoolRetirement.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Certificate_PoolRetirement) {
            t2 = other.operator;
            t3 = _this.operator;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.epoch;
              t2 = _this.epoch;
              t1 = t1 === t2 || t1.$eq(0, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.operator, this.epoch, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Certificate.poolRetirement(operator: " + this.operator.toString$0(0) + ", epoch: " + this.epoch.toString$0(0) + ")";
    }
  };
  A.Certificate_StakeRegistration.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Certificate_StakeRegistration) {
            t2 = other.stakeCredential;
            t3 = _this.stakeCredential;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.coin;
              t2 = _this.coin;
              t1 = t1 === t2 || t1.$eq(0, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.stakeCredential, this.coin, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Certificate.stakeRegistration(stakeCredential: " + this.stakeCredential.toString$0(0) + ", coin: " + this.coin.toString$0(0) + ")";
    }
  };
  A.Certificate_StakeDeRegistration.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Certificate_StakeDeRegistration) {
            t2 = other.stakeCredential;
            t3 = _this.stakeCredential;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.coin;
              t2 = _this.coin;
              t1 = t1 === t2 || t1.$eq(0, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.stakeCredential, this.coin, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Certificate.stakeDeRegistration(stakeCredential: " + this.stakeCredential.toString$0(0) + ", coin: " + this.coin.toString$0(0) + ")";
    }
  };
  A.Certificate_VoteDelegation.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Certificate_VoteDelegation) {
            t2 = other.stakeCredential;
            t3 = _this.stakeCredential;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.dRep;
              t2 = _this.dRep;
              t1 = t1 === t2 || t1.$eq(0, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.stakeCredential, this.dRep, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Certificate.voteDelegation(stakeCredential: " + this.stakeCredential.toString$0(0) + ", dRep: " + this.dRep.toString$0(0) + ")";
    }
  };
  A.Certificate_StakeVoteDelegation.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Certificate_StakeVoteDelegation) {
            t2 = other.stakeCredential;
            t3 = _this.stakeCredential;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t2 = other.stakePoolId;
              t3 = _this.stakePoolId;
              if (t2 === t3 || t2.$eq(0, t3)) {
                t1 = other.dRep;
                t2 = _this.dRep;
                t1 = t1 === t2 || t1.$eq(0, t2);
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.stakeCredential, _this.stakePoolId, _this.dRep, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Certificate.stakeVoteDelegation(stakeCredential: " + this.stakeCredential.toString$0(0) + ", stakePoolId: " + this.stakePoolId.toString$0(0) + ", dRep: " + this.dRep.toString$0(0) + ")";
    }
  };
  A.Certificate_StakeRegistrationDelegation.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Certificate_StakeRegistrationDelegation) {
            t2 = other.stakeCredential;
            t3 = _this.stakeCredential;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t2 = other.stakePoolId;
              t3 = _this.stakePoolId;
              if (t2 === t3 || t2.$eq(0, t3)) {
                t1 = other.coin;
                t2 = _this.coin;
                t1 = t1 === t2 || t1.$eq(0, t2);
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.stakeCredential, _this.stakePoolId, _this.coin, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Certificate.stakeRegistrationDelegation(stakeCredential: " + this.stakeCredential.toString$0(0) + ", stakePoolId: " + this.stakePoolId.toString$0(0) + ", coin: " + this.coin.toString$0(0) + ")";
    }
  };
  A.Certificate_VoteRegistrationDelegation.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Certificate_VoteRegistrationDelegation) {
            t2 = other.stakeCredential;
            t3 = _this.stakeCredential;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t2 = other.dRep;
              t3 = _this.dRep;
              if (t2 === t3 || t2.$eq(0, t3)) {
                t1 = other.coin;
                t2 = _this.coin;
                t1 = t1 === t2 || t1.$eq(0, t2);
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.stakeCredential, _this.dRep, _this.coin, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Certificate.voteRegistrationDelegation(stakeCredential: " + this.stakeCredential.toString$0(0) + ", dRep: " + this.dRep.toString$0(0) + ", coin: " + this.coin.toString$0(0) + ")";
    }
  };
  A.Certificate_StakeVoteRegistrationDelegation.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Certificate_StakeVoteRegistrationDelegation) {
            t2 = other.stakeCredential;
            t3 = _this.stakeCredential;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t2 = other.stakePoolId;
              t3 = _this.stakePoolId;
              if (t2 === t3 || t2.$eq(0, t3)) {
                t2 = other.dRep;
                t3 = _this.dRep;
                if (t2 === t3 || t2.$eq(0, t3)) {
                  t1 = other.coin;
                  t2 = _this.coin;
                  t1 = t1 === t2 || t1.$eq(0, t2);
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.stakeCredential, _this.stakePoolId, _this.dRep, _this.coin, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "Certificate.stakeVoteRegistrationDelegation(stakeCredential: " + _this.stakeCredential.toString$0(0) + ", stakePoolId: " + _this.stakePoolId.toString$0(0) + ", dRep: " + _this.dRep.toString$0(0) + ", coin: " + _this.coin.toString$0(0) + ")";
    }
  };
  A.Certificate_AuthorizeCommitteeHot.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Certificate_AuthorizeCommitteeHot) {
            t2 = other.committeeColdCredential;
            t3 = _this.committeeColdCredential;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.committeeHotCredential;
              t2 = _this.committeeHotCredential;
              t1 = t1 === t2 || t1.$eq(0, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.committeeColdCredential, this.committeeHotCredential, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Certificate.authorizeCommitteeHot(committeeColdCredential: " + this.committeeColdCredential.toString$0(0) + ", committeeHotCredential: " + this.committeeHotCredential.toString$0(0) + ")";
    }
  };
  A.Certificate_ResignCommitteeCold.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Certificate_ResignCommitteeCold) {
            t2 = other.committeeColdCredential;
            t3 = _this.committeeColdCredential;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.anchor;
              t2 = _this.anchor;
              t1 = t1 == t2 || J.$eq$(t1, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.committeeColdCredential, this.anchor, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Certificate.resignCommitteeCold(committeeColdCredential: " + this.committeeColdCredential.toString$0(0) + ", anchor: " + A.S(this.anchor) + ")";
    }
  };
  A.Certificate_RegisterDRep.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Certificate_RegisterDRep) {
            t2 = other.dRepCredential;
            t3 = _this.dRepCredential;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t2 = other.coin;
              t3 = _this.coin;
              if (t2 === t3 || t2.$eq(0, t3)) {
                t1 = other.anchor;
                t2 = _this.anchor;
                t1 = t1 == t2 || J.$eq$(t1, t2);
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.dRepCredential, _this.coin, _this.anchor, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Certificate.registerDRep(dRepCredential: " + this.dRepCredential.toString$0(0) + ", coin: " + this.coin.toString$0(0) + ", anchor: " + A.S(this.anchor) + ")";
    }
  };
  A.Certificate_UnregisterDRep.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Certificate_UnregisterDRep) {
            t2 = other.dRepCredential;
            t3 = _this.dRepCredential;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.coin;
              t2 = _this.coin;
              t1 = t1 === t2 || t1.$eq(0, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.dRepCredential, this.coin, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Certificate.unregisterDRep(dRepCredential: " + this.dRepCredential.toString$0(0) + ", coin: " + this.coin.toString$0(0) + ")";
    }
  };
  A.Certificate_UpdateDRep.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Certificate_UpdateDRep) {
            t2 = other.dRepCredential;
            t3 = _this.dRepCredential;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.anchor;
              t2 = _this.anchor;
              t1 = t1 == t2 || J.$eq$(t1, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.dRepCredential, this.anchor, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Certificate.updateDRep(dRepCredential: " + this.dRepCredential.toString$0(0) + ", anchor: " + A.S(this.anchor) + ")";
    }
  };
  A._Certificate_Object__$Certificate.prototype = {};
  A.CredType.prototype = {
    _enumToString$0() {
      return "CredType." + this._core$_name;
    }
  };
  A.CredType_CredType$fromSmallInt_closure.prototype = {
    call$1(element) {
      return type$.CredType._as(element).intValue === this.value;
    },
    $signature: 169
  };
  A.CredType_CredType$fromSmallInt_closure0.prototype = {
    call$0() {
      return A.throwExpression(A.CborDeserializationException$("CredentialType deserialization failed. Invalid StakeCredType : " + this.value));
    },
    $signature: 34
  };
  A.Credential.prototype = {
    serialize$1$forJson(forJson) {
      var t1 = type$.JSArray_CborValue,
        t2 = A._setArrayType([new A._CborSmallIntImpl(this.type.intValue, B.List_empty)], t1);
      t1 = A._setArrayType([new A._CborBytesImpl(this.vKeyHash, B.List_empty)], t1);
      B.JSArray_methods.addAll$1(t2, t1);
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, t2);
    }
  };
  A._$Credential.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._Credential) {
            t1 = other.type === _this.type;
            t1 = (t1 || t1) && B.DeepCollectionEquality_false.equals$2(other.vKeyHash, _this.vKeyHash);
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.type, B.DeepCollectionEquality_false.hash$1(this.vKeyHash), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Credential(type: " + this.type.toString$0(0) + ", vKeyHash: " + A.S(this.vKeyHash) + ")";
    }
  };
  A._Credential.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._Credential) {
            t1 = other.type === _this.type;
            t1 = (t1 || t1) && B.DeepCollectionEquality_false.equals$2(other.vKeyHash, _this.vKeyHash);
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.type, B.DeepCollectionEquality_false.hash$1(this.vKeyHash), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Credential(type: " + this.type.toString$0(0) + ", vKeyHash: " + A.S(this.vKeyHash) + ")";
    }
  };
  A._Credential_Object__$Credential.prototype = {};
  A.PoolMetadata.prototype = {
    get$metadataHashHex() {
      var value = this.__PoolMetadata_metadataHashHex_FI;
      return value === $ ? this.__PoolMetadata_metadataHashHex_FI = new A.Lazy(new A.PoolMetadata_metadataHashHex_closure(this), type$.Lazy_String) : value;
    },
    serialize$1$forJson(forJson) {
      var t1 = A.List_List$_of(A._setArrayType([new A._CborStringImpl(B.List_empty, this.metadataUrl, null), new A._CborBytesImpl(this.metadataHash, B.List_empty)], type$.JSArray_CborValue), type$.CborValue);
      return new A._CborListImpl(B.List_empty, this.cborLengthType, t1);
    }
  };
  A.PoolMetadata_metadataHashHex_closure.prototype = {
    call$0() {
      var t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(this.$this.metadataHash, false));
      return B.C_HexCodec.get$encoder().convert$1(t1);
    },
    $signature: 1
  };
  A._$PoolMetadata.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._PoolMetadata) {
            t2 = other.get$metadataHashHex() === _this.get$metadataHashHex();
            if (t2 || t2) {
              t2 = other.metadataUrl === _this.metadataUrl;
              if (t2 || t2)
                if (B.DeepCollectionEquality_false.equals$2(other.metadataHash, _this.metadataHash)) {
                  t1 = other.cborLengthType === _this.cborLengthType;
                  t1 = t1 || t1;
                }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.get$metadataHashHex(), _this.metadataUrl, B.DeepCollectionEquality_false.hash$1(_this.metadataHash), _this.cborLengthType, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "PoolMetadata(metadataHashHex: " + _this.get$metadataHashHex().toString$0(0) + ", metadataUrl: " + _this.metadataUrl + ", metadataHash: " + A.S(_this.metadataHash) + ", cborLengthType: " + _this.cborLengthType.toString$0(0) + ")";
    }
  };
  A._PoolMetadata.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._PoolMetadata) {
            t2 = other.metadataUrl === _this.metadataUrl;
            if (t2 || t2)
              if (B.DeepCollectionEquality_false.equals$2(other.metadataHash, _this.metadataHash)) {
                t1 = other.cborLengthType === _this.cborLengthType;
                t1 = t1 || t1;
              }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.metadataUrl, B.DeepCollectionEquality_false.hash$1(_this.metadataHash), _this.cborLengthType, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "PoolMetadata(metadataUrl: " + this.metadataUrl + ", metadataHash: " + A.S(this.metadataHash) + ", cborLengthType: " + this.cborLengthType.toString$0(0) + ")";
    }
  };
  A._PoolMetadata_Object__$PoolMetadata.prototype = {};
  A.StakePoolId.prototype = {};
  A._$StakePoolId.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A._StakePoolId && B.DeepCollectionEquality_false.equals$2(other.poolKeyHash, this.poolKeyHash);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.poolKeyHash), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "StakePoolId(poolKeyHash: " + A.S(this.poolKeyHash) + ")";
    }
  };
  A._StakePoolId.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A._StakePoolId && B.DeepCollectionEquality_false.equals$2(other.poolKeyHash, this.poolKeyHash);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.poolKeyHash), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "StakePoolId(poolKeyHash: " + A.S(this.poolKeyHash) + ")";
    }
  };
  A._StakePoolId_Object__$StakePoolId.prototype = {};
  A.Withdraw.prototype = {
    serializeEntry$1$forJson(forJson) {
      var t1 = A.Bech32Encoder_decodeNoHrpCheck(this.stakeAddressBech32, 256);
      return new A.MapEntry(new A._CborBytesImpl(t1, B.List_empty), A.CborInt_CborInt(this.coin), type$.MapEntry_CborValue_CborInt);
    }
  };
  A.WithdrawIterableExtension_serialize_closure.prototype = {
    call$1(withdrawEntry) {
      return type$.Withdraw._as(withdrawEntry).serializeEntry$1$forJson(this.forJson);
    },
    $signature: 67
  };
  A._$Withdraw.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._Withdraw) {
            t2 = other.stakeAddressBech32 === _this.stakeAddressBech32;
            if (t2 || t2) {
              t1 = other.coin;
              t2 = _this.coin;
              if (t1 !== t2)
                t1 = t1.compareTo$1(0, t2) === 0;
              else
                t1 = true;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.stakeAddressBech32, this.coin, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Withdraw(stakeAddressBech32: " + this.stakeAddressBech32 + ", coin: " + this.coin.toString$0(0) + ")";
    }
  };
  A._Withdraw.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._Withdraw) {
            t2 = other.stakeAddressBech32 === _this.stakeAddressBech32;
            if (t2 || t2) {
              t1 = other.coin;
              t2 = _this.coin;
              if (t1 !== t2)
                t1 = t1.compareTo$1(0, t2) === 0;
              else
                t1 = true;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.stakeAddressBech32, this.coin, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Withdraw(stakeAddressBech32: " + this.stakeAddressBech32 + ", coin: " + this.coin.toString$0(0) + ")";
    }
  };
  A._Withdraw_Object__$Withdraw.prototype = {};
  A.CardanoTransactionBody.prototype = {
    serialize$1$forJson(forJson) {
      var maybeTtlEntry, t5, certs, maybeCertsEntry, withdrawals, maybeWithdrawals, metadataHash, maybeMetadataHash, validityStartInterval, maybeValidityStartInterval, mint, maybeMint, maybeScriptDataHash, maybeCollateral, maybeRequiredSigners, maybeNetworkId, maybeCollateralReturn, maybeTotalCollateral, maybeReferenceInputs, maybeVotingProcedures, maybeProposalProcedures, maybeCurrentTreasuryValue, maybeDonation, _this = this, _null = null,
        t1 = _this.inputs.serialize$1$forJson(false),
        t2 = A.TransactionOutputIterableExtension_serialize(_this.get$outputs(), false),
        t3 = type$.MapEntry_CborValue_CborValue,
        t4 = A.CborInt_CborInt(_this.fee),
        ttl = _this.ttl;
      if (ttl == null)
        maybeTtlEntry = _null;
      else {
        t5 = A.CborInt_CborInt(ttl);
        maybeTtlEntry = new A.MapEntry(B._CborSmallIntImpl_3_List_empty, t5, t3);
      }
      certs = _this.get$certs();
      if (certs == null)
        maybeCertsEntry = _null;
      else
        maybeCertsEntry = new A.MapEntry(B._CborSmallIntImpl_4_List_empty, A.CertificateIterableExtension_serialize(certs, false), t3);
      withdrawals = _this.get$withdrawals();
      if (withdrawals == null)
        maybeWithdrawals = _null;
      else
        maybeWithdrawals = new A.MapEntry(B._CborSmallIntImpl_5_List_empty, A.WithdrawIterableExtension_serialize(withdrawals, false), t3);
      metadataHash = _this.metadataHash;
      if (metadataHash == null || metadataHash.length === 0)
        maybeMetadataHash = _null;
      else
        maybeMetadataHash = new A.MapEntry(B._CborSmallIntImpl_7_List_empty, new A._CborBytesImpl(metadataHash, B.List_empty), type$.MapEntry_CborSmallInt_CborBytes);
      validityStartInterval = _this.validityStartInterval;
      if (validityStartInterval == null)
        maybeValidityStartInterval = _null;
      else
        maybeValidityStartInterval = new A.MapEntry(B._CborSmallIntImpl_8_List_empty, A.CborInt_CborInt(validityStartInterval), type$.MapEntry_CborValue_CborInt);
      mint = _this.get$mint();
      if (mint == null)
        maybeMint = _null;
      else
        maybeMint = new A.MapEntry(B._CborSmallIntImpl_9_List_empty, A.MultiAssetIterableX_serialize(mint, false), type$.MapEntry_CborValue_CborMap);
      t5 = _this.scriptDataHash;
      maybeScriptDataHash = t5 == null ? _null : new A.CardanoTransactionBody_serialize_closure(false).call$1(t5);
      t5 = _this.collateral;
      maybeCollateral = t5 == null ? _null : new A.CardanoTransactionBody_serialize_closure0(false).call$1(t5);
      t5 = _this.requiredSigners;
      maybeRequiredSigners = t5 == null ? _null : new A.CardanoTransactionBody_serialize_closure1(false).call$1(t5);
      t5 = _this.networkId;
      maybeNetworkId = t5 == null ? _null : new A.CardanoTransactionBody_serialize_closure2(false).call$1(t5);
      t5 = _this.collateralReturn;
      maybeCollateralReturn = t5 == null ? _null : new A.CardanoTransactionBody_serialize_closure3(false).call$1(t5);
      t5 = _this.totalCollateral;
      maybeTotalCollateral = t5 == null ? _null : new A.CardanoTransactionBody_serialize_closure4(false).call$1(t5);
      t5 = _this.referenceInputs;
      maybeReferenceInputs = t5 == null ? _null : new A.CardanoTransactionBody_serialize_closure5(false).call$1(t5);
      t5 = _this.votingProcedures;
      maybeVotingProcedures = t5 == null ? _null : new A.CardanoTransactionBody_serialize_closure6(false).call$1(t5);
      t5 = _this.get$proposalProcedures();
      maybeProposalProcedures = t5 == null ? _null : new A.CardanoTransactionBody_serialize_closure7(false).call$1(t5);
      t5 = _this.currentTreasuryValue;
      maybeCurrentTreasuryValue = t5 == null ? _null : new A.CardanoTransactionBody_serialize_closure8(false).call$1(t5);
      t5 = _this.donation;
      maybeDonation = t5 == null ? _null : new A.CardanoTransactionBody_serialize_closure9(false).call$1(t5);
      t5 = type$.CborValue;
      return new A._CborMapImpl(B.List_empty, B.CborLengthType_2, A.Map_Map$fromEntries(new A.WhereTypeIterable(A._setArrayType([new A.MapEntry(B._CborSmallIntImpl_0_List_empty, t1, type$.MapEntry_CborValue_CborList), new A.MapEntry(B._CborSmallIntImpl_1_List_empty, t2, t3), new A.MapEntry(B._CborSmallIntImpl_2_List_empty, t4, t3), maybeTtlEntry, maybeCertsEntry, maybeWithdrawals, maybeMetadataHash, maybeValidityStartInterval, maybeMint, maybeScriptDataHash, maybeCollateral, maybeRequiredSigners, maybeNetworkId, maybeCollateralReturn, maybeTotalCollateral, maybeReferenceInputs, maybeVotingProcedures, maybeProposalProcedures, maybeCurrentTreasuryValue, maybeDonation], type$.JSArray_nullable_MapEntry_CborValue_CborValue), type$.WhereTypeIterable_MapEntry_CborValue_CborValue), t5, t5));
    },
    blake2bHash256Hex$0() {
      var t1 = this.originalBlake2bHash256;
      if (t1 == null) {
        t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(A.Hash_blake2b(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(type$.CborCodec._eval$1("Codec.S")._as(this.serialize$1$forJson(false))))), 32), false));
        t1 = B.C_HexCodec.get$encoder().convert$1(t1);
      }
      return t1;
    }
  };
  A.CardanoTransactionBody_CardanoTransactionBody$deserialize_closure.prototype = {
    call$1(cValue) {
      return type$.CborMap._as(type$.CborValue._as(cValue))._base.get$entries().map$1$1(0, new A.CardanoTransactionBody_CardanoTransactionBody$deserialize__closure(), type$.Withdraw);
    },
    $signature: 170
  };
  A.CardanoTransactionBody_CardanoTransactionBody$deserialize__closure.prototype = {
    call$1(e) {
      var t1, t2, base, extension;
      type$.MapEntry_CborValue_CborValue._as(e);
      t1 = type$.CborBytes._as(e.key);
      t2 = type$.CborInt._as(e.value);
      t1 = new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(t1.get$bytes(), false)));
      base = A.CardanoAddress__getAddressBech32BaseHrp(t1);
      extension = (0 === (B.NativeUint8List_methods.get$first(t1) & 15) ? B.NetworkId_0_0_testnet : B.NetworkId_1_1_mainnet) === B.NetworkId_1_1_mainnet ? "" : "_test";
      return new A._Withdraw(new A.Bech32Encoder(base + extension).encode$1(B.NativeUint8List_methods.toList$1$growable(t1, false)), t2.toBigInt$0());
    },
    $signature: 68
  };
  A.CardanoTransactionBody_CardanoTransactionBody$deserialize_closure0.prototype = {
    call$1(entry) {
      return A.MultiAsset_MultiAsset$deserialize(type$.MapEntry_CborValue_CborValue._as(entry));
    },
    $signature: 65
  };
  A.CardanoTransactionBody_CardanoTransactionBody$deserialize_closure1.prototype = {
    call$1(p0) {
      return new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(type$.CborBytes._as(type$.CborValue._as(p0)).get$bytes(), false)));
    },
    $signature: 20
  };
  A.CardanoTransactionBody_CardanoTransactionBody$deserialize_closure2.prototype = {
    call$1(p0) {
      return A.NetworkId_NetworkId$fromIntValue(type$.CborSmallInt._as(type$.CborValue._as(p0)).value);
    },
    $signature: 172
  };
  A.CardanoTransactionBody_CardanoTransactionBody$deserialize_closure3.prototype = {
    call$1(p0) {
      return type$.CborInt._as(type$.CborValue._as(p0)).toBigInt$0();
    },
    $signature: 7
  };
  A.CardanoTransactionBody_serialize_closure.prototype = {
    call$1(p0) {
      type$.Uint8List._as(p0);
      return new A.MapEntry(B._CborSmallIntImpl_11_List_empty, A.IntListExtensions_serializeCbor(p0, this.forJson, B.List_empty), type$.MapEntry_CborValue_CborValue);
    },
    $signature: 35
  };
  A.CardanoTransactionBody_serialize_closure0.prototype = {
    call$1(p0) {
      type$.CardanoTransactionInputs._as(p0);
      return new A.MapEntry(B._CborSmallIntImpl_13_List_empty, p0.serialize$1$forJson(this.forJson), type$.MapEntry_CborValue_CborList);
    },
    $signature: 64
  };
  A.CardanoTransactionBody_serialize_closure1.prototype = {
    call$1(p0) {
      type$.RequiredSigners._as(p0);
      return new A.MapEntry(B._CborSmallIntImpl_14_List_empty, p0.serialize$1$forJson(this.forJson), type$.MapEntry_CborValue_CborList);
    },
    $signature: 181
  };
  A.CardanoTransactionBody_serialize_closure2.prototype = {
    call$1(p0) {
      type$.NetworkId._as(p0);
      return new A.MapEntry(B._CborSmallIntImpl_15_List_empty, new A._CborSmallIntImpl(p0.intValue, B.List_empty), type$.MapEntry_CborValue_CborValue);
    },
    $signature: 182
  };
  A.CardanoTransactionBody_serialize_closure3.prototype = {
    call$1(p0) {
      type$.CardanoTransactionOutput._as(p0);
      return new A.MapEntry(B._CborSmallIntImpl_16_List_empty, p0.serialize$1$forJson(this.forJson), type$.MapEntry_CborValue_CborValue);
    },
    $signature: 183
  };
  A.CardanoTransactionBody_serialize_closure4.prototype = {
    call$1(p0) {
      var t1;
      type$.BigInt._as(p0);
      t1 = A.CborInt_CborInt(p0);
      return new A.MapEntry(B._CborSmallIntImpl_17_List_empty, t1, type$.MapEntry_CborValue_CborValue);
    },
    $signature: 199
  };
  A.CardanoTransactionBody_serialize_closure5.prototype = {
    call$1(p0) {
      type$.CardanoTransactionInputs._as(p0);
      return new A.MapEntry(B._CborSmallIntImpl_18_List_empty, p0.serialize$1$forJson(this.forJson), type$.MapEntry_CborValue_CborList);
    },
    $signature: 64
  };
  A.CardanoTransactionBody_serialize_closure6.prototype = {
    call$1(p0) {
      type$.VotingProcedures._as(p0);
      return new A.MapEntry(B._CborSmallIntImpl_19_List_empty, p0.serialize$1$forJson(this.forJson), type$.MapEntry_CborValue_CborValue);
    },
    $signature: 207
  };
  A.CardanoTransactionBody_serialize_closure7.prototype = {
    call$1(p0) {
      var t1;
      type$.List_ProposalProcedure._as(p0);
      t1 = type$.CborValue;
      t1 = A.List_List$_of(J.map$1$1$ax(p0, new A.CardanoTransactionBody_serialize__closure(this.forJson), t1), t1);
      return new A.MapEntry(B._CborSmallIntImpl_20_List_empty, new A._CborListImpl(B.List_empty, B.CborLengthType_2, t1), type$.MapEntry_CborValue_CborList);
    },
    $signature: 208
  };
  A.CardanoTransactionBody_serialize__closure.prototype = {
    call$1(e) {
      return type$.ProposalProcedure._as(e).serialize$1$forJson(this.forJson);
    },
    $signature: 210
  };
  A.CardanoTransactionBody_serialize_closure8.prototype = {
    call$1(p0) {
      type$.CborInt._as(p0);
      return new A.MapEntry(B._CborSmallIntImpl_21_List_empty, p0, type$.MapEntry_CborValue_CborInt);
    },
    $signature: 62
  };
  A.CardanoTransactionBody_serialize_closure9.prototype = {
    call$1(p0) {
      type$.CborInt._as(p0);
      return new A.MapEntry(B._CborSmallIntImpl_22_List_empty, p0, type$.MapEntry_CborValue_CborInt);
    },
    $signature: 62
  };
  A._$CardanoTransactionBody.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._CardanoTransactionBody) {
            t2 = other.originalBlake2bHash256 == _this.originalBlake2bHash256;
            if (t2 || t2) {
              t2 = other.inputs;
              t3 = _this.inputs;
              if (t2 === t3 || t2.$eq(0, t3))
                if (B.DeepCollectionEquality_false.equals$2(other.get$outputs(), _this.get$outputs())) {
                  t2 = other.fee;
                  t3 = _this.fee;
                  if (t2 !== t3)
                    t2 = t2.compareTo$1(0, t3) === 0;
                  else
                    t2 = true;
                  if (t2) {
                    t2 = other.ttl;
                    t3 = _this.ttl;
                    if (t2 == t3 || J.$eq$(t2, t3))
                      if (B.DeepCollectionEquality_false.equals$2(other.get$certs(), _this.get$certs()))
                        if (B.DeepCollectionEquality_false.equals$2(other.get$withdrawals(), _this.get$withdrawals()))
                          if (B.DeepCollectionEquality_false.equals$2(other.metadataHash, _this.metadataHash)) {
                            t2 = other.validityStartInterval;
                            t3 = _this.validityStartInterval;
                            if (t2 == t3 || J.$eq$(t2, t3))
                              if (B.DeepCollectionEquality_false.equals$2(other.get$mint(), _this.get$mint()))
                                if (B.DeepCollectionEquality_false.equals$2(other.scriptDataHash, _this.scriptDataHash)) {
                                  t2 = other.collateral;
                                  t3 = _this.collateral;
                                  if (t2 == t3 || J.$eq$(t2, t3)) {
                                    t2 = other.requiredSigners;
                                    t3 = _this.requiredSigners;
                                    if (t2 == t3 || J.$eq$(t2, t3)) {
                                      t2 = other.networkId == _this.networkId;
                                      if (t2 || t2) {
                                        t2 = other.collateralReturn;
                                        t3 = _this.collateralReturn;
                                        if (t2 == t3 || J.$eq$(t2, t3)) {
                                          t2 = other.totalCollateral;
                                          t3 = _this.totalCollateral;
                                          if (t2 == t3 || J.$eq$(t2, t3)) {
                                            t2 = other.referenceInputs;
                                            t3 = _this.referenceInputs;
                                            if (t2 == t3 || J.$eq$(t2, t3)) {
                                              t2 = other.votingProcedures;
                                              t3 = _this.votingProcedures;
                                              if (t2 == t3 || J.$eq$(t2, t3))
                                                if (B.DeepCollectionEquality_false.equals$2(other.get$proposalProcedures(), _this.get$proposalProcedures())) {
                                                  t2 = other.currentTreasuryValue;
                                                  t3 = _this.currentTreasuryValue;
                                                  if (t2 == t3 || J.$eq$(t2, t3)) {
                                                    t1 = other.donation;
                                                    t2 = _this.donation;
                                                    t1 = t1 == t2 || J.$eq$(t1, t2);
                                                  }
                                                }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                          }
                  }
                }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hashAll([A.getRuntimeTypeOfDartObject(_this), _this.originalBlake2bHash256, _this.inputs, B.DeepCollectionEquality_false.hash$1(_this.get$outputs()), _this.fee, _this.ttl, B.DeepCollectionEquality_false.hash$1(_this.get$certs()), B.DeepCollectionEquality_false.hash$1(_this.get$withdrawals()), B.DeepCollectionEquality_false.hash$1(_this.metadataHash), _this.validityStartInterval, B.DeepCollectionEquality_false.hash$1(_this.get$mint()), B.DeepCollectionEquality_false.hash$1(_this.scriptDataHash), _this.collateral, _this.requiredSigners, _this.networkId, _this.collateralReturn, _this.totalCollateral, _this.referenceInputs, _this.votingProcedures, B.DeepCollectionEquality_false.hash$1(_this.get$proposalProcedures()), _this.currentTreasuryValue, _this.donation]);
    },
    toString$0(_) {
      var _this = this;
      return "CardanoTransactionBody(originalBlake2bHash256: " + A.S(_this.originalBlake2bHash256) + ", inputs: " + _this.inputs.toString$0(0) + ", outputs: " + A.S(_this.get$outputs()) + ", fee: " + _this.fee.toString$0(0) + ", ttl: " + A.S(_this.ttl) + ", certs: " + A.S(_this.get$certs()) + ", withdrawals: " + A.S(_this.get$withdrawals()) + ", metadataHash: " + A.S(_this.metadataHash) + ", validityStartInterval: " + A.S(_this.validityStartInterval) + ", mint: " + A.S(_this.get$mint()) + ", scriptDataHash: " + A.S(_this.scriptDataHash) + ", collateral: " + A.S(_this.collateral) + ", requiredSigners: " + A.S(_this.requiredSigners) + ", networkId: " + A.S(_this.networkId) + ", collateralReturn: " + A.S(_this.collateralReturn) + ", totalCollateral: " + A.S(_this.totalCollateral) + ", referenceInputs: " + A.S(_this.referenceInputs) + ", votingProcedures: " + A.S(_this.votingProcedures) + ", proposalProcedures: " + A.S(_this.get$proposalProcedures()) + ", currentTreasuryValue: " + A.S(_this.currentTreasuryValue) + ", donation: " + A.S(_this.donation) + ")";
    }
  };
  A._CardanoTransactionBody.prototype = {
    get$outputs() {
      var t1 = this._outputs;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_CardanoTransactionOutput);
    },
    get$certs() {
      var value = this._certs;
      if (value == null)
        return null;
      if (value instanceof A.EqualUnmodifiableListView)
        return value;
      return new A.EqualUnmodifiableListView(value, value, type$.EqualUnmodifiableListView_Certificate);
    },
    get$withdrawals() {
      var value = this._transaction_body$_withdrawals;
      if (value == null)
        return null;
      if (value instanceof A.EqualUnmodifiableListView)
        return value;
      return new A.EqualUnmodifiableListView(value, value, type$.EqualUnmodifiableListView_Withdraw);
    },
    get$mint() {
      var value = this._mint;
      if (value == null)
        return null;
      if (value instanceof A.EqualUnmodifiableListView)
        return value;
      return new A.EqualUnmodifiableListView(value, value, type$.EqualUnmodifiableListView_MultiAsset);
    },
    get$proposalProcedures() {
      var value = this._proposalProcedures;
      if (value == null)
        return null;
      if (value instanceof A.EqualUnmodifiableListView)
        return value;
      return new A.EqualUnmodifiableListView(value, value, type$.EqualUnmodifiableListView_ProposalProcedure);
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._CardanoTransactionBody) {
            t2 = other.originalBlake2bHash256 == _this.originalBlake2bHash256;
            if (t2 || t2) {
              t2 = other.inputs;
              t3 = _this.inputs;
              if (t2 === t3 || t2.$eq(0, t3))
                if (B.DeepCollectionEquality_false.equals$2(other._outputs, _this._outputs)) {
                  t2 = other.fee;
                  t3 = _this.fee;
                  if (t2 !== t3)
                    t2 = t2.compareTo$1(0, t3) === 0;
                  else
                    t2 = true;
                  if (t2) {
                    t2 = other.ttl;
                    t3 = _this.ttl;
                    if (t2 == t3 || J.$eq$(t2, t3))
                      if (B.DeepCollectionEquality_false.equals$2(other._certs, _this._certs))
                        if (B.DeepCollectionEquality_false.equals$2(other._transaction_body$_withdrawals, _this._transaction_body$_withdrawals))
                          if (B.DeepCollectionEquality_false.equals$2(other.metadataHash, _this.metadataHash)) {
                            t2 = other.validityStartInterval;
                            t3 = _this.validityStartInterval;
                            if (t2 == t3 || J.$eq$(t2, t3))
                              if (B.DeepCollectionEquality_false.equals$2(other._mint, _this._mint))
                                if (B.DeepCollectionEquality_false.equals$2(other.scriptDataHash, _this.scriptDataHash)) {
                                  t2 = other.collateral;
                                  t3 = _this.collateral;
                                  if (t2 == t3 || J.$eq$(t2, t3)) {
                                    t2 = other.requiredSigners;
                                    t3 = _this.requiredSigners;
                                    if (t2 == t3 || J.$eq$(t2, t3)) {
                                      t2 = other.networkId == _this.networkId;
                                      if (t2 || t2) {
                                        t2 = other.collateralReturn;
                                        t3 = _this.collateralReturn;
                                        if (t2 == t3 || J.$eq$(t2, t3)) {
                                          t2 = other.totalCollateral;
                                          t3 = _this.totalCollateral;
                                          if (t2 == t3 || J.$eq$(t2, t3)) {
                                            t2 = other.referenceInputs;
                                            t3 = _this.referenceInputs;
                                            if (t2 == t3 || J.$eq$(t2, t3)) {
                                              t2 = other.votingProcedures;
                                              t3 = _this.votingProcedures;
                                              if (t2 == t3 || J.$eq$(t2, t3))
                                                if (B.DeepCollectionEquality_false.equals$2(other._proposalProcedures, _this._proposalProcedures)) {
                                                  t2 = other.currentTreasuryValue;
                                                  t3 = _this.currentTreasuryValue;
                                                  if (t2 == t3 || J.$eq$(t2, t3)) {
                                                    t1 = other.donation;
                                                    t2 = _this.donation;
                                                    t1 = t1 == t2 || J.$eq$(t1, t2);
                                                  }
                                                }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                          }
                  }
                }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hashAll([A.getRuntimeTypeOfDartObject(_this), _this.originalBlake2bHash256, _this.inputs, B.DeepCollectionEquality_false.hash$1(_this._outputs), _this.fee, _this.ttl, B.DeepCollectionEquality_false.hash$1(_this._certs), B.DeepCollectionEquality_false.hash$1(_this._transaction_body$_withdrawals), B.DeepCollectionEquality_false.hash$1(_this.metadataHash), _this.validityStartInterval, B.DeepCollectionEquality_false.hash$1(_this._mint), B.DeepCollectionEquality_false.hash$1(_this.scriptDataHash), _this.collateral, _this.requiredSigners, _this.networkId, _this.collateralReturn, _this.totalCollateral, _this.referenceInputs, _this.votingProcedures, B.DeepCollectionEquality_false.hash$1(_this._proposalProcedures), _this.currentTreasuryValue, _this.donation]);
    },
    toString$0(_) {
      var _this = this;
      return "CardanoTransactionBody._hidden(originalBlake2bHash256: " + A.S(_this.originalBlake2bHash256) + ", inputs: " + _this.inputs.toString$0(0) + ", outputs: " + A.S(_this.get$outputs()) + ", fee: " + _this.fee.toString$0(0) + ", ttl: " + A.S(_this.ttl) + ", certs: " + A.S(_this.get$certs()) + ", withdrawals: " + A.S(_this.get$withdrawals()) + ", metadataHash: " + A.S(_this.metadataHash) + ", validityStartInterval: " + A.S(_this.validityStartInterval) + ", mint: " + A.S(_this.get$mint()) + ", scriptDataHash: " + A.S(_this.scriptDataHash) + ", collateral: " + A.S(_this.collateral) + ", requiredSigners: " + A.S(_this.requiredSigners) + ", networkId: " + A.S(_this.networkId) + ", collateralReturn: " + A.S(_this.collateralReturn) + ", totalCollateral: " + A.S(_this.totalCollateral) + ", referenceInputs: " + A.S(_this.referenceInputs) + ", votingProcedures: " + A.S(_this.votingProcedures) + ", proposalProcedures: " + A.S(_this.get$proposalProcedures()) + ", currentTreasuryValue: " + A.S(_this.currentTreasuryValue) + ", donation: " + A.S(_this.donation) + ")";
    }
  };
  A._CardanoTransactionBody_Object__$CardanoTransactionBody.prototype = {};
  A.WitnessVKey.prototype = {
    serialize$1$forJson(forJson) {
      var t1 = A._setArrayType([], type$.JSArray_CborValue);
      t1.push(new A._CborBytesImpl(this.vkey, B.List_empty));
      t1.push(new A._CborBytesImpl(this.signature, B.List_empty));
      t1 = A.List_List$_of(t1, type$.CborValue);
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, t1);
    }
  };
  A._$WitnessVKey.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this) && other instanceof A._WitnessVKey && B.DeepCollectionEquality_false.equals$2(other.vkey, _this.vkey) && B.DeepCollectionEquality_false.equals$2(other.signature, _this.signature);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.vkey), B.DeepCollectionEquality_false.hash$1(this.signature), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "WitnessVKey(vkey: " + A.S(this.vkey) + ", signature: " + A.S(this.signature) + ")";
    }
  };
  A._WitnessVKey.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this) && other instanceof A._WitnessVKey && B.DeepCollectionEquality_false.equals$2(other.vkey, _this.vkey) && B.DeepCollectionEquality_false.equals$2(other.signature, _this.signature);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.vkey), B.DeepCollectionEquality_false.hash$1(this.signature), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "WitnessVKey(vkey: " + A.S(this.vkey) + ", signature: " + A.S(this.signature) + ")";
    }
  };
  A._WitnessVKey_Object__$WitnessVKey.prototype = {};
  A.NativeScript.prototype = {
    get$selector() {
      var t1, _this = this;
      $label0$0: {
        if (_this instanceof A.NativeScript_PubKey) {
          t1 = 0;
          break $label0$0;
        }
        if (_this instanceof A.NativeScript_All) {
          t1 = 1;
          break $label0$0;
        }
        if (_this instanceof A.NativeScript_Any) {
          t1 = 2;
          break $label0$0;
        }
        if (_this instanceof A.NativeScript_AtLeast) {
          t1 = 3;
          break $label0$0;
        }
        if (_this instanceof A.NativeScript_RequireTimeAfter) {
          t1 = 4;
          break $label0$0;
        }
        if (_this instanceof A.NativeScript_RequireTimeBefore) {
          t1 = 5;
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    },
    serialize$1$forJson(forJson) {
      var _0_4, t3, _this = this,
        t1 = _this.get$selector(),
        t2 = type$.JSArray_CborValue;
      t1 = A._setArrayType([new A._CborSmallIntImpl(t1, B.List_empty)], t2);
      $label0$0: {
        if (_this instanceof A.NativeScript_PubKey) {
          t2 = A._setArrayType([new A.NativeScript_serialize_encoder(_this, false).call$1(_this.blob)], t2);
          break $label0$0;
        }
        if (_this instanceof A.NativeScript_All) {
          _0_4 = _this.get$scripts();
          t3 = type$.CborValue;
          t3 = A.List_List$_of(J.map$1$1$ax(_0_4, new A.NativeScript_serialize_closure(false), t3), t3);
          t2 = A._setArrayType([new A._CborListImpl(B.List_empty, B.CborLengthType_2, t3)], t2);
          break $label0$0;
        }
        if (_this instanceof A.NativeScript_Any) {
          _0_4 = _this.get$scripts();
          t3 = type$.CborValue;
          t3 = A.List_List$_of(J.map$1$1$ax(_0_4, new A.NativeScript_serialize_closure0(false), t3), t3);
          t2 = A._setArrayType([new A._CborListImpl(B.List_empty, B.CborLengthType_2, t3)], t2);
          break $label0$0;
        }
        if (_this instanceof A.NativeScript_AtLeast) {
          _0_4 = _this.get$scripts();
          t3 = type$.CborValue;
          t3 = A.List_List$_of(J.map$1$1$ax(_0_4, new A.NativeScript_serialize_closure1(false), t3), t3);
          t2 = A._setArrayType([new A._CborSmallIntImpl(_this.required, B.List_empty), new A._CborListImpl(B.List_empty, B.CborLengthType_2, t3)], t2);
          break $label0$0;
        }
        if (_this instanceof A.NativeScript_RequireTimeAfter) {
          t2 = A._setArrayType([A.CborInt_CborInt(_this.slot)], t2);
          break $label0$0;
        }
        if (_this instanceof A.NativeScript_RequireTimeBefore) {
          t2 = A._setArrayType([A.CborInt_CborInt(_this.slot)], t2);
          break $label0$0;
        }
        t2 = null;
      }
      B.JSArray_methods.addAll$1(t1, t2);
      t1 = A.List_List$_of(t1, type$.CborValue);
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, t1);
    }
  };
  A.NativeScript_serialize_encoder.prototype = {
    call$1(data) {
      return new A._CborBytesImpl(data, B.List_empty);
    },
    $signature: 73
  };
  A.NativeScript_serialize_closure.prototype = {
    call$1(e) {
      return type$.NativeScript._as(e).serialize$1$forJson(this.forJson);
    },
    $signature: 25
  };
  A.NativeScript_serialize_closure0.prototype = {
    call$1(e) {
      return type$.NativeScript._as(e).serialize$1$forJson(this.forJson);
    },
    $signature: 25
  };
  A.NativeScript_serialize_closure1.prototype = {
    call$1(e) {
      return type$.NativeScript._as(e).serialize$1$forJson(this.forJson);
    },
    $signature: 25
  };
  A.NativeScript_NativeScript$deserialize_closure.prototype = {
    call$1(e) {
      return A.NativeScript_NativeScript$deserialize(type$.CborList._as(type$.CborValue._as(e)));
    },
    $signature: 26
  };
  A.NativeScript_NativeScript$deserialize_closure0.prototype = {
    call$1(e) {
      return A.NativeScript_NativeScript$deserialize(type$.CborList._as(type$.CborValue._as(e)));
    },
    $signature: 26
  };
  A.NativeScript_NativeScript$deserialize_closure1.prototype = {
    call$1(e) {
      return A.NativeScript_NativeScript$deserialize(type$.CborList._as(type$.CborValue._as(e)));
    },
    $signature: 26
  };
  A._$NativeScript.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.NativeScript;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(A.getRuntimeTypeOfDartObject(this));
    },
    toString$0(_) {
      return "NativeScript()";
    }
  };
  A.NativeScript_PubKey.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.NativeScript_PubKey && B.DeepCollectionEquality_false.equals$2(other.blob, this.blob);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.blob), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "NativeScript.pubKey(blob: " + A.S(this.blob) + ")";
    }
  };
  A.NativeScript_All.prototype = {
    get$scripts() {
      var t1 = this._scripts;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_NativeScript);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.NativeScript_All && B.DeepCollectionEquality_false.equals$2(other._scripts, this._scripts);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this._scripts), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "NativeScript.all(scripts: " + A.S(this.get$scripts()) + ")";
    }
  };
  A.NativeScript_Any.prototype = {
    get$scripts() {
      var t1 = this._scripts;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_NativeScript);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.NativeScript_Any && B.DeepCollectionEquality_false.equals$2(other._scripts, this._scripts);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this._scripts), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "NativeScript.any(scripts: " + A.S(this.get$scripts()) + ")";
    }
  };
  A.NativeScript_AtLeast.prototype = {
    get$scripts() {
      var t1 = this._scripts;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_NativeScript);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.NativeScript_AtLeast) {
            t1 = other.required === _this.required;
            t1 = (t1 || t1) && B.DeepCollectionEquality_false.equals$2(other._scripts, _this._scripts);
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.required, B.DeepCollectionEquality_false.hash$1(this._scripts), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "NativeScript.atLeast(required: " + this.required + ", scripts: " + A.S(this.get$scripts()) + ")";
    }
  };
  A.NativeScript_RequireTimeAfter.prototype = {
    $eq(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      t1 = true;
      if (this !== other)
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this))
          if (other instanceof A.NativeScript_RequireTimeAfter) {
            t2 = other.slot;
            t3 = this.slot;
            if (t2 !== t3)
              t1 = t2.compareTo$1(0, t3) === 0;
          } else
            t1 = false;
        else
          t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.slot, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "NativeScript.requireTimeAfter(slot: " + this.slot.toString$0(0) + ")";
    }
  };
  A.NativeScript_RequireTimeBefore.prototype = {
    $eq(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      t1 = true;
      if (this !== other)
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this))
          if (other instanceof A.NativeScript_RequireTimeBefore) {
            t2 = other.slot;
            t3 = this.slot;
            if (t2 !== t3)
              t1 = t2.compareTo$1(0, t3) === 0;
          } else
            t1 = false;
        else
          t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.slot, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "NativeScript.requireTimeBefore(slot: " + this.slot.toString$0(0) + ")";
    }
  };
  A._NativeScript_Script__$NativeScript.prototype = {};
  A.WitnessBootstrap.prototype = {
    serialize$1$forJson(forJson) {
      var _this = this,
        t1 = A.List_List$_of(A._setArrayType([A.IntListExtensions_serializeCbor(_this.publicKey, false, B.List_empty), A.IntListExtensions_serializeCbor(_this.signature, false, B.List_empty), A.IntListExtensions_serializeCbor(_this.chainCode, false, B.List_empty), A.IntListExtensions_serializeCbor(_this.attributes, false, B.List_empty)], type$.JSArray_CborValue), type$.CborValue);
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, t1);
    }
  };
  A._$WitnessBootstrap.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this) && other instanceof A._WitnessBootstrap && B.DeepCollectionEquality_false.equals$2(other.publicKey, _this.publicKey) && B.DeepCollectionEquality_false.equals$2(other.signature, _this.signature) && B.DeepCollectionEquality_false.equals$2(other.chainCode, _this.chainCode) && B.DeepCollectionEquality_false.equals$2(other.attributes, _this.attributes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), B.DeepCollectionEquality_false.hash$1(_this.publicKey), B.DeepCollectionEquality_false.hash$1(_this.signature), B.DeepCollectionEquality_false.hash$1(_this.chainCode), B.DeepCollectionEquality_false.hash$1(_this.attributes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "WitnessBootstrap(publicKey: " + A.S(_this.publicKey) + ", signature: " + A.S(_this.signature) + ", chainCode: " + A.S(_this.chainCode) + ", attributes: " + A.S(_this.attributes) + ")";
    }
  };
  A._WitnessBootstrap.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this) && other instanceof A._WitnessBootstrap && B.DeepCollectionEquality_false.equals$2(other.publicKey, _this.publicKey) && B.DeepCollectionEquality_false.equals$2(other.signature, _this.signature) && B.DeepCollectionEquality_false.equals$2(other.chainCode, _this.chainCode) && B.DeepCollectionEquality_false.equals$2(other.attributes, _this.attributes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), B.DeepCollectionEquality_false.hash$1(_this.publicKey), B.DeepCollectionEquality_false.hash$1(_this.signature), B.DeepCollectionEquality_false.hash$1(_this.chainCode), B.DeepCollectionEquality_false.hash$1(_this.attributes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "WitnessBootstrap(publicKey: " + A.S(_this.publicKey) + ", signature: " + A.S(_this.signature) + ", chainCode: " + A.S(_this.chainCode) + ", attributes: " + A.S(_this.attributes) + ")";
    }
  };
  A._WitnessBootstrap_Object__$WitnessBootstrap.prototype = {};
  A.PlutusScriptV1.prototype = {};
  A._$PlutusScriptV1.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A._PlutusScriptV1 && B.DeepCollectionEquality_false.equals$2(other.bytes, this.bytes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "PlutusScriptV1(bytes: " + A.S(this.bytes) + ")";
    }
  };
  A._PlutusScriptV1.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A._PlutusScriptV1 && B.DeepCollectionEquality_false.equals$2(other.bytes, this.bytes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "PlutusScriptV1(bytes: " + A.S(this.bytes) + ")";
    }
  };
  A._PlutusScriptV1_Script__$PlutusScriptV1.prototype = {};
  A.PlutusData.prototype = {
    serialize$1$forJson(forJson) {
      var t1, _this = this;
      $label0$0: {
        if (_this instanceof A.PlutusData_BigInt) {
          t1 = A.CborInt_CborInt(_this.value);
          break $label0$0;
        }
        if (_this instanceof A.PlutusData_DefiniteBytes) {
          t1 = A.IntListExtensions_serializeCbor(_this.get$bytes(), false, _this.get$tags());
          break $label0$0;
        }
        if (_this instanceof A.PlutusData_IndefiniteBytes) {
          t1 = A.IntListListExtensions_serializeCbor(_this.get$bytesList(), false, _this.get$tags());
          break $label0$0;
        }
        if (_this instanceof A.PlutusData_Constr) {
          t1 = A._alternativeToCompactCborTag(_this.alternative);
          t1 = A._setArrayType([new A._CborSmallIntImpl(t1, B.List_empty), A._serializePlutusData_List(_this.data, false)], type$.JSArray_CborValue);
          t1 = new A._CborListImpl(_this.get$tags(), _this.cborLengthType, t1);
          break $label0$0;
        }
        if (_this instanceof A.PlutusData_List) {
          t1 = A._serializePlutusData_List(_this, false);
          break $label0$0;
        }
        if (_this instanceof A.PlutusData_Map) {
          t1 = type$.CborValue;
          t1 = _this.get$data().map$2$1(0, new A.PlutusData_serialize_closure(false), t1, t1);
          t1 = new A._CborMapImpl(_this.get$tags(), _this.cborLengthType, t1);
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    }
  };
  A.PlutusData_serialize_closure.prototype = {
    call$2(key, value) {
      var t1 = type$.PlutusData;
      t1._as(key);
      t1._as(value);
      t1 = this.forJson;
      return new A.MapEntry(key.serialize$1$forJson(t1), value.serialize$1$forJson(t1), type$.MapEntry_CborValue_CborValue);
    },
    $signature: 221
  };
  A.PlutusData_PlutusData$deserialize_fromCborList.prototype = {
    call$1(cValue) {
      var t2, t3, alternative, data,
        t1 = type$.CborList;
      t1._as(cValue);
      if (J.any$1$ax(cValue.get$tags(), new A.PlutusData_PlutusData$deserialize_fromCborList_closure())) {
        t2 = cValue._base;
        t3 = t2.length;
        if (t3 !== 2)
          throw A.wrapException(A.PlutusDataParseException$("constr: Length is " + cValue.get$length(0) + " instead of 2"));
        if (0 >= t3)
          return A.ioore(t2, 0);
        alternative = type$.CborSmallInt._as(t2[0]);
        if (1 >= t3)
          return A.ioore(t2, 1);
        data = t1._as(t2[1]);
        return new A.PlutusData_Constr(A._compactCborTagToAlternative(alternative.value), A._deserialisePlutusData_List(data), cValue.get$tags(), cValue.get$type());
      } else
        return A._deserialisePlutusData_List(cValue);
    },
    $signature: 222
  };
  A.PlutusData_PlutusData$deserialize_fromCborList_closure.prototype = {
    call$1(element) {
      return A._asInt(element) === 102;
    },
    $signature: 16
  };
  A.PlutusData_PlutusData$deserialize_closure.prototype = {
    call$2(key, value) {
      var t1 = type$.CborValue;
      t1._as(key);
      t1._as(value);
      return new A.MapEntry(A.PlutusData_PlutusData$deserialize(key), A.PlutusData_PlutusData$deserialize(value), type$.MapEntry_PlutusData_PlutusData);
    },
    $signature: 224
  };
  A._serializePlutusData_List_closure.prototype = {
    call$1(e) {
      return type$.PlutusData._as(e).serialize$1$forJson(this.forJson);
    },
    $signature: 54
  };
  A._$PlutusData.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.PlutusData;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(A.getRuntimeTypeOfDartObject(this));
    },
    toString$0(_) {
      return "PlutusData()";
    }
  };
  A.PlutusData_BigInt.prototype = {
    $eq(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      t1 = true;
      if (this !== other)
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this))
          if (other instanceof A.PlutusData_BigInt) {
            t2 = other.value;
            t3 = this.value;
            if (t2 !== t3)
              t1 = t2.compareTo$1(0, t3) === 0;
          } else
            t1 = false;
        else
          t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.value, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "PlutusData.bigInt(value: " + this.value.toString$0(0) + ")";
    }
  };
  A.PlutusData_DefiniteBytes.prototype = {
    get$bytes() {
      var t1 = this._bytes;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_int);
    },
    get$tags() {
      var t1 = this._plutus_data$_tags;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_int);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this) && other instanceof A.PlutusData_DefiniteBytes && B.DeepCollectionEquality_false.equals$2(other._bytes, _this._bytes) && B.DeepCollectionEquality_false.equals$2(other._plutus_data$_tags, _this._plutus_data$_tags);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this._bytes), B.DeepCollectionEquality_false.hash$1(this._plutus_data$_tags), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "PlutusData.definiteBytes(bytes: " + A.S(this.get$bytes()) + ", tags: " + A.S(this.get$tags()) + ")";
    }
  };
  A.PlutusData_IndefiniteBytes.prototype = {
    get$bytesList() {
      var t1 = this._bytesList;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_List_int);
    },
    get$tags() {
      var t1 = this._plutus_data$_tags;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_int);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this) && other instanceof A.PlutusData_IndefiniteBytes && B.DeepCollectionEquality_false.equals$2(other._bytesList, _this._bytesList) && B.DeepCollectionEquality_false.equals$2(other._plutus_data$_tags, _this._plutus_data$_tags);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this._bytesList), B.DeepCollectionEquality_false.hash$1(this._plutus_data$_tags), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "PlutusData.indefiniteBytes(bytesList: " + A.S(this.get$bytesList()) + ", tags: " + A.S(this.get$tags()) + ")";
    }
  };
  A.PlutusData_Constr.prototype = {
    get$tags() {
      var t1 = this._plutus_data$_tags;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_int);
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.PlutusData_Constr) {
            t2 = other.alternative === _this.alternative;
            if (t2 || t2)
              if (B.DeepCollectionEquality_false.equals$2(other.data, _this.data))
                if (B.DeepCollectionEquality_false.equals$2(other._plutus_data$_tags, _this._plutus_data$_tags)) {
                  t1 = other.cborLengthType === _this.cborLengthType;
                  t1 = t1 || t1;
                }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.alternative, B.DeepCollectionEquality_false.hash$1(_this.data), B.DeepCollectionEquality_false.hash$1(_this._plutus_data$_tags), _this.cborLengthType, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "PlutusData.constr(alternative: " + _this.alternative + ", data: " + _this.data.toString$0(0) + ", tags: " + A.S(_this.get$tags()) + ", cborLengthType: " + _this.cborLengthType.toString$0(0) + ")";
    }
  };
  A.PlutusData_List.prototype = {
    get$data() {
      var t1 = this._plutus_data$_data;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_PlutusData);
    },
    get$tags() {
      var t1 = this._plutus_data$_tags;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_int);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.PlutusData_List)
            if (B.DeepCollectionEquality_false.equals$2(other._plutus_data$_data, _this._plutus_data$_data))
              if (B.DeepCollectionEquality_false.equals$2(other._plutus_data$_tags, _this._plutus_data$_tags)) {
                t1 = other.cborLengthType === _this.cborLengthType;
                t1 = t1 || t1;
              }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), B.DeepCollectionEquality_false.hash$1(_this._plutus_data$_data), B.DeepCollectionEquality_false.hash$1(_this._plutus_data$_tags), _this.cborLengthType, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "PlutusData.list(data: " + A.S(this.get$data()) + ", tags: " + A.S(this.get$tags()) + ", cborLengthType: " + this.cborLengthType.toString$0(0) + ")";
    }
  };
  A.PlutusData_Map.prototype = {
    get$data() {
      var t1 = this._plutus_data$_data;
      return new A.EqualUnmodifiableMapView(t1, t1, type$.EqualUnmodifiableMapView_PlutusData_PlutusData);
    },
    get$tags() {
      var t1 = this._plutus_data$_tags;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_int);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.PlutusData_Map)
            if (B.DeepCollectionEquality_false.equals$2(other._plutus_data$_data, _this._plutus_data$_data))
              if (B.DeepCollectionEquality_false.equals$2(other._plutus_data$_tags, _this._plutus_data$_tags)) {
                t1 = other.cborLengthType === _this.cborLengthType;
                t1 = t1 || t1;
              }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), B.DeepCollectionEquality_false.hash$1(_this._plutus_data$_data), B.DeepCollectionEquality_false.hash$1(_this._plutus_data$_tags), _this.cborLengthType, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "PlutusData.map(data: " + this.get$data().toString$0(0) + ", tags: " + A.S(this.get$tags()) + ", cborLengthType: " + this.cborLengthType.toString$0(0) + ")";
    }
  };
  A._PlutusData_Object__$PlutusData.prototype = {};
  A.ExUnits.prototype = {};
  A._$ExUnits.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._ExUnits) {
            t2 = other.mem;
            t3 = _this.mem;
            if (t2 !== t3)
              t2 = t2.compareTo$1(0, t3) === 0;
            else
              t2 = true;
            if (t2) {
              t1 = other.steps;
              t2 = _this.steps;
              if (t1 !== t2)
                t1 = t1.compareTo$1(0, t2) === 0;
              else
                t1 = true;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.mem, this.steps, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "ExUnits(mem: " + this.mem.toString$0(0) + ", steps: " + this.steps.toString$0(0) + ")";
    }
  };
  A._ExUnits.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._ExUnits) {
            t2 = other.mem;
            t3 = _this.mem;
            if (t2 !== t3)
              t2 = t2.compareTo$1(0, t3) === 0;
            else
              t2 = true;
            if (t2) {
              t1 = other.steps;
              t2 = _this.steps;
              if (t1 !== t2)
                t1 = t1.compareTo$1(0, t2) === 0;
              else
                t1 = true;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.mem, this.steps, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "ExUnits(mem: " + this.mem.toString$0(0) + ", steps: " + this.steps.toString$0(0) + ")";
    }
  };
  A._ExUnits_Object__$ExUnits.prototype = {};
  A.Redeemer.prototype = {};
  A.RedeemerTag.prototype = {
    _enumToString$0() {
      return "RedeemerTag." + this._core$_name;
    }
  };
  A.RedeemerTag_RedeemerTag$fromInt_closure.prototype = {
    call$1(element) {
      return type$.RedeemerTag._as(element).intValue === this.value;
    },
    $signature: 239
  };
  A._$Redeemer.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Redeemer)
            if (other.get$redeemerTag() === _this.get$redeemerTag() || other.get$redeemerTag() === _this.get$redeemerTag())
              if (other.get$index() === _this.get$index() || other.get$index() === _this.get$index())
                if (other.get$plutusData() === _this.get$plutusData() || other.get$plutusData().$eq(0, _this.get$plutusData()))
                  t1 = other.get$exUnits() === _this.get$exUnits() || other.get$exUnits().$eq(0, _this.get$exUnits());
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.get$redeemerTag(), _this.get$index(), _this.get$plutusData(), _this.get$exUnits(), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "Redeemer(redeemerTag: " + _this.get$redeemerTag().toString$0(0) + ", index: " + _this.get$index() + ", plutusData: " + _this.get$plutusData().toString$0(0) + ", exUnits: " + _this.get$exUnits().toString$0(0) + ")";
    }
  };
  A.Redeemer_PreConway.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Redeemer_PreConway) {
            t2 = other.redeemerTag === _this.redeemerTag;
            if (t2 || t2) {
              t2 = other.index === _this.index;
              if (t2 || t2) {
                t2 = other.plutusData;
                t3 = _this.plutusData;
                if (t2 === t3 || t2.$eq(0, t3)) {
                  t1 = other.exUnits;
                  t2 = _this.exUnits;
                  t1 = t1 === t2 || t1.$eq(0, t2);
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.redeemerTag, _this.index, _this.plutusData, _this.exUnits, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "Redeemer.preConway(redeemerTag: " + _this.redeemerTag.toString$0(0) + ", index: " + _this.index + ", plutusData: " + _this.plutusData.toString$0(0) + ", exUnits: " + _this.exUnits.toString$0(0) + ")";
    },
    get$redeemerTag() {
      return this.redeemerTag;
    },
    get$index() {
      return this.index;
    },
    get$plutusData() {
      return this.plutusData;
    },
    get$exUnits() {
      return this.exUnits;
    }
  };
  A.Redeemer_Conway.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Redeemer_Conway) {
            t2 = other.redeemerTag === _this.redeemerTag;
            if (t2 || t2) {
              t2 = other.index === _this.index;
              if (t2 || t2) {
                t2 = other.plutusData;
                t3 = _this.plutusData;
                if (t2 === t3 || t2.$eq(0, t3)) {
                  t1 = other.exUnits;
                  t2 = _this.exUnits;
                  t1 = t1 === t2 || t1.$eq(0, t2);
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.redeemerTag, _this.index, _this.plutusData, _this.exUnits, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "Redeemer.conway(redeemerTag: " + _this.redeemerTag.toString$0(0) + ", index: " + _this.index + ", plutusData: " + _this.plutusData.toString$0(0) + ", exUnits: " + _this.exUnits.toString$0(0) + ")";
    },
    get$redeemerTag() {
      return this.redeemerTag;
    },
    get$index() {
      return this.index;
    },
    get$plutusData() {
      return this.plutusData;
    },
    get$exUnits() {
      return this.exUnits;
    }
  };
  A._Redeemer_Object__$Redeemer.prototype = {};
  A.PlutusScriptV2.prototype = {};
  A._$PlutusScriptV2.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A._PlutusScriptV2 && B.DeepCollectionEquality_false.equals$2(other.bytes, this.bytes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "PlutusScriptV2(bytes: " + A.S(this.bytes) + ")";
    }
  };
  A._PlutusScriptV2.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A._PlutusScriptV2 && B.DeepCollectionEquality_false.equals$2(other.bytes, this.bytes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "PlutusScriptV2(bytes: " + A.S(this.bytes) + ")";
    }
  };
  A._PlutusScriptV2_Script__$PlutusScriptV2.prototype = {};
  A.PlutusScriptV3.prototype = {};
  A._$PlutusScriptV3.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A._PlutusScriptV3 && B.DeepCollectionEquality_false.equals$2(other.bytes, this.bytes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "PlutusScriptV3(bytes: " + A.S(this.bytes) + ")";
    }
  };
  A._PlutusScriptV3.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A._PlutusScriptV3 && B.DeepCollectionEquality_false.equals$2(other.bytes, this.bytes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "PlutusScriptV3(bytes: " + A.S(this.bytes) + ")";
    }
  };
  A._PlutusScriptV3_Script__$PlutusScriptV3.prototype = {};
  A.Script.prototype = {};
  A.ListWithCborType.prototype = {};
  A.WitnessSet.prototype = {
    serialize$1$forJson(forJson) {
      var scriptsEntry, bootstrapEntry, plutusV1ScriptEntry, plutusDataEntry, redeemerEntry, plutusScriptV2Entry, t2, t3, _this = this, _null = null,
        t1 = _this.ivkeyWitnesses,
        witnessesEntry = t1 == null ? _null : new A.WitnessSet_serialize_closure(false).call$1(t1);
      t1 = _this.inativeScripts;
      scriptsEntry = t1 == null ? _null : new A.WitnessSet_serialize_closure0(false).call$1(t1);
      t1 = _this.ibootstrap;
      bootstrapEntry = t1 == null ? _null : new A.WitnessSet_serialize_closure1(false).call$1(t1);
      t1 = _this.iplutusScriptV1;
      plutusV1ScriptEntry = t1 == null ? _null : new A.WitnessSet_serialize_closure2(false).call$1(t1);
      t1 = _this.iplutusData;
      plutusDataEntry = t1 == null ? _null : new A.WitnessSet_serialize_closure3(false).call$1(t1);
      t1 = _this.iredeemer;
      redeemerEntry = t1 == null ? _null : new A.WitnessSet_serialize_closure4(false).call$1(t1);
      t1 = _this.iplutusScriptV2;
      plutusScriptV2Entry = t1 == null ? _null : new A.WitnessSet_serialize_closure5(false).call$1(t1);
      t1 = _this.iplutusScriptV3;
      t1 = A._setArrayType([witnessesEntry, scriptsEntry, bootstrapEntry, plutusV1ScriptEntry, plutusDataEntry, redeemerEntry, plutusScriptV2Entry, t1 == null ? _null : new A.WitnessSet_serialize_closure6(false).call$1(t1)], type$.JSArray_nullable_MapEntry_CborValue_CborValue);
      t2 = _this.get$iCborTags();
      if (t2 == null)
        t2 = A._setArrayType([], type$.JSArray_int);
      t3 = type$.CborValue;
      return new A._CborMapImpl(t2, B.CborLengthType_0, A.Map_Map$fromEntries(new A.WhereTypeIterable(t1, type$.WhereTypeIterable_MapEntry_CborValue_CborValue), t3, t3));
    }
  };
  A.WitnessSet_WitnessSet$deserialize_closure.prototype = {
    call$1(p0) {
      type$.CborList._as(p0);
      return new A._ListWithCborType(new A.UnmodifiableListView(B.JSArray_methods.map$1$1(p0._base, A._instanceType(p0)._eval$1("WitnessVKey(_DelegatingIterableBase.E)")._as(new A.WitnessSet_WitnessSet$deserialize__closure0()), type$.WitnessVKey), type$.UnmodifiableListView_WitnessVKey), p0.get$type(), p0.get$tags(), type$._ListWithCborType_WitnessVKey);
    },
    $signature: 245
  };
  A.WitnessSet_WitnessSet$deserialize__closure0.prototype = {
    call$1(item) {
      var t2, t3,
        t1 = type$.CborList._as(type$.CborValue._as(item))._base;
      if (0 >= t1.length)
        return A.ioore(t1, 0);
      t2 = type$.CborBytes;
      t3 = new Uint8Array(A._ensureNativeList(t2._as(t1[0]).get$bytes()));
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      return new A._WitnessVKey(t3, new Uint8Array(A._ensureNativeList(t2._as(t1[1]).get$bytes())));
    },
    $signature: 86
  };
  A.WitnessSet_WitnessSet$deserialize_closure0.prototype = {
    call$1(p0) {
      type$.CborList._as(p0);
      return new A._ListWithCborType(new A.UnmodifiableListView(B.JSArray_methods.map$1$1(p0._base, A._instanceType(p0)._eval$1("NativeScript(_DelegatingIterableBase.E)")._as(new A.WitnessSet_WitnessSet$deserialize__closure()), type$.NativeScript), type$.UnmodifiableListView_NativeScript), p0.get$type(), p0.get$tags(), type$._ListWithCborType_NativeScript);
    },
    $signature: 87
  };
  A.WitnessSet_WitnessSet$deserialize__closure.prototype = {
    call$1(item) {
      return A.NativeScript_NativeScript$deserialize(type$.CborList._as(type$.CborValue._as(item)));
    },
    $signature: 26
  };
  A.WitnessSet_WitnessSet$deserialize_closure1.prototype = {
    call$1(p0) {
      type$.CborList._as(p0);
      return new A._ListWithCborType(new A.UnmodifiableListView(B.JSArray_methods.map$1$1(p0._base, A._instanceType(p0)._eval$1("WitnessBootstrap(_DelegatingIterableBase.E)")._as(A.witness_bootstrap_WitnessBootstrap___deserialize_tearOff$closure()), type$.WitnessBootstrap), type$.UnmodifiableListView_WitnessBootstrap), p0.get$type(), p0.get$tags(), type$._ListWithCborType_WitnessBootstrap);
    },
    $signature: 88
  };
  A.WitnessSet_WitnessSet$deserialize_closure2.prototype = {
    call$1(p0) {
      type$.CborList._as(p0);
      return new A._ListWithCborType(new A.UnmodifiableListView(B.JSArray_methods.map$1$1(p0._base, A._instanceType(p0)._eval$1("PlutusScriptV1(_DelegatingIterableBase.E)")._as(A.plutus_script_v1_PlutusScriptV1___deserialize_tearOff$closure()), type$.PlutusScriptV1), type$.UnmodifiableListView_PlutusScriptV1), p0.get$type(), p0.get$tags(), type$._ListWithCborType_PlutusScriptV1);
    },
    $signature: 89
  };
  A.WitnessSet_WitnessSet$deserialize_closure3.prototype = {
    call$1(p0) {
      type$.CborList._as(p0);
      return new A._ListWithCborType(new A.UnmodifiableListView(B.JSArray_methods.map$1$1(p0._base, A._instanceType(p0)._eval$1("PlutusData(_DelegatingIterableBase.E)")._as(A.plutus_data_PlutusData___deserialize_tearOff$closure()), type$.PlutusData), type$.UnmodifiableListView_PlutusData), p0.get$type(), p0.get$tags(), type$._ListWithCborType_PlutusData);
    },
    $signature: 90
  };
  A.WitnessSet_WitnessSet$deserialize_closure4.prototype = {
    call$1(entry) {
      var t1, t2, t3, t4;
      type$.MapEntry_CborValue_CborValue._as(entry);
      t1 = entry.key;
      t2 = entry.value;
      t3 = type$.CborList;
      if (!t3._is(t1))
        A.throwExpression(A.RedeemerParseException$("deserializeConway: redeemerKey is " + A.getRuntimeTypeOfDartObject(t1).toString$0(0)));
      if (!t3._is(t2))
        A.throwExpression(A.RedeemerParseException$("deserializeConway: redeemerValue is " + A.getRuntimeTypeOfDartObject(t1).toString$0(0)));
      t3 = t1._base;
      t4 = t3.length;
      if (t4 !== 2)
        A.throwExpression(A.RedeemerParseException$("deserializeConway: redeemerKey length is " + t1.get$length(0)));
      t1 = t2._base;
      if (t1.length !== 2)
        A.throwExpression(A.RedeemerParseException$("deserializeConway: redeemerValue length is " + t2.get$length(0)));
      if (0 >= t4)
        return A.ioore(t3, 0);
      t2 = type$.CborSmallInt;
      t4 = A.RedeemerTag_RedeemerTag$fromInt(t2._as(t3[0]).value);
      if (1 >= t3.length)
        return A.ioore(t3, 1);
      t3 = t2._as(t3[1]);
      if (0 >= t1.length)
        return A.ioore(t1, 0);
      t2 = A.PlutusData_PlutusData$deserialize(t1[0]);
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      return new A.Redeemer_Conway(t4, t3.value, t2, A.ExUnits_ExUnits$deserialize(t1[1]));
    },
    $signature: 91
  };
  A.WitnessSet_WitnessSet$deserialize_closure5.prototype = {
    call$1(p0) {
      type$.CborList._as(p0);
      return new A._ListWithCborType(new A.UnmodifiableListView(B.JSArray_methods.map$1$1(p0._base, A._instanceType(p0)._eval$1("PlutusScriptV2(_DelegatingIterableBase.E)")._as(A.plutus_script_v2_PlutusScriptV2___deserialize_tearOff$closure()), type$.PlutusScriptV2), type$.UnmodifiableListView_PlutusScriptV2), p0.get$type(), p0.get$tags(), type$._ListWithCborType_PlutusScriptV2);
    },
    $signature: 85
  };
  A.WitnessSet_WitnessSet$deserialize_closure6.prototype = {
    call$1(p0) {
      type$.CborList._as(p0);
      return new A._ListWithCborType(new A.UnmodifiableListView(B.JSArray_methods.map$1$1(p0._base, A._instanceType(p0)._eval$1("PlutusScriptV3(_DelegatingIterableBase.E)")._as(A.plutus_script_v3_PlutusScriptV3___deserialize_tearOff$closure()), type$.PlutusScriptV3), type$.UnmodifiableListView_PlutusScriptV3), p0.get$type(), p0.get$tags(), type$._ListWithCborType_PlutusScriptV3);
    },
    $signature: 93
  };
  A.WitnessSet_serialize_closure.prototype = {
    call$1(p0) {
      var t1, t2, t3;
      type$.ListWithCborType_WitnessVKey._as(p0);
      t1 = type$.CborValue;
      t2 = J.map$1$1$ax(p0.get$items(), new A.WitnessSet_serialize__closure7(this.forJson), t1);
      t3 = p0.get$tags();
      if (t3 == null)
        t3 = A._setArrayType([], type$.JSArray_int);
      t1 = A.List_List$_of(t2, t1);
      return new A.MapEntry(B._CborSmallIntImpl_0_List_empty, new A._CborListImpl(t3, p0.cborLengthType, t1), type$.MapEntry_CborValue_CborList);
    },
    $signature: 94
  };
  A.WitnessSet_serialize__closure7.prototype = {
    call$1(e) {
      return type$.WitnessVKey._as(e).serialize$1$forJson(this.forJson);
    },
    $signature: 95
  };
  A.WitnessSet_serialize_closure0.prototype = {
    call$1(p0) {
      var t1, t2, t3;
      type$.ListWithCborType_NativeScript._as(p0);
      t1 = type$.CborValue;
      t2 = J.map$1$1$ax(p0.get$items(), new A.WitnessSet_serialize__closure6(this.forJson), t1);
      t3 = p0.get$tags();
      if (t3 == null)
        t3 = A._setArrayType([], type$.JSArray_int);
      t1 = A.List_List$_of(t2, t1);
      return new A.MapEntry(B._CborSmallIntImpl_1_List_empty, new A._CborListImpl(t3, p0.cborLengthType, t1), type$.MapEntry_CborValue_CborList);
    },
    $signature: 96
  };
  A.WitnessSet_serialize__closure6.prototype = {
    call$1(e) {
      return type$.NativeScript._as(e).serialize$1$forJson(this.forJson);
    },
    $signature: 25
  };
  A.WitnessSet_serialize_closure1.prototype = {
    call$1(p0) {
      var t1, t2, t3;
      type$.ListWithCborType_WitnessBootstrap._as(p0);
      t1 = type$.CborValue;
      t2 = J.map$1$1$ax(p0.get$items(), new A.WitnessSet_serialize__closure5(this.forJson), t1);
      t3 = p0.get$tags();
      if (t3 == null)
        t3 = A._setArrayType([], type$.JSArray_int);
      t1 = A.List_List$_of(t2, t1);
      return new A.MapEntry(B._CborSmallIntImpl_2_List_empty, new A._CborListImpl(t3, p0.cborLengthType, t1), type$.MapEntry_CborValue_CborList);
    },
    $signature: 97
  };
  A.WitnessSet_serialize__closure5.prototype = {
    call$1(e) {
      return type$.WitnessBootstrap._as(e).serialize$1$forJson(this.forJson);
    },
    $signature: 98
  };
  A.WitnessSet_serialize_closure2.prototype = {
    call$1(p0) {
      var t1, t2, t3;
      type$.ListWithCborType_PlutusScriptV1._as(p0);
      t1 = type$.CborValue;
      t2 = J.map$1$1$ax(p0.get$items(), new A.WitnessSet_serialize__closure4(this.forJson), t1);
      t3 = p0.get$tags();
      if (t3 == null)
        t3 = A._setArrayType([], type$.JSArray_int);
      t1 = A.List_List$_of(t2, t1);
      return new A.MapEntry(B._CborSmallIntImpl_3_List_empty, new A._CborListImpl(t3, p0.cborLengthType, t1), type$.MapEntry_CborValue_CborList);
    },
    $signature: 99
  };
  A.WitnessSet_serialize__closure4.prototype = {
    call$1(e) {
      type$.PlutusScriptV1._as(e);
      return new A._CborBytesImpl(e.bytes, B.List_empty);
    },
    $signature: 100
  };
  A.WitnessSet_serialize_closure3.prototype = {
    call$1(p0) {
      var t1, t2, t3;
      type$.ListWithCborType_PlutusData._as(p0);
      t1 = type$.CborValue;
      t2 = J.map$1$1$ax(p0.get$items(), new A.WitnessSet_serialize__closure3(this.forJson), t1);
      t3 = p0.get$tags();
      if (t3 == null)
        t3 = A._setArrayType([], type$.JSArray_int);
      t1 = A.List_List$_of(t2, t1);
      return new A.MapEntry(B._CborSmallIntImpl_4_List_empty, new A._CborListImpl(t3, p0.cborLengthType, t1), type$.MapEntry_CborValue_CborList);
    },
    $signature: 101
  };
  A.WitnessSet_serialize__closure3.prototype = {
    call$1(e) {
      return type$.PlutusData._as(e).serialize$1$forJson(this.forJson);
    },
    $signature: 54
  };
  A.WitnessSet_serialize_closure4.prototype = {
    call$1(p0) {
      var _0_0, t1, t2, t3;
      type$.ListWithCborType_Redeemer._as(p0);
      _0_0 = A.IterableExtensions_get_firstOrNull(p0.get$items(), type$.Redeemer);
      $label0$0: {
        t1 = true;
        if (_0_0 == null)
          break $label0$0;
        if (_0_0 instanceof A.Redeemer_Conway)
          break $label0$0;
        if (_0_0 instanceof A.Redeemer_PreConway) {
          t1 = false;
          break $label0$0;
        }
        t1 = null;
      }
      switch (t1) {
        case true:
          t1 = J.map$1$1$ax(p0.get$items(), new A.WitnessSet_serialize__closure1(this.forJson), type$.MapEntry_CborValue_CborValue);
          t2 = p0.get$tags();
          if (t2 == null)
            t2 = A._setArrayType([], type$.JSArray_int);
          t3 = type$.CborValue;
          t3 = new A._CborMapImpl(t2, p0.cborLengthType, A.Map_Map$fromEntries(t1, t3, t3));
          t1 = t3;
          break;
        case false:
          t1 = type$.CborValue;
          t2 = J.map$1$1$ax(p0.get$items(), new A.WitnessSet_serialize__closure2(this.forJson), t1);
          t3 = p0.get$tags();
          if (t3 == null)
            t3 = A._setArrayType([], type$.JSArray_int);
          t1 = A.List_List$_of(t2, t1);
          t1 = new A._CborListImpl(t3, p0.cborLengthType, t1);
          break;
        default:
          t1 = null;
      }
      return new A.MapEntry(B._CborSmallIntImpl_5_List_empty, t1, type$.MapEntry_CborValue_CborValue);
    },
    $signature: 102
  };
  A.WitnessSet_serialize__closure1.prototype = {
    call$1(e) {
      var t1, t2, t3, t4, t5;
      type$.Redeemer._as(e);
      t1 = e.get$redeemerTag();
      t2 = type$.JSArray_CborValue;
      t3 = type$.CborValue;
      t1 = A.List_List$_of(A._setArrayType([new A._CborSmallIntImpl(t1.intValue, B.List_empty), new A._CborSmallIntImpl(e.get$index(), B.List_empty)], t2), t3);
      t4 = e.get$plutusData().serialize$1$forJson(this.forJson);
      t5 = e.get$exUnits();
      t5 = A.List_List$_of(A._setArrayType([A.CborInt_CborInt(t5.mem), A.CborInt_CborInt(t5.steps)], t2), t3);
      t2 = A.List_List$_of(A._setArrayType([t4, new A._CborListImpl(B.List_empty, B.CborLengthType_2, t5)], t2), t3);
      return new A.MapEntry(new A._CborListImpl(B.List_empty, B.CborLengthType_2, t1), new A._CborListImpl(B.List_empty, B.CborLengthType_2, t2), type$.MapEntry_CborValue_CborValue);
    },
    $signature: 103
  };
  A.WitnessSet_serialize__closure2.prototype = {
    call$1(e) {
      var t1, t2, t3, t4, t5, t6;
      type$.Redeemer._as(e);
      t1 = e.get$redeemerTag();
      t2 = e.get$index();
      t3 = e.get$plutusData().serialize$1$forJson(this.forJson);
      t4 = e.get$exUnits();
      t5 = type$.JSArray_CborValue;
      t6 = type$.CborValue;
      t4 = A.List_List$_of(A._setArrayType([A.CborInt_CborInt(t4.mem), A.CborInt_CborInt(t4.steps)], t5), t6);
      t1 = A.List_List$_of(A._setArrayType([new A._CborSmallIntImpl(t1.intValue, B.List_empty), new A._CborSmallIntImpl(t2, B.List_empty), t3, new A._CborListImpl(B.List_empty, B.CborLengthType_2, t4)], t5), t6);
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, t1);
    },
    $signature: 104
  };
  A.WitnessSet_serialize_closure5.prototype = {
    call$1(p0) {
      var t1, t2, t3;
      type$.ListWithCborType_PlutusScriptV2._as(p0);
      t1 = type$.CborValue;
      t2 = J.map$1$1$ax(p0.get$items(), new A.WitnessSet_serialize__closure0(this.forJson), t1);
      t3 = p0.get$tags();
      if (t3 == null)
        t3 = A._setArrayType([], type$.JSArray_int);
      t1 = A.List_List$_of(t2, t1);
      return new A.MapEntry(B._CborSmallIntImpl_6_List_empty, new A._CborListImpl(t3, p0.cborLengthType, t1), type$.MapEntry_CborValue_CborList);
    },
    $signature: 105
  };
  A.WitnessSet_serialize__closure0.prototype = {
    call$1(e) {
      type$.PlutusScriptV2._as(e);
      return new A._CborBytesImpl(e.bytes, B.List_empty);
    },
    $signature: 106
  };
  A.WitnessSet_serialize_closure6.prototype = {
    call$1(p0) {
      var t1, t2, t3;
      type$.ListWithCborType_PlutusScriptV3._as(p0);
      t1 = type$.CborValue;
      t2 = J.map$1$1$ax(p0.get$items(), new A.WitnessSet_serialize__closure(this.forJson), t1);
      t3 = p0.get$tags();
      if (t3 == null)
        t3 = A._setArrayType([], type$.JSArray_int);
      t1 = A.List_List$_of(t2, t1);
      return new A.MapEntry(B._CborSmallIntImpl_7_List_empty, new A._CborListImpl(t3, p0.cborLengthType, t1), type$.MapEntry_CborValue_CborList);
    },
    $signature: 107
  };
  A.WitnessSet_serialize__closure.prototype = {
    call$1(e) {
      type$.PlutusScriptV3._as(e);
      return new A._CborBytesImpl(e.bytes, B.List_empty);
    },
    $signature: 108
  };
  A._$ListWithCborType.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (_this.$ti._eval$1("ListWithCborType<1>")._is(other))
            if (B.DeepCollectionEquality_false.equals$2(other.get$items(), _this.get$items())) {
              t1 = other.cborLengthType === _this.cborLengthType;
              t1 = (t1 || t1) && B.DeepCollectionEquality_false.equals$2(other.get$tags(), _this.get$tags());
            }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), B.DeepCollectionEquality_false.hash$1(_this.get$items()), _this.cborLengthType, B.DeepCollectionEquality_false.hash$1(_this.get$tags()), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "ListWithCborType<" + A.createRuntimeType(_this.$ti._precomputed1).toString$0(0) + ">(items: " + A.S(_this.get$items()) + ", cborLengthType: " + _this.cborLengthType.toString$0(0) + ", tags: " + A.S(_this.get$tags()) + ")";
    }
  };
  A._ListWithCborType.prototype = {
    get$items() {
      var t1 = this._items;
      return new A.EqualUnmodifiableListView(t1, t1, this.$ti._eval$1("EqualUnmodifiableListView<1>"));
    },
    get$tags() {
      var value = this._tags;
      if (value == null)
        return null;
      if (value instanceof A.EqualUnmodifiableListView)
        return value;
      return new A.EqualUnmodifiableListView(value, value, type$.EqualUnmodifiableListView_int);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (_this.$ti._is(other))
            if (B.DeepCollectionEquality_false.equals$2(other._items, _this._items)) {
              t1 = other.cborLengthType === _this.cborLengthType;
              t1 = (t1 || t1) && B.DeepCollectionEquality_false.equals$2(other._tags, _this._tags);
            }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), B.DeepCollectionEquality_false.hash$1(_this._items), _this.cborLengthType, B.DeepCollectionEquality_false.hash$1(_this._tags), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "ListWithCborType<" + A.createRuntimeType(_this.$ti._precomputed1).toString$0(0) + ">(items: " + A.S(_this.get$items()) + ", cborLengthType: " + _this.cborLengthType.toString$0(0) + ", tags: " + A.S(_this.get$tags()) + ")";
    }
  };
  A._$WitnessSet.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._WitnessSet) {
            t2 = other.ivkeyWitnesses;
            t3 = _this.ivkeyWitnesses;
            if (t2 == t3 || J.$eq$(t2, t3)) {
              t2 = other.inativeScripts;
              t3 = _this.inativeScripts;
              if (t2 == t3 || J.$eq$(t2, t3)) {
                t2 = other.ibootstrap;
                t3 = _this.ibootstrap;
                if (t2 == t3 || J.$eq$(t2, t3)) {
                  t2 = other.iplutusScriptV1;
                  t3 = _this.iplutusScriptV1;
                  if (t2 == t3 || J.$eq$(t2, t3)) {
                    t2 = other.iplutusData;
                    t3 = _this.iplutusData;
                    if (t2 == t3 || J.$eq$(t2, t3)) {
                      t2 = other.iredeemer;
                      t3 = _this.iredeemer;
                      if (t2 == t3 || J.$eq$(t2, t3)) {
                        t2 = other.iplutusScriptV2;
                        t3 = _this.iplutusScriptV2;
                        if (t2 == t3 || J.$eq$(t2, t3)) {
                          t1 = other.iplutusScriptV3;
                          t2 = _this.iplutusScriptV3;
                          t1 = (t1 == t2 || J.$eq$(t1, t2)) && B.DeepCollectionEquality_false.equals$2(other.get$iCborTags(), _this.get$iCborTags());
                        }
                      }
                    }
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.ivkeyWitnesses, _this.inativeScripts, _this.ibootstrap, _this.iplutusScriptV1, _this.iplutusData, _this.iredeemer, _this.iplutusScriptV2, _this.iplutusScriptV3, B.DeepCollectionEquality_false.hash$1(_this.get$iCborTags()), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "WitnessSet(ivkeyWitnesses: " + A.S(_this.ivkeyWitnesses) + ", inativeScripts: " + A.S(_this.inativeScripts) + ", ibootstrap: " + A.S(_this.ibootstrap) + ", iplutusScriptV1: " + A.S(_this.iplutusScriptV1) + ", iplutusData: " + A.S(_this.iplutusData) + ", iredeemer: " + A.S(_this.iredeemer) + ", iplutusScriptV2: " + A.S(_this.iplutusScriptV2) + ", iplutusScriptV3: " + A.S(_this.iplutusScriptV3) + ", iCborTags: " + A.S(_this.get$iCborTags()) + ")";
    }
  };
  A._WitnessSet.prototype = {
    get$iCborTags() {
      var value = this._iCborTags;
      if (value == null)
        return null;
      if (value instanceof A.EqualUnmodifiableListView)
        return value;
      return new A.EqualUnmodifiableListView(value, value, type$.EqualUnmodifiableListView_int);
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._WitnessSet) {
            t2 = other.ivkeyWitnesses;
            t3 = _this.ivkeyWitnesses;
            if (t2 == t3 || J.$eq$(t2, t3)) {
              t2 = other.inativeScripts;
              t3 = _this.inativeScripts;
              if (t2 == t3 || J.$eq$(t2, t3)) {
                t2 = other.ibootstrap;
                t3 = _this.ibootstrap;
                if (t2 == t3 || J.$eq$(t2, t3)) {
                  t2 = other.iplutusScriptV1;
                  t3 = _this.iplutusScriptV1;
                  if (t2 == t3 || J.$eq$(t2, t3)) {
                    t2 = other.iplutusData;
                    t3 = _this.iplutusData;
                    if (t2 == t3 || J.$eq$(t2, t3)) {
                      t2 = other.iredeemer;
                      t3 = _this.iredeemer;
                      if (t2 == t3 || J.$eq$(t2, t3)) {
                        t2 = other.iplutusScriptV2;
                        t3 = _this.iplutusScriptV2;
                        if (t2 == t3 || J.$eq$(t2, t3)) {
                          t1 = other.iplutusScriptV3;
                          t2 = _this.iplutusScriptV3;
                          t1 = (t1 == t2 || J.$eq$(t1, t2)) && B.DeepCollectionEquality_false.equals$2(other._iCborTags, _this._iCborTags);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.ivkeyWitnesses, _this.inativeScripts, _this.ibootstrap, _this.iplutusScriptV1, _this.iplutusData, _this.iredeemer, _this.iplutusScriptV2, _this.iplutusScriptV3, B.DeepCollectionEquality_false.hash$1(_this._iCborTags), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "WitnessSet(ivkeyWitnesses: " + A.S(_this.ivkeyWitnesses) + ", inativeScripts: " + A.S(_this.inativeScripts) + ", ibootstrap: " + A.S(_this.ibootstrap) + ", iplutusScriptV1: " + A.S(_this.iplutusScriptV1) + ", iplutusData: " + A.S(_this.iplutusData) + ", iredeemer: " + A.S(_this.iredeemer) + ", iplutusScriptV2: " + A.S(_this.iplutusScriptV2) + ", iplutusScriptV3: " + A.S(_this.iplutusScriptV3) + ", iCborTags: " + A.S(_this.get$iCborTags()) + ")";
    }
  };
  A._ListWithCborType_Object__$ListWithCborType.prototype = {};
  A._WitnessSet_Object__$WitnessSet.prototype = {};
  A.CBORMetadata.prototype = {
    serialize$1$forJson(forJson) {
      return this.value;
    },
    $eq(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this))
          if (other instanceof A._CBORMetadata) {
            t1 = other.value;
            t2 = this.value;
            t1 = t1 === t2 || t1.$eq(0, t2) || B.DeepCollectionEquality_false.equals$2(t1, t2);
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(A.Hash_blake2b(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(type$.CborCodec._eval$1("Codec.S")._as(this.serialize$1$forJson(false))))), 32)), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A._$CBORMetadata.prototype = {
    toString$0(_) {
      return "CBORMetadata(value: " + this.value.toString$0(0) + ")";
    }
  };
  A._CBORMetadata.prototype = {
    toString$0(_) {
      return "CBORMetadata(value: " + this.value.toString$0(0) + ")";
    }
  };
  A._CBORMetadata_Object__$CBORMetadata.prototype = {};
  A.Anchor.prototype = {
    get$metadataHashHex() {
      var value = this.__Anchor_metadataHashHex_FI;
      return value === $ ? this.__Anchor_metadataHashHex_FI = new A.Lazy(new A.Anchor_metadataHashHex_closure(this), type$.Lazy_String) : value;
    },
    serialize$1$forJson(forJson) {
      var t1 = A.List_List$_of(A._setArrayType([new A._CborStringImpl(B.List_empty, this.anchorUrl, null), new A._CborBytesImpl(this.anchorDataHash, B.List_empty)], type$.JSArray_CborValue), type$.CborValue);
      return new A._CborListImpl(B.List_empty, this.cborLengthType, t1);
    }
  };
  A.Anchor_metadataHashHex_closure.prototype = {
    call$0() {
      var t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(this.$this.anchorDataHash, false));
      return B.C_HexCodec.get$encoder().convert$1(t1);
    },
    $signature: 1
  };
  A._$Anchor.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._Anchor) {
            t2 = other.get$metadataHashHex() === _this.get$metadataHashHex();
            if (t2 || t2) {
              t2 = other.anchorUrl === _this.anchorUrl;
              if (t2 || t2)
                if (B.DeepCollectionEquality_false.equals$2(other.anchorDataHash, _this.anchorDataHash)) {
                  t1 = other.cborLengthType === _this.cborLengthType;
                  t1 = t1 || t1;
                }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.get$metadataHashHex(), _this.anchorUrl, B.DeepCollectionEquality_false.hash$1(_this.anchorDataHash), _this.cborLengthType, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "Anchor(metadataHashHex: " + _this.get$metadataHashHex().toString$0(0) + ", anchorUrl: " + _this.anchorUrl + ", anchorDataHash: " + A.S(_this.anchorDataHash) + ", cborLengthType: " + _this.cborLengthType.toString$0(0) + ")";
    }
  };
  A._Anchor.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._Anchor) {
            t2 = other.anchorUrl === _this.anchorUrl;
            if (t2 || t2)
              if (B.DeepCollectionEquality_false.equals$2(other.anchorDataHash, _this.anchorDataHash)) {
                t1 = other.cborLengthType === _this.cborLengthType;
                t1 = t1 || t1;
              }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.anchorUrl, B.DeepCollectionEquality_false.hash$1(_this.anchorDataHash), _this.cborLengthType, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Anchor(anchorUrl: " + this.anchorUrl + ", anchorDataHash: " + A.S(this.anchorDataHash) + ", cborLengthType: " + this.cborLengthType.toString$0(0) + ")";
    }
  };
  A._Anchor_Object__$Anchor.prototype = {};
  A.Value.prototype = {
    get$multiAssets() {
      var t1, mA;
      $label0$0: {
        if (this instanceof A.Value_v0) {
          t1 = B.List_empty0;
          break $label0$0;
        }
        if (this instanceof A.Value_v1) {
          mA = this.get$mA();
          t1 = mA;
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    },
    serialize$1$forJson(forJson) {
      var t1, t2, _this = this;
      $label0$0: {
        if (_this instanceof A.Value_v0) {
          t1 = A.CborInt_CborInt(_this.lovelace);
          break $label0$0;
        }
        if (_this instanceof A.Value_v1) {
          t1 = A.CborInt_CborInt(_this.lovelace);
          t2 = type$.CborValue;
          t1 = A.List_List$_of(A._setArrayType([t1, new A._CborMapImpl(B.List_empty, B.CborLengthType_2, A.Map_Map$fromEntries(J.map$1$1$ax(_this.get$mA(), new A.Value_serialize_closure(false), type$.MapEntry_CborValue_CborValue), t2, t2))], type$.JSArray_CborValue), t2);
          t1 = new A._CborListImpl(B.List_empty, B.CborLengthType_2, t1);
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    },
    $add(_, other) {
      return new A.Value_v1(this.get$lovelace().$add(0, other.get$lovelace()), A.MultiAssetListOperations_merge(this.get$multiAssets(), other.get$multiAssets(), B.Operation_0));
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        if (other instanceof A.Value) {
          if (other.get$lovelace() !== _this.get$lovelace())
            t1 = other.get$lovelace().compareTo$1(0, _this.get$lovelace()) === 0;
          else
            t1 = true;
          t1 = t1 && B.DeepCollectionEquality_true.equals$2(other.get$multiAssets(), _this.get$multiAssets());
        } else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(this.get$lovelace(), B.DeepCollectionEquality_true.hash$1(this.get$multiAssets()), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.Value_serialize_closure.prototype = {
    call$1(multiAsset) {
      return type$.MultiAsset._as(multiAsset).serialize$1$forJson(this.forJson);
    },
    $signature: 46
  };
  A.Value_Value$deserialize_closure.prototype = {
    call$1(entry) {
      return A.MultiAsset_MultiAsset$deserialize(type$.MapEntry_CborValue_CborValue._as(entry));
    },
    $signature: 65
  };
  A.MultiAsset.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._MultiAsset) {
            t1 = other.policyId === _this.policyId;
            t1 = (t1 || t1) && B.DeepCollectionEquality_true.equals$2(other.get$assets(), _this.get$assets());
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.policyId, B.DeepCollectionEquality_true.hash$1(this.get$assets()), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    serialize$1$forJson(forJson) {
      var t3,
        t1 = type$.MapEntry_CborValue_CborValue,
        assetsMapEntries = J.map$1$1$ax(this.get$assets(), new A.MultiAsset_serialize_closure(false), t1),
        t2 = type$.HexCodec._eval$1("Codec.T")._as(this.policyId);
      t2 = new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(t2)));
      t3 = type$.CborValue;
      return new A.MapEntry(new A._CborBytesImpl(t2, B.List_empty), new A._CborMapImpl(B.List_empty, B.CborLengthType_2, A.Map_Map$fromEntries(assetsMapEntries, t3, t3)), t1);
    }
  };
  A.MultiAsset_MultiAsset$deserialize_closure.prototype = {
    call$2(key, value) {
      var t1 = type$.CborValue;
      t1._as(key);
      t1._as(value);
      t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(new Uint8Array(A._ensureNativeList(J.toList$1$growable$ax(type$.CborBytes._as(key).get$bytes(), false))), false));
      return B.JSArray_methods.add$1(this.assets, new A._Asset(B.C_HexCodec.get$encoder().convert$1(t1), type$.CborInt._as(value).toBigInt$0()));
    },
    $signature: 110
  };
  A.MultiAsset_serialize_closure.prototype = {
    call$1(asset) {
      var t1, value;
      type$.Asset._as(asset);
      t1 = type$.HexCodec._eval$1("Codec.T")._as(asset.hexName);
      t1 = new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(t1)));
      value = A.CborInt_CborInt(asset.value);
      return new A.MapEntry(new A._CborBytesImpl(t1, B.List_empty), value, type$.MapEntry_CborValue_CborValue);
    },
    $signature: 111
  };
  A.MultiAssetIterableX_serialize_closure.prototype = {
    call$1(e) {
      return type$.MultiAsset._as(e).serialize$1$forJson(this.forJson);
    },
    $signature: 46
  };
  A.Asset.prototype = {};
  A.Operation.prototype = {
    _enumToString$0() {
      return "Operation." + this._core$_name;
    }
  };
  A.MultiAssetListOperations_merge_closure.prototype = {
    call$1(ma) {
      return type$.MultiAsset._as(ma).policyId === this.thisMa.policyId;
    },
    $signature: 112
  };
  A.MultiAssetListOperations_merge_closure0.prototype = {
    call$1(e) {
      type$.MultiAsset._as(e);
      return e.copyWith$1$assets(J.map$1$1$ax(e.get$assets(), new A.MultiAssetListOperations_merge__closure(), type$.Asset).toList$0(0));
    },
    $signature: 113
  };
  A.MultiAssetListOperations_merge__closure.prototype = {
    call$1(e2) {
      type$.Asset._as(e2);
      return e2.copyWith$1$value($.$get$_BigIntImpl_zero().$sub(0, e2.value));
    },
    $signature: 45
  };
  A.AssetListOperations_merge_closure.prototype = {
    call$1(asset) {
      return type$.Asset._as(asset).hexName === this.thisAsset.hexName;
    },
    $signature: 115
  };
  A.AssetListOperations_merge_closure0.prototype = {
    call$1(e) {
      type$.Asset._as(e);
      return e.copyWith$1$value($.$get$_BigIntImpl_zero().$sub(0, e.value));
    },
    $signature: 45
  };
  A._$Value.prototype = {
    toString$0(_) {
      return "Value(lovelace: " + this.get$lovelace().toString$0(0) + ")";
    }
  };
  A.Value_v0.prototype = {
    toString$0(_) {
      return "Value.v0(lovelace: " + this.lovelace.toString$0(0) + ")";
    },
    get$lovelace() {
      return this.lovelace;
    }
  };
  A.Value_v1.prototype = {
    get$mA() {
      var t1 = this._mA;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_MultiAsset);
    },
    toString$0(_) {
      return "Value.v1(lovelace: " + this.lovelace.toString$0(0) + ", mA: " + A.S(this.get$mA()) + ")";
    },
    get$lovelace() {
      return this.lovelace;
    }
  };
  A._$MultiAsset.prototype = {
    toString$0(_) {
      return "MultiAsset(policyId: " + this.policyId + ", assets: " + A.S(this.get$assets()) + ")";
    }
  };
  A._MultiAsset.prototype = {
    get$assets() {
      var t1 = this._assets;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_Asset);
    },
    get$copyWith() {
      return new A.__$MultiAssetCopyWithImpl(this, B.CONSTANT, type$.__$MultiAssetCopyWithImpl__MultiAsset);
    },
    toString$0(_) {
      return "MultiAsset(policyId: " + this.policyId + ", assets: " + A.S(this.get$assets()) + ")";
    },
    copyWith$1$assets(arg0) {
      return this.get$copyWith().call$1$assets(arg0);
    }
  };
  A.__$MultiAssetCopyWithImpl.prototype = {
    call$2$assets$policyId(assets, policyId) {
      var t1 = policyId == null ? this._self.policyId : A._asString(policyId),
        t2 = assets == null ? this._self._assets : type$.List_Asset._as(assets);
      return this._then.call$1(new A._MultiAsset(t1, t2));
    },
    call$0() {
      return this.call$2$assets$policyId(null, null);
    },
    call$1$assets(assets) {
      return this.call$2$assets$policyId(assets, null);
    }
  };
  A._$Asset.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._Asset) {
            t2 = other.hexName === _this.hexName;
            if (t2 || t2) {
              t1 = other.value;
              t2 = _this.value;
              if (t1 !== t2)
                t1 = t1.compareTo$1(0, t2) === 0;
              else
                t1 = true;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.hexName, this.value, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Asset(hexName: " + this.hexName + ", value: " + this.value.toString$0(0) + ")";
    }
  };
  A._Asset.prototype = {
    get$copyWith() {
      return new A.__$AssetCopyWithImpl(this, B.CONSTANT0, type$.__$AssetCopyWithImpl__Asset);
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._Asset) {
            t2 = other.hexName === _this.hexName;
            if (t2 || t2) {
              t1 = other.value;
              t2 = _this.value;
              if (t1 !== t2)
                t1 = t1.compareTo$1(0, t2) === 0;
              else
                t1 = true;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.hexName, this.value, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Asset(hexName: " + this.hexName + ", value: " + this.value.toString$0(0) + ")";
    },
    copyWith$1$value(arg0) {
      return this.get$copyWith().call$1$value(arg0);
    }
  };
  A.__$AssetCopyWithImpl.prototype = {
    call$2$hexName$value(hexName, value) {
      var t1 = hexName == null ? this._self.hexName : A._asString(hexName),
        t2 = value == null ? this._self.value : type$.BigInt._as(value);
      return this._then.call$1(new A._Asset(t1, t2));
    },
    call$0() {
      return this.call$2$hexName$value(null, null);
    },
    call$1$value(value) {
      return this.call$2$hexName$value(null, value);
    }
  };
  A._Asset_Object__$Asset.prototype = {};
  A._MultiAsset_Object__$MultiAsset.prototype = {};
  A._Value_Object__$Value.prototype = {};
  A.Drep.prototype = {
    get$type() {
      var t1, _this = this,
        value = _this.__Drep_type_FI;
      if (value === $) {
        $label0$0: {
          if (_this instanceof A.Drep_AddrKeyHash) {
            t1 = 0;
            break $label0$0;
          }
          if (_this instanceof A.Drep_ScriptHash) {
            t1 = 1;
            break $label0$0;
          }
          if (_this instanceof A.Drep_Abstain) {
            t1 = 2;
            break $label0$0;
          }
          if (_this instanceof A.Drep_NoConfidence) {
            t1 = 3;
            break $label0$0;
          }
          t1 = null;
        }
        value = _this.__Drep_type_FI = t1;
      }
      return value;
    },
    serialize$1$forJson(forJson) {
      var t3, _this = this,
        t1 = _this.get$type(),
        t2 = type$.JSArray_CborValue;
      t1 = A._setArrayType([new A._CborSmallIntImpl(t1, B.List_empty)], t2);
      $label0$0: {
        if (_this instanceof A.Drep_AddrKeyHash) {
          t3 = type$.HexCodec._eval$1("Codec.T")._as(_this.hash);
          t3 = new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(t3)));
          t2 = A._setArrayType([new A._CborBytesImpl(t3, B.List_empty)], t2);
          break $label0$0;
        }
        if (_this instanceof A.Drep_ScriptHash) {
          t3 = type$.HexCodec._eval$1("Codec.T")._as(_this.hash);
          t3 = new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(t3)));
          t2 = A._setArrayType([new A._CborBytesImpl(t3, B.List_empty)], t2);
          break $label0$0;
        }
        if (_this instanceof A.Drep_Abstain) {
          t2 = A._setArrayType([], t2);
          break $label0$0;
        }
        if (_this instanceof A.Drep_NoConfidence) {
          t2 = A._setArrayType([], t2);
          break $label0$0;
        }
        t2 = null;
      }
      B.JSArray_methods.addAll$1(t1, t2);
      t2 = _this.get$lengthType();
      t1 = A.List_List$_of(t1, type$.CborValue);
      return new A._CborListImpl(B.List_empty, t2, t1);
    }
  };
  A._$Drep.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Drep) {
            t2 = other.get$type() === _this.get$type();
            if (t2 || t2)
              t1 = other.get$lengthType() === _this.get$lengthType() || other.get$lengthType() === _this.get$lengthType();
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.get$type(), this.get$lengthType(), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Drep(type: " + this.get$type() + ", lengthType: " + this.get$lengthType().toString$0(0) + ")";
    }
  };
  A.Drep_AddrKeyHash.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Drep_AddrKeyHash) {
            t2 = other.hash === _this.hash;
            if (t2 || t2) {
              t1 = other.lengthType === _this.lengthType;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.hash, this.lengthType, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Drep.addrKeyHash(hash: " + this.hash + ", lengthType: " + this.lengthType.toString$0(0) + ")";
    },
    get$lengthType() {
      return this.lengthType;
    }
  };
  A.Drep_ScriptHash.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.Drep_ScriptHash) {
            t2 = other.hash === _this.hash;
            if (t2 || t2) {
              t1 = other.lengthType === _this.lengthType;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.hash, this.lengthType, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Drep.scriptHash(hash: " + this.hash + ", lengthType: " + this.lengthType.toString$0(0) + ")";
    },
    get$lengthType() {
      return this.lengthType;
    }
  };
  A.Drep_Abstain.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this))
          if (other instanceof A.Drep_Abstain) {
            t1 = other.lengthType === this.lengthType;
            t1 = t1 || t1;
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.lengthType, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Drep.abstain(lengthType: " + this.lengthType.toString$0(0) + ")";
    },
    get$lengthType() {
      return this.lengthType;
    }
  };
  A.Drep_NoConfidence.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this))
          if (other instanceof A.Drep_NoConfidence) {
            t1 = other.lengthType === this.lengthType;
            t1 = t1 || t1;
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.lengthType, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Drep.noConfidence(lengthType: " + this.lengthType.toString$0(0) + ")";
    },
    get$lengthType() {
      return this.lengthType;
    }
  };
  A._Drep_Object__$Drep.prototype = {};
  A.Nonce.prototype = {
    serialize$1$forJson(forJson) {
      var nonceHash = this.nonceHash,
        t1 = nonceHash == null,
        t2 = A._setArrayType([new A._CborSmallIntImpl(t1 ? 0 : 1, B.List_empty)], type$.JSArray_CborValue);
      if (!t1)
        t2.push(new A._CborBytesImpl(nonceHash, B.List_empty));
      t1 = new A._CborListImpl(B.List_empty, B.CborLengthType_2, t2);
      return t1;
    }
  };
  A._$Nonce.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A._Nonce && B.DeepCollectionEquality_false.equals$2(other.nonceHash, this.nonceHash);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.nonceHash), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Nonce(nonceHash: " + A.S(this.nonceHash) + ")";
    }
  };
  A._Nonce.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A._Nonce && B.DeepCollectionEquality_false.equals$2(other.nonceHash, this.nonceHash);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.nonceHash), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Nonce(nonceHash: " + A.S(this.nonceHash) + ")";
    }
  };
  A._Nonce_Object__$Nonce.prototype = {};
  A.RationalNumber.prototype = {
    serialize$1$forJson(forJson) {
      var t1 = A.CborInt_CborInt(this.numerator);
      t1 = A._CborRationalNumberImpl$(A.CborInt_CborInt(this.denominator), t1, B.List_30, B.CborLengthType_2);
      return t1;
    }
  };
  A._$RationalNumber.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._RationalNumber) {
            t2 = other.numerator;
            t3 = _this.numerator;
            if (t2 !== t3)
              t2 = t2.compareTo$1(0, t3) === 0;
            else
              t2 = true;
            if (t2) {
              t1 = other.denominator;
              t2 = _this.denominator;
              if (t1 !== t2)
                t1 = t1.compareTo$1(0, t2) === 0;
              else
                t1 = true;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.numerator, this.denominator, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "RationalNumber(numerator: " + this.numerator.toString$0(0) + ", denominator: " + this.denominator.toString$0(0) + ")";
    }
  };
  A._RationalNumber.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._RationalNumber) {
            t2 = other.numerator;
            t3 = _this.numerator;
            if (t2 !== t3)
              t2 = t2.compareTo$1(0, t3) === 0;
            else
              t2 = true;
            if (t2) {
              t1 = other.denominator;
              t2 = _this.denominator;
              if (t1 !== t2)
                t1 = t1.compareTo$1(0, t2) === 0;
              else
                t1 = true;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.numerator, this.denominator, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "RationalNumber(numerator: " + this.numerator.toString$0(0) + ", denominator: " + this.denominator.toString$0(0) + ")";
    }
  };
  A._RationalNumber_Object__$RationalNumber.prototype = {};
  A.Utxo.prototype = {
    serialize$1$forJson(forJson) {
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, A._setArrayType([this.identifier.serialize$1$forJson(false), this.content.serialize$1$forJson(false)], type$.JSArray_CborValue));
    }
  };
  A._$Utxo.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._Utxo) {
            t2 = other.identifier;
            t3 = _this.identifier;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.content;
              t2 = _this.content;
              t1 = t1 === t2 || t1.$eq(0, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.identifier, this.content, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Utxo(identifier: " + this.identifier.toString$0(0) + ", content: " + this.content.toString$0(0) + ")";
    }
  };
  A._Utxo.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._Utxo) {
            t2 = other.identifier;
            t3 = _this.identifier;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.content;
              t2 = _this.content;
              t1 = t1 === t2 || t1.$eq(0, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.identifier, this.content, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Utxo(identifier: " + this.identifier.toString$0(0) + ", content: " + this.content.toString$0(0) + ")";
    }
  };
  A._Utxo_Object__$Utxo.prototype = {};
  A.CardanoTransaction.prototype = {
    serialize$1$forJson(forJson) {
      var _this = this,
        t1 = _this.body.serialize$1$forJson(false),
        t2 = _this.witnessSet.serialize$1$forJson(false),
        t3 = _this.isValidDi,
        t4 = !t3 ? 20 : 21,
        t5 = _this.auxiliaryData.value;
      t1 = A.List_List$_of(A._setArrayType([t1, t2, new A._CborBoolImpl(t3, t4, B.List_empty), t5], type$.JSArray_CborValue), type$.CborValue);
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, t1);
    },
    diff$5$constitutionalCommitteeColdCredential$constitutionalCommitteeHotCredential$drepCredential$receiveAddressBech32$walletUtxos(constitutionalCommitteeColdCredential, constitutionalCommitteeHotCredential, drepCredential, receiveAddressBech32, walletUtxos) {
      var t1, drepCredentialBytes, constitutionalCommitteeColdCredentialBytes, constitutionalCommitteeHotCredentialBytes, receiveAddress, stakeCredentialsBytes, stakeBech32Address, outputs, t2, withdrawals, t3, t4, incoming, utxoByHashAndId, consumedUtxosFromThisWallet, outgoing, totalLovelace, totalMultiAssets, votesMap, thisWalletVotes, bodyHash, t5, t6, t7, t8, t9, t10, t11, _null = null;
      type$.Iterable_Utxo._as(walletUtxos);
      t1 = type$.HexCodec._eval$1("Codec.T");
      t1._as(drepCredential);
      drepCredentialBytes = new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(drepCredential)));
      t1._as(constitutionalCommitteeColdCredential);
      constitutionalCommitteeColdCredentialBytes = new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(constitutionalCommitteeColdCredential)));
      t1._as(constitutionalCommitteeHotCredential);
      constitutionalCommitteeHotCredentialBytes = new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(constitutionalCommitteeHotCredential)));
      receiveAddress = A.CardanoAddress_CardanoAddress$fromBech32OrBase58(receiveAddressBech32);
      stakeCredentialsBytes = receiveAddress.get$stakeCredentialsBytes();
      stakeBech32Address = receiveAddress.get$stakeBech32Encoded();
      if (stakeBech32Address == null)
        throw A.wrapException(A.Exception_Exception("receiveAddressBech32 is not a base or stake address: " + receiveAddressBech32));
      t1 = this.body;
      outputs = t1.get$outputs();
      t2 = t1.get$withdrawals();
      withdrawals = t2 == null ? _null : J.where$1$ax(t2, new A.CardanoTransaction_diff_closure(stakeBech32Address)).fold$1$2(0, $.$get$_BigIntImpl_zero(), new A.CardanoTransaction_diff_closure0(), type$.BigInt);
      t2 = J.where$1$ax(outputs, new A.CardanoTransaction_diff_closure1(receiveAddress));
      t3 = $.$get$_BigIntImpl_zero();
      t4 = type$.Value;
      incoming = t2.fold$1$2(0, new A.Value_v0(t3), new A.CardanoTransaction_diff_closure2(), t4);
      t2 = type$.Utxo;
      utxoByHashAndId = A.IterableExtension_groupFoldBy(walletUtxos, new A.CardanoTransaction_diff_closure3(), new A.CardanoTransaction_diff_closure4(), t2, type$.String, t2);
      t2 = type$.NonNullsIterable_Utxo;
      consumedUtxosFromThisWallet = new A.NonNullsIterable(J.map$1$1$ax(t1.inputs.get$data(), new A.CardanoTransaction_diff_closure5(utxoByHashAndId), type$.nullable_Utxo), t2);
      outgoing = consumedUtxosFromThisWallet.fold$1$2(0, new A.Value_v0(withdrawals == null ? t3 : withdrawals), new A.CardanoTransaction_diff_closure6(), t4);
      totalLovelace = incoming.get$lovelace().$sub(0, outgoing.get$lovelace());
      totalMultiAssets = A.MultiAssetListOperations_merge(incoming.get$multiAssets(), outgoing.get$multiAssets(), B.Operation_1);
      t3 = t1.votingProcedures;
      votesMap = t3 == null ? _null : t3.get$voting();
      t3 = (votesMap == null ? A.LinkedHashMap_LinkedHashMap$_empty(type$.Voter, type$.Map_GovActionId_VotingProcedure) : votesMap).get$entries();
      t4 = t3.$ti;
      t4 = A.IterableIterableExtension_get_flattened(A.MappedIterable_MappedIterable(t3, t4._eval$1("List<VoteInfo>(Iterable.E)")._as(new A.CardanoTransaction_diff_closure7(drepCredentialBytes, constitutionalCommitteeHotCredentialBytes)), t4._eval$1("Iterable.E"), type$.List_VoteInfo), type$.VoteInfo);
      thisWalletVotes = A.List_List$_of(t4, t4.$ti._eval$1("Iterable.E"));
      bodyHash = t1.blake2bHash256Hex$0();
      t2 = A.List_List$_of(consumedUtxosFromThisWallet, t2._eval$1("Iterable.E"));
      t3 = t1.get$certs();
      if (t3 == null)
        t3 = _null;
      else {
        t3 = A.IterableExtension_get_lastOrNull(new A.NonNullsIterable(J.map$1$1$ax(t3, new A.CardanoTransaction_diff_closure8(stakeCredentialsBytes), type$.nullable_StakePoolId), type$.NonNullsIterable_StakePoolId), type$.StakePoolId);
        t3 = t3 == null ? _null : B.Bech32Encoder_pool.encode$1(t3.poolKeyHash);
      }
      t4 = t1.get$certs();
      t4 = t4 == null ? _null : A.IterableExtension_get_lastOrNull(new A.NonNullsIterable(J.map$1$1$ax(t4, new A.CardanoTransaction_diff_closure9(constitutionalCommitteeColdCredentialBytes), type$.nullable_Credential), type$.NonNullsIterable_Credential), type$.Credential);
      t5 = t1.get$certs();
      t5 = t5 == null ? _null : A.IterableExtension_get_lastOrNull(new A.NonNullsIterable(J.map$1$1$ax(t5, new A.CardanoTransaction_diff_closure10(constitutionalCommitteeColdCredentialBytes), type$.nullable_Credential), type$.NonNullsIterable_Credential), type$.Credential);
      t6 = t1.get$certs();
      t6 = t6 == null ? _null : A.IterableExtension_get_lastOrNull(new A.NonNullsIterable(J.map$1$1$ax(t6, new A.CardanoTransaction_diff_closure11(stakeCredentialsBytes), type$.nullable_Drep), type$.NonNullsIterable_Drep), type$.Drep);
      t7 = t1.get$certs();
      t7 = t7 == null ? _null : A.IterableExtension_get_lastOrNull(new A.NonNullsIterable(J.map$1$1$ax(t7, new A.CardanoTransaction_diff_closure12(drepCredentialBytes), type$.nullable_DRepDiffInfo), type$.NonNullsIterable_DRepDiffInfo), type$.DRepDiffInfo);
      t8 = t1.get$certs();
      t8 = t8 == null ? _null : A.IterableExtension_get_lastOrNull(new A.NonNullsIterable(J.map$1$1$ax(t8, new A.CardanoTransaction_diff_closure13(drepCredentialBytes), type$.nullable_DRepDiffInfo), type$.NonNullsIterable_DRepDiffInfo), type$.DRepDiffInfo);
      t9 = t1.get$certs();
      if (t9 == null)
        t9 = _null;
      else {
        t10 = type$.bool;
        t10 = A.IterableExtension_get_lastOrNull(new A.NonNullsIterable(J.map$1$1$ax(t9, new A.CardanoTransaction_diff_closure14(drepCredentialBytes), t10), type$.NonNullsIterable_bool), t10);
        t9 = t10;
      }
      if (t9 == null)
        t9 = false;
      t10 = t1.get$certs();
      if (t10 == null)
        t10 = _null;
      else {
        t11 = type$.bool;
        t11 = A.IterableExtension_get_lastOrNull(new A.NonNullsIterable(J.map$1$1$ax(t10, new A.CardanoTransaction_diff_closure15(stakeCredentialsBytes), t11), type$.NonNullsIterable_bool), t11);
        t10 = t11;
      }
      if (t10 == null)
        t10 = false;
      t1 = t1.get$proposalProcedures();
      if (t1 == null)
        t1 = _null;
      else {
        t1 = A.ListExtensions_mapIndexed(t1, new A.CardanoTransaction_diff_closure16(bodyHash), type$.ProposalProcedure, type$.ProposalDiffInfo);
        t1 = A.List_List$_of(t1, t1.$ti._eval$1("Iterable.E"));
      }
      if (t1 == null)
        t1 = A._setArrayType([], type$.JSArray_ProposalDiffInfo);
      return new A._TxDiff(new A.Value_v1(totalLovelace, totalMultiAssets), t2, t3, t6, t7, t8, t4, t5, thisWalletVotes, t1, t9, t10);
    }
  };
  A.CardanoTransaction_diff_closure.prototype = {
    call$1(item) {
      return type$.Withdraw._as(item).stakeAddressBech32 === this.stakeBech32Address;
    },
    $signature: 42
  };
  A.CardanoTransaction_diff_closure0.prototype = {
    call$2(previousValue, element) {
      return type$.BigInt._as(previousValue).$add(0, type$.Withdraw._as(element).coin);
    },
    $signature: 117
  };
  A.CardanoTransaction_diff_closure1.prototype = {
    call$1(item) {
      return B.DeepCollectionEquality_false.equals$2(type$.CardanoTransactionOutput._as(item).get$addressBytes(), this.receiveAddress.get$bytes());
    },
    $signature: 118
  };
  A.CardanoTransaction_diff_closure2.prototype = {
    call$2(previousValue, element) {
      return type$.Value._as(previousValue).$add(0, type$.CardanoTransactionOutput._as(element).get$value());
    },
    $signature: 119
  };
  A.CardanoTransaction_diff_closure3.prototype = {
    call$1(e) {
      var t1 = type$.Utxo._as(e).identifier;
      return t1.transactionHash + "#" + t1.index;
    },
    $signature: 84
  };
  A.CardanoTransaction_diff_closure4.prototype = {
    call$2(previous, element) {
      return type$.Utxo._as(element);
    },
    $signature: 121
  };
  A.CardanoTransaction_diff_closure5.prototype = {
    call$1(e) {
      type$.CardanoTransactionInput._as(e);
      return this.utxoByHashAndId.$index(0, e.transactionHash + "#" + e.index);
    },
    $signature: 122
  };
  A.CardanoTransaction_diff_closure6.prototype = {
    call$2(previousValue, element) {
      return type$.Value._as(previousValue).$add(0, type$.Utxo._as(element).content.get$value());
    },
    $signature: 123
  };
  A.CardanoTransaction_diff_closure7.prototype = {
    call$1(pair) {
      var t1;
      type$.MapEntry_of_Voter_and_Map_GovActionId_VotingProcedure._as(pair);
      t1 = pair.key.vKeyHash;
      if (!(A._Uint8ListX_deepEquals(t1, this.drepCredentialBytes) || A._Uint8ListX_deepEquals(t1, this.constitutionalCommitteeHotCredentialBytes)))
        return A._setArrayType([], type$.JSArray_VoteInfo);
      return pair.value.get$entries().map$1$1(0, new A.CardanoTransaction_diff__closure(), type$.VoteInfo).toList$0(0);
    },
    $signature: 124
  };
  A.CardanoTransaction_diff__closure.prototype = {
    call$1(v) {
      type$.MapEntry_GovActionId_VotingProcedure._as(v);
      return new A._VoteInfo(v.key, v.value.vote);
    },
    $signature: 125
  };
  A.CardanoTransaction_diff_closure8.prototype = {
    call$1(e) {
      var t1, _this = this, _null = null;
      type$.Certificate._as(e);
      $label0$0: {
        t1 = _null;
        if (e instanceof A.Certificate_StakeRegistrationLegacy)
          break $label0$0;
        if (e instanceof A.Certificate_StakeDeRegistrationLegacy)
          break $label0$0;
        if (e instanceof A.Certificate_StakeDelegation) {
          t1 = A._Uint8ListX_deepEquals(e.stakeCredential.vKeyHash, _this.stakeCredentialsBytes) ? e.stakePoolId : _null;
          break $label0$0;
        }
        if (e instanceof A.Certificate_PoolRegistration)
          break $label0$0;
        if (e instanceof A.Certificate_PoolRetirement)
          break $label0$0;
        if (e instanceof A.Certificate_StakeRegistration)
          break $label0$0;
        if (e instanceof A.Certificate_StakeDeRegistration)
          break $label0$0;
        if (e instanceof A.Certificate_VoteDelegation)
          break $label0$0;
        if (e instanceof A.Certificate_StakeVoteDelegation) {
          t1 = A._Uint8ListX_deepEquals(e.stakeCredential.vKeyHash, _this.stakeCredentialsBytes) ? e.stakePoolId : _null;
          break $label0$0;
        }
        if (e instanceof A.Certificate_StakeRegistrationDelegation) {
          t1 = A._Uint8ListX_deepEquals(e.stakeCredential.vKeyHash, _this.stakeCredentialsBytes) ? e.stakePoolId : _null;
          break $label0$0;
        }
        if (e instanceof A.Certificate_VoteRegistrationDelegation)
          break $label0$0;
        if (e instanceof A.Certificate_StakeVoteRegistrationDelegation) {
          t1 = A._Uint8ListX_deepEquals(e.stakeCredential.vKeyHash, _this.stakeCredentialsBytes) ? e.stakePoolId : _null;
          break $label0$0;
        }
        if (e instanceof A.Certificate_AuthorizeCommitteeHot)
          break $label0$0;
        if (e instanceof A.Certificate_ResignCommitteeCold)
          break $label0$0;
        if (e instanceof A.Certificate_RegisterDRep)
          break $label0$0;
        if (e instanceof A.Certificate_UnregisterDRep)
          break $label0$0;
        if (e instanceof A.Certificate_UpdateDRep)
          break $label0$0;
      }
      return t1;
    },
    $signature: 126
  };
  A.CardanoTransaction_diff_closure9.prototype = {
    call$1(e) {
      var t1;
      type$.Certificate._as(e);
      $label1$1: {
        if (e instanceof A.Certificate_AuthorizeCommitteeHot) {
          t1 = A._Uint8ListX_deepEquals(e.committeeColdCredential.vKeyHash, this.constitutionalCommitteeColdCredentialBytes) ? e.committeeHotCredential : null;
          break $label1$1;
        }
        t1 = null;
        break $label1$1;
      }
      return t1;
    },
    $signature: 43
  };
  A.CardanoTransaction_diff_closure10.prototype = {
    call$1(e) {
      var t1;
      type$.Certificate._as(e);
      $label2$2: {
        if (e instanceof A.Certificate_ResignCommitteeCold) {
          t1 = e.committeeColdCredential;
          t1 = A._Uint8ListX_deepEquals(t1.vKeyHash, this.constitutionalCommitteeColdCredentialBytes) ? t1 : null;
          break $label2$2;
        }
        t1 = null;
        break $label2$2;
      }
      return t1;
    },
    $signature: 43
  };
  A.CardanoTransaction_diff_closure11.prototype = {
    call$1(e) {
      var t1, _this = this, _null = null;
      type$.Certificate._as(e);
      $label3$3: {
        t1 = _null;
        if (e instanceof A.Certificate_VoteDelegation) {
          t1 = A._Uint8ListX_deepEquals(e.stakeCredential.vKeyHash, _this.stakeCredentialsBytes) ? e.dRep : _null;
          break $label3$3;
        }
        if (e instanceof A.Certificate_StakeVoteDelegation) {
          t1 = A._Uint8ListX_deepEquals(e.stakeCredential.vKeyHash, _this.stakeCredentialsBytes) ? e.dRep : _null;
          break $label3$3;
        }
        if (e instanceof A.Certificate_VoteRegistrationDelegation) {
          t1 = A._Uint8ListX_deepEquals(e.stakeCredential.vKeyHash, _this.stakeCredentialsBytes) ? e.dRep : _null;
          break $label3$3;
        }
        if (e instanceof A.Certificate_StakeVoteRegistrationDelegation) {
          t1 = A._Uint8ListX_deepEquals(e.stakeCredential.vKeyHash, _this.stakeCredentialsBytes) ? e.dRep : _null;
          break $label3$3;
        }
        if (e instanceof A.Certificate_StakeRegistrationLegacy)
          break $label3$3;
        if (e instanceof A.Certificate_StakeDeRegistrationLegacy)
          break $label3$3;
        if (e instanceof A.Certificate_StakeDelegation)
          break $label3$3;
        if (e instanceof A.Certificate_PoolRegistration)
          break $label3$3;
        if (e instanceof A.Certificate_PoolRetirement)
          break $label3$3;
        if (e instanceof A.Certificate_StakeRegistration)
          break $label3$3;
        if (e instanceof A.Certificate_StakeDeRegistration)
          break $label3$3;
        if (e instanceof A.Certificate_StakeRegistrationDelegation)
          break $label3$3;
        if (e instanceof A.Certificate_AuthorizeCommitteeHot)
          break $label3$3;
        if (e instanceof A.Certificate_ResignCommitteeCold)
          break $label3$3;
        if (e instanceof A.Certificate_RegisterDRep)
          break $label3$3;
        if (e instanceof A.Certificate_UnregisterDRep)
          break $label3$3;
        if (e instanceof A.Certificate_UpdateDRep)
          break $label3$3;
      }
      return t1;
    },
    $signature: 128
  };
  A.CardanoTransaction_diff_closure12.prototype = {
    call$1(e) {
      var t1, t2;
      type$.Certificate._as(e);
      $label4$4: {
        t1 = null;
        if (e instanceof A.Certificate_RegisterDRep) {
          t2 = e.dRepCredential.vKeyHash;
          if (A._Uint8ListX_deepEquals(t2, this.drepCredentialBytes)) {
            t1 = new A.Bech32Encoder("drep").encode$1(B.NativeUint8List_methods.toList$1$growable(t2, false));
            t2 = e.anchor;
            t1 = new A._DRepDiffInfo(t1, t2 == null ? null : t2.anchorUrl);
          }
          break $label4$4;
        }
        break $label4$4;
      }
      return t1;
    },
    $signature: 44
  };
  A.CardanoTransaction_diff_closure13.prototype = {
    call$1(e) {
      var t1, t2;
      type$.Certificate._as(e);
      $label5$5: {
        t1 = null;
        if (e instanceof A.Certificate_UpdateDRep) {
          t2 = e.dRepCredential.vKeyHash;
          if (A._Uint8ListX_deepEquals(t2, this.drepCredentialBytes)) {
            t1 = new A.Bech32Encoder("drep").encode$1(B.NativeUint8List_methods.toList$1$growable(t2, false));
            t2 = e.anchor;
            t1 = new A._DRepDiffInfo(t1, t2 == null ? null : t2.anchorUrl);
          }
          break $label5$5;
        }
        break $label5$5;
      }
      return t1;
    },
    $signature: 44
  };
  A.CardanoTransaction_diff_closure14.prototype = {
    call$1(e) {
      var t1;
      type$.Certificate._as(e);
      $label6$6: {
        if (e instanceof A.Certificate_UnregisterDRep) {
          t1 = A._Uint8ListX_deepEquals(e.dRepCredential.vKeyHash, this.drepCredentialBytes);
          break $label6$6;
        }
        t1 = false;
        break $label6$6;
      }
      return t1;
    },
    $signature: 17
  };
  A.CardanoTransaction_diff_closure15.prototype = {
    call$1(e) {
      var t1;
      type$.Certificate._as(e);
      $label7$7: {
        if (e instanceof A.Certificate_StakeDeRegistrationLegacy) {
          t1 = A._Uint8ListX_deepEquals(e.stakeCredential.vKeyHash, this.stakeCredentialsBytes);
          break $label7$7;
        }
        if (e instanceof A.Certificate_StakeDeRegistration) {
          t1 = A._Uint8ListX_deepEquals(e.stakeCredential.vKeyHash, this.stakeCredentialsBytes);
          break $label7$7;
        }
        t1 = false;
        break $label7$7;
      }
      return t1;
    },
    $signature: 17
  };
  A.CardanoTransaction_diff_closure16.prototype = {
    call$2(index, e) {
      return new A._ProposalDiffInfo(new A._GovActionId(this.bodyHash, index), type$.ProposalProcedure._as(e).govAction);
    },
    $signature: 131
  };
  A._$CardanoTransaction.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._CardanoTransaction) {
            t2 = other.body;
            t3 = _this.body;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t2 = other.witnessSet;
              t3 = _this.witnessSet;
              if (t2 === t3 || t2.$eq(0, t3)) {
                t2 = other.isValidDi === _this.isValidDi;
                if (t2 || t2) {
                  t1 = other.auxiliaryData;
                  t2 = _this.auxiliaryData;
                  t1 = t1 === t2 || t1.$eq(0, t2);
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.body, _this.witnessSet, _this.isValidDi, _this.auxiliaryData, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "CardanoTransaction(body: " + _this.body.toString$0(0) + ", witnessSet: " + _this.witnessSet.toString$0(0) + ", isValidDi: " + _this.isValidDi + ", auxiliaryData: " + _this.auxiliaryData.toString$0(0) + ")";
    }
  };
  A._CardanoTransaction.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._CardanoTransaction) {
            t2 = other.body;
            t3 = _this.body;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t2 = other.witnessSet;
              t3 = _this.witnessSet;
              if (t2 === t3 || t2.$eq(0, t3)) {
                t2 = other.isValidDi === _this.isValidDi;
                if (t2 || t2) {
                  t1 = other.auxiliaryData;
                  t2 = _this.auxiliaryData;
                  t1 = t1 === t2 || t1.$eq(0, t2);
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.body, _this.witnessSet, _this.isValidDi, _this.auxiliaryData, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "CardanoTransaction._hidden(body: " + _this.body.toString$0(0) + ", witnessSet: " + _this.witnessSet.toString$0(0) + ", isValidDi: " + _this.isValidDi + ", auxiliaryData: " + _this.auxiliaryData.toString$0(0) + ")";
    }
  };
  A._CardanoTransaction_Object__$CardanoTransaction.prototype = {};
  A.CoseHeaderMap.prototype = {
    serialize$1$forJson(forJson) {
      var t2, t3, t4, _this = this, _null = null,
        t1 = _this.algorithmId;
      t1 = t1 == null ? _null : new A.CoseHeaderMap_serialize_closure(false).call$1(t1);
      t2 = _this.keyId;
      t2 = t2 == null ? _null : new A.CoseHeaderMap_serialize_closure0(false).call$1(t2);
      t3 = _this.get$counterSignature();
      t3 = t3 == null ? _null : new A.CoseHeaderMap_serialize_closure1(false).call$1(t3);
      t4 = _this.hashed;
      t1 = A._setArrayType([t1, null, null, t2, null, null, t3, t4 == null ? _null : new A.CoseHeaderMap_serialize_closure2().call$1(t4)], type$.JSArray_nullable_MapEntry_CborValue_CborValue);
      B.JSArray_methods.addAll$1(t1, _this.otherHeaders._base.get$entries());
      t2 = type$.CborValue;
      return new A._CborMapImpl(B.List_empty, B.CborLengthType_2, A.Map_Map$fromEntries(new A.WhereTypeIterable(t1, type$.WhereTypeIterable_MapEntry_CborValue_CborValue), t2, t2));
    }
  };
  A.CoseHeaderMap_serialize_closure.prototype = {
    call$1(p0) {
      type$.CborValue._as(p0);
      return new A.MapEntry(B._CborSmallIntImpl_1_List_empty, p0, type$.MapEntry_CborValue_CborValue);
    },
    $signature: 132
  };
  A.CoseHeaderMap_serialize_closure0.prototype = {
    call$1(p0) {
      type$.Uint8List._as(p0);
      return new A.MapEntry(B._CborSmallIntImpl_4_List_empty, new A._CborBytesImpl(p0, B.List_empty), type$.MapEntry_CborValue_CborValue);
    },
    $signature: 35
  };
  A.CoseHeaderMap_serialize_closure1.prototype = {
    call$1(p0) {
      var t1;
      type$.List_CoseSignature._as(p0);
      t1 = type$.CborValue;
      t1 = A.List_List$_of(J.map$1$1$ax(p0, new A.CoseHeaderMap_serialize__closure(this.forJson), t1), t1);
      return new A.MapEntry(B._CborSmallIntImpl_7_List_empty, new A._CborListImpl(B.List_empty, B.CborLengthType_2, t1), type$.MapEntry_CborValue_CborList);
    },
    $signature: 133
  };
  A.CoseHeaderMap_serialize__closure.prototype = {
    call$1(e) {
      return type$.CoseSignature._as(e).serialize$1$forJson(this.forJson);
    },
    $signature: 134
  };
  A.CoseHeaderMap_serialize_closure2.prototype = {
    call$1(p0) {
      var t1;
      A._asBool(p0);
      t1 = !p0 ? 20 : 21;
      return new A.MapEntry(new A._CborStringImpl(B.List_empty, "hashed", null), new A._CborBoolImpl(p0, t1, B.List_empty), type$.MapEntry_CborString_CborBool);
    },
    $signature: 135
  };
  A._$CoseHeaderMap.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this, _null = null;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._CoseHeaderMap) {
            t2 = other.algorithmId;
            t3 = _this.algorithmId;
            if (t2 == t3 || J.$eq$(t2, t3))
              if (B.DeepCollectionEquality_false.equals$2(_null, _null))
                if (B.DeepCollectionEquality_false.equals$2(other.keyId, _this.keyId))
                  if (B.DeepCollectionEquality_false.equals$2(_null, _null))
                    if (B.DeepCollectionEquality_false.equals$2(_null, _null))
                      if (B.DeepCollectionEquality_false.equals$2(other.get$counterSignature(), _this.get$counterSignature())) {
                        t1 = other.hashed == _this.hashed;
                        t1 = (t1 || t1) && B.DeepCollectionEquality_false.equals$2(other.otherHeaders, _this.otherHeaders);
                      }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this, _null = null;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.algorithmId, B.DeepCollectionEquality_false.hash$1(_null), _null, B.DeepCollectionEquality_false.hash$1(_this.keyId), B.DeepCollectionEquality_false.hash$1(_null), B.DeepCollectionEquality_false.hash$1(_null), B.DeepCollectionEquality_false.hash$1(_this.get$counterSignature()), _this.hashed, B.DeepCollectionEquality_false.hash$1(_this.otherHeaders), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "CoseHeaderMap(algorithmId: " + A.S(_this.algorithmId) + string$.x2c_crit + A.S(_this.keyId) + string$.x2c_init + A.S(_this.get$counterSignature()) + ", hashed: " + A.S(_this.hashed) + ", otherHeaders: " + _this.otherHeaders.toString$0(0) + ")";
    }
  };
  A._CoseHeaderMap.prototype = {
    get$counterSignature() {
      return null;
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this, _null = null;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._CoseHeaderMap) {
            t2 = other.algorithmId;
            t3 = _this.algorithmId;
            if (t2 == t3 || J.$eq$(t2, t3))
              if (B.DeepCollectionEquality_false.equals$2(_null, _null))
                if (B.DeepCollectionEquality_false.equals$2(other.keyId, _this.keyId))
                  if (B.DeepCollectionEquality_false.equals$2(_null, _null))
                    if (B.DeepCollectionEquality_false.equals$2(_null, _null))
                      if (B.DeepCollectionEquality_false.equals$2(_null, _null)) {
                        t1 = other.hashed == _this.hashed;
                        t1 = (t1 || t1) && B.DeepCollectionEquality_false.equals$2(other.otherHeaders, _this.otherHeaders);
                      }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this, _null = null;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.algorithmId, B.DeepCollectionEquality_false.hash$1(_null), _null, B.DeepCollectionEquality_false.hash$1(_this.keyId), B.DeepCollectionEquality_false.hash$1(_null), B.DeepCollectionEquality_false.hash$1(_null), B.DeepCollectionEquality_false.hash$1(_null), _this.hashed, B.DeepCollectionEquality_false.hash$1(_this.otherHeaders), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "CoseHeaderMap(algorithmId: " + A.S(_this.algorithmId) + string$.x2c_crit + A.S(_this.keyId) + string$.x2c_init + A.S(_this.get$counterSignature()) + ", hashed: " + A.S(_this.hashed) + ", otherHeaders: " + _this.otherHeaders.toString$0(0) + ")";
    }
  };
  A._CoseHeaderMap_Object__$CoseHeaderMap.prototype = {};
  A.CoseHeaders.prototype = {
    serialize$1$forJson(forJson) {
      var t1 = A.List_List$_of(A._setArrayType([new A._CborBytesImpl(this.protectedHeader.bytes, B.List_empty), this.unprotectedHeader.serialize$1$forJson(false)], type$.JSArray_CborValue), type$.CborValue);
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, t1);
    }
  };
  A._$CoseHeaders.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._CoseHeaders) {
            t2 = other.protectedHeader;
            t3 = _this.protectedHeader;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.unprotectedHeader;
              t2 = _this.unprotectedHeader;
              t1 = t1 === t2 || t1.$eq(0, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.protectedHeader, this.unprotectedHeader, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "CoseHeaders(protectedHeader: " + this.protectedHeader.toString$0(0) + ", unprotectedHeader: " + this.unprotectedHeader.toString$0(0) + ")";
    }
  };
  A._CoseHeaders.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._CoseHeaders) {
            t2 = other.protectedHeader;
            t3 = _this.protectedHeader;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.unprotectedHeader;
              t2 = _this.unprotectedHeader;
              t1 = t1 === t2 || t1.$eq(0, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.protectedHeader, this.unprotectedHeader, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "CoseHeaders(protectedHeader: " + this.protectedHeader.toString$0(0) + ", unprotectedHeader: " + this.unprotectedHeader.toString$0(0) + ")";
    }
  };
  A._CoseHeaders_Object__$CoseHeaders.prototype = {};
  A.CoseKey.prototype = {
    serialize$1$forJson(forJson) {
      var t1 = type$.CborValue;
      return new A._CborMapImpl(B.List_empty, B.CborLengthType_2, A.LinkedHashMap_LinkedHashMap$of(A.LinkedHashMap_LinkedHashMap$_literal([B._CborSmallIntImpl_1_List_empty, B._CborSmallIntImpl_1_List_empty, B._CborSmallIntImpl_3_List_empty, B._CborSmallIntImpl_m8_List_empty, B._CborSmallIntImpl_m1_List_empty, B._CborSmallIntImpl_6_List_empty, B._CborSmallIntImpl_m2_List_empty, new A._CborBytesImpl(this.keyId, B.List_empty)], t1, t1), t1, t1));
    }
  };
  A._$CoseKey.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this))
          if (other instanceof A._CoseKey)
            t1 = B.DeepCollectionEquality_false.equals$2(other.keyId, this.keyId);
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.keyId), B._CborSmallIntImpl_m8_List_empty, B._CborSmallIntImpl_6_List_empty, B._CborSmallIntImpl_1_List_empty, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "CoseKey(keyId: " + A.S(this.keyId) + ", algorithmId: " + B._CborSmallIntImpl_m8_List_empty.toString$0(0) + ", crvKey: " + B._CborSmallIntImpl_6_List_empty.toString$0(0) + ", keyType: " + B._CborSmallIntImpl_1_List_empty.toString$0(0) + ")";
    }
  };
  A._CoseKey.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this))
          if (other instanceof A._CoseKey)
            t1 = B.DeepCollectionEquality_false.equals$2(other.keyId, this.keyId);
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.keyId), B._CborSmallIntImpl_m8_List_empty, B._CborSmallIntImpl_6_List_empty, B._CborSmallIntImpl_1_List_empty, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "CoseKey(keyId: " + A.S(this.keyId) + ", algorithmId: " + B._CborSmallIntImpl_m8_List_empty.toString$0(0) + ", crvKey: " + B._CborSmallIntImpl_6_List_empty.toString$0(0) + ", keyType: " + B._CborSmallIntImpl_1_List_empty.toString$0(0) + ")";
    }
  };
  A._CoseKey_Object__$CoseKey.prototype = {};
  A.CoseProtectedHeaderMap.prototype = {};
  A._$CoseProtectedHeaderMap.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A._CoseProtectedHeaderMap && B.DeepCollectionEquality_false.equals$2(other.bytes, this.bytes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "CoseProtectedHeaderMap(bytes: " + A.S(this.bytes) + ")";
    }
  };
  A._CoseProtectedHeaderMap.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A._CoseProtectedHeaderMap && B.DeepCollectionEquality_false.equals$2(other.bytes, this.bytes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "CoseProtectedHeaderMap(bytes: " + A.S(this.bytes) + ")";
    }
  };
  A._CoseProtectedHeaderMap_Object__$CoseProtectedHeaderMap.prototype = {};
  A.CoseSigStructure.prototype = {
    serialize$1$forJson(forJson) {
      var t1 = type$.WhereTypeIterable_CborValue;
      t1 = A.List_List$_of(new A.WhereTypeIterable(A._setArrayType([new A._CborStringImpl(B.List_empty, "Signature1", null), new A._CborBytesImpl(this.bodyProtected.bytes, B.List_empty), null, new A._CborBytesImpl(this.externalAad, B.List_empty), new A._CborBytesImpl(this.payload, B.List_empty)], type$.JSArray_nullable_CborValue), t1), t1._eval$1("Iterable.E"));
      t1.$flags = 1;
      t1 = A.List_List$_of(t1, type$.CborValue);
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, t1);
    }
  };
  A.SigContext.prototype = {
    _enumToString$0() {
      return "SigContext." + this._core$_name;
    }
  };
  A._$CoseSigStructure.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._CoseSigStructure) {
            t2 = other.bodyProtected;
            t3 = _this.bodyProtected;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.sigContext === _this.sigContext;
              t1 = (t1 || t1) && B.DeepCollectionEquality_false.equals$2(other.payload, _this.payload) && B.DeepCollectionEquality_false.equals$2(other.externalAad, _this.externalAad);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.bodyProtected, _this.signProtected, _this.sigContext, B.DeepCollectionEquality_false.hash$1(_this.payload), B.DeepCollectionEquality_false.hash$1(_this.externalAad), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "CoseSigStructure(bodyProtected: " + _this.bodyProtected.toString$0(0) + ", signProtected: " + A.S(_this.signProtected) + ", sigContext: " + _this.sigContext.toString$0(0) + ", payload: " + A.S(_this.payload) + ", externalAad: " + A.S(_this.externalAad) + ")";
    }
  };
  A._CoseSigStructure.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._CoseSigStructure) {
            t2 = other.bodyProtected;
            t3 = _this.bodyProtected;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.sigContext === _this.sigContext;
              t1 = (t1 || t1) && B.DeepCollectionEquality_false.equals$2(other.payload, _this.payload) && B.DeepCollectionEquality_false.equals$2(other.externalAad, _this.externalAad);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.bodyProtected, _this.signProtected, _this.sigContext, B.DeepCollectionEquality_false.hash$1(_this.payload), B.DeepCollectionEquality_false.hash$1(_this.externalAad), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "CoseSigStructure(bodyProtected: " + _this.bodyProtected.toString$0(0) + ", signProtected: " + A.S(_this.signProtected) + ", sigContext: " + _this.sigContext.toString$0(0) + ", payload: " + A.S(_this.payload) + ", externalAad: " + A.S(_this.externalAad) + ")";
    }
  };
  A._CoseSigStructure_Object__$CoseSigStructure.prototype = {};
  A.CoseSign1.prototype = {
    serialize$1$forJson(forJson) {
      var t1 = type$.CborValue,
        t2 = A.List_List$_of(this.headers.serialize$1$forJson(false), t1);
      t2.push(new A._CborBytesImpl(this.payload, B.List_empty));
      t2.push(new A._CborBytesImpl(this.signature, B.List_empty));
      t1 = A.List_List$_of(t2, t1);
      return new A._CborListImpl(B.List_empty, B.CborLengthType_2, t1);
    }
  };
  A._$CoseSign1.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._CoseSign1) {
            t1 = other.headers;
            t2 = _this.headers;
            t1 = (t1 === t2 || t1.$eq(0, t2)) && B.DeepCollectionEquality_false.equals$2(other.payload, _this.payload) && B.DeepCollectionEquality_false.equals$2(other.signature, _this.signature);
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.headers, B.DeepCollectionEquality_false.hash$1(_this.payload), B.DeepCollectionEquality_false.hash$1(_this.signature), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "CoseSign1(headers: " + this.headers.toString$0(0) + ", payload: " + A.S(this.payload) + ", signature: " + A.S(this.signature) + ")";
    }
  };
  A._CoseSign1.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._CoseSign1) {
            t1 = other.headers;
            t2 = _this.headers;
            t1 = (t1 === t2 || t1.$eq(0, t2)) && B.DeepCollectionEquality_false.equals$2(other.payload, _this.payload) && B.DeepCollectionEquality_false.equals$2(other.signature, _this.signature);
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.headers, B.DeepCollectionEquality_false.hash$1(_this.payload), B.DeepCollectionEquality_false.hash$1(_this.signature), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "CoseSign1(headers: " + this.headers.toString$0(0) + ", payload: " + A.S(this.payload) + ", signature: " + A.S(this.signature) + ")";
    }
  };
  A._CoseSign1_Object__$CoseSign1.prototype = {};
  A.DataSignature.prototype = {};
  A._$DataSignature.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._DataSignature) {
            t2 = other.coseKeyHex === _this.coseKeyHex;
            if (t2 || t2) {
              t1 = other.coseSignHex === _this.coseSignHex;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.coseKeyHex, this.coseSignHex, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "DataSignature(coseKeyHex: " + this.coseKeyHex + ", coseSignHex: " + this.coseSignHex + ")";
    }
  };
  A._DataSignature.prototype = {
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["key", this.coseKeyHex, "signature", this.coseSignHex], type$.String, type$.dynamic);
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._DataSignature) {
            t2 = other.coseKeyHex === _this.coseKeyHex;
            if (t2 || t2) {
              t1 = other.coseSignHex === _this.coseSignHex;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.coseKeyHex, this.coseSignHex, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "DataSignature(coseKeyHex: " + this.coseKeyHex + ", coseSignHex: " + this.coseSignHex + ")";
    }
  };
  A._DataSignature_Object__$DataSignature.prototype = {};
  A.CardanoValueParseException.prototype = {};
  A.TransactionOutputParseException.prototype = {};
  A.TransactionBodyParseException.prototype = {};
  A.WitnessBootstrapParseException.prototype = {};
  A.WitnessPlutusScriptV1ParseException.prototype = {};
  A.WitnessPlutusScriptV2ParseException.prototype = {};
  A.WitnessPlutusScriptV3ParseException.prototype = {};
  A.PlutusDataParseException.prototype = {};
  A.ExUnitsParseException.prototype = {};
  A.RedeemerParseException.prototype = {};
  A.NativeScriptParseException.prototype = {};
  A.TransactionParseException.prototype = {
    toString$0(_) {
      return "Failed to parse Cardano Transaction: " + this.message;
    }
  };
  A.WitnessParseException.prototype = {
    toString$0(_) {
      return "Failed to parse Witness: " + this.message;
    }
  };
  A.SigningAddressNotFoundException.prototype = {
    toString$0(_) {
      return "Couldn't find the signing addresses [" + this.missingAddresses.join$1(0, ", ") + "] requested in the searched range [0, " + this.searchedAddressesCount + "]";
    }
  };
  A.UnexpectedSigningAddressTypeException.prototype = {
    toString$0(_) {
      return "Signing address (hex) [" + this.hexAddress + "] is of unexpected type [" + this.type.toString$0(0) + "]. " + this.signingContext;
    }
  };
  A.SigningAddressNotValidException.prototype = {
    toString$0(_) {
      return "Signing address (hex) [" + this.hexInvalidAddressOrCredential + "] is not matching a valid hex address or credential. " + this.signingContext;
    }
  };
  A.NetworkId.prototype = {
    _enumToString$0() {
      return "NetworkId." + this._core$_name;
    }
  };
  A.NetworkId_NetworkId$fromIntValue_closure.prototype = {
    call$1(element) {
      return type$.NetworkId._as(element).intValue === this.intValue;
    },
    $signature: 136
  };
  A.AddressType.prototype = {
    _enumToString$0() {
      return "AddressType." + this._core$_name;
    }
  };
  A.CredentialType.prototype = {
    _enumToString$0() {
      return "CredentialType." + this._core$_name;
    }
  };
  A.InvalidAddressTypeError.prototype = {
    toString$0(_) {
      return this.message;
    }
  };
  A.CardanoAddress.prototype = {
    get$hrp() {
      var t1, base, extension, _this = this,
        value = _this.__CardanoAddress_hrp_FI;
      if (value === $) {
        t1 = _this.get$bytes();
        base = A.CardanoAddress__getAddressBech32BaseHrp(t1);
        extension = (0 === (t1.get$first(t1) & 15) ? B.NetworkId_0_0_testnet : B.NetworkId_1_1_mainnet) === B.NetworkId_1_1_mainnet ? "" : "_test";
        _this.__CardanoAddress_hrp_FI !== $ && A.throwLateFieldADI("hrp");
        value = _this.__CardanoAddress_hrp_FI = base + extension;
      }
      return value;
    },
    get$bech32Encoded() {
      var t1, t2, result, _this = this,
        value = _this.__CardanoAddress_bech32Encoded_FI;
      if (value === $) {
        t1 = _this.get$bytes();
        t2 = _this.get$hrp();
        result = new A.Bech32Encoder(t2).encode$1(t1);
        _this.__CardanoAddress_bech32Encoded_FI !== $ && A.throwLateFieldADI("bech32Encoded");
        _this.__CardanoAddress_bech32Encoded_FI = result;
        value = result;
      }
      return value;
    },
    get$hexEncoded() {
      var t1, result, _this = this,
        value = _this.__CardanoAddress_hexEncoded_FI;
      if (value === $) {
        t1 = _this.get$bytes();
        t1 = type$.HexCodec._eval$1("Codec.S")._as(t1.toList$1$growable(t1, false));
        result = B.C_HexCodec.get$encoder().convert$1(t1);
        _this.__CardanoAddress_hexEncoded_FI !== $ && A.throwLateFieldADI("hexEncoded");
        _this.__CardanoAddress_hexEncoded_FI = result;
        value = result;
      }
      return value;
    },
    get$credentialsBytes() {
      var t1, result, _this = this,
        value = _this.__CardanoAddress_credentialsBytes_FI;
      if (value === $) {
        t1 = _this.get$bytes();
        result = new Uint8Array(A._ensureNativeList(A.SubListIterable$(t1, 1, null, A._instanceType(t1)._eval$1("ListBase.E")).take$1(0, 28).toList$1$growable(0, false)));
        _this.__CardanoAddress_credentialsBytes_FI !== $ && A.throwLateFieldADI("credentialsBytes");
        _this.__CardanoAddress_credentialsBytes_FI = result;
        value = result;
      }
      return value;
    },
    get$stakeCredentialsBytes() {
      var result, _this = this,
        value = _this.__CardanoAddress_stakeCredentialsBytes_FI;
      if (value === $) {
        result = new A.CardanoAddress_stakeCredentialsBytes_closure(_this).call$1(A.CardanoAddress_getAddressType(_this.get$bytes()));
        _this.__CardanoAddress_stakeCredentialsBytes_FI !== $ && A.throwLateFieldADI("stakeCredentialsBytes");
        _this.__CardanoAddress_stakeCredentialsBytes_FI = result;
        value = result;
      }
      return value;
    },
    get$credentials() {
      var t1, result, _this = this,
        value = _this.__CardanoAddress_credentials_FI;
      if (value === $) {
        t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(_this.get$credentialsBytes(), false));
        result = B.C_HexCodec.get$encoder().convert$1(t1);
        _this.__CardanoAddress_credentials_FI !== $ && A.throwLateFieldADI("credentials");
        _this.__CardanoAddress_credentials_FI = result;
        value = result;
      }
      return value;
    },
    get$credentialsBech32() {
      var t1, result, _this = this,
        value = _this.__CardanoAddress_credentialsBech32_FI;
      if (value === $) {
        t1 = _this.get$credentialsBytes();
        result = new A.Bech32Encoder(A.CardanoAddress__getCredBech32BaseHrp(_this.get$bytes())).encode$1(B.NativeUint8List_methods.toList$1$growable(t1, false));
        _this.__CardanoAddress_credentialsBech32_FI !== $ && A.throwLateFieldADI("credentialsBech32");
        _this.__CardanoAddress_credentialsBech32_FI = result;
        value = result;
      }
      return value;
    },
    get$stakeCredentials() {
      var t1, result, _this = this,
        value = _this.__CardanoAddress_stakeCredentials_FI;
      if (value === $) {
        t1 = _this.get$stakeCredentialsBytes();
        if (t1 == null)
          result = null;
        else {
          t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(t1, false));
          result = B.C_HexCodec.get$encoder().convert$1(t1);
        }
        _this.__CardanoAddress_stakeCredentials_FI !== $ && A.throwLateFieldADI("stakeCredentials");
        value = _this.__CardanoAddress_stakeCredentials_FI = result;
      }
      return value;
    },
    get$stakeBech32Encoded() {
      var result, _this = this,
        value = _this.__CardanoAddress_stakeBech32Encoded_FI;
      if (value === $) {
        result = new A.CardanoAddress_stakeBech32Encoded_closure(_this).call$1(A.CardanoAddress_getAddressType(_this.get$bytes()));
        _this.__CardanoAddress_stakeBech32Encoded_FI !== $ && A.throwLateFieldADI("stakeBech32Encoded");
        _this.__CardanoAddress_stakeBech32Encoded_FI = result;
        value = result;
      }
      return value;
    },
    get$networkId() {
      var t1, result, _this = this,
        value = _this.__CardanoAddress_networkId_FI;
      if (value === $) {
        t1 = _this.get$bytes();
        result = 0 === (t1.get$first(t1) & 15) ? B.NetworkId_0_0_testnet : B.NetworkId_1_1_mainnet;
        _this.__CardanoAddress_networkId_FI !== $ && A.throwLateFieldADI("networkId");
        value = _this.__CardanoAddress_networkId_FI = result;
      }
      return value;
    },
    get$credentialsType() {
      var value = this.__CardanoAddress_credentialsType_FI;
      return value === $ ? this.__CardanoAddress_credentialsType_FI = new A.Lazy(new A.CardanoAddress_credentialsType_closure(this), type$.Lazy_CredentialType) : value;
    },
    get$addressType() {
      var result, _this = this,
        value = _this.__CardanoAddress_addressType_FI;
      if (value === $) {
        result = A.CardanoAddress_getAddressType(_this.get$bytes());
        _this.__CardanoAddress_addressType_FI !== $ && A.throwLateFieldADI("addressType");
        _this.__CardanoAddress_addressType_FI = result;
        value = result;
      }
      return value;
    }
  };
  A.CardanoAddress_stakeCredentialsBytes_closure.prototype = {
    call$1(p0) {
      var t1;
      type$.AddressType._as(p0);
      if (p0 === B.AddressType_3)
        t1 = this.$this.get$credentialsBytes();
      else if (p0 === B.AddressType_0) {
        t1 = this.$this.get$bytes();
        t1 = new Uint8Array(A._ensureNativeList(A.SubListIterable$(t1, 29, null, A._instanceType(t1)._eval$1("ListBase.E")).toList$1$growable(0, false)));
      } else
        t1 = null;
      return t1;
    },
    $signature: 137
  };
  A.CardanoAddress_stakeBech32Encoded_closure.prototype = {
    call$1(p0) {
      var t1, t2, base, extension;
      type$.AddressType._as(p0);
      if (p0 === B.AddressType_3)
        t1 = this.$this.get$bech32Encoded();
      else if (p0 === B.AddressType_0) {
        t1 = this.$this;
        t2 = A._setArrayType([t1.get$networkId().index & 15 | 224], type$.JSArray_int);
        t1 = t1.get$bytes();
        t1 = B.JSArray_methods.$add(t2, A.SubListIterable$(t1, 29, null, A._instanceType(t1)._eval$1("ListBase.E")).toList$0(0));
        base = A.CardanoAddress__getAddressBech32BaseHrp(t1);
        extension = (0 === (B.JSArray_methods.get$first(t1) & 15) ? B.NetworkId_0_0_testnet : B.NetworkId_1_1_mainnet) === B.NetworkId_1_1_mainnet ? "" : "_test";
        t1 = new A.Bech32Encoder(base + extension).encode$1(B.JSArray_methods.toList$1$growable(t1, false));
      } else
        t1 = null;
      return t1;
    },
    $signature: 138
  };
  A.CardanoAddress_credentialsType_closure.prototype = {
    call$0() {
      return A.CardanoAddress_getCredentialType(this.$this.get$bytes());
    },
    $signature: 139
  };
  A._$CardanoAddress.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.CardanoAddress) {
            t2 = other.get$hrp() === _this.get$hrp();
            if (t2 || t2) {
              t2 = other.get$bech32Encoded() === _this.get$bech32Encoded();
              if (t2 || t2) {
                t2 = other.get$hexEncoded() === _this.get$hexEncoded();
                if (t2 || t2)
                  if (B.DeepCollectionEquality_false.equals$2(other.get$credentialsBytes(), _this.get$credentialsBytes()))
                    if (B.DeepCollectionEquality_false.equals$2(other.get$stakeCredentialsBytes(), _this.get$stakeCredentialsBytes())) {
                      t2 = other.get$credentials() === _this.get$credentials();
                      if (t2 || t2) {
                        t2 = other.get$credentialsBech32() === _this.get$credentialsBech32();
                        if (t2 || t2) {
                          t2 = other.get$stakeCredentials() == _this.get$stakeCredentials();
                          if (t2 || t2) {
                            t2 = other.get$stakeBech32Encoded() == _this.get$stakeBech32Encoded();
                            if (t2 || t2) {
                              t2 = other.get$networkId() === _this.get$networkId();
                              if (t2 || t2) {
                                t2 = other.get$credentialsType() === _this.get$credentialsType();
                                if (t2 || t2) {
                                  t1 = other.get$addressType() === _this.get$addressType();
                                  t1 = (t1 || t1) && B.DeepCollectionEquality_false.equals$2(other.get$bytes(), _this.get$bytes());
                                }
                              }
                            }
                          }
                        }
                      }
                    }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.get$hrp(), _this.get$bech32Encoded(), _this.get$hexEncoded(), B.DeepCollectionEquality_false.hash$1(_this.get$credentialsBytes()), B.DeepCollectionEquality_false.hash$1(_this.get$stakeCredentialsBytes()), _this.get$credentials(), _this.get$credentialsBech32(), _this.get$stakeCredentials(), _this.get$stakeBech32Encoded(), _this.get$networkId(), _this.get$credentialsType(), _this.get$addressType(), B.DeepCollectionEquality_false.hash$1(_this.get$bytes()), B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.get$hrp(),
        t2 = _this.get$bech32Encoded(),
        t3 = _this.get$hexEncoded(),
        t4 = A.S(_this.get$credentialsBytes()),
        t5 = A.S(_this.get$stakeCredentialsBytes()),
        t6 = _this.get$credentials(),
        t7 = _this.get$credentialsBech32(),
        t8 = _this.get$stakeCredentials(),
        t9 = _this.get$stakeBech32Encoded(),
        t10 = _this.get$networkId().toString$0(0),
        t11 = _this.get$credentialsType().toString$0(0),
        t12 = _this.get$addressType().toString$0(0),
        t13 = _this.get$bytes();
      return "CardanoAddress(hrp: " + t1 + ", bech32Encoded: " + t2 + ", hexEncoded: " + t3 + ", credentialsBytes: " + t4 + ", stakeCredentialsBytes: " + t5 + ", credentials: " + t6 + ", credentialsBech32: " + t7 + ", stakeCredentials: " + A.S(t8) + ", stakeBech32Encoded: " + A.S(t9) + ", networkId: " + t10 + ", credentialsType: " + t11 + ", addressType: " + t12 + ", bytes: " + t13.toString$0(t13) + ")";
    }
  };
  A.CardanoAddressByron.prototype = {
    toJson$0() {
      var t1 = this.bytes;
      return A.LinkedHashMap_LinkedHashMap$_literal(["bytes", new A.CastList(t1, A._instanceType(t1)._eval$1("CastList<ListBase.E,int>")), "runtimeType", this.$$type], type$.String, type$.dynamic);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.CardanoAddressByron && B.DeepCollectionEquality_false.equals$2(other.bytes, this.bytes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = this.bytes;
      return "CardanoAddress.byronRaw(bytes: " + t1.toString$0(t1) + ")";
    },
    get$bytes() {
      return this.bytes;
    }
  };
  A.CardanoAddressPointer.prototype = {
    toJson$0() {
      var t1 = this.bytes;
      return A.LinkedHashMap_LinkedHashMap$_literal(["bytes", new A.CastList(t1, A._instanceType(t1)._eval$1("CastList<ListBase.E,int>")), "runtimeType", this.$$type], type$.String, type$.dynamic);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.CardanoAddressPointer && B.DeepCollectionEquality_false.equals$2(other.bytes, this.bytes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = this.bytes;
      return "CardanoAddress.pointerRaw(bytes: " + t1.toString$0(t1) + ")";
    },
    get$bytes() {
      return this.bytes;
    }
  };
  A.CardanoAddressBase.prototype = {
    toJson$0() {
      var t1 = this.bytes;
      return A.LinkedHashMap_LinkedHashMap$_literal(["bytes", new A.CastList(t1, A._instanceType(t1)._eval$1("CastList<ListBase.E,int>")), "runtimeType", this.$$type], type$.String, type$.dynamic);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.CardanoAddressBase && B.DeepCollectionEquality_false.equals$2(other.bytes, this.bytes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = this.bytes;
      return "CardanoAddress.baseRaw(bytes: " + t1.toString$0(t1) + ")";
    },
    get$bytes() {
      return this.bytes;
    }
  };
  A.CardanoAddressEnterprise.prototype = {
    toJson$0() {
      var t1 = this.bytes;
      return A.LinkedHashMap_LinkedHashMap$_literal(["bytes", new A.CastList(t1, A._instanceType(t1)._eval$1("CastList<ListBase.E,int>")), "runtimeType", this.$$type], type$.String, type$.dynamic);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.CardanoAddressEnterprise && B.DeepCollectionEquality_false.equals$2(other.bytes, this.bytes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = this.bytes;
      return "CardanoAddress.enterpriseRaw(bytes: " + t1.toString$0(t1) + ")";
    },
    get$bytes() {
      return this.bytes;
    }
  };
  A.CardanoAddressReward.prototype = {
    toJson$0() {
      var t1 = this.bytes;
      return A.LinkedHashMap_LinkedHashMap$_literal(["bytes", new A.CastList(t1, A._instanceType(t1)._eval$1("CastList<ListBase.E,int>")), "runtimeType", this.$$type], type$.String, type$.dynamic);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.CardanoAddressReward && B.DeepCollectionEquality_false.equals$2(other.bytes, this.bytes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = this.bytes;
      return "CardanoAddress.rewardRaw(bytes: " + t1.toString$0(t1) + ")";
    },
    get$bytes() {
      return this.bytes;
    }
  };
  A._CardanoAddress_Object__$CardanoAddress.prototype = {};
  A.GovKeyType.prototype = {
    _enumToString$0() {
      return "GovKeyType." + this._core$_name;
    }
  };
  A.CardanoDerivation.prototype = {
    get$pubKey() {
      var value = this.__CardanoDerivation_pubKey_FI;
      if (value === $) {
        $label0$0: {
          break $label0$0;
        }
        value = this.__CardanoDerivation_pubKey_FI = this.bytes;
      }
      return value;
    },
    get$_credentialsBytes() {
      var value = this.__CardanoDerivation__credentialsBytes_FI;
      return value === $ ? this.__CardanoDerivation__credentialsBytes_FI = new A.Lazy(new A.CardanoDerivation__credentialsBytes_closure(this), type$.Lazy_Uint8List) : value;
    },
    get$_credentialsHex() {
      var value = this.__CardanoDerivation__credentialsHex_FI;
      return value === $ ? this.__CardanoDerivation__credentialsHex_FI = new A.Lazy(new A.CardanoDerivation__credentialsHex_closure(this), type$.Lazy_String) : value;
    },
    get$_keyHex() {
      var value = this.__CardanoDerivation__keyHex_FI;
      return value === $ ? this.__CardanoDerivation__keyHex_FI = new A.Lazy(new A.CardanoDerivation__keyHex_closure(this), type$.Lazy_String) : value;
    }
  };
  A.CardanoDerivation__credentialsBytes_closure.prototype = {
    call$0() {
      return A.Hash_blake2b(new Uint8Array(A._ensureNativeList(this.$this.get$pubKey())), 28);
    },
    $signature: 41
  };
  A.CardanoDerivation__credentialsHex_closure.prototype = {
    call$0() {
      var t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(this.$this.get$_credentialsBytes().get$value(), false));
      return B.C_HexCodec.get$encoder().convert$1(t1);
    },
    $signature: 1
  };
  A.CardanoDerivation__keyHex_closure.prototype = {
    call$0() {
      var t1 = this.$this.get$pubKey();
      t1 = type$.HexCodec._eval$1("Codec.S")._as(t1.toList$1$growable(t1, false));
      return B.C_HexCodec.get$encoder().convert$1(t1);
    },
    $signature: 1
  };
  A.DRepDerivation.prototype = {
    get$_dRepKeyHex() {
      var value = this.__DRepDerivation__dRepKeyHex_FI;
      return value === $ ? this.__DRepDerivation__dRepKeyHex_FI = new A.Lazy(new A.DRepDerivation__dRepKeyHex_closure(this), type$.Lazy_String) : value;
    },
    get$_credentialsBytes() {
      var value = this.__DRepDerivation__credentialsBytes_FI;
      return value === $ ? this.__DRepDerivation__credentialsBytes_FI = new A.Lazy(new A.DRepDerivation__credentialsBytes_closure(this), type$.Lazy_Uint8List) : value;
    },
    get$_credentialsHex() {
      var value = this.__DRepDerivation__credentialsHex_FI;
      return value === $ ? this.__DRepDerivation__credentialsHex_FI = new A.Lazy(new A.DRepDerivation__credentialsHex_closure(this), type$.Lazy_String) : value;
    },
    get$_dRepIdLegacyBech32() {
      var value = this.__DRepDerivation__dRepIdLegacyBech32_FI;
      return value === $ ? this.__DRepDerivation__dRepIdLegacyBech32_FI = new A.Lazy(new A.DRepDerivation__dRepIdLegacyBech32_closure(this), type$.Lazy_String) : value;
    },
    get$_dRepIdNewBytes() {
      var value = this.__DRepDerivation__dRepIdNewBytes_FI;
      return value === $ ? this.__DRepDerivation__dRepIdNewBytes_FI = new A.Lazy(new A.DRepDerivation__dRepIdNewBytes_closure(this), type$.Lazy_Uint8List) : value;
    },
    get$_dRepIdNewHex() {
      var value = this.__DRepDerivation__dRepIdNewHex_FI;
      return value === $ ? this.__DRepDerivation__dRepIdNewHex_FI = new A.Lazy(new A.DRepDerivation__dRepIdNewHex_closure(this), type$.Lazy_String) : value;
    },
    get$_dRepIdNewBech32() {
      var value = this.__DRepDerivation__dRepIdNewBech32_FI;
      return value === $ ? this.__DRepDerivation__dRepIdNewBech32_FI = new A.Lazy(new A.DRepDerivation__dRepIdNewBech32_closure(this), type$.Lazy_String) : value;
    }
  };
  A.DRepDerivation__dRepKeyHex_closure.prototype = {
    call$0() {
      var t1 = this.$this.bytes;
      t1 = type$.HexCodec._eval$1("Codec.S")._as(t1.toList$1$growable(t1, false));
      return B.C_HexCodec.get$encoder().convert$1(t1);
    },
    $signature: 1
  };
  A.DRepDerivation__credentialsBytes_closure.prototype = {
    call$0() {
      return A.Hash_blake2b(new Uint8Array(A._ensureNativeList(new Uint8Array(A._ensureNativeList(this.$this.bytes)))), 28);
    },
    $signature: 41
  };
  A.DRepDerivation__credentialsHex_closure.prototype = {
    call$0() {
      var t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(this.$this.get$_credentialsBytes().get$value(), false));
      return B.C_HexCodec.get$encoder().convert$1(t1);
    },
    $signature: 1
  };
  A.DRepDerivation__dRepIdLegacyBech32_closure.prototype = {
    call$0() {
      return new A.Bech32Encoder("drep").encode$1(B.NativeUint8List_methods.toList$1$growable(this.$this.get$_credentialsBytes().get$value(), false));
    },
    $signature: 1
  };
  A.DRepDerivation__dRepIdNewBytes_closure.prototype = {
    call$0() {
      var t1 = A._setArrayType([34], type$.JSArray_int);
      B.JSArray_methods.addAll$1(t1, this.$this.get$_credentialsBytes().get$value());
      return new Uint8Array(A._ensureNativeList(t1));
    },
    $signature: 41
  };
  A.DRepDerivation__dRepIdNewHex_closure.prototype = {
    call$0() {
      var t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(this.$this.get$_dRepIdNewBytes().get$value(), false));
      return B.C_HexCodec.get$encoder().convert$1(t1);
    },
    $signature: 1
  };
  A.DRepDerivation__dRepIdNewBech32_closure.prototype = {
    call$0() {
      return new A.Bech32Encoder("drep").encode$1(B.NativeUint8List_methods.toList$1$growable(this.$this.get$_dRepIdNewBytes().get$value(), false));
    },
    $signature: 1
  };
  A.ConstitutionalCommitee.prototype = {
    get$hexCCKey() {
      var t1, result, _this = this,
        value = _this.__ConstitutionalCommitee_hexCCKey_FI;
      if (value === $) {
        t1 = _this.get$bytes();
        t1 = type$.HexCodec._eval$1("Codec.S")._as(t1.toList$1$growable(t1, false));
        result = B.C_HexCodec.get$encoder().convert$1(t1);
        _this.__ConstitutionalCommitee_hexCCKey_FI !== $ && A.throwLateFieldADI("hexCCKey");
        _this.__ConstitutionalCommitee_hexCCKey_FI = result;
        value = result;
      }
      return value;
    },
    get$credentialsBytes() {
      var result, _this = this,
        value = _this.__ConstitutionalCommitee_credentialsBytes_FI;
      if (value === $) {
        result = A.Hash_blake2b(new Uint8Array(A._ensureNativeList(new Uint8Array(A._ensureNativeList(_this.get$bytes())))), 28);
        _this.__ConstitutionalCommitee_credentialsBytes_FI !== $ && A.throwLateFieldADI("credentialsBytes");
        _this.__ConstitutionalCommitee_credentialsBytes_FI = result;
        value = result;
      }
      return value;
    },
    get$hexCredential() {
      var t1, result, _this = this,
        value = _this.__ConstitutionalCommitee_hexCredential_FI;
      if (value === $) {
        t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(_this.get$credentialsBytes(), false));
        result = B.C_HexCodec.get$encoder().convert$1(t1);
        _this.__ConstitutionalCommitee_hexCredential_FI !== $ && A.throwLateFieldADI("hexCredential");
        _this.__ConstitutionalCommitee_hexCredential_FI = result;
        value = result;
      }
      return value;
    },
    get$ccIdBytes() {
      var t1, result, _this = this,
        value = _this.__ConstitutionalCommitee_ccIdBytes_FI;
      if (value === $) {
        $label0$0: {
          if (_this instanceof A.ConstitutionalCommiteeCold) {
            t1 = B.GovKeyType_16_1_ccCold;
            break $label0$0;
          }
          if (_this instanceof A.ConstitutionalCommiteeHot) {
            t1 = B.GovKeyType_0_0_ccHot;
            break $label0$0;
          }
          t1 = null;
        }
        t1 = A._setArrayType([t1.prefix | 2], type$.JSArray_int);
        B.JSArray_methods.addAll$1(t1, _this.get$credentialsBytes());
        result = new Uint8Array(A._ensureNativeList(t1));
        _this.__ConstitutionalCommitee_ccIdBytes_FI !== $ && A.throwLateFieldADI("ccIdBytes");
        _this.__ConstitutionalCommitee_ccIdBytes_FI = result;
        value = result;
      }
      return value;
    },
    get$ccIdHex() {
      var t1, result, _this = this,
        value = _this.__ConstitutionalCommitee_ccIdHex_FI;
      if (value === $) {
        t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(_this.get$ccIdBytes(), false));
        result = B.C_HexCodec.get$encoder().convert$1(t1);
        _this.__ConstitutionalCommitee_ccIdHex_FI !== $ && A.throwLateFieldADI("ccIdHex");
        _this.__ConstitutionalCommitee_ccIdHex_FI = result;
        value = result;
      }
      return value;
    },
    get$ccIdBech32() {
      var t1, result, _this = this,
        value = _this.__ConstitutionalCommitee_ccIdBech32_FI;
      if (value === $) {
        t1 = _this.get$ccIdBytes();
        result = new A.Bech32Encoder(_this.get$_hrp()).encode$1(B.NativeUint8List_methods.toList$1$growable(t1, false));
        _this.__ConstitutionalCommitee_ccIdBech32_FI !== $ && A.throwLateFieldADI("ccIdBech32");
        _this.__ConstitutionalCommitee_ccIdBech32_FI = result;
        value = result;
      }
      return value;
    },
    get$_hrp() {
      var t1, _this = this,
        value = _this.__ConstitutionalCommitee__hrp_FI;
      if (value === $) {
        $label0$0: {
          if (_this instanceof A.ConstitutionalCommiteeCold) {
            t1 = "cc_cold";
            break $label0$0;
          }
          if (_this instanceof A.ConstitutionalCommiteeHot) {
            t1 = "cc_hot";
            break $label0$0;
          }
          t1 = null;
        }
        value = _this.__ConstitutionalCommitee__hrp_FI = t1;
      }
      return value;
    }
  };
  A._$CardanoDerivation.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.CardanoDerivedAddress)
            if (B.DeepCollectionEquality_false.equals$2(other.get$pubKey(), _this.get$pubKey())) {
              t2 = other.get$_credentialsBytes() === _this.get$_credentialsBytes();
              if (t2 || t2) {
                t2 = other.get$_credentialsHex() === _this.get$_credentialsHex();
                if (t2 || t2) {
                  t1 = other.get$_keyHex() === _this.get$_keyHex();
                  t1 = t1 || t1;
                }
              }
            }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), B.DeepCollectionEquality_false.hash$1(_this.get$pubKey()), _this.get$_credentialsBytes(), _this.get$_credentialsHex(), _this.get$_keyHex(), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.get$pubKey();
      return "CardanoDerivation(pubKey: " + t1.toString$0(t1) + ", _credentialsBytes: " + _this.get$_credentialsBytes().toString$0(0) + ", _credentialsHex: " + _this.get$_credentialsHex().toString$0(0) + ", _keyHex: " + _this.get$_keyHex().toString$0(0) + ")";
    }
  };
  A.CardanoDerivedAddress.prototype = {
    toJson$0() {
      var t2,
        t1 = B.Map_XuhWz.$index(0, this.type);
      t1.toString;
      t2 = this.bytes;
      return A.LinkedHashMap_LinkedHashMap$_literal(["type", t1, "bytes", new A.CastList(t2, A._instanceType(t2)._eval$1("CastList<ListBase.E,int>")), "runtimeType", this.$$type], type$.String, type$.dynamic);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.CardanoDerivedAddress) {
            t1 = other.type === _this.type;
            t1 = (t1 || t1) && B.DeepCollectionEquality_false.equals$2(other.bytes, _this.bytes);
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.type, B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = this.bytes;
      return "CardanoDerivation.address(type: " + this.type.toString$0(0) + ", bytes: " + t1.toString$0(t1) + ")";
    }
  };
  A._$DRepDerivation.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._DRepDerivation) {
            t2 = other.get$_dRepKeyHex() === _this.get$_dRepKeyHex();
            if (t2 || t2) {
              t2 = other.get$_credentialsBytes() === _this.get$_credentialsBytes();
              if (t2 || t2) {
                t2 = other.get$_credentialsHex() === _this.get$_credentialsHex();
                if (t2 || t2) {
                  t2 = other.get$_dRepIdLegacyBech32() === _this.get$_dRepIdLegacyBech32();
                  if (t2 || t2) {
                    t2 = other.get$_dRepIdNewBytes() === _this.get$_dRepIdNewBytes();
                    if (t2 || t2) {
                      t2 = other.get$_dRepIdNewHex() === _this.get$_dRepIdNewHex();
                      if (t2 || t2) {
                        t1 = other.get$_dRepIdNewBech32() === _this.get$_dRepIdNewBech32();
                        t1 = (t1 || t1) && B.DeepCollectionEquality_false.equals$2(other.bytes, _this.bytes);
                      }
                    }
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.get$_dRepKeyHex(), _this.get$_credentialsBytes(), _this.get$_credentialsHex(), _this.get$_dRepIdLegacyBech32(), _this.get$_dRepIdNewBytes(), _this.get$_dRepIdNewHex(), _this.get$_dRepIdNewBech32(), B.DeepCollectionEquality_false.hash$1(_this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.bytes;
      return "DRepDerivation(_dRepKeyHex: " + _this.get$_dRepKeyHex().toString$0(0) + ", _credentialsBytes: " + _this.get$_credentialsBytes().toString$0(0) + ", _credentialsHex: " + _this.get$_credentialsHex().toString$0(0) + ", _dRepIdLegacyBech32: " + _this.get$_dRepIdLegacyBech32().toString$0(0) + ", _dRepIdNewBytes: " + _this.get$_dRepIdNewBytes().toString$0(0) + ", _dRepIdNewHex: " + _this.get$_dRepIdNewHex().toString$0(0) + ", _dRepIdNewBech32: " + _this.get$_dRepIdNewBech32().toString$0(0) + ", bytes: " + t1.toString$0(t1) + ")";
    }
  };
  A._DRepDerivation.prototype = {
    toJson$0() {
      var t1 = this.bytes;
      return A.LinkedHashMap_LinkedHashMap$_literal(["bytes", new A.CastList(t1, A._instanceType(t1)._eval$1("CastList<ListBase.E,int>"))], type$.String, type$.dynamic);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A._DRepDerivation && B.DeepCollectionEquality_false.equals$2(other.bytes, this.bytes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = this.bytes;
      return "DRepDerivation(bytes: " + t1.toString$0(t1) + ")";
    }
  };
  A._$ConstitutionalCommitee.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.ConstitutionalCommitee) {
            t2 = other.get$hexCCKey() === _this.get$hexCCKey();
            if (t2 || t2)
              if (B.DeepCollectionEquality_false.equals$2(other.get$credentialsBytes(), _this.get$credentialsBytes())) {
                t2 = other.get$hexCredential() === _this.get$hexCredential();
                if (t2 || t2)
                  if (B.DeepCollectionEquality_false.equals$2(other.get$ccIdBytes(), _this.get$ccIdBytes())) {
                    t2 = other.get$ccIdHex() === _this.get$ccIdHex();
                    if (t2 || t2) {
                      t2 = other.get$ccIdBech32() === _this.get$ccIdBech32();
                      if (t2 || t2) {
                        t1 = other.get$_hrp() === _this.get$_hrp();
                        t1 = (t1 || t1) && B.DeepCollectionEquality_false.equals$2(other.get$bytes(), _this.get$bytes());
                      }
                    }
                  }
              }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.get$hexCCKey(), B.DeepCollectionEquality_false.hash$1(_this.get$credentialsBytes()), _this.get$hexCredential(), B.DeepCollectionEquality_false.hash$1(_this.get$ccIdBytes()), _this.get$ccIdHex(), _this.get$ccIdBech32(), _this.get$_hrp(), B.DeepCollectionEquality_false.hash$1(_this.get$bytes()), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.get$hexCCKey(),
        t2 = A.S(_this.get$credentialsBytes()),
        t3 = _this.get$hexCredential(),
        t4 = A.S(_this.get$ccIdBytes()),
        t5 = _this.get$ccIdHex(),
        t6 = _this.get$ccIdBech32(),
        t7 = _this.get$_hrp(),
        t8 = _this.get$bytes();
      return "ConstitutionalCommitee(hexCCKey: " + t1 + ", credentialsBytes: " + t2 + ", hexCredential: " + t3 + ", ccIdBytes: " + t4 + ", ccIdHex: " + t5 + ", ccIdBech32: " + t6 + ", _hrp: " + t7 + ", bytes: " + t8.toString$0(t8) + ")";
    }
  };
  A.ConstitutionalCommiteeCold.prototype = {
    toJson$0() {
      var t1 = this.bytes;
      return A.LinkedHashMap_LinkedHashMap$_literal(["bytes", new A.CastList(t1, A._instanceType(t1)._eval$1("CastList<ListBase.E,int>")), "runtimeType", this.$$type], type$.String, type$.dynamic);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.ConstitutionalCommiteeCold && B.DeepCollectionEquality_false.equals$2(other.bytes, this.bytes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = this.bytes;
      return "ConstitutionalCommitee.cold(bytes: " + t1.toString$0(t1) + ")";
    },
    get$bytes() {
      return this.bytes;
    }
  };
  A.ConstitutionalCommiteeHot.prototype = {
    toJson$0() {
      var t1 = this.bytes;
      return A.LinkedHashMap_LinkedHashMap$_literal(["bytes", new A.CastList(t1, A._instanceType(t1)._eval$1("CastList<ListBase.E,int>")), "runtimeType", this.$$type], type$.String, type$.dynamic);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.ConstitutionalCommiteeHot && B.DeepCollectionEquality_false.equals$2(other.bytes, this.bytes);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.bytes), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = this.bytes;
      return "ConstitutionalCommitee.hot(bytes: " + t1.toString$0(t1) + ")";
    },
    get$bytes() {
      return this.bytes;
    }
  };
  A._CardanoDerivation_Object__$CardanoDerivation.prototype = {};
  A._ConstitutionalCommitee_Object__$ConstitutionalCommitee.prototype = {};
  A._DRepDerivation_Object__$DRepDerivation.prototype = {};
  A._CardanoPubAccountSyncFactory.prototype = {};
  A.CardanoPubAccountFactory.prototype = {
    fromAccountKey$1(accPubKey) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.CardanoPubAccount),
        $async$returnValue, $async$self = this, drepIdRootKey, constitutionalCommitteeColdRootKey, constitutionalCommitteeHotRootKey, stakeKey, drepIdKey, constitutionalCommitteeColdKey, constitutionalCommitteeHotKey, t5, t6, t7, t1, paymentRoleRootKey, changeRoleRootKey, t2, t3, t4, stakeRoleRootKey, $async$temp1, $async$temp2, $async$temp3, $async$temp4, $async$temp5, $async$temp6, $async$temp7, $async$temp8, $async$temp9, $async$temp10, $async$temp11;
      var $async$fromAccountKey$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._pubKeyDerivator;
              paymentRoleRootKey = t1.call$2(accPubKey, 0);
              changeRoleRootKey = t1.call$2(accPubKey, 1);
              t2 = t1.call$2(accPubKey, 2);
              t3 = type$.Bip32PublicKey;
              t4 = type$.Future_Bip32PublicKey;
              $async$goto = 3;
              return A._asyncAwait(t4._is(t2) ? t2 : A._Future$value(t3._as(t2), t3), $async$fromAccountKey$1);
            case 3:
              // returning from await.
              stakeRoleRootKey = $async$result;
              t2 = t1.call$2(accPubKey, 3);
              $async$goto = 4;
              return A._asyncAwait(t4._is(t2) ? t2 : A._Future$value(t3._as(t2), t3), $async$fromAccountKey$1);
            case 4:
              // returning from await.
              drepIdRootKey = $async$result;
              t2 = t1.call$2(accPubKey, 4);
              $async$goto = 5;
              return A._asyncAwait(t4._is(t2) ? t2 : A._Future$value(t3._as(t2), t3), $async$fromAccountKey$1);
            case 5:
              // returning from await.
              constitutionalCommitteeColdRootKey = $async$result;
              t2 = t1.call$2(accPubKey, 5);
              $async$goto = 6;
              return A._asyncAwait(t4._is(t2) ? t2 : A._Future$value(t3._as(t2), t3), $async$fromAccountKey$1);
            case 6:
              // returning from await.
              constitutionalCommitteeHotRootKey = $async$result;
              stakeKey = t1.call$2(stakeRoleRootKey, 0);
              drepIdKey = t1.call$2(drepIdRootKey, 0);
              constitutionalCommitteeColdKey = t1.call$2(constitutionalCommitteeColdRootKey, 0);
              constitutionalCommitteeHotKey = t1.call$2(constitutionalCommitteeHotRootKey, 0);
              $async$goto = 7;
              return A._asyncAwait(t4._is(paymentRoleRootKey) ? paymentRoleRootKey : A._Future$value(t3._as(paymentRoleRootKey), t3), $async$fromAccountKey$1);
            case 7:
              // returning from await.
              t1 = $async$result;
              $async$goto = 8;
              return A._asyncAwait(t4._is(changeRoleRootKey) ? changeRoleRootKey : A._Future$value(t3._as(changeRoleRootKey), t3), $async$fromAccountKey$1);
            case 8:
              // returning from await.
              t2 = $async$result;
              $async$goto = 9;
              return A._asyncAwait(t4._is(stakeKey) ? stakeKey : A._Future$value(t3._as(stakeKey), t3), $async$fromAccountKey$1);
            case 9:
              // returning from await.
              t5 = $async$result;
              $async$goto = 10;
              return A._asyncAwait(t4._is(drepIdKey) ? drepIdKey : A._Future$value(t3._as(drepIdKey), t3), $async$fromAccountKey$1);
            case 10:
              // returning from await.
              t6 = $async$result;
              $async$goto = 11;
              return A._asyncAwait(t4._is(constitutionalCommitteeColdKey) ? constitutionalCommitteeColdKey : A._Future$value(t3._as(constitutionalCommitteeColdKey), t3), $async$fromAccountKey$1);
            case 11:
              // returning from await.
              t7 = $async$result;
              $async$temp1 = A;
              $async$temp2 = accPubKey;
              $async$temp3 = t1;
              $async$temp4 = t2;
              $async$temp5 = stakeRoleRootKey;
              $async$temp6 = drepIdRootKey;
              $async$temp7 = constitutionalCommitteeColdRootKey;
              $async$temp8 = constitutionalCommitteeHotRootKey;
              $async$temp9 = t5;
              $async$temp10 = t6;
              $async$temp11 = t7;
              $async$goto = 12;
              return A._asyncAwait(t4._is(constitutionalCommitteeHotKey) ? constitutionalCommitteeHotKey : A._Future$value(t3._as(constitutionalCommitteeHotKey), t3), $async$fromAccountKey$1);
            case 12:
              // returning from await.
              $async$returnValue = new $async$temp1._CardanoPubAccount($async$temp2, $async$temp3, $async$temp4, $async$temp5, $async$temp6, $async$temp7, $async$temp8, $async$temp9, $async$temp10, $async$temp11, $async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$fromAccountKey$1, $async$completer);
    }
  };
  A.CardanoPubAccount.prototype = {
    get$stakeDerivation() {
      var value = this.__CardanoPubAccount_stakeDerivation_FI;
      return value === $ ? this.__CardanoPubAccount_stakeDerivation_FI = new A.Lazy(new A.CardanoPubAccount_stakeDerivation_closure(this), type$.Lazy_CardanoDerivedAddress) : value;
    },
    get$dRepDerivation() {
      var value = this.__CardanoPubAccount_dRepDerivation_FI;
      return value === $ ? this.__CardanoPubAccount_dRepDerivation_FI = new A.Lazy(new A.CardanoPubAccount_dRepDerivation_closure(this), type$.Lazy_DRepDerivation) : value;
    },
    get$constitutionalCommitteeColdDerivation() {
      var value = this.__CardanoPubAccount_constitutionalCommitteeColdDerivation_FI;
      return value === $ ? this.__CardanoPubAccount_constitutionalCommitteeColdDerivation_FI = new A.Lazy(new A.CardanoPubAccount_constitutionalCommitteeColdDerivation_closure(this), type$.Lazy_ConstitutionalCommiteeCold) : value;
    },
    get$constitutionalCommitteeHotDerivation() {
      var value = this.__CardanoPubAccount_constitutionalCommitteeHotDerivation_FI;
      return value === $ ? this.__CardanoPubAccount_constitutionalCommitteeHotDerivation_FI = new A.Lazy(new A.CardanoPubAccount_constitutionalCommitteeHotDerivation_closure(this), type$.Lazy_ConstitutionalCommiteeHot) : value;
    }
  };
  A.CardanoPubAccount_stakeDerivation_closure.prototype = {
    call$0() {
      var t1 = this.$this.stakeKey,
        t2 = A.SubListIterable$(t1, 0, A.checkNotNullable(t1.get$prefixLength(), "count", type$.int), A._instanceType(t1)._eval$1("ListBase.E"));
      t1 = t1.get$prefixLength();
      t1 = A.ByteList__constructList(t2, t1, t1);
      return new A.CardanoDerivedAddress(B.AddressType_3, new A.ByteList(t1), "address");
    },
    $signature: 141
  };
  A.CardanoPubAccount_dRepDerivation_closure.prototype = {
    call$0() {
      var t1 = this.$this.drepIdKey,
        t2 = A.SubListIterable$(t1, 0, A.checkNotNullable(t1.get$prefixLength(), "count", type$.int), A._instanceType(t1)._eval$1("ListBase.E"));
      t1 = t1.get$prefixLength();
      return A._DRepDerivation$(new A.ByteList(A.ByteList__constructList(t2, t1, t1)));
    },
    $signature: 47
  };
  A.CardanoPubAccount_constitutionalCommitteeColdDerivation_closure.prototype = {
    call$0() {
      var t1 = this.$this.constitutionalCommitteeColdKey,
        t2 = A.SubListIterable$(t1, 0, A.checkNotNullable(t1.get$prefixLength(), "count", type$.int), A._instanceType(t1)._eval$1("ListBase.E"));
      t1 = t1.get$prefixLength();
      return A.ConstitutionalCommiteeCold$(new A.ByteList(A.ByteList__constructList(t2, t1, t1)));
    },
    $signature: 48
  };
  A.CardanoPubAccount_constitutionalCommitteeHotDerivation_closure.prototype = {
    call$0() {
      var t1 = this.$this.constitutionalCommitteeHotKey,
        t2 = A.SubListIterable$(t1, 0, A.checkNotNullable(t1.get$prefixLength(), "count", type$.int), A._instanceType(t1)._eval$1("ListBase.E"));
      t1 = t1.get$prefixLength();
      return A.ConstitutionalCommiteeHot$(new A.ByteList(A.ByteList__constructList(t2, t1, t1)));
    },
    $signature: 49
  };
  A._$CardanoPubAccount.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._CardanoPubAccount) {
            t2 = other.get$stakeDerivation() === _this.get$stakeDerivation();
            if (t2 || t2) {
              t2 = other.get$dRepDerivation() === _this.get$dRepDerivation();
              if (t2 || t2) {
                t2 = other.get$constitutionalCommitteeColdDerivation() === _this.get$constitutionalCommitteeColdDerivation();
                if (t2 || t2) {
                  t1 = other.get$constitutionalCommitteeHotDerivation() === _this.get$constitutionalCommitteeHotDerivation();
                  t1 = (t1 || t1) && B.DeepCollectionEquality_false.equals$2(other.accountKey, _this.accountKey) && B.DeepCollectionEquality_false.equals$2(other.paymentRoleKey, _this.paymentRoleKey) && B.DeepCollectionEquality_false.equals$2(other.changeRoleKey, _this.changeRoleKey) && B.DeepCollectionEquality_false.equals$2(other.stakeRoleKey, _this.stakeRoleKey) && B.DeepCollectionEquality_false.equals$2(other.drepIdRoleKey, _this.drepIdRoleKey) && B.DeepCollectionEquality_false.equals$2(other.constitutionalCommitteeColdRoleKey, _this.constitutionalCommitteeColdRoleKey) && B.DeepCollectionEquality_false.equals$2(other.constitutionalCommitteeHotRoleKey, _this.constitutionalCommitteeHotRoleKey) && B.DeepCollectionEquality_false.equals$2(other.stakeKey, _this.stakeKey) && B.DeepCollectionEquality_false.equals$2(other.drepIdKey, _this.drepIdKey) && B.DeepCollectionEquality_false.equals$2(other.constitutionalCommitteeColdKey, _this.constitutionalCommitteeColdKey) && B.DeepCollectionEquality_false.equals$2(other.constitutionalCommitteeHotKey, _this.constitutionalCommitteeHotKey);
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.get$stakeDerivation(), _this.get$dRepDerivation(), _this.get$constitutionalCommitteeColdDerivation(), _this.get$constitutionalCommitteeHotDerivation(), B.DeepCollectionEquality_false.hash$1(_this.accountKey), B.DeepCollectionEquality_false.hash$1(_this.paymentRoleKey), B.DeepCollectionEquality_false.hash$1(_this.changeRoleKey), B.DeepCollectionEquality_false.hash$1(_this.stakeRoleKey), B.DeepCollectionEquality_false.hash$1(_this.drepIdRoleKey), B.DeepCollectionEquality_false.hash$1(_this.constitutionalCommitteeColdRoleKey), B.DeepCollectionEquality_false.hash$1(_this.constitutionalCommitteeHotRoleKey), B.DeepCollectionEquality_false.hash$1(_this.stakeKey), B.DeepCollectionEquality_false.hash$1(_this.drepIdKey), B.DeepCollectionEquality_false.hash$1(_this.constitutionalCommitteeColdKey), B.DeepCollectionEquality_false.hash$1(_this.constitutionalCommitteeHotKey));
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.accountKey,
        t2 = _this.paymentRoleKey,
        t3 = _this.changeRoleKey,
        t4 = _this.stakeRoleKey,
        t5 = _this.drepIdRoleKey,
        t6 = _this.constitutionalCommitteeColdRoleKey,
        t7 = _this.constitutionalCommitteeHotRoleKey,
        t8 = _this.stakeKey,
        t9 = _this.drepIdKey,
        t10 = _this.constitutionalCommitteeColdKey,
        t11 = _this.constitutionalCommitteeHotKey;
      return "CardanoPubAccount(stakeDerivation: " + _this.get$stakeDerivation().toString$0(0) + ", dRepDerivation: " + _this.get$dRepDerivation().toString$0(0) + ", constitutionalCommitteeColdDerivation: " + _this.get$constitutionalCommitteeColdDerivation().toString$0(0) + ", constitutionalCommitteeHotDerivation: " + _this.get$constitutionalCommitteeHotDerivation().toString$0(0) + ", accountKey: " + t1.toString$0(t1) + ", paymentRoleKey: " + t2.toString$0(t2) + ", changeRoleKey: " + t3.toString$0(t3) + ", stakeRoleKey: " + t4.toString$0(t4) + ", drepIdRoleKey: " + t5.toString$0(t5) + ", constitutionalCommitteeColdRoleKey: " + t6.toString$0(t6) + ", constitutionalCommitteeHotRoleKey: " + t7.toString$0(t7) + ", stakeKey: " + t8.toString$0(t8) + ", drepIdKey: " + t9.toString$0(t9) + ", constitutionalCommitteeColdKey: " + t10.toString$0(t10) + ", constitutionalCommitteeHotKey: " + t11.toString$0(t11) + ")";
    }
  };
  A._CardanoPubAccount.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this) && other instanceof A._CardanoPubAccount && B.DeepCollectionEquality_false.equals$2(other.accountKey, _this.accountKey) && B.DeepCollectionEquality_false.equals$2(other.paymentRoleKey, _this.paymentRoleKey) && B.DeepCollectionEquality_false.equals$2(other.changeRoleKey, _this.changeRoleKey) && B.DeepCollectionEquality_false.equals$2(other.stakeRoleKey, _this.stakeRoleKey) && B.DeepCollectionEquality_false.equals$2(other.drepIdRoleKey, _this.drepIdRoleKey) && B.DeepCollectionEquality_false.equals$2(other.constitutionalCommitteeColdRoleKey, _this.constitutionalCommitteeColdRoleKey) && B.DeepCollectionEquality_false.equals$2(other.constitutionalCommitteeHotRoleKey, _this.constitutionalCommitteeHotRoleKey) && B.DeepCollectionEquality_false.equals$2(other.stakeKey, _this.stakeKey) && B.DeepCollectionEquality_false.equals$2(other.drepIdKey, _this.drepIdKey) && B.DeepCollectionEquality_false.equals$2(other.constitutionalCommitteeColdKey, _this.constitutionalCommitteeColdKey) && B.DeepCollectionEquality_false.equals$2(other.constitutionalCommitteeHotKey, _this.constitutionalCommitteeHotKey);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), B.DeepCollectionEquality_false.hash$1(_this.accountKey), B.DeepCollectionEquality_false.hash$1(_this.paymentRoleKey), B.DeepCollectionEquality_false.hash$1(_this.changeRoleKey), B.DeepCollectionEquality_false.hash$1(_this.stakeRoleKey), B.DeepCollectionEquality_false.hash$1(_this.drepIdRoleKey), B.DeepCollectionEquality_false.hash$1(_this.constitutionalCommitteeColdRoleKey), B.DeepCollectionEquality_false.hash$1(_this.constitutionalCommitteeHotRoleKey), B.DeepCollectionEquality_false.hash$1(_this.stakeKey), B.DeepCollectionEquality_false.hash$1(_this.drepIdKey), B.DeepCollectionEquality_false.hash$1(_this.constitutionalCommitteeColdKey), B.DeepCollectionEquality_false.hash$1(_this.constitutionalCommitteeHotKey), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.accountKey,
        t2 = _this.paymentRoleKey,
        t3 = _this.changeRoleKey,
        t4 = _this.stakeRoleKey,
        t5 = _this.drepIdRoleKey,
        t6 = _this.constitutionalCommitteeColdRoleKey,
        t7 = _this.constitutionalCommitteeHotRoleKey,
        t8 = _this.stakeKey,
        t9 = _this.drepIdKey,
        t10 = _this.constitutionalCommitteeColdKey,
        t11 = _this.constitutionalCommitteeHotKey;
      return "CardanoPubAccount._private(accountKey: " + t1.toString$0(t1) + ", paymentRoleKey: " + t2.toString$0(t2) + ", changeRoleKey: " + t3.toString$0(t3) + ", stakeRoleKey: " + t4.toString$0(t4) + ", drepIdRoleKey: " + t5.toString$0(t5) + ", constitutionalCommitteeColdRoleKey: " + t6.toString$0(t6) + ", constitutionalCommitteeHotRoleKey: " + t7.toString$0(t7) + ", stakeKey: " + t8.toString$0(t8) + ", drepIdKey: " + t9.toString$0(t9) + ", constitutionalCommitteeColdKey: " + t10.toString$0(t10) + ", constitutionalCommitteeHotKey: " + t11.toString$0(t11) + ")";
    }
  };
  A._CardanoPubAccount_Object__$CardanoPubAccount.prototype = {};
  A.Bip32KeyPair.prototype = {};
  A.CardanoAddressKit.prototype = {};
  A.Bip32KeyRole.prototype = {
    _enumToString$0() {
      return "Bip32KeyRole." + this._core$_name;
    }
  };
  A.Bip32KeyRole_fromDerivationIndex_closure.prototype = {
    call$1(e) {
      return type$.Bip32KeyRole._as(e).derivationIndex === this.index;
    },
    $signature: 145
  };
  A.CardanoWallet.prototype = {};
  A.DRepDiffInfo.prototype = {
    marshal$0() {
      var writer = new A.BinaryWriterImpl(new Uint8Array(4096));
      writer.writeString$1(this.dRepId);
      writer.write$1$1(this.metadataUrl, type$.nullable_String);
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(writer._buffer), 0, writer._binary_writer_impl$_offset);
    }
  };
  A._$DRepDiffInfo.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._DRepDiffInfo) {
            t2 = other.dRepId === _this.dRepId;
            if (t2 || t2) {
              t1 = other.metadataUrl == _this.metadataUrl;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.dRepId, this.metadataUrl, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "DRepDiffInfo(dRepId: " + this.dRepId + ", metadataUrl: " + A.S(this.metadataUrl) + ")";
    }
  };
  A._DRepDiffInfo.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._DRepDiffInfo) {
            t2 = other.dRepId === _this.dRepId;
            if (t2 || t2) {
              t1 = other.metadataUrl == _this.metadataUrl;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.dRepId, this.metadataUrl, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "DRepDiffInfo(dRepId: " + this.dRepId + ", metadataUrl: " + A.S(this.metadataUrl) + ")";
    }
  };
  A._DRepDiffInfo_Object__$DRepDiffInfo.prototype = {};
  A.ProposalDiffInfo.prototype = {
    marshal$0() {
      var writer = new A.BinaryWriterImpl(new Uint8Array(4096)),
        t1 = type$.CborCodec._eval$1("Codec.S");
      writer.writeByteList$1(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t1._as(this.proposalId.serialize$1$forJson(false))))));
      writer.writeByteList$1(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t1._as(this.proposal.serialize$1$forJson(false))))));
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(writer._buffer), 0, writer._binary_writer_impl$_offset);
    }
  };
  A._$ProposalDiffInfo.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._ProposalDiffInfo) {
            t2 = other.proposalId;
            t3 = _this.proposalId;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.proposal;
              t2 = _this.proposal;
              t1 = t1 === t2 || t1.$eq(0, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.proposalId, this.proposal, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "ProposalDiffInfo(proposalId: " + this.proposalId.toString$0(0) + ", proposal: " + this.proposal.toString$0(0) + ")";
    }
  };
  A._ProposalDiffInfo.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._ProposalDiffInfo) {
            t2 = other.proposalId;
            t3 = _this.proposalId;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.proposal;
              t2 = _this.proposal;
              t1 = t1 === t2 || t1.$eq(0, t2);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.proposalId, this.proposal, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "ProposalDiffInfo(proposalId: " + this.proposalId.toString$0(0) + ", proposal: " + this.proposal.toString$0(0) + ")";
    }
  };
  A._ProposalDiffInfo_Object__$ProposalDiffInfo.prototype = {};
  A.TxDiff.prototype = {
    marshal$0() {
      var t2, t3, t4, t5, t6, t7, _this = this, _null = null,
        writer = new A.BinaryWriterImpl(new Uint8Array(4096)),
        t1 = type$.CborCodec._eval$1("Codec.S");
      writer.writeByteList$1(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t1._as(_this.diff.serialize$1$forJson(false))))));
      t2 = type$.Uint8List;
      t3 = J.map$1$1$ax(_this.get$usedUtxos(), new A.TxDiff_marshal_closure(), t2);
      t3 = A.List_List$_of(t3, t3.$ti._eval$1("ListIterable.E"));
      writer.writeBytesList$1(t3);
      writer.write$1$1(_this.stakeDelegationPoolId, type$.nullable_String);
      t3 = _this.dRepDelegation;
      t3 = t3 == null ? _null : new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t1._as(t3.serialize$1$forJson(false)))));
      t4 = type$.nullable_Uint8List;
      writer.write$1$1(t3, t4);
      t3 = _this.dRepRegistration;
      writer.write$1$1(t3 == null ? _null : t3.marshal$0(), t4);
      t3 = _this.dRepUpdate;
      writer.write$1$1(t3 == null ? _null : t3.marshal$0(), t4);
      t3 = _this.authorizeConstitutionalCommitteeHot;
      writer.write$1$1(t3 == null ? _null : new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t1._as(t3.serialize$1$forJson(false))))), t4);
      t3 = _this.resignConstitutionalCommitteeCold;
      writer.write$1$1(t3 == null ? _null : new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t1._as(t3.serialize$1$forJson(false))))), t4);
      t1 = J.map$1$1$ax(_this.get$votes(), new A.TxDiff_marshal_closure0(), t2);
      t1 = A.List_List$_of(t1, t1.$ti._eval$1("ListIterable.E"));
      writer.writeBytesList$1(t1);
      t1 = J.map$1$1$ax(_this.get$proposals(), new A.TxDiff_marshal_closure1(), t2);
      t1 = A.List_List$_of(t1, t1.$ti._eval$1("ListIterable.E"));
      writer.writeBytesList$1(t1);
      t1 = _this.dRepDeregistration;
      t2 = type$.bool;
      A.ArgumentError_checkNotNull(t1, _null, t2);
      t1 = t1 ? 1 : 0;
      t3 = type$.int;
      A.ArgumentError_checkNotNull(t1, _null, t3);
      if (writer._buffer.length - writer._binary_writer_impl$_offset < 1)
        writer._increaseBufferSize$1(1);
      t4 = writer._buffer;
      t5 = writer._binary_writer_impl$_offset;
      t6 = t5 + 1;
      writer._binary_writer_impl$_offset = t6;
      t4.$flags & 2 && A.throwUnsupportedOperation(t4);
      t7 = t4.length;
      if (!(t5 < t7))
        return A.ioore(t4, t5);
      t4[t5] = t1;
      t1 = _this.stakeDeregistration;
      A.ArgumentError_checkNotNull(t1, _null, t2);
      t1 = t1 ? 1 : 0;
      A.ArgumentError_checkNotNull(t1, _null, t3);
      if (t7 - t6 < 1)
        writer._increaseBufferSize$1(1);
      t2 = writer._buffer;
      t3 = writer._binary_writer_impl$_offset++;
      t2.$flags & 2 && A.throwUnsupportedOperation(t2);
      if (!(t3 < t2.length))
        return A.ioore(t2, t3);
      t2[t3] = t1;
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(t2), 0, writer._binary_writer_impl$_offset);
    }
  };
  A.TxDiff_marshal_closure.prototype = {
    call$1(e) {
      return new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(type$.CborCodec._eval$1("Codec.S")._as(type$.Utxo._as(e).serialize$1$forJson(false)))));
    },
    $signature: 40
  };
  A.TxDiff_marshal_closure0.prototype = {
    call$1(e) {
      return type$.VoteInfo._as(e).marshal$0();
    },
    $signature: 51
  };
  A.TxDiff_marshal_closure1.prototype = {
    call$1(e) {
      return type$.ProposalDiffInfo._as(e).marshal$0();
    },
    $signature: 52
  };
  A.TxDiff_TxDiff$unmarshal_closure.prototype = {
    call$1(bytes) {
      return A.Drep_Drep$deserialize(B.C_CborDecoder.convert$1(type$.CborCodec._eval$1("Codec.T")._as(type$.Uint8List._as(bytes))));
    },
    $signature: 53
  };
  A.TxDiff_TxDiff$unmarshal_closure0.prototype = {
    call$1(bytes) {
      return A.Credential_Credential$deserialize(B.C_CborDecoder.convert$1(type$.CborCodec._eval$1("Codec.T")._as(type$.Uint8List._as(bytes))));
    },
    $signature: 27
  };
  A.TxDiff_TxDiff$unmarshal_closure1.prototype = {
    call$1(bytes) {
      return A.Credential_Credential$deserialize(B.C_CborDecoder.convert$1(type$.CborCodec._eval$1("Codec.T")._as(type$.Uint8List._as(bytes))));
    },
    $signature: 27
  };
  A.TxSigningBundle.prototype = {
    marshal$0() {
      var t1, t2, t3, t4, t5, t6, t7, _this = this, _null = null,
        writer = new A.BinaryWriterImpl(new Uint8Array(4096));
      writer.writeString$1(_this.receiveAddressBech32);
      writer.writeDouble$1(_this.networkId.intValue);
      t1 = type$.Uint8List;
      t2 = J.map$1$1$ax(_this.get$txsData(), new A.TxSigningBundle_marshal_closure(), t1);
      t2 = A.List_List$_of(t2, t2.$ti._eval$1("ListIterable.E"));
      writer.writeBytesList$1(t2);
      t2 = type$.CborCodec._eval$1("Codec.S");
      writer.writeByteList$1(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t2._as(_this.totalDiff.serialize$1$forJson(false))))));
      writer.write$1$1(_this.stakeDelegationPoolId, type$.nullable_String);
      t3 = _this.dRepDelegation;
      t3 = t3 == null ? _null : new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t2._as(t3.serialize$1$forJson(false)))));
      t4 = type$.nullable_Uint8List;
      writer.write$1$1(t3, t4);
      t3 = _this.dRepRegistration;
      writer.write$1$1(t3 == null ? _null : t3.marshal$0(), t4);
      t3 = _this.dRepUpdate;
      writer.write$1$1(t3 == null ? _null : t3.marshal$0(), t4);
      t3 = _this.authorizeConstitutionalCommitteeHot;
      writer.write$1$1(t3 == null ? _null : new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t2._as(t3.serialize$1$forJson(false))))), t4);
      t3 = _this.resignConstitutionalCommitteeCold;
      writer.write$1$1(t3 == null ? _null : new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t2._as(t3.serialize$1$forJson(false))))), t4);
      t2 = J.map$1$1$ax(_this.get$votes(), new A.TxSigningBundle_marshal_closure0(), t1);
      t2 = A.List_List$_of(t2, t2.$ti._eval$1("ListIterable.E"));
      writer.writeBytesList$1(t2);
      t1 = J.map$1$1$ax(_this.get$proposals(), new A.TxSigningBundle_marshal_closure1(), t1);
      t1 = A.List_List$_of(t1, t1.$ti._eval$1("ListIterable.E"));
      writer.writeBytesList$1(t1);
      t1 = _this.dRepDeregistration;
      t2 = type$.bool;
      A.ArgumentError_checkNotNull(t1, _null, t2);
      t1 = t1 ? 1 : 0;
      t3 = type$.int;
      A.ArgumentError_checkNotNull(t1, _null, t3);
      if (writer._buffer.length - writer._binary_writer_impl$_offset < 1)
        writer._increaseBufferSize$1(1);
      t4 = writer._buffer;
      t5 = writer._binary_writer_impl$_offset;
      t6 = t5 + 1;
      writer._binary_writer_impl$_offset = t6;
      t4.$flags & 2 && A.throwUnsupportedOperation(t4);
      t7 = t4.length;
      if (!(t5 < t7))
        return A.ioore(t4, t5);
      t4[t5] = t1;
      t1 = _this.stakeDeregistration;
      A.ArgumentError_checkNotNull(t1, _null, t2);
      t1 = t1 ? 1 : 0;
      A.ArgumentError_checkNotNull(t1, _null, t3);
      if (t7 - t6 < 1)
        writer._increaseBufferSize$1(1);
      t2 = writer._buffer;
      t3 = writer._binary_writer_impl$_offset++;
      t2.$flags & 2 && A.throwUnsupportedOperation(t2);
      if (!(t3 < t2.length))
        return A.ioore(t2, t3);
      t2[t3] = t1;
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(t2), 0, writer._binary_writer_impl$_offset);
    }
  };
  A.TxSigningBundle_marshal_closure.prototype = {
    call$1(e) {
      return type$.TxPreparedForSigning._as(e).marshal$0();
    },
    $signature: 151
  };
  A.TxSigningBundle_marshal_closure0.prototype = {
    call$1(e) {
      return type$.VoteInfo._as(e).marshal$0();
    },
    $signature: 51
  };
  A.TxSigningBundle_marshal_closure1.prototype = {
    call$1(e) {
      return type$.ProposalDiffInfo._as(e).marshal$0();
    },
    $signature: 52
  };
  A.TxSigningBundle_TxSigningBundle$unmarshal_closure.prototype = {
    call$1(bytes) {
      return A.Drep_Drep$deserialize(B.C_CborDecoder.convert$1(type$.CborCodec._eval$1("Codec.T")._as(type$.Uint8List._as(bytes))));
    },
    $signature: 53
  };
  A.TxSigningBundle_TxSigningBundle$unmarshal_closure0.prototype = {
    call$1(bytes) {
      return A.Credential_Credential$deserialize(B.C_CborDecoder.convert$1(type$.CborCodec._eval$1("Codec.T")._as(type$.Uint8List._as(bytes))));
    },
    $signature: 27
  };
  A.TxSigningBundle_TxSigningBundle$unmarshal_closure1.prototype = {
    call$1(bytes) {
      return A.Credential_Credential$deserialize(B.C_CborDecoder.convert$1(type$.CborCodec._eval$1("Codec.T")._as(type$.Uint8List._as(bytes))));
    },
    $signature: 27
  };
  A.TxSignedBundle.prototype = {
    marshal$0() {
      var t1, _this = this,
        writer = new A.BinaryWriterImpl(new Uint8Array(4096));
      writer.writeString$1(_this.receiveAddressBech32);
      writer.writeDouble$1(_this.networkId.intValue);
      t1 = J.map$1$1$ax(_this.get$txsData(), new A.TxSignedBundle_marshal_closure(), type$.Uint8List);
      t1 = A.List_List$_of(t1, t1.$ti._eval$1("ListIterable.E"));
      writer.writeBytesList$1(t1);
      writer.writeByteList$1(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(type$.CborCodec._eval$1("Codec.S")._as(_this.totalDiff.serialize$1$forJson(false))))));
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(writer._buffer), 0, writer._binary_writer_impl$_offset);
    }
  };
  A.TxSignedBundle_marshal_closure.prototype = {
    call$1(e) {
      return type$.TxAndSignature._as(e).marshal$0();
    },
    $signature: 152
  };
  A.TxPreparedForSigning.prototype = {
    marshal$0() {
      var _this = this,
        writer = new A.BinaryWriterImpl(new Uint8Array(4096));
      writer.writeByteList$1(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(type$.CborCodec._eval$1("Codec.S")._as(_this.tx.serialize$1$forJson(false))))));
      writer.writeByteList$1(_this.txDiff.marshal$0());
      writer.writeBytesList$1(J.map$1$1$ax(_this.utxosBeforeTx, new A.TxPreparedForSigning_marshal_closure(), type$.Uint8List).toList$0(0));
      writer.writeStringList$1(_this.get$signingAddressesRequired().toList$0(0));
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(writer._buffer), 0, writer._binary_writer_impl$_offset);
    }
  };
  A.TxPreparedForSigning_marshal_closure.prototype = {
    call$1(e) {
      return new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(type$.CborCodec._eval$1("Codec.S")._as(type$.Utxo._as(e).serialize$1$forJson(false)))));
    },
    $signature: 40
  };
  A.TxAndSignature.prototype = {
    marshal$0() {
      var _this = this,
        writer = new A.BinaryWriterImpl(new Uint8Array(4096)),
        t1 = type$.CborCodec._eval$1("Codec.S");
      writer.writeByteList$1(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t1._as(_this.tx.serialize$1$forJson(false))))));
      writer.writeByteList$1(_this.txDiff.marshal$0());
      writer.writeBytesList$1(J.map$1$1$ax(_this.utxosBeforeTx, new A.TxAndSignature_marshal_closure(), type$.Uint8List).toList$0(0));
      writer.writeStringList$1(_this.get$signingAddressesRequired().toList$0(0));
      writer.writeByteList$1(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t1._as(_this.nweSignatures.serialize$1$forJson(false))))));
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(writer._buffer), 0, writer._binary_writer_impl$_offset);
    }
  };
  A.TxAndSignature_marshal_closure.prototype = {
    call$1(e) {
      return new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(type$.CborCodec._eval$1("Codec.S")._as(type$.Utxo._as(e).serialize$1$forJson(false)))));
    },
    $signature: 40
  };
  A._$TxDiff.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._TxDiff) {
            t2 = other.diff;
            t3 = _this.diff;
            if (t2 === t3 || t2.$eq(0, t3))
              if (B.DeepCollectionEquality_false.equals$2(other.get$usedUtxos(), _this.get$usedUtxos())) {
                t2 = other.stakeDelegationPoolId == _this.stakeDelegationPoolId;
                if (t2 || t2) {
                  t2 = other.dRepDelegation;
                  t3 = _this.dRepDelegation;
                  if (t2 == t3 || J.$eq$(t2, t3)) {
                    t2 = other.dRepRegistration;
                    t3 = _this.dRepRegistration;
                    if (t2 == t3 || J.$eq$(t2, t3)) {
                      t2 = other.dRepUpdate;
                      t3 = _this.dRepUpdate;
                      if (t2 == t3 || J.$eq$(t2, t3)) {
                        t2 = other.authorizeConstitutionalCommitteeHot;
                        t3 = _this.authorizeConstitutionalCommitteeHot;
                        if (t2 == t3 || J.$eq$(t2, t3)) {
                          t2 = other.resignConstitutionalCommitteeCold;
                          t3 = _this.resignConstitutionalCommitteeCold;
                          if (t2 == t3 || J.$eq$(t2, t3))
                            if (B.DeepCollectionEquality_false.equals$2(other.get$votes(), _this.get$votes()))
                              if (B.DeepCollectionEquality_false.equals$2(other.get$proposals(), _this.get$proposals())) {
                                t2 = other.dRepDeregistration === _this.dRepDeregistration;
                                if (t2 || t2) {
                                  t1 = other.stakeDeregistration === _this.stakeDeregistration;
                                  t1 = t1 || t1;
                                }
                              }
                        }
                      }
                    }
                  }
                }
              }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.diff, B.DeepCollectionEquality_false.hash$1(_this.get$usedUtxos()), _this.stakeDelegationPoolId, _this.dRepDelegation, _this.dRepRegistration, _this.dRepUpdate, _this.authorizeConstitutionalCommitteeHot, _this.resignConstitutionalCommitteeCold, B.DeepCollectionEquality_false.hash$1(_this.get$votes()), B.DeepCollectionEquality_false.hash$1(_this.get$proposals()), _this.dRepDeregistration, _this.stakeDeregistration, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "TxDiff(diff: " + _this.diff.toString$0(0) + ", usedUtxos: " + A.S(_this.get$usedUtxos()) + ", stakeDelegationPoolId: " + A.S(_this.stakeDelegationPoolId) + ", dRepDelegation: " + A.S(_this.dRepDelegation) + ", dRepRegistration: " + A.S(_this.dRepRegistration) + ", dRepUpdate: " + A.S(_this.dRepUpdate) + ", authorizeConstitutionalCommitteeHot: " + A.S(_this.authorizeConstitutionalCommitteeHot) + ", resignConstitutionalCommitteeCold: " + A.S(_this.resignConstitutionalCommitteeCold) + ", votes: " + A.S(_this.get$votes()) + ", proposals: " + A.S(_this.get$proposals()) + ", dRepDeregistration: " + _this.dRepDeregistration + ", stakeDeregistration: " + _this.stakeDeregistration + ")";
    }
  };
  A._TxDiff.prototype = {
    get$usedUtxos() {
      var t1 = this._usedUtxos;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_Utxo);
    },
    get$votes() {
      var t1 = this._votes;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_VoteInfo);
    },
    get$proposals() {
      var t1 = this._proposals;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_ProposalDiffInfo);
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._TxDiff) {
            t2 = other.diff;
            t3 = _this.diff;
            if (t2 === t3 || t2.$eq(0, t3))
              if (B.DeepCollectionEquality_false.equals$2(other._usedUtxos, _this._usedUtxos)) {
                t2 = other.stakeDelegationPoolId == _this.stakeDelegationPoolId;
                if (t2 || t2) {
                  t2 = other.dRepDelegation;
                  t3 = _this.dRepDelegation;
                  if (t2 == t3 || J.$eq$(t2, t3)) {
                    t2 = other.dRepRegistration;
                    t3 = _this.dRepRegistration;
                    if (t2 == t3 || J.$eq$(t2, t3)) {
                      t2 = other.dRepUpdate;
                      t3 = _this.dRepUpdate;
                      if (t2 == t3 || J.$eq$(t2, t3)) {
                        t2 = other.authorizeConstitutionalCommitteeHot;
                        t3 = _this.authorizeConstitutionalCommitteeHot;
                        if (t2 == t3 || J.$eq$(t2, t3)) {
                          t2 = other.resignConstitutionalCommitteeCold;
                          t3 = _this.resignConstitutionalCommitteeCold;
                          if (t2 == t3 || J.$eq$(t2, t3))
                            if (B.DeepCollectionEquality_false.equals$2(other._votes, _this._votes))
                              if (B.DeepCollectionEquality_false.equals$2(other._proposals, _this._proposals)) {
                                t2 = other.dRepDeregistration === _this.dRepDeregistration;
                                if (t2 || t2) {
                                  t1 = other.stakeDeregistration === _this.stakeDeregistration;
                                  t1 = t1 || t1;
                                }
                              }
                        }
                      }
                    }
                  }
                }
              }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.diff, B.DeepCollectionEquality_false.hash$1(_this._usedUtxos), _this.stakeDelegationPoolId, _this.dRepDelegation, _this.dRepRegistration, _this.dRepUpdate, _this.authorizeConstitutionalCommitteeHot, _this.resignConstitutionalCommitteeCold, B.DeepCollectionEquality_false.hash$1(_this._votes), B.DeepCollectionEquality_false.hash$1(_this._proposals), _this.dRepDeregistration, _this.stakeDeregistration, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "TxDiff(diff: " + _this.diff.toString$0(0) + ", usedUtxos: " + A.S(_this.get$usedUtxos()) + ", stakeDelegationPoolId: " + A.S(_this.stakeDelegationPoolId) + ", dRepDelegation: " + A.S(_this.dRepDelegation) + ", dRepRegistration: " + A.S(_this.dRepRegistration) + ", dRepUpdate: " + A.S(_this.dRepUpdate) + ", authorizeConstitutionalCommitteeHot: " + A.S(_this.authorizeConstitutionalCommitteeHot) + ", resignConstitutionalCommitteeCold: " + A.S(_this.resignConstitutionalCommitteeCold) + ", votes: " + A.S(_this.get$votes()) + ", proposals: " + A.S(_this.get$proposals()) + ", dRepDeregistration: " + _this.dRepDeregistration + ", stakeDeregistration: " + _this.stakeDeregistration + ")";
    }
  };
  A._$TxSigningBundle.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._TxSigningBundle) {
            t2 = other.receiveAddressBech32 === _this.receiveAddressBech32;
            if (t2 || t2) {
              t2 = other.networkId === _this.networkId;
              if (t2 || t2)
                if (B.DeepCollectionEquality_false.equals$2(other.get$txsData(), _this.get$txsData())) {
                  t2 = other.totalDiff;
                  t3 = _this.totalDiff;
                  if (t2 === t3 || t2.$eq(0, t3)) {
                    t2 = other.stakeDelegationPoolId == _this.stakeDelegationPoolId;
                    if (t2 || t2) {
                      t2 = other.dRepDelegation;
                      t3 = _this.dRepDelegation;
                      if (t2 == t3 || J.$eq$(t2, t3)) {
                        t2 = other.dRepRegistration;
                        t3 = _this.dRepRegistration;
                        if (t2 == t3 || J.$eq$(t2, t3)) {
                          t2 = other.dRepUpdate;
                          t3 = _this.dRepUpdate;
                          if (t2 == t3 || J.$eq$(t2, t3)) {
                            t2 = other.authorizeConstitutionalCommitteeHot;
                            t3 = _this.authorizeConstitutionalCommitteeHot;
                            if (t2 == t3 || J.$eq$(t2, t3)) {
                              t2 = other.resignConstitutionalCommitteeCold;
                              t3 = _this.resignConstitutionalCommitteeCold;
                              if (t2 == t3 || J.$eq$(t2, t3))
                                if (B.DeepCollectionEquality_false.equals$2(other.get$votes(), _this.get$votes()))
                                  if (B.DeepCollectionEquality_false.equals$2(other.get$proposals(), _this.get$proposals())) {
                                    t2 = other.dRepDeregistration === _this.dRepDeregistration;
                                    if (t2 || t2) {
                                      t1 = other.stakeDeregistration === _this.stakeDeregistration;
                                      t1 = t1 || t1;
                                    }
                                  }
                            }
                          }
                        }
                      }
                    }
                  }
                }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.receiveAddressBech32, _this.networkId, B.DeepCollectionEquality_false.hash$1(_this.get$txsData()), _this.totalDiff, _this.stakeDelegationPoolId, _this.dRepDelegation, _this.dRepRegistration, _this.dRepUpdate, _this.authorizeConstitutionalCommitteeHot, _this.resignConstitutionalCommitteeCold, B.DeepCollectionEquality_false.hash$1(_this.get$votes()), B.DeepCollectionEquality_false.hash$1(_this.get$proposals()), _this.dRepDeregistration, _this.stakeDeregistration, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "TxSigningBundle(receiveAddressBech32: " + _this.receiveAddressBech32 + ", networkId: " + _this.networkId.toString$0(0) + ", txsData: " + A.S(_this.get$txsData()) + ", totalDiff: " + _this.totalDiff.toString$0(0) + ", stakeDelegationPoolId: " + A.S(_this.stakeDelegationPoolId) + ", dRepDelegation: " + A.S(_this.dRepDelegation) + ", dRepRegistration: " + A.S(_this.dRepRegistration) + ", dRepUpdate: " + A.S(_this.dRepUpdate) + ", authorizeConstitutionalCommitteeHot: " + A.S(_this.authorizeConstitutionalCommitteeHot) + ", resignConstitutionalCommitteeCold: " + A.S(_this.resignConstitutionalCommitteeCold) + ", votes: " + A.S(_this.get$votes()) + ", proposals: " + A.S(_this.get$proposals()) + ", dRepDeregistration: " + _this.dRepDeregistration + ", stakeDeregistration: " + _this.stakeDeregistration + ")";
    }
  };
  A._TxSigningBundle.prototype = {
    get$txsData() {
      var t1 = this._txsData;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_TxPreparedForSigning);
    },
    get$votes() {
      var t1 = this._votes;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_VoteInfo);
    },
    get$proposals() {
      var t1 = this._proposals;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_ProposalDiffInfo);
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._TxSigningBundle) {
            t2 = other.receiveAddressBech32 === _this.receiveAddressBech32;
            if (t2 || t2) {
              t2 = other.networkId === _this.networkId;
              if (t2 || t2)
                if (B.DeepCollectionEquality_false.equals$2(other._txsData, _this._txsData)) {
                  t2 = other.totalDiff;
                  t3 = _this.totalDiff;
                  if (t2 === t3 || t2.$eq(0, t3)) {
                    t2 = other.stakeDelegationPoolId == _this.stakeDelegationPoolId;
                    if (t2 || t2) {
                      t2 = other.dRepDelegation;
                      t3 = _this.dRepDelegation;
                      if (t2 == t3 || J.$eq$(t2, t3)) {
                        t2 = other.dRepRegistration;
                        t3 = _this.dRepRegistration;
                        if (t2 == t3 || J.$eq$(t2, t3)) {
                          t2 = other.dRepUpdate;
                          t3 = _this.dRepUpdate;
                          if (t2 == t3 || J.$eq$(t2, t3)) {
                            t2 = other.authorizeConstitutionalCommitteeHot;
                            t3 = _this.authorizeConstitutionalCommitteeHot;
                            if (t2 == t3 || J.$eq$(t2, t3)) {
                              t2 = other.resignConstitutionalCommitteeCold;
                              t3 = _this.resignConstitutionalCommitteeCold;
                              if (t2 == t3 || J.$eq$(t2, t3))
                                if (B.DeepCollectionEquality_false.equals$2(other._votes, _this._votes))
                                  if (B.DeepCollectionEquality_false.equals$2(other._proposals, _this._proposals)) {
                                    t2 = other.dRepDeregistration === _this.dRepDeregistration;
                                    if (t2 || t2) {
                                      t1 = other.stakeDeregistration === _this.stakeDeregistration;
                                      t1 = t1 || t1;
                                    }
                                  }
                            }
                          }
                        }
                      }
                    }
                  }
                }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.receiveAddressBech32, _this.networkId, B.DeepCollectionEquality_false.hash$1(_this._txsData), _this.totalDiff, _this.stakeDelegationPoolId, _this.dRepDelegation, _this.dRepRegistration, _this.dRepUpdate, _this.authorizeConstitutionalCommitteeHot, _this.resignConstitutionalCommitteeCold, B.DeepCollectionEquality_false.hash$1(_this._votes), B.DeepCollectionEquality_false.hash$1(_this._proposals), _this.dRepDeregistration, _this.stakeDeregistration, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "TxSigningBundle(receiveAddressBech32: " + _this.receiveAddressBech32 + ", networkId: " + _this.networkId.toString$0(0) + ", txsData: " + A.S(_this.get$txsData()) + ", totalDiff: " + _this.totalDiff.toString$0(0) + ", stakeDelegationPoolId: " + A.S(_this.stakeDelegationPoolId) + ", dRepDelegation: " + A.S(_this.dRepDelegation) + ", dRepRegistration: " + A.S(_this.dRepRegistration) + ", dRepUpdate: " + A.S(_this.dRepUpdate) + ", authorizeConstitutionalCommitteeHot: " + A.S(_this.authorizeConstitutionalCommitteeHot) + ", resignConstitutionalCommitteeCold: " + A.S(_this.resignConstitutionalCommitteeCold) + ", votes: " + A.S(_this.get$votes()) + ", proposals: " + A.S(_this.get$proposals()) + ", dRepDeregistration: " + _this.dRepDeregistration + ", stakeDeregistration: " + _this.stakeDeregistration + ")";
    }
  };
  A._$TxSignedBundle.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._TxSignedBundle) {
            t2 = other.receiveAddressBech32 === _this.receiveAddressBech32;
            if (t2 || t2) {
              t2 = other.networkId === _this.networkId;
              if (t2 || t2)
                if (B.DeepCollectionEquality_false.equals$2(other.get$txsData(), _this.get$txsData())) {
                  t1 = other.totalDiff;
                  t2 = _this.totalDiff;
                  t1 = t1 === t2 || t1.$eq(0, t2);
                }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.receiveAddressBech32, _this.networkId, B.DeepCollectionEquality_false.hash$1(_this.get$txsData()), _this.totalDiff, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "TxSignedBundle(receiveAddressBech32: " + _this.receiveAddressBech32 + ", networkId: " + _this.networkId.toString$0(0) + ", txsData: " + A.S(_this.get$txsData()) + ", totalDiff: " + _this.totalDiff.toString$0(0) + ")";
    }
  };
  A._TxSignedBundle.prototype = {
    get$txsData() {
      var t1 = this._txsData;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_TxAndSignature);
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._TxSignedBundle) {
            t2 = other.receiveAddressBech32 === _this.receiveAddressBech32;
            if (t2 || t2) {
              t2 = other.networkId === _this.networkId;
              if (t2 || t2)
                if (B.DeepCollectionEquality_false.equals$2(other._txsData, _this._txsData)) {
                  t1 = other.totalDiff;
                  t2 = _this.totalDiff;
                  t1 = t1 === t2 || t1.$eq(0, t2);
                }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.receiveAddressBech32, _this.networkId, B.DeepCollectionEquality_false.hash$1(_this._txsData), _this.totalDiff, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "TxSignedBundle(receiveAddressBech32: " + _this.receiveAddressBech32 + ", networkId: " + _this.networkId.toString$0(0) + ", txsData: " + A.S(_this.get$txsData()) + ", totalDiff: " + _this.totalDiff.toString$0(0) + ")";
    }
  };
  A._$TxPreparedForSigning.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._TxPreparedForSigning) {
            t2 = other.tx;
            t3 = _this.tx;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.txDiff;
              t2 = _this.txDiff;
              t1 = (t1 === t2 || t1.$eq(0, t2)) && B.DeepCollectionEquality_false.equals$2(other.utxosBeforeTx, _this.utxosBeforeTx) && B.DeepCollectionEquality_false.equals$2(other.get$signingAddressesRequired(), _this.get$signingAddressesRequired());
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.tx, _this.txDiff, B.DeepCollectionEquality_false.hash$1(_this.utxosBeforeTx), B.DeepCollectionEquality_false.hash$1(_this.get$signingAddressesRequired()), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "TxPreparedForSigning(tx: " + _this.tx.toString$0(0) + ", txDiff: " + _this.txDiff.toString$0(0) + ", utxosBeforeTx: " + A.S(_this.utxosBeforeTx) + ", signingAddressesRequired: " + _this.get$signingAddressesRequired().toString$0(0) + ")";
    }
  };
  A._TxPreparedForSigning.prototype = {
    get$signingAddressesRequired() {
      var t1 = this._signingAddressesRequired;
      return new A.EqualUnmodifiableSetView(t1, t1, type$.EqualUnmodifiableSetView_String);
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._TxPreparedForSigning) {
            t2 = other.tx;
            t3 = _this.tx;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.txDiff;
              t2 = _this.txDiff;
              t1 = (t1 === t2 || t1.$eq(0, t2)) && B.DeepCollectionEquality_false.equals$2(other.utxosBeforeTx, _this.utxosBeforeTx) && B.DeepCollectionEquality_false.equals$2(other._signingAddressesRequired, _this._signingAddressesRequired);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.tx, _this.txDiff, B.DeepCollectionEquality_false.hash$1(_this.utxosBeforeTx), B.DeepCollectionEquality_false.hash$1(_this._signingAddressesRequired), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "TxPreparedForSigning(tx: " + _this.tx.toString$0(0) + ", txDiff: " + _this.txDiff.toString$0(0) + ", utxosBeforeTx: " + A.S(_this.utxosBeforeTx) + ", signingAddressesRequired: " + _this.get$signingAddressesRequired().toString$0(0) + ")";
    }
  };
  A._$TxAndSignature.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._TxAndSignature) {
            t2 = other.tx;
            t3 = _this.tx;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t2 = other.txDiff;
              t3 = _this.txDiff;
              if (t2 === t3 || t2.$eq(0, t3))
                if (B.DeepCollectionEquality_false.equals$2(other.utxosBeforeTx, _this.utxosBeforeTx))
                  if (B.DeepCollectionEquality_false.equals$2(other.get$signingAddressesRequired(), _this.get$signingAddressesRequired())) {
                    t1 = other.nweSignatures;
                    t2 = _this.nweSignatures;
                    t1 = t1 === t2 || t1.$eq(0, t2);
                  }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.tx, _this.txDiff, B.DeepCollectionEquality_false.hash$1(_this.utxosBeforeTx), B.DeepCollectionEquality_false.hash$1(_this.get$signingAddressesRequired()), _this.nweSignatures, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "TxAndSignature(tx: " + _this.tx.toString$0(0) + ", txDiff: " + _this.txDiff.toString$0(0) + ", utxosBeforeTx: " + A.S(_this.utxosBeforeTx) + ", signingAddressesRequired: " + _this.get$signingAddressesRequired().toString$0(0) + ", nweSignatures: " + _this.nweSignatures.toString$0(0) + ")";
    }
  };
  A._TxAndSignature.prototype = {
    get$signingAddressesRequired() {
      var t1 = this._signingAddressesRequired;
      if (t1 instanceof A.EqualUnmodifiableSetView)
        return t1;
      return new A.EqualUnmodifiableSetView(t1, t1, type$.EqualUnmodifiableSetView_String);
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._TxAndSignature) {
            t2 = other.tx;
            t3 = _this.tx;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t2 = other.txDiff;
              t3 = _this.txDiff;
              if (t2 === t3 || t2.$eq(0, t3))
                if (B.DeepCollectionEquality_false.equals$2(other.utxosBeforeTx, _this.utxosBeforeTx))
                  if (B.DeepCollectionEquality_false.equals$2(other._signingAddressesRequired, _this._signingAddressesRequired)) {
                    t1 = other.nweSignatures;
                    t2 = _this.nweSignatures;
                    t1 = t1 === t2 || t1.$eq(0, t2);
                  }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.tx, _this.txDiff, B.DeepCollectionEquality_false.hash$1(_this.utxosBeforeTx), B.DeepCollectionEquality_false.hash$1(_this._signingAddressesRequired), _this.nweSignatures, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "TxAndSignature(tx: " + _this.tx.toString$0(0) + ", txDiff: " + _this.txDiff.toString$0(0) + ", utxosBeforeTx: " + A.S(_this.utxosBeforeTx) + ", signingAddressesRequired: " + _this.get$signingAddressesRequired().toString$0(0) + ", nweSignatures: " + _this.nweSignatures.toString$0(0) + ")";
    }
  };
  A._TxAndSignature_Object__$TxAndSignature.prototype = {};
  A._TxDiff_Object__$TxDiff.prototype = {};
  A._TxPreparedForSigning_Object__$TxPreparedForSigning.prototype = {};
  A._TxSignedBundle_Object__$TxSignedBundle.prototype = {};
  A._TxSigningBundle_Object__$TxSigningBundle.prototype = {};
  A.VoteInfo.prototype = {
    marshal$0() {
      var writer = new A.BinaryWriterImpl(new Uint8Array(4096)),
        t1 = type$.CborCodec._eval$1("Codec.S");
      writer.writeByteList$1(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t1._as(this.action.serialize$1$forJson(false))))));
      writer.writeByteList$1(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t1._as(this.vote.serialize$1$forJson(false))))));
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(writer._buffer), 0, writer._binary_writer_impl$_offset);
    }
  };
  A._$VoteInfo.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._VoteInfo) {
            t2 = other.action;
            t3 = _this.action;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.vote === _this.vote;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.action, this.vote, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "VoteInfo(action: " + this.action.toString$0(0) + ", vote: " + this.vote.toString$0(0) + ")";
    }
  };
  A._VoteInfo.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._VoteInfo) {
            t2 = other.action;
            t3 = _this.action;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t1 = other.vote === _this.vote;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.action, this.vote, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "VoteInfo(action: " + this.action.toString$0(0) + ", vote: " + this.vote.toString$0(0) + ")";
    }
  };
  A._VoteInfo_Object__$VoteInfo.prototype = {};
  A.CborDeserializationException.prototype = {
    toString$0(_) {
      return this.message;
    }
  };
  A.CardanoSigningPath.prototype = {
    get$signingPath() {
      var t1, _this = this,
        value = _this.__CardanoSigningPath_signingPath_FI;
      if (value === $) {
        $label0$0: {
          t1 = A._setArrayType([2147485500, 2147485463, 2147483648 + _this.account, _this.role.derivationIndex, _this.address], type$.JSArray_int);
          break $label0$0;
        }
        _this.__CardanoSigningPath_signingPath_FI !== $ && A.throwLateFieldADI("signingPath");
        value = _this.__CardanoSigningPath_signingPath_FI = t1;
      }
      return value;
    }
  };
  A._$CardanoSigningPath.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && other instanceof A.CardanoSigningPath_Shelley && B.DeepCollectionEquality_false.equals$2(other.get$signingPath(), this.get$signingPath());
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), B.DeepCollectionEquality_false.hash$1(this.get$signingPath()), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "CardanoSigningPath(signingPath: " + A.S(this.get$signingPath()) + ")";
    }
  };
  A.CardanoSigningPath_Shelley.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.CardanoSigningPath_Shelley) {
            t2 = other.account === _this.account;
            if (t2 || t2) {
              t2 = other.address === _this.address;
              if (t2 || t2) {
                t1 = other.role === _this.role;
                t1 = t1 || t1;
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.account, _this.address, _this.role, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "CardanoSigningPath.shelley(account: " + this.account + ", address: " + this.address + ", role: " + this.role.toString$0(0) + ")";
    }
  };
  A._CardanoSigningPath_Object__$CardanoSigningPath.prototype = {};
  A.Lazy.prototype = {
    get$value() {
      var t1, _this = this;
      if (!_this._computed) {
        _this._computed = true;
        _this.__Lazy__value_A = _this.$ti._precomputed1._as(_this._supplier.call$0());
      }
      t1 = _this.__Lazy__value_A;
      t1 === $ && A.throwLateFieldNI("_value");
      return t1;
    }
  };
  A.HdWallet.prototype = {
    get$_paymentRoleKeysDerivator() {
      var value = this.__HdWallet__paymentRoleKeysDerivator_FI;
      return value === $ ? this.__HdWallet__paymentRoleKeysDerivator_FI = new A.Lazy(new A.HdWallet__paymentRoleKeysDerivator_closure(this), type$.Lazy_Bip32KeyPair) : value;
    },
    get$_changeRoleKeysDerivator() {
      var value = this.__HdWallet__changeRoleKeysDerivator_FI;
      return value === $ ? this.__HdWallet__changeRoleKeysDerivator_FI = new A.Lazy(new A.HdWallet__changeRoleKeysDerivator_closure(this), type$.Lazy_Bip32KeyPair) : value;
    },
    get$_stakeRoleKeysDerivator() {
      var value = this.__HdWallet__stakeRoleKeysDerivator_FI;
      return value === $ ? this.__HdWallet__stakeRoleKeysDerivator_FI = new A.Lazy(new A.HdWallet__stakeRoleKeysDerivator_closure(this), type$.Lazy_Bip32KeyPair) : value;
    },
    get$_drepCredentialRoleKeysDerivator() {
      var value = this.__HdWallet__drepCredentialRoleKeysDerivator_FI;
      return value === $ ? this.__HdWallet__drepCredentialRoleKeysDerivator_FI = new A.Lazy(new A.HdWallet__drepCredentialRoleKeysDerivator_closure(this), type$.Lazy_Bip32KeyPair) : value;
    },
    get$_constitutionalCommitteeColdRoleKeysDerivator() {
      var value = this.__HdWallet__constitutionalCommitteeColdRoleKeysDerivator_FI;
      return value === $ ? this.__HdWallet__constitutionalCommitteeColdRoleKeysDerivator_FI = new A.Lazy(new A.HdWallet__constitutionalCommitteeColdRoleKeysDerivator_closure(this), type$.Lazy_Bip32KeyPair) : value;
    },
    get$_constitutionalCommitteeHotRoleKeysDerivator() {
      var value = this.__HdWallet__constitutionalCommitteeHotRoleKeysDerivator_FI;
      return value === $ ? this.__HdWallet__constitutionalCommitteeHotRoleKeysDerivator_FI = new A.Lazy(new A.HdWallet__constitutionalCommitteeHotRoleKeysDerivator_closure(this), type$.Lazy_Bip32KeyPair) : value;
    },
    get$stakeKeys() {
      var value = this.__HdWallet_stakeKeys_FI;
      return value === $ ? this.__HdWallet_stakeKeys_FI = new A.Lazy(new A.HdWallet_stakeKeys_closure(this), type$.Lazy_Bip32KeyPair) : value;
    },
    get$drepCredentialKeys() {
      var value = this.__HdWallet_drepCredentialKeys_FI;
      return value === $ ? this.__HdWallet_drepCredentialKeys_FI = new A.Lazy(new A.HdWallet_drepCredentialKeys_closure(this), type$.Lazy_Bip32KeyPair) : value;
    },
    get$constitutionalCommitteeColdKeys() {
      var value = this.__HdWallet_constitutionalCommitteeColdKeys_FI;
      return value === $ ? this.__HdWallet_constitutionalCommitteeColdKeys_FI = new A.Lazy(new A.HdWallet_constitutionalCommitteeColdKeys_closure(this), type$.Lazy_Bip32KeyPair) : value;
    },
    get$constitutionalCommitteeHotKeys() {
      var value = this.__HdWallet_constitutionalCommitteeHotKeys_FI;
      return value === $ ? this.__HdWallet_constitutionalCommitteeHotKeys_FI = new A.Lazy(new A.HdWallet_constitutionalCommitteeHotKeys_closure(this), type$.Lazy_Bip32KeyPair) : value;
    },
    marshal$0() {
      var writer = new A.BinaryWriterImpl(new Uint8Array(4096));
      writer.writeByteList$1(this.rootSigningKey._u8l);
      writer.writeDouble$1(this.accountIndex);
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(writer._buffer), 0, writer._binary_writer_impl$_offset);
    },
    _roleDerivationKeys$1(role) {
      var t1, _this = this;
      switch (role.index) {
        case 0:
          t1 = _this.get$_paymentRoleKeysDerivator().get$value();
          break;
        case 1:
          t1 = _this.get$_changeRoleKeysDerivator().get$value();
          break;
        case 2:
          t1 = _this.get$_stakeRoleKeysDerivator().get$value();
          break;
        case 3:
          t1 = _this.get$_drepCredentialRoleKeysDerivator().get$value();
          break;
        case 4:
          t1 = _this.get$_constitutionalCommitteeColdRoleKeysDerivator().get$value();
          break;
        case 5:
          t1 = _this.get$_constitutionalCommitteeHotRoleKeysDerivator().get$value();
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    deriveBaseAddressKit$3$index$networkId$role(index, networkId, role) {
      var keyPair = A.DerivationUtils_derive(index, this._roleDerivationKeys$1(role).signingKey),
        t1 = keyPair.verifyKey;
      return new A.CardanoAddressKit(this.accountIndex, role, index, A.CardanoAddress_CardanoAddress$toBaseAddress(networkId, B.CredentialType_0, t1, this.get$stakeKeys().get$value().verifyKey, B.CredentialType_0), keyPair.signingKey, t1);
    }
  };
  A.HdWallet__paymentRoleKeysDerivator_closure.prototype = {
    call$0() {
      var t1 = this.$this.__HdWallet__accountSKey_F;
      t1 === $ && A.throwLateFieldNI("_accountSKey");
      return A.DerivationUtils_derive(0, t1);
    },
    $signature: 3
  };
  A.HdWallet__changeRoleKeysDerivator_closure.prototype = {
    call$0() {
      var t1 = this.$this.__HdWallet__accountSKey_F;
      t1 === $ && A.throwLateFieldNI("_accountSKey");
      return A.DerivationUtils_derive(1, t1);
    },
    $signature: 3
  };
  A.HdWallet__stakeRoleKeysDerivator_closure.prototype = {
    call$0() {
      var t1 = this.$this.__HdWallet__accountSKey_F;
      t1 === $ && A.throwLateFieldNI("_accountSKey");
      return A.DerivationUtils_derive(2, t1);
    },
    $signature: 3
  };
  A.HdWallet__drepCredentialRoleKeysDerivator_closure.prototype = {
    call$0() {
      var t1 = this.$this.__HdWallet__accountSKey_F;
      t1 === $ && A.throwLateFieldNI("_accountSKey");
      return A.DerivationUtils_derive(3, t1);
    },
    $signature: 3
  };
  A.HdWallet__constitutionalCommitteeColdRoleKeysDerivator_closure.prototype = {
    call$0() {
      var t1 = this.$this.__HdWallet__accountSKey_F;
      t1 === $ && A.throwLateFieldNI("_accountSKey");
      return A.DerivationUtils_derive(4, t1);
    },
    $signature: 3
  };
  A.HdWallet__constitutionalCommitteeHotRoleKeysDerivator_closure.prototype = {
    call$0() {
      var t1 = this.$this.__HdWallet__accountSKey_F;
      t1 === $ && A.throwLateFieldNI("_accountSKey");
      return A.DerivationUtils_derive(5, t1);
    },
    $signature: 3
  };
  A.HdWallet_stakeKeys_closure.prototype = {
    call$0() {
      return A.DerivationUtils_derive(0, this.$this.get$_stakeRoleKeysDerivator().get$value().signingKey);
    },
    $signature: 3
  };
  A.HdWallet_drepCredentialKeys_closure.prototype = {
    call$0() {
      return A.DerivationUtils_derive(0, this.$this.get$_drepCredentialRoleKeysDerivator().get$value().signingKey);
    },
    $signature: 3
  };
  A.HdWallet_constitutionalCommitteeColdKeys_closure.prototype = {
    call$0() {
      return A.DerivationUtils_derive(0, this.$this.get$_constitutionalCommitteeColdRoleKeysDerivator().get$value().signingKey);
    },
    $signature: 3
  };
  A.HdWallet_constitutionalCommitteeHotKeys_closure.prototype = {
    call$0() {
      return A.DerivationUtils_derive(0, this.$this.get$_constitutionalCommitteeHotRoleKeysDerivator().get$value().signingKey);
    },
    $signature: 3
  };
  A.CardanoWalletImpl.prototype = {
    get$drepId() {
      var value = this.__CardanoWalletImpl_drepId_FI;
      return value === $ ? this.__CardanoWalletImpl_drepId_FI = new A.Lazy(new A.CardanoWalletImpl_drepId_closure(this), type$.Lazy_DRepDerivation) : value;
    },
    get$constitutionalCommiteeCold() {
      var value = this.__CardanoWalletImpl_constitutionalCommiteeCold_FI;
      return value === $ ? this.__CardanoWalletImpl_constitutionalCommiteeCold_FI = new A.Lazy(new A.CardanoWalletImpl_constitutionalCommiteeCold_closure(this), type$.Lazy_ConstitutionalCommiteeCold) : value;
    },
    get$constitutionalCommiteeHot() {
      var value = this.__CardanoWalletImpl_constitutionalCommiteeHot_FI;
      return value === $ ? this.__CardanoWalletImpl_constitutionalCommiteeHot_FI = new A.Lazy(new A.CardanoWalletImpl_constitutionalCommiteeHot_closure(this), type$.Lazy_ConstitutionalCommiteeHot) : value;
    },
    toString$0(_) {
      return "CardanoWalletImpl(stake_address: " + this.stakeAddress.get$bech32Encoded() + ")";
    }
  };
  A.CardanoWalletImpl_drepId_closure.prototype = {
    call$0() {
      var t1 = this.$this.hdWallet.get$drepCredentialKeys().get$value().verifyKey,
        t2 = A.SubListIterable$(t1, 0, A.checkNotNullable(t1.get$prefixLength(), "count", type$.int), A._instanceType(t1)._eval$1("ListBase.E"));
      t1 = t1.get$prefixLength();
      return A._DRepDerivation$(new A.ByteList(A.ByteList__constructList(t2, t1, t1)));
    },
    $signature: 47
  };
  A.CardanoWalletImpl_constitutionalCommiteeCold_closure.prototype = {
    call$0() {
      var t1 = this.$this.hdWallet.get$constitutionalCommitteeColdKeys().get$value().verifyKey,
        t2 = A.SubListIterable$(t1, 0, A.checkNotNullable(t1.get$prefixLength(), "count", type$.int), A._instanceType(t1)._eval$1("ListBase.E"));
      t1 = t1.get$prefixLength();
      return A.ConstitutionalCommiteeCold$(new A.ByteList(A.ByteList__constructList(t2, t1, t1)));
    },
    $signature: 48
  };
  A.CardanoWalletImpl_constitutionalCommiteeHot_closure.prototype = {
    call$0() {
      var t1 = this.$this.hdWallet.get$constitutionalCommitteeHotKeys().get$value().verifyKey,
        t2 = A.SubListIterable$(t1, 0, A.checkNotNullable(t1.get$prefixLength(), "count", type$.int), A._instanceType(t1)._eval$1("ListBase.E"));
      t1 = t1.get$prefixLength();
      return A.ConstitutionalCommiteeHot$(new A.ByteList(A.ByteList__constructList(t2, t1, t1)));
    },
    $signature: 49
  };
  A.CardanoSigner.prototype = {
    toString$0(_) {
      var t1 = this.publicKeyBytes,
        t2 = type$.HexCodec._eval$1("Codec.S");
      t1 = t2._as(t1.toList$1$growable(t1, false));
      t1 = B.C_HexCodec.get$encoder().convert$1(t1);
      t2 = t2._as(B.NativeUint8List_methods.toList$1$growable(this.requestedSignerBytes, false));
      return "CardanoSigner(publicKeyBytes: " + t1 + ", requestedSignerBytes: " + B.C_HexCodec.get$encoder().convert$1(t2) + ", path: " + this.path.toString$0(0) + ")";
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof A.CardanoSigner && B.ListEquality_DefaultEquality0.equals$2(_this.publicKeyBytes, other.publicKeyBytes) && B.ListEquality_DefaultEquality0.equals$2(_this.requestedSignerBytes, other.requestedSignerBytes) && other.path.$eq(0, _this.path);
    },
    get$hashCode(_) {
      return A.Object_hash(this.publicKeyBytes, this.requestedSignerBytes, this.path, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.WalletTasks.prototype = {
    toCardanoBaseAddress$5$paymentType$stakeType(spend, stake, networkId, paymentType, stakeType) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.CardanoAddress),
        $async$returnValue;
      var $async$toCardanoBaseAddress$5$paymentType$stakeType = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = A.CardanoAddress_CardanoAddress$toBaseAddress(networkId, paymentType, spend, stake, stakeType);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$toCardanoBaseAddress$5$paymentType$stakeType, $async$completer);
    },
    toCardanoRewardAddress$3$paymentType(spend, networkId, paymentType) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.CardanoAddress),
        $async$returnValue;
      var $async$toCardanoRewardAddress$3$paymentType = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = A.CardanoAddress_CardanoAddress$toRewardAddress(networkId, paymentType, spend);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$toCardanoRewardAddress$3$paymentType, $async$completer);
    },
    ckdPubBip32Ed25519KeyDerivation$2(pubKey, index) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Bip32PublicKey),
        $async$returnValue;
      var $async$ckdPubBip32Ed25519KeyDerivation$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = type$.Bip32PublicKey._as(A.Bip32Ed25519KeyDerivation__ckd(pubKey, index));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$ckdPubBip32Ed25519KeyDerivation$2, $async$completer);
    },
    ckdPubBip32Ed25519KeyDerivations$3(pubKey, startIndexInclusive, endIndexExclusive) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.List_Bip32PublicKey),
        $async$returnValue, index, _length, t1, _list;
      var $async$ckdPubBip32Ed25519KeyDerivations$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _length = endIndexExclusive - startIndexInclusive;
              t1 = type$.Bip32PublicKey;
              _list = J.JSArray_JSArray$allocateGrowable(_length, t1);
              for (index = 0; index < _length; ++index)
                _list[index] = t1._as(A.Bip32Ed25519KeyDerivation__ckd(pubKey, startIndexInclusive + index));
              $async$returnValue = _list;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$ckdPubBip32Ed25519KeyDerivations$3, $async$completer);
    },
    hexCredentialsDerivation$3(pubKey, startIndexInclusive, endIndexExclusive) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.List_String),
        $async$returnValue, t1, t2, index, t3, t4, t5, t6, _length, _list;
      var $async$hexCredentialsDerivation$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _length = endIndexExclusive - startIndexInclusive;
              _list = J.JSArray_JSArray$allocateGrowable(_length, type$.String);
              for (t1 = type$.HexCodec._eval$1("Codec.S"), t2 = type$.Bip32PublicKey, index = 0; index < _length; ++index) {
                t3 = t2._as(A.Bip32Ed25519KeyDerivation__ckd(pubKey, startIndexInclusive + index));
                t4 = t3.get$prefixLength();
                t5 = A._instanceType(t3);
                t6 = new A.SubListIterable(t3, 0, t4, t5._eval$1("SubListIterable<ListBase.E>"));
                t6.SubListIterable$3(t3, 0, t4, t5._eval$1("ListBase.E"));
                t3 = t3.get$prefixLength();
                t3 = t1._as(B.NativeUint8List_methods.toList$1$growable(A.Hash_blake2b(new Uint8Array(A._ensureNativeList(new A.ByteList(A.ByteList__constructList(t6, t3, t3)))), 28), false));
                _list[index] = B.C_HexCodec.get$encoder().convert$1(t3);
              }
              $async$returnValue = _list;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$hexCredentialsDerivation$3, $async$completer);
    },
    buildHdWalletFromMnemonic$2(mnemonic, accountIndex) {
      return this.buildHdWalletFromMnemonic$body$WalletTasks(type$.List_String._as(mnemonic), accountIndex);
    },
    buildHdWalletFromMnemonic$body$WalletTasks(mnemonic, accountIndex) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.HdWallet),
        $async$returnValue, t1;
      var $async$buildHdWalletFromMnemonic$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.HexCodec._eval$1("Codec.T")._as(A.mnemonicToEntropy(B.JSString_methods.trim$0(J.join$1$ax(mnemonic, " "))));
              $async$returnValue = A.HdWallet$(accountIndex, A.DerivationUtils_seedToBip32signingKey(new Uint8Array(A._ensureNativeList(new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(t1)))))));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$buildHdWalletFromMnemonic$2, $async$completer);
    },
    buildHdWalletFromSeed$2(seed, accountIndex) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.HdWallet),
        $async$returnValue;
      var $async$buildHdWalletFromSeed$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = A.HdWallet$(accountIndex, A.DerivationUtils_seedToBip32signingKey(seed));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$buildHdWalletFromSeed$2, $async$completer);
    },
    deriveAddressKit$4(wallet, networkId, index, role) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.CardanoAddressKit),
        $async$returnValue;
      var $async$deriveAddressKit$4 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = wallet.deriveBaseAddressKit$3$index$networkId$role(index, networkId, role);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$deriveAddressKit$4, $async$completer);
    },
    buildWalletFromHdWallet$2(hdWallet, networkId) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.CardanoWallet),
        $async$returnValue, addressKeys, t1;
      var $async$buildWalletFromHdWallet$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              addressKeys = A.DerivationUtils_derive(0, hdWallet._roleDerivationKeys$1(B.Bip32KeyRole_0_0_payment).signingKey);
              t1 = hdWallet.get$stakeKeys();
              $async$returnValue = A.CardanoWalletImpl$(0, A.CardanoAddress_CardanoAddress$toBaseAddress(networkId, B.CredentialType_0, addressKeys.verifyKey, t1.get$value().verifyKey, B.CredentialType_0), hdWallet, A.CardanoAddress_CardanoAddress$toRewardAddress(networkId, B.CredentialType_0, t1.get$value().verifyKey));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$buildWalletFromHdWallet$2, $async$completer);
    },
    prepareTxsForSigningImpl$7(walletBech32Address, drepCredential, constitutionalCommitteeColdCredential, constitutionalCommitteeHotCredential, networkId, txs, utxos) {
      return this.prepareTxsForSigningImpl$body$WalletTasks(walletBech32Address, drepCredential, constitutionalCommitteeColdCredential, constitutionalCommitteeHotCredential, networkId, type$.List_CardanoTransaction._as(txs), type$.List_Utxo._as(utxos));
    },
    prepareTxsForSigningImpl$body$WalletTasks(walletBech32Address, drepCredential, constitutionalCommitteeColdCredential, constitutionalCommitteeHotCredential, networkId, txs, utxos) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.TxSigningBundle),
        $async$returnValue, t2, t3, t4, t5, t6, t7, t8, t9, t10, walletUtxosBeforeTx, t11, t12, txHash, t13, usedUtxosTxAndId, collateralUtxosTxAndId, t14, t15, t16, signatureAddresses, notUsedUserUtxos, generatedUserUtxos, txsTotalDiff, t1, txsPreparedForSigning;
      var $async$prepareTxsForSigningImpl$7 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.TxPreparedForSigning;
              txsPreparedForSigning = J.JSArray_JSArray$growable(0, t1);
              for (t2 = J.get$iterator$ax(txs), t3 = type$.Utxo, t4 = type$.CardanoTransactionOutput, t5 = type$.nullable_Utxo, t6 = type$.NonNullsIterable_Utxo, t7 = t6._eval$1("Iterable.E"), t8 = type$.String, t9 = type$.CborCodec._eval$1("Codec.S"), t10 = type$.HexCodec._eval$1("Codec.S"), walletUtxosBeforeTx = utxos; t2.moveNext$0(); walletUtxosBeforeTx = t11) {
                t11 = t2.get$current();
                t12 = t11.body;
                txHash = t12.originalBlake2bHash256;
                if (txHash == null) {
                  t13 = t10._as(B.NativeUint8List_methods.toList$1$growable(A.Hash_blake2b(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t9._as(t12.serialize$1$forJson(false))))), 32), false));
                  txHash = B.C_HexCodec.get$encoder().convert$1(t13);
                }
                usedUtxosTxAndId = J.map$1$1$ax(t12.inputs.get$data(), new A.WalletTasks_prepareTxsForSigningImpl_closure(), t8).toSet$0(0);
                t13 = t12.collateral;
                collateralUtxosTxAndId = t13 == null ? null : J.map$1$1$ax(t13.get$data(), new A.WalletTasks_prepareTxsForSigningImpl_closure0(), t8).toSet$0(0);
                t13 = A.LinkedHashSet_LinkedHashSet(t8);
                t13.addAll$1(0, usedUtxosTxAndId);
                if (collateralUtxosTxAndId != null)
                  t13.addAll$1(0, collateralUtxosTxAndId);
                t14 = J.getInterceptor$ax(walletUtxosBeforeTx);
                t13 = t14.where$1(walletUtxosBeforeTx, new A.WalletTasks_prepareTxsForSigningImpl_closure1(t13));
                t15 = t13.$ti;
                t16 = t15._eval$1("String(1)")._as(new A.WalletTasks_prepareTxsForSigningImpl_closure2());
                t15 = t15._eval$1("MappedIterable<1,String>");
                signatureAddresses = A.LinkedHashSet_LinkedHashSet(t15._eval$1("Iterable.E"));
                signatureAddresses.addAll$1(0, new A.MappedIterable(t13, t16, t15));
                t14 = t14.where$1(walletUtxosBeforeTx, new A.WalletTasks_prepareTxsForSigningImpl_closure3(usedUtxosTxAndId));
                notUsedUserUtxos = A.List_List$_of(t14, t14.$ti._eval$1("Iterable.E"));
                generatedUserUtxos = A.List_List$_of(new A.NonNullsIterable(A.ListExtensions_mapIndexed(t12.get$outputs(), new A.WalletTasks_prepareTxsForSigningImpl_closure4(walletBech32Address, txHash), t4, t5), t6), t7);
                B.JSArray_methods.add$1(txsPreparedForSigning, new A._TxPreparedForSigning(t11, t11.diff$5$constitutionalCommitteeColdCredential$constitutionalCommitteeHotCredential$drepCredential$receiveAddressBech32$walletUtxos(constitutionalCommitteeColdCredential, constitutionalCommitteeHotCredential, drepCredential, walletBech32Address, walletUtxosBeforeTx), walletUtxosBeforeTx, signatureAddresses));
                t11 = A.List_List$_of(notUsedUserUtxos, t3);
                B.JSArray_methods.addAll$1(t11, generatedUserUtxos);
              }
              txsTotalDiff = A.IterableX_reduceSafe(txsPreparedForSigning, new A.WalletTasks_prepareTxsForSigningImpl_closure5(), new A.Value_v0($.$get$_BigIntImpl_zero()), t1, type$.Value);
              t1 = A._arrayInstanceType(txsPreparedForSigning);
              t8 = A.IterableExtension_get_lastOrNull(new A.NonNullsIterable(new A.MappedListIterable(txsPreparedForSigning, t1._eval$1("String?(1)")._as(new A.WalletTasks_prepareTxsForSigningImpl_closure6()), t1._eval$1("MappedListIterable<1,String?>")), type$.NonNullsIterable_String), t8);
              t2 = B.JSArray_methods.any$1(txsPreparedForSigning, new A.WalletTasks_prepareTxsForSigningImpl_closure7());
              t3 = B.JSArray_methods.any$1(txsPreparedForSigning, new A.WalletTasks_prepareTxsForSigningImpl_closure8());
              t4 = t1._eval$1("Credential?(1)");
              t5 = t1._eval$1("MappedListIterable<1,Credential?>");
              t6 = type$.NonNullsIterable_Credential;
              t7 = type$.Credential;
              t9 = A.IterableExtension_get_lastOrNull(new A.NonNullsIterable(new A.MappedListIterable(txsPreparedForSigning, t4._as(new A.WalletTasks_prepareTxsForSigningImpl_closure9()), t5), t6), t7);
              t7 = A.IterableExtension_get_lastOrNull(new A.NonNullsIterable(new A.MappedListIterable(txsPreparedForSigning, t4._as(new A.WalletTasks_prepareTxsForSigningImpl_closure10()), t5), t6), t7);
              t6 = A.IterableExtension_get_lastOrNull(new A.NonNullsIterable(new A.MappedListIterable(txsPreparedForSigning, t1._eval$1("Drep?(1)")._as(new A.WalletTasks_prepareTxsForSigningImpl_closure11()), t1._eval$1("MappedListIterable<1,Drep?>")), type$.NonNullsIterable_Drep), type$.Drep);
              t5 = t1._eval$1("DRepDiffInfo?(1)");
              t4 = t1._eval$1("MappedListIterable<1,DRepDiffInfo?>");
              t10 = type$.NonNullsIterable_DRepDiffInfo;
              t11 = type$.DRepDiffInfo;
              t12 = A.IterableExtension_get_lastOrNull(new A.NonNullsIterable(new A.MappedListIterable(txsPreparedForSigning, t5._as(new A.WalletTasks_prepareTxsForSigningImpl_closure12()), t4), t10), t11);
              t11 = A.IterableExtension_get_lastOrNull(new A.NonNullsIterable(new A.MappedListIterable(txsPreparedForSigning, t5._as(new A.WalletTasks_prepareTxsForSigningImpl_closure13()), t4), t10), t11);
              t10 = A.IterableIterableExtension_get_flattened(new A.NonNullsIterable(new A.MappedListIterable(txsPreparedForSigning, t1._eval$1("List<VoteInfo>(1)")._as(new A.WalletTasks_prepareTxsForSigningImpl_closure14()), t1._eval$1("MappedListIterable<1,List<VoteInfo>>")), type$.NonNullsIterable_List_VoteInfo), type$.VoteInfo);
              t4 = A.List_List$_of(t10, t10.$ti._eval$1("Iterable.E"));
              t1 = A.IterableIterableExtension_get_flattened(new A.NonNullsIterable(new A.MappedListIterable(txsPreparedForSigning, t1._eval$1("List<ProposalDiffInfo>(1)")._as(new A.WalletTasks_prepareTxsForSigningImpl_closure15()), t1._eval$1("MappedListIterable<1,List<ProposalDiffInfo>>")), type$.NonNullsIterable_List_ProposalDiffInfo), type$.ProposalDiffInfo);
              t1 = A.List_List$_of(t1, t1.$ti._eval$1("Iterable.E"));
              $async$returnValue = A._TxSigningBundle$(t9, t6, t2, t12, t11, networkId, t1, walletBech32Address, t7, t8, t3, txsTotalDiff, txsPreparedForSigning, t4);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$prepareTxsForSigningImpl$7, $async$completer);
    },
    signTransactionsBundle$3(wallet, bundle, deriveMaxAddressCount) {
      return this.signTransactionsBundle$body$WalletTasks(wallet, bundle, deriveMaxAddressCount);
    },
    signTransactionsBundle$body$WalletTasks(wallet, bundle, deriveMaxAddressCount) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.TxSignedBundle),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], signAddressesAll, modifiableSpendCredentialsAll, modifiablePubKeyNativeScriptCredentialsAll, modifiableExtraSignersCredentialsAll, deriveAddressWorker, i, paymentAddrForIndexFuture, changeAddrForIndexFuture, paymentAddrForIndex, changeAddrForIndex, hexPaymentAddrForIndex, hexChangeAddrForIndex, bech32PaymentCredsForIndex, bech32ChangeCredsForIndex, t2, index, modifiableSpendCredentialsAll0, t3, t4, t5, modifiablePubKeyNativeScriptCredentialsAll0, modifiableExtraSignersCredentialsAll0, t6, extraSignersRequestedStakeAddressAll, pubKeyNativeScriptRequestedStakeAddressAll, t7, hasCertsForWalletStakeKeyAll, hasCertsForColdKeyAll, hasCertsOrVotesForDRepAll, hasCommitteeHotVotesAll, hasWithdrawalForWalletStakeKeyAll, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, needsStakeAddrSigningAll, needsConstitutionalCommitteeColdSignAll, needsConstitutionalCommitteeHotSignAll, needsDRepIdSignAll, txsAndSignatures, txs, hdWallet, networkId, t1, _length, signAddressesAll0;
      var $async$signTransactionsBundle$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                txs = bundle.get$txsData();
                hdWallet = wallet.hdWallet;
                networkId = wallet.networkId;
                t1 = J.getInterceptor$asx(txs);
                _length = t1.get$length(txs);
                signAddressesAll0 = J.JSArray_JSArray$allocateGrowable(_length, type$.Set_Bip32KeyPair);
                for (t2 = type$.Bip32KeyPair, index = 0; index < _length; ++index)
                  signAddressesAll0[index] = A.LinkedHashSet_LinkedHashSet$_empty(t2);
                signAddressesAll = signAddressesAll0;
                _length = t1.get$length(txs);
                t2 = type$.Set_String;
                modifiableSpendCredentialsAll0 = J.JSArray_JSArray$allocateGrowable(_length, t2);
                for (t3 = type$.String, index = 0; index < _length; ++index) {
                  t4 = t1.$index(txs, index).get$signingAddressesRequired().map$1$1(0, new A.WalletTasks_signTransactionsBundle_closure(), t3);
                  t5 = A.LinkedHashSet_LinkedHashSet(t3);
                  t5.addAll$1(0, t4);
                  modifiableSpendCredentialsAll0[index] = t5;
                }
                modifiableSpendCredentialsAll = modifiableSpendCredentialsAll0;
                _length = t1.get$length(txs);
                modifiablePubKeyNativeScriptCredentialsAll0 = J.JSArray_JSArray$allocateGrowable(_length, t2);
                for (t4 = type$.JSArray_NativeScript, index = 0; index < _length; ++index) {
                  t5 = t1.$index(txs, index).tx.witnessSet.inativeScripts;
                  t5 = t5 == null ? null : t5.get$items();
                  t5 = A._credsFromNativeScripts(t5 == null ? A._setArrayType([], t4) : t5);
                  modifiablePubKeyNativeScriptCredentialsAll0[index] = A.LinkedHashSet_LinkedHashSet$from(t5, A._arrayInstanceType(t5)._precomputed1);
                }
                modifiablePubKeyNativeScriptCredentialsAll = modifiablePubKeyNativeScriptCredentialsAll0;
                _length = t1.get$length(txs);
                modifiableExtraSignersCredentialsAll0 = J.JSArray_JSArray$allocateGrowable(_length, t2);
                for (t4 = type$.JSArray_String, index = 0; index < _length; ++index) {
                  t5 = t1.$index(txs, index).tx.body.requiredSigners;
                  t5 = t5 == null ? null : J.map$1$1$ax(t5.get$signersBytes(), new A.WalletTasks_signTransactionsBundle_closure0(), t3);
                  if (t5 == null)
                    t5 = A._setArrayType([], t4);
                  t6 = A.LinkedHashSet_LinkedHashSet(t3);
                  t6.addAll$1(0, t5);
                  modifiableExtraSignersCredentialsAll0[index] = t6;
                }
                modifiableExtraSignersCredentialsAll = modifiableExtraSignersCredentialsAll0;
                t4 = modifiableExtraSignersCredentialsAll;
                t5 = A._arrayInstanceType(t4);
                t6 = t5._eval$1("MappedListIterable<1,bool>");
                t4 = A.List_List$_of(new A.MappedListIterable(t4, t5._eval$1("bool(1)")._as(new A.WalletTasks_signTransactionsBundle_closure1(wallet)), t6), t6._eval$1("ListIterable.E"));
                t4.$flags = 1;
                extraSignersRequestedStakeAddressAll = t4;
                t4 = modifiablePubKeyNativeScriptCredentialsAll;
                t5 = A._arrayInstanceType(t4);
                t6 = t5._eval$1("MappedListIterable<1,bool>");
                t4 = A.List_List$_of(new A.MappedListIterable(t4, t5._eval$1("bool(1)")._as(new A.WalletTasks_signTransactionsBundle_closure2(wallet)), t6), t6._eval$1("ListIterable.E"));
                t4.$flags = 1;
                pubKeyNativeScriptRequestedStakeAddressAll = t4;
                t4 = type$.CardanoTransaction;
                t5 = t1.map$1$1(txs, new A.WalletTasks_signTransactionsBundle_closure3(), t4);
                t6 = t5.$ti;
                t7 = t6._eval$1("MappedListIterable<ListIterable.E,bool>");
                t5 = A.List_List$_of(new A.MappedListIterable(t5, t6._eval$1("bool(ListIterable.E)")._as(new A.WalletTasks_signTransactionsBundle_closure4(wallet)), t7), t7._eval$1("ListIterable.E"));
                t5.$flags = 1;
                hasCertsForWalletStakeKeyAll = t5;
                t5 = t1.map$1$1(txs, new A.WalletTasks_signTransactionsBundle_closure5(), t4);
                t6 = t5.$ti;
                t7 = t6._eval$1("MappedListIterable<ListIterable.E,bool>");
                t5 = A.List_List$_of(new A.MappedListIterable(t5, t6._eval$1("bool(ListIterable.E)")._as(new A.WalletTasks_signTransactionsBundle_closure6(wallet)), t7), t7._eval$1("ListIterable.E"));
                t5.$flags = 1;
                hasCertsForColdKeyAll = t5;
                t5 = t1.map$1$1(txs, new A.WalletTasks_signTransactionsBundle_closure7(), t4);
                t6 = t5.$ti;
                t7 = t6._eval$1("MappedListIterable<ListIterable.E,bool>");
                t5 = A.List_List$_of(new A.MappedListIterable(t5, t6._eval$1("bool(ListIterable.E)")._as(new A.WalletTasks_signTransactionsBundle_closure8(wallet)), t7), t7._eval$1("ListIterable.E"));
                t5.$flags = 1;
                hasCertsOrVotesForDRepAll = t5;
                t5 = t1.map$1$1(txs, new A.WalletTasks_signTransactionsBundle_closure9(), t4);
                t6 = t5.$ti;
                t7 = t6._eval$1("MappedListIterable<ListIterable.E,bool>");
                t5 = A.List_List$_of(new A.MappedListIterable(t5, t6._eval$1("bool(ListIterable.E)")._as(new A.WalletTasks_signTransactionsBundle_closure10(wallet)), t7), t7._eval$1("ListIterable.E"));
                t5.$flags = 1;
                hasCommitteeHotVotesAll = t5;
                t4 = t1.map$1$1(txs, new A.WalletTasks_signTransactionsBundle_closure11(), t4);
                t5 = t4.$ti;
                t6 = t5._eval$1("MappedListIterable<ListIterable.E,bool>");
                t4 = A.List_List$_of(new A.MappedListIterable(t4, t5._eval$1("bool(ListIterable.E)")._as(new A.WalletTasks_signTransactionsBundle_closure12(wallet)), t6), t6._eval$1("ListIterable.E"));
                t4.$flags = 1;
                hasWithdrawalForWalletStakeKeyAll = t4;
                deriveAddressWorker = A.WalletTasksWorkerPool$(B.ConcurrencySettings_2_2_2);
                $async$handler = 3;
                t4 = deriveAddressWorker.start$0();
                $async$goto = 6;
                return A._asyncAwait(t4 instanceof A._Future ? t4 : A._Future$value(t4, type$.void), $async$signTransactionsBundle$3);
              case 6:
                // returning from await.
                i = 0;
                t4 = type$.ValueTask_CardanoAddressKit;
                t5 = type$.$env_1_1_CardanoAddressKit;
                t6 = type$._Future_CardanoAddressKit;
                t7 = type$._AsyncCompleter_CardanoAddressKit;
                t8 = type$._Future_void;
                t9 = type$._AsyncCompleter_void;
              case 7:
                // while condition
                t10 = i;
                if (typeof t10 !== "number") {
                  $async$returnValue = t10.$lt();
                  $async$next = [1];
                  // goto finally
                  $async$goto = 4;
                  break;
                }
                if (!(t10 < deriveMaxAddressCount)) {
                  // goto after while
                  $async$goto = 8;
                  break;
                }
                t10 = deriveAddressWorker;
                t11 = A._instanceType(t10);
                t12 = t11._eval$1("Future<CardanoAddressKit>(WorkerPool.W)")._as(new A.WalletTasks_signTransactionsBundle_closure13(wallet, networkId, i));
                t13 = $.Zone__current;
                t14 = new A._Future(t13, t6);
                t15 = Date.now();
                t15 = new A.DateTime(t15, 0, false).toUtc$0();
                t16 = $.$get$_latestUPDEpoch();
                t17 = t16._core$_value;
                t16 = t16._microsecond;
                A.Duration$(t15._microsecond - t16, t15._core$_value - t17);
                t11 = t11._eval$1("WorkerTask<CardanoAddressKit,WorkerPool.W>")._as(new A.WorkerValueTask(t12, new A._AsyncCompleter(t14, t7), new A._AsyncCompleter(new A._Future(t13, t8), t9), null, new A._AsyncCompleter(new A._Future(t13, t8), t9), t5._bind$1(t11._eval$1("WorkerPool.W"))._eval$1("WorkerValueTask<1,2>")));
                if (t10._stopped)
                  A.throwExpression(A.SquadronError$_(string$.The_po, null, null));
                t12 = t10._queue;
                t12._add$1(t12.$ti._precomputed1._as(t11));
                t12 = t10._timer;
                if ((t12 == null ? null : t12._handle != null) !== true)
                  t10._timer = A.Timer_Timer(B.Duration_0, t10.get$__schedule());
                t4._as(t11);
                paymentAddrForIndexFuture = t14;
                t10 = deriveAddressWorker;
                t11 = A._instanceType(t10);
                t12 = t11._eval$1("Future<CardanoAddressKit>(WorkerPool.W)")._as(new A.WalletTasks_signTransactionsBundle_closure14(wallet, networkId, i));
                t13 = $.Zone__current;
                t14 = new A._Future(t13, t6);
                t15 = Date.now();
                t15 = new A.DateTime(t15, 0, false).toUtc$0();
                A.Duration$(t15._microsecond - t16, t15._core$_value - t17);
                t11 = t11._eval$1("WorkerTask<CardanoAddressKit,WorkerPool.W>")._as(new A.WorkerValueTask(t12, new A._AsyncCompleter(t14, t7), new A._AsyncCompleter(new A._Future(t13, t8), t9), null, new A._AsyncCompleter(new A._Future(t13, t8), t9), t5._bind$1(t11._eval$1("WorkerPool.W"))._eval$1("WorkerValueTask<1,2>")));
                if (t10._stopped)
                  A.throwExpression(A.SquadronError$_(string$.The_po, null, null));
                t12 = t10._queue;
                t12._add$1(t12.$ti._precomputed1._as(t11));
                t12 = t10._timer;
                if ((t12 == null ? null : t12._handle != null) !== true)
                  t10._timer = A.Timer_Timer(B.Duration_0, t10.get$__schedule());
                t4._as(t11);
                changeAddrForIndexFuture = t14;
                $async$goto = 9;
                return A._asyncAwait(paymentAddrForIndexFuture, $async$signTransactionsBundle$3);
              case 9:
                // returning from await.
                paymentAddrForIndex = $async$result;
                $async$goto = 10;
                return A._asyncAwait(changeAddrForIndexFuture, $async$signTransactionsBundle$3);
              case 10:
                // returning from await.
                changeAddrForIndex = $async$result;
                hexPaymentAddrForIndex = paymentAddrForIndex.address.get$hexEncoded();
                hexChangeAddrForIndex = changeAddrForIndex.address.get$hexEncoded();
                bech32PaymentCredsForIndex = paymentAddrForIndex.address.get$credentials();
                bech32ChangeCredsForIndex = changeAddrForIndex.address.get$credentials();
                A.ListExtensions_forEachIndexed(modifiableSpendCredentialsAll, new A.WalletTasks_signTransactionsBundle_closure15(bech32PaymentCredsForIndex, signAddressesAll, paymentAddrForIndex, bech32ChangeCredsForIndex, changeAddrForIndex), t2);
                A.ListExtensions_forEachIndexed(modifiableExtraSignersCredentialsAll, new A.WalletTasks_signTransactionsBundle_closure16(bech32PaymentCredsForIndex, signAddressesAll, paymentAddrForIndex, bech32ChangeCredsForIndex, changeAddrForIndex), t2);
                A.ListExtensions_forEachIndexed(modifiablePubKeyNativeScriptCredentialsAll, new A.WalletTasks_signTransactionsBundle_closure17(hexPaymentAddrForIndex, signAddressesAll, paymentAddrForIndex, hexChangeAddrForIndex, changeAddrForIndex), t2);
                if (J.every$1$ax(modifiableSpendCredentialsAll, new A.WalletTasks_signTransactionsBundle_closure18()) && J.every$1$ax(modifiableExtraSignersCredentialsAll, new A.WalletTasks_signTransactionsBundle_closure19()) && J.every$1$ax(modifiablePubKeyNativeScriptCredentialsAll, new A.WalletTasks_signTransactionsBundle_closure20())) {
                  // goto after while
                  $async$goto = 8;
                  break;
                }
                t10 = i;
                if (typeof t10 !== "number") {
                  $async$returnValue = t10.$add();
                  $async$next = [1];
                  // goto finally
                  $async$goto = 4;
                  break;
                }
                i = t10 + 1;
                // goto while condition
                $async$goto = 7;
                break;
              case 8:
                // after while
                $async$next.push(5);
                // goto finally
                $async$goto = 4;
                break;
              case 3:
                // uncaught
                $async$next = [2];
              case 4:
                // finally
                $async$handler = 2;
                deriveAddressWorker.stop$0();
                // goto the next finally handler
                $async$goto = $async$next.pop();
                break;
              case 5:
                // after finally
                if (!A.IterableIterableExtension_get_flattened(modifiableSpendCredentialsAll, t3).get$isEmpty(0))
                  throw A.wrapException(A.SigningAddressNotFoundException$(A.IterableIterableExtension_get_flattened(modifiableSpendCredentialsAll, t3).toSet$0(0), deriveMaxAddressCount));
                _length = t1.get$length(txs);
                t2 = type$.bool;
                needsStakeAddrSigningAll = J.JSArray_JSArray$allocateGrowable(_length, t2);
                for (t3 = hasCertsForWalletStakeKeyAll.length, t4 = hasWithdrawalForWalletStakeKeyAll.length, t5 = extraSignersRequestedStakeAddressAll.length, t6 = pubKeyNativeScriptRequestedStakeAddressAll.length, index = 0; index < _length; ++index) {
                  if (!(index < t3)) {
                    $async$returnValue = A.ioore(hasCertsForWalletStakeKeyAll, index);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  }
                  t7 = true;
                  if (!hasCertsForWalletStakeKeyAll[index]) {
                    if (!(index < t4)) {
                      $async$returnValue = A.ioore(hasWithdrawalForWalletStakeKeyAll, index);
                      // goto return
                      $async$goto = 1;
                      break $async$outer;
                    }
                    if (!hasWithdrawalForWalletStakeKeyAll[index]) {
                      if (!(index < t5)) {
                        $async$returnValue = A.ioore(extraSignersRequestedStakeAddressAll, index);
                        // goto return
                        $async$goto = 1;
                        break $async$outer;
                      }
                      if (!extraSignersRequestedStakeAddressAll[index]) {
                        if (!(index < t6)) {
                          $async$returnValue = A.ioore(pubKeyNativeScriptRequestedStakeAddressAll, index);
                          // goto return
                          $async$goto = 1;
                          break $async$outer;
                        }
                        t7 = pubKeyNativeScriptRequestedStakeAddressAll[index];
                      }
                    }
                  }
                  needsStakeAddrSigningAll[index] = t7;
                }
                A.ListExtensions_forEachIndexed(needsStakeAddrSigningAll, new A.WalletTasks_signTransactionsBundle_closure21(signAddressesAll, hdWallet), t2);
                _length = t1.get$length(txs);
                needsConstitutionalCommitteeColdSignAll = J.JSArray_JSArray$allocateGrowable(_length, t2);
                for (t3 = hasCertsForColdKeyAll.length, index = 0; index < _length; ++index) {
                  if (!(index < t3)) {
                    $async$returnValue = A.ioore(hasCertsForColdKeyAll, index);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  }
                  needsConstitutionalCommitteeColdSignAll[index] = hasCertsForColdKeyAll[index];
                }
                A.ListExtensions_forEachIndexed(needsConstitutionalCommitteeColdSignAll, new A.WalletTasks_signTransactionsBundle_closure22(signAddressesAll, hdWallet), t2);
                _length = t1.get$length(txs);
                needsConstitutionalCommitteeHotSignAll = J.JSArray_JSArray$allocateGrowable(_length, t2);
                for (t3 = hasCommitteeHotVotesAll.length, index = 0; index < _length; ++index) {
                  if (!(index < t3)) {
                    $async$returnValue = A.ioore(hasCommitteeHotVotesAll, index);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  }
                  needsConstitutionalCommitteeHotSignAll[index] = hasCommitteeHotVotesAll[index];
                }
                A.ListExtensions_forEachIndexed(needsConstitutionalCommitteeHotSignAll, new A.WalletTasks_signTransactionsBundle_closure23(signAddressesAll, hdWallet), t2);
                _length = t1.get$length(txs);
                needsDRepIdSignAll = J.JSArray_JSArray$allocateGrowable(_length, t2);
                for (t1 = hasCertsOrVotesForDRepAll.length, index = 0; index < _length; ++index) {
                  if (!(index < t1)) {
                    $async$returnValue = A.ioore(hasCertsOrVotesForDRepAll, index);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  }
                  needsDRepIdSignAll[index] = hasCertsOrVotesForDRepAll[index];
                }
                A.ListExtensions_forEachIndexed(needsDRepIdSignAll, new A.WalletTasks_signTransactionsBundle_closure24(signAddressesAll, hdWallet), t2);
                txsAndSignatures = A.ListExtensions_mapIndexed(txs, new A.WalletTasks_signTransactionsBundle_closure25(signAddressesAll), type$.TxPreparedForSigning, type$.TxAndSignature);
                t1 = A.List_List$_of(txsAndSignatures, txsAndSignatures.$ti._eval$1("Iterable.E"));
                t1.$flags = 1;
                $async$returnValue = new A._TxSignedBundle(bundle.receiveAddressBech32, bundle.networkId, t1, bundle.totalDiff);
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return A._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
            }
      });
      return A._asyncStartSync($async$signTransactionsBundle$3, $async$completer);
    },
    findCardanoSigningPath$3(xPubHex, requestedSignerRaw, deriveMaxAddressCount) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.CardanoSigner),
        $async$returnValue, xPubBytes, t2, t1, $async$temp1, $async$temp2;
      var $async$findCardanoSigningPath$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$CardanoPubAccountFactory_instanceSync();
              type$.HexCodec._eval$1("Codec.T")._as(xPubHex);
              xPubBytes = new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(xPubHex)));
              t2 = A.instanceType(xPubBytes)._eval$1("ListBase.E");
              $async$temp1 = A;
              $async$temp2 = deriveMaxAddressCount;
              $async$goto = 3;
              return A._asyncAwait(t1.fromAccountKey$1(A.Bip32VerifyKey$fromKeyBytes(new Uint8Array(A._ensureNativeList(A.SubListIterable$(xPubBytes, 0, A.checkNotNullable(32, "count", type$.int), t2).toList$1$growable(0, false))), new Uint8Array(A._ensureNativeList(A.SubListIterable$(xPubBytes, 32, null, t2).toList$1$growable(0, false))))), $async$findCardanoSigningPath$3);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.WalletTasksSign_findCardanoSigner($async$temp2, $async$result, requestedSignerRaw);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$findCardanoSigningPath$3, $async$completer);
    },
    signData$4(wallet, payloadHex, requestedSignerRaw, deriveMaxAddressCount) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.DataSignature),
        $async$returnValue, t1, requestedSignerHex, hdWallet, t2, payloadBytes, dataFromAddress, dataFromDrepIdOrCreds, _1_0, t3, t4, t5, dataToSign, signedMessage, t6, t7, t8;
      var $async$signData$4 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (B.JSArray_methods.any$1(A._setArrayType(["addr", "stake", "drep", "cc_hot", "cc_cold"], type$.JSArray_String), B.JSString_methods.get$startsWith(requestedSignerRaw))) {
                t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(A.Bech32Encoder_decodeNoHrpCheck(requestedSignerRaw, 256), false));
                requestedSignerHex = B.C_HexCodec.get$encoder().convert$1(t1);
              } else
                requestedSignerHex = requestedSignerRaw;
              hdWallet = wallet.hdWallet;
              t1 = type$.HexCodec;
              t2 = t1._eval$1("Codec.T");
              t2._as(payloadHex);
              payloadBytes = new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(payloadHex)));
              dataFromAddress = new A.WalletTasks_signData_dataFromAddress(wallet, hdWallet, deriveMaxAddressCount, wallet.networkId, requestedSignerRaw);
              dataFromDrepIdOrCreds = new A.WalletTasks_signData_dataFromDrepIdOrCreds(wallet, requestedSignerRaw, hdWallet);
              _1_0 = requestedSignerHex.length;
              $label1$1: {
                if (56 === _1_0) {
                  t2 = dataFromDrepIdOrCreds.call$1(requestedSignerHex);
                  break $label1$1;
                }
                if (58 === _1_0) {
                  t2 = new A.WalletTasks_signData_closure(requestedSignerHex, dataFromDrepIdOrCreds, dataFromAddress).call$0();
                  break $label1$1;
                }
                if (114 === _1_0) {
                  t2._as(requestedSignerHex);
                  t2 = dataFromAddress.call$1(A.CardanoAddress_CardanoAddress(new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(requestedSignerHex)))));
                  break $label1$1;
                }
                t2 = A.throwExpression(A.SigningAddressNotValidException$(requestedSignerHex, "When signing payload message"));
              }
              t3 = type$.CborValue;
              t4 = type$.CborCodec._eval$1("Codec.S");
              t5 = new A._CoseProtectedHeaderMap(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t4._as(A._CoseHeaderMap$(B._CborSmallIntImpl_m8_List_empty, null, t2._0, new A._CborMapImpl(B.List_empty, B.CborLengthType_2, A.LinkedHashMap_LinkedHashMap$of(A.LinkedHashMap_LinkedHashMap$_literal([new A._CborStringImpl(B.List_empty, "address", null), new A._CborBytesImpl(t2._1, B.List_empty)], t3, t3), t3, t3))).serialize$1$forJson(false))))));
              t3 = A._CoseHeaderMap$(null, false, null, new A._CborMapImpl(B.List_empty, B.CborLengthType_2, A.LinkedHashMap_LinkedHashMap$of(A.LinkedHashMap_LinkedHashMap$_empty(t3, t3), t3, t3)));
              dataToSign = new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t4._as(new A._CoseSigStructure(t5, null, B.SigContext_1_signature1, payloadBytes, new Uint8Array(A._ensureNativeList(B.JSArray_methods.toList$1$growable(A._setArrayType([], type$.JSArray_int), false)))).serialize$1$forJson(false)))));
              t2 = t2._2;
              signedMessage = t2.signingKey.sign$1(0, dataToSign);
              t6 = type$.int;
              t7 = A.SubListIterable$(signedMessage, 0, A.checkNotNullable(signedMessage.get$prefixLength(), "count", t6), A._instanceType(signedMessage)._eval$1("ListBase.E"));
              t8 = signedMessage.get$prefixLength();
              t8 = new Uint8Array(A._ensureNativeList(new A.Signature(A.ByteList__constructList(A.ByteList__constructList(t7, t8, t8), 64, 64))));
              t2 = t2.verifyKey;
              t6 = A.SubListIterable$(t2, 0, A.checkNotNullable(t2.get$prefixLength(), "count", t6), A._instanceType(t2)._eval$1("ListBase.E"));
              t2 = t2.get$prefixLength();
              t1 = t1._eval$1("Codec.S");
              t2 = t1._as(B.NativeUint8List_methods.toList$1$growable(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t4._as(new A._CoseKey(new Uint8Array(A._ensureNativeList(new A.ByteList(A.ByteList__constructList(t6, t2, t2))))).serialize$1$forJson(false))))), false));
              t2 = B.C_HexCodec.get$encoder().convert$1(t2);
              t8 = t1._as(B.NativeUint8List_methods.toList$1$growable(new Uint8Array(A._ensureNativeList(B.C_CborEncoder.convert$1(t4._as(new A._CoseSign1(new A._CoseHeaders(t5, t3), payloadBytes, t8).serialize$1$forJson(false))))), false));
              $async$returnValue = new A._DataSignature(t2, B.C_HexCodec.get$encoder().convert$1(t8));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$signData$4, $async$completer);
    }
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure.prototype = {
    call$1(e) {
      type$.CardanoTransactionInput._as(e);
      return e.transactionHash + "#" + e.index;
    },
    $signature: 70
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure0.prototype = {
    call$1(e) {
      type$.CardanoTransactionInput._as(e);
      return e.transactionHash + "#" + e.index;
    },
    $signature: 70
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure1.prototype = {
    call$1(e) {
      var t1 = type$.Utxo._as(e).identifier;
      return this.txUtxos.contains$1(0, t1.transactionHash + "#" + t1.index);
    },
    $signature: 57
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure2.prototype = {
    call$1(e) {
      return A.IntListExtensions_addressBase58Orbech32Encode(type$.Utxo._as(e).content.get$addressBytes());
    },
    $signature: 84
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure3.prototype = {
    call$1(e) {
      var t1 = type$.Utxo._as(e).identifier;
      return !this.usedUtxosTxAndId.contains$1(0, t1.transactionHash + "#" + t1.index);
    },
    $signature: 57
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure4.prototype = {
    call$2(utxoIndex, e) {
      type$.CardanoTransactionOutput._as(e);
      return A.IntListExtensions_addressBase58Orbech32Encode(e.get$addressBytes()) !== this.bech32Address ? null : new A._Utxo(new A._CardanoTransactionInput(this.txHash, utxoIndex), e);
    },
    $signature: 156
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure5.prototype = {
    call$2(aggregator, e) {
      return type$.Value._as(aggregator).$add(0, type$.TxPreparedForSigning._as(e).txDiff.diff);
    },
    $signature: 157
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure6.prototype = {
    call$1(e) {
      return type$.TxPreparedForSigning._as(e).txDiff.stakeDelegationPoolId;
    },
    $signature: 158
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure7.prototype = {
    call$1(e) {
      return type$.TxPreparedForSigning._as(e).txDiff.dRepDeregistration;
    },
    $signature: 58
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure8.prototype = {
    call$1(e) {
      return type$.TxPreparedForSigning._as(e).txDiff.stakeDeregistration;
    },
    $signature: 58
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure9.prototype = {
    call$1(e) {
      return type$.TxPreparedForSigning._as(e).txDiff.authorizeConstitutionalCommitteeHot;
    },
    $signature: 59
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure10.prototype = {
    call$1(e) {
      return type$.TxPreparedForSigning._as(e).txDiff.resignConstitutionalCommitteeCold;
    },
    $signature: 59
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure11.prototype = {
    call$1(e) {
      return type$.TxPreparedForSigning._as(e).txDiff.dRepDelegation;
    },
    $signature: 161
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure12.prototype = {
    call$1(e) {
      return type$.TxPreparedForSigning._as(e).txDiff.dRepRegistration;
    },
    $signature: 60
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure13.prototype = {
    call$1(e) {
      return type$.TxPreparedForSigning._as(e).txDiff.dRepUpdate;
    },
    $signature: 60
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure14.prototype = {
    call$1(e) {
      return type$.TxPreparedForSigning._as(e).txDiff.get$votes();
    },
    $signature: 163
  };
  A.WalletTasks_prepareTxsForSigningImpl_closure15.prototype = {
    call$1(e) {
      return type$.TxPreparedForSigning._as(e).txDiff.get$proposals();
    },
    $signature: 164
  };
  A.WalletTasks_signTransactionsBundle_closure.prototype = {
    call$1(e) {
      return A.CardanoAddress_CardanoAddress$fromBech32OrBase58(A._asString(e)).get$credentials();
    },
    $signature: 61
  };
  A.WalletTasks_signTransactionsBundle_closure0.prototype = {
    call$1(e) {
      var t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(type$.Uint8List._as(e), false));
      return B.C_HexCodec.get$encoder().convert$1(t1);
    },
    $signature: 166
  };
  A.WalletTasks_signTransactionsBundle_closure1.prototype = {
    call$1(e) {
      return A.SetExtensions_removeFirstWhere(type$.Set_String._as(e), new A.WalletTasks_signTransactionsBundle__closure2(this.wallet), type$.String);
    },
    $signature: 15
  };
  A.WalletTasks_signTransactionsBundle__closure2.prototype = {
    call$1(element) {
      return B.JSString_methods.contains$1(A._asString(element), this.wallet.stakeAddress.get$credentials());
    },
    $signature: 63
  };
  A.WalletTasks_signTransactionsBundle_closure2.prototype = {
    call$1(e) {
      return A.SetExtensions_removeFirstWhere(type$.Set_String._as(e), new A.WalletTasks_signTransactionsBundle__closure1(this.wallet), type$.String);
    },
    $signature: 15
  };
  A.WalletTasks_signTransactionsBundle__closure1.prototype = {
    call$1(element) {
      return B.JSString_methods.contains$1(A._asString(element), this.wallet.stakeAddress.get$credentials());
    },
    $signature: 63
  };
  A.WalletTasks_signTransactionsBundle_closure3.prototype = {
    call$1(e) {
      return type$.TxPreparedForSigning._as(e).tx;
    },
    $signature: 14
  };
  A.WalletTasks_signTransactionsBundle_closure4.prototype = {
    call$1(tx) {
      return A.ListCertsX_requiresStakeSignature(type$.CardanoTransaction._as(tx).body.get$certs(), this.wallet.stakeAddress.get$credentialsBytes());
    },
    $signature: 13
  };
  A.WalletTasks_signTransactionsBundle_closure5.prototype = {
    call$1(e) {
      return type$.TxPreparedForSigning._as(e).tx;
    },
    $signature: 14
  };
  A.WalletTasks_signTransactionsBundle_closure6.prototype = {
    call$1(tx) {
      return A.ListCertsX_requiresCommitteeColdSignature(type$.CardanoTransaction._as(tx).body.get$certs(), this.wallet.get$constitutionalCommiteeCold().get$value().get$credentialsBytes());
    },
    $signature: 13
  };
  A.WalletTasks_signTransactionsBundle_closure7.prototype = {
    call$1(e) {
      return type$.TxPreparedForSigning._as(e).tx;
    },
    $signature: 14
  };
  A.WalletTasks_signTransactionsBundle_closure8.prototype = {
    call$1(tx) {
      var t1 = type$.CardanoTransaction._as(tx).body,
        t2 = t1.get$certs(),
        t3 = this.wallet.get$drepId();
      return A.ListCertsX_requiresDrepSignature(t2, t3.get$value().get$_credentialsBytes().get$value()) || A.VotingProceduresX_requiresDrepSignature(t1.votingProcedures, t3.get$value().get$_credentialsBytes().get$value());
    },
    $signature: 13
  };
  A.WalletTasks_signTransactionsBundle_closure9.prototype = {
    call$1(e) {
      return type$.TxPreparedForSigning._as(e).tx;
    },
    $signature: 14
  };
  A.WalletTasks_signTransactionsBundle_closure10.prototype = {
    call$1(tx) {
      return A.VotingProceduresX_requiresCommitteeHotSignature(type$.CardanoTransaction._as(tx).body.votingProcedures, this.wallet.get$constitutionalCommiteeHot().get$value().get$credentialsBytes());
    },
    $signature: 13
  };
  A.WalletTasks_signTransactionsBundle_closure11.prototype = {
    call$1(e) {
      return type$.TxPreparedForSigning._as(e).tx;
    },
    $signature: 14
  };
  A.WalletTasks_signTransactionsBundle_closure12.prototype = {
    call$1(tx) {
      var t1 = type$.CardanoTransaction._as(tx).body.get$withdrawals();
      t1 = t1 == null ? null : J.any$1$ax(t1, new A.WalletTasks_signTransactionsBundle__closure0(this.wallet));
      return t1 === true;
    },
    $signature: 13
  };
  A.WalletTasks_signTransactionsBundle__closure0.prototype = {
    call$1(element) {
      var t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(A.Bech32Encoder_decodeNoHrpCheck(type$.Withdraw._as(element).stakeAddressBech32, 256), false));
      return B.JSString_methods.endsWith$1(B.C_HexCodec.get$encoder().convert$1(t1), this.wallet.stakeAddress.get$credentials());
    },
    $signature: 42
  };
  A.WalletTasks_signTransactionsBundle_closure13.prototype = {
    call$1(worker) {
      return type$.WalletTasksWorker._as(worker).deriveAddressKit$4(this.wallet.hdWallet, this.networkId, this.i, B.Bip32KeyRole_0_0_payment);
    },
    $signature: 66
  };
  A.WalletTasks_signTransactionsBundle_closure14.prototype = {
    call$1(worker) {
      return type$.WalletTasksWorker._as(worker).deriveAddressKit$4(this.wallet.hdWallet, this.networkId, this.i, B.Bip32KeyRole_1_1_change);
    },
    $signature: 66
  };
  A.WalletTasks_signTransactionsBundle_closure15.prototype = {
    call$2(index, e) {
      var t1, _this = this;
      type$.Set_String._as(e);
      if (e.remove$1(0, _this.bech32PaymentCredsForIndex)) {
        t1 = _this.signAddressesAll;
        if (!(index < t1.length))
          return A.ioore(t1, index);
        t1[index].add$1(0, _this.paymentAddrForIndex);
      }
      if (e.remove$1(0, _this.bech32ChangeCredsForIndex)) {
        t1 = _this.signAddressesAll;
        if (!(index < t1.length))
          return A.ioore(t1, index);
        t1[index].add$1(0, _this.changeAddrForIndex);
      }
    },
    $signature: 36
  };
  A.WalletTasks_signTransactionsBundle_closure16.prototype = {
    call$2(index, e) {
      var t1, _this = this;
      type$.Set_String._as(e);
      if (e.remove$1(0, _this.bech32PaymentCredsForIndex)) {
        t1 = _this.signAddressesAll;
        if (!(index < t1.length))
          return A.ioore(t1, index);
        t1[index].add$1(0, _this.paymentAddrForIndex);
      }
      if (e.remove$1(0, _this.bech32ChangeCredsForIndex)) {
        t1 = _this.signAddressesAll;
        if (!(index < t1.length))
          return A.ioore(t1, index);
        t1[index].add$1(0, _this.changeAddrForIndex);
      }
    },
    $signature: 36
  };
  A.WalletTasks_signTransactionsBundle_closure17.prototype = {
    call$2(index, e) {
      var t1, t2, _this = this;
      type$.Set_String._as(e);
      t1 = type$.String;
      if (A.SetExtensions_removeFirstWhere(e, B.JSString_methods.get$contains(_this.hexPaymentAddrForIndex), t1)) {
        t2 = _this.signAddressesAll;
        if (!(index < t2.length))
          return A.ioore(t2, index);
        t2[index].add$1(0, _this.paymentAddrForIndex);
      }
      if (A.SetExtensions_removeFirstWhere(e, B.JSString_methods.get$contains(_this.hexChangeAddrForIndex), t1)) {
        t1 = _this.signAddressesAll;
        if (!(index < t1.length))
          return A.ioore(t1, index);
        t1[index].add$1(0, _this.changeAddrForIndex);
      }
    },
    $signature: 36
  };
  A.WalletTasks_signTransactionsBundle_closure18.prototype = {
    call$1(e) {
      type$.Set_String._as(e);
      return e.get$isEmpty(e);
    },
    $signature: 15
  };
  A.WalletTasks_signTransactionsBundle_closure19.prototype = {
    call$1(e) {
      type$.Set_String._as(e);
      return e.get$isEmpty(e);
    },
    $signature: 15
  };
  A.WalletTasks_signTransactionsBundle_closure20.prototype = {
    call$1(e) {
      type$.Set_String._as(e);
      return e.get$isEmpty(e);
    },
    $signature: 15
  };
  A.WalletTasks_signTransactionsBundle_closure21.prototype = {
    call$2(index, needsStakeAddrSigning) {
      var t1;
      if (A._asBool(needsStakeAddrSigning)) {
        t1 = this.signAddressesAll;
        if (!(index < t1.length))
          return A.ioore(t1, index);
        t1[index].add$1(0, this.hdWallet.get$stakeKeys().get$value());
      }
    },
    $signature: 22
  };
  A.WalletTasks_signTransactionsBundle_closure22.prototype = {
    call$2(index, needsCommitteeColdSigning) {
      var t1;
      if (A._asBool(needsCommitteeColdSigning)) {
        t1 = this.signAddressesAll;
        if (!(index < t1.length))
          return A.ioore(t1, index);
        t1[index].add$1(0, this.hdWallet.get$constitutionalCommitteeColdKeys().get$value());
      }
    },
    $signature: 22
  };
  A.WalletTasks_signTransactionsBundle_closure23.prototype = {
    call$2(index, needsCommitteeHotSigning) {
      var t1;
      if (A._asBool(needsCommitteeHotSigning)) {
        t1 = this.signAddressesAll;
        if (!(index < t1.length))
          return A.ioore(t1, index);
        t1[index].add$1(0, this.hdWallet.get$constitutionalCommitteeHotKeys().get$value());
      }
    },
    $signature: 22
  };
  A.WalletTasks_signTransactionsBundle_closure24.prototype = {
    call$2(index, needsDRepIdSigning) {
      var t1;
      if (A._asBool(needsDRepIdSigning)) {
        t1 = this.signAddressesAll;
        if (!(index < t1.length))
          return A.ioore(t1, index);
        t1[index].add$1(0, this.hdWallet.get$drepCredentialKeys().get$value());
      }
    },
    $signature: 22
  };
  A.WalletTasks_signTransactionsBundle_closure25.prototype = {
    call$2(index, e) {
      var tx, t1, bodyHash, t2, t3, _null = null;
      type$.TxPreparedForSigning._as(e);
      tx = e.tx;
      t1 = type$.HexCodec._eval$1("Codec.T")._as(tx.body.blake2bHash256Hex$0());
      bodyHash = new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(t1)));
      t1 = this.signAddressesAll;
      if (!(index < t1.length))
        return A.ioore(t1, index);
      t1 = t1[index];
      t2 = A._instanceType(t1);
      t3 = t2._eval$1("EfficientLengthMappedIterable<1,WitnessVKey>");
      t1 = A.List_List$_of(new A.EfficientLengthMappedIterable(t1, t2._eval$1("WitnessVKey(1)")._as(new A.WalletTasks_signTransactionsBundle__closure(bodyHash)), t3), t3._eval$1("Iterable.E"));
      return new A._TxAndSignature(tx, e.txDiff, e.utxosBeforeTx, e.get$signingAddressesRequired(), new A._WitnessSet(new A._ListWithCborType(t1, B.CborLengthType_2, _null, type$._ListWithCborType_WitnessVKey), _null, _null, _null, _null, _null, _null, _null, _null));
    },
    $signature: 174
  };
  A.WalletTasks_signTransactionsBundle__closure.prototype = {
    call$1(signAddr) {
      var signedMessage, t1, t2, t3;
      type$.Bip32KeyPair._as(signAddr);
      signedMessage = signAddr.signingKey.sign$1(0, this.bodyHash);
      t1 = signAddr.verifyKey;
      t2 = type$.int;
      t3 = A.SubListIterable$(t1, 0, A.checkNotNullable(t1.get$prefixLength(), "count", t2), A._instanceType(t1)._eval$1("ListBase.E"));
      t1 = t1.get$prefixLength();
      t1 = new Uint8Array(A._ensureNativeList(new A.ByteList(A.ByteList__constructList(t3, t1, t1))));
      t2 = A.SubListIterable$(signedMessage, 0, A.checkNotNullable(signedMessage.get$prefixLength(), "count", t2), A._instanceType(signedMessage)._eval$1("ListBase.E"));
      t3 = signedMessage.get$prefixLength();
      return new A._WitnessVKey(t1, new Uint8Array(A._ensureNativeList(new A.Signature(A.ByteList__constructList(A.ByteList__constructList(t2, t3, t3), 64, 64)))));
    },
    $signature: 175
  };
  A.WalletTasks_signData_dataFromAddress.prototype = {
    call$1(requestedSigningAddress) {
      var t1, _this = this,
        _0_0 = requestedSigningAddress.get$addressType();
      $label0$0: {
        if (B.AddressType_3 === _0_0) {
          t1 = new A.WalletTasks_signData_dataFromAddress_closure(requestedSigningAddress, _this.wallet, _this.hdWallet).call$0();
          break $label0$0;
        }
        if (B.AddressType_0 === _0_0) {
          t1 = new A.WalletTasks_signData_dataFromAddress_closure0(_this.deriveMaxAddressCount, _this.hdWallet, _this.networkId, requestedSigningAddress).call$0();
          break $label0$0;
        }
        t1 = B.AddressType_1 === _0_0 || B.AddressType_2 === _0_0 || B.AddressType_4 === _0_0 ? A.throwExpression(A.UnexpectedSigningAddressTypeException$(_this.requestedSignerRaw, "When signing payload message", _0_0)) : null;
      }
      return new A._Record_3_keyId_requestedSigningAddressBytes_signingKeyPair(null, requestedSigningAddress.get$bytes(), t1);
    },
    $signature: 176
  };
  A.WalletTasks_signData_dataFromAddress_closure.prototype = {
    call$0() {
      var t1 = this.requestedSigningAddress;
      if (t1.get$hexEncoded() === this.wallet.stakeAddress.get$hexEncoded())
        return this.hdWallet.get$stakeKeys().get$value();
      else
        throw A.wrapException(A.SigningAddressNotFoundException$(A.LinkedHashSet_LinkedHashSet$_literal([t1.get$bech32Encoded()], type$.String), 1));
    },
    $signature: 3
  };
  A.WalletTasks_signData_dataFromAddress_closure0.prototype = {
    call$0() {
      var t1, t2, t3, t4, i, paymentAddrForIndex, changeAddrForIndex, _this = this;
      for (t1 = _this.deriveMaxAddressCount, t2 = _this.requestedSigningAddress, t3 = _this.hdWallet, t4 = _this.networkId, i = 0; i < t1; ++i) {
        paymentAddrForIndex = t3.deriveBaseAddressKit$3$index$networkId$role(i, t4, B.Bip32KeyRole_0_0_payment);
        changeAddrForIndex = t3.deriveBaseAddressKit$3$index$networkId$role(i, t4, B.Bip32KeyRole_1_1_change);
        if (paymentAddrForIndex.address.$eq(0, t2))
          return paymentAddrForIndex;
        else if (changeAddrForIndex.address.$eq(0, t2))
          return changeAddrForIndex;
      }
      throw A.wrapException(A.SigningAddressNotFoundException$(A.LinkedHashSet_LinkedHashSet$_literal([t2.get$bech32Encoded()], type$.String), t1));
    },
    $signature: 177
  };
  A.WalletTasks_signData_dataFromDrepIdOrCreds.prototype = {
    call$1(drepIdOrCredsHex) {
      var signingKeyPair, t2,
        t1 = this.wallet.get$drepId();
      if (!B.JSString_methods.endsWith$1(drepIdOrCredsHex, t1.get$value().get$_credentialsHex().get$value()))
        throw A.wrapException(A.SigningAddressNotFoundException$(A.LinkedHashSet_LinkedHashSet$_literal([this.requestedSignerRaw], type$.String), 1));
      signingKeyPair = this.hdWallet.get$drepCredentialKeys().get$value();
      t1 = t1.get$value().get$_credentialsBytes().get$value();
      t2 = t1.length;
      return new A._Record_3_keyId_requestedSigningAddressBytes_signingKeyPair(null, new A.ByteList(A.ByteList__constructList(t1, t2, t2)), signingKeyPair);
    },
    $signature: 178
  };
  A.WalletTasks_signData_closure.prototype = {
    call$0() {
      var t1 = type$.HexCodec._eval$1("Codec.T")._as(this.requestedSignerHex),
        requestedSignerBytes = new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(t1)));
      if (0 >= requestedSignerBytes.length)
        return A.ioore(requestedSignerBytes, 0);
      return (requestedSignerBytes[0] & 15) > 1 ? this.dataFromDrepIdOrCreds.call$1(t1) : this.dataFromAddress.call$1(A.CardanoAddress_CardanoAddress(new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(t1)))));
    },
    $signature: 179
  };
  A._credsFromNativeScripts_closure.prototype = {
    call$1(e) {
      var t1;
      type$.NativeScript._as(e);
      $label0$0: {
        if (e instanceof A.NativeScript_PubKey) {
          t1 = type$.HexCodec._eval$1("Codec.S")._as(B.NativeUint8List_methods.toList$1$growable(e.blob, false));
          t1 = A._setArrayType([B.C_HexCodec.get$encoder().convert$1(t1)], type$.JSArray_String);
          break $label0$0;
        }
        if (e instanceof A.NativeScript_All) {
          t1 = A._credsFromNativeScripts(e.get$scripts());
          break $label0$0;
        }
        if (e instanceof A.NativeScript_Any) {
          t1 = A._credsFromNativeScripts(e.get$scripts());
          break $label0$0;
        }
        if (e instanceof A.NativeScript_AtLeast) {
          t1 = A._credsFromNativeScripts(e.get$scripts());
          break $label0$0;
        }
        if (e instanceof A.NativeScript_RequireTimeAfter) {
          t1 = B.List_empty2;
          break $label0$0;
        }
        if (e instanceof A.NativeScript_RequireTimeBefore) {
          t1 = B.List_empty2;
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    },
    $signature: 180
  };
  A.ListCertsX_requiresDrepSignature_closure.prototype = {
    call$1(cert) {
      var t1;
      type$.Certificate._as(cert);
      $label0$0: {
        t1 = false;
        if (cert instanceof A.Certificate_StakeRegistrationLegacy)
          break $label0$0;
        if (cert instanceof A.Certificate_StakeDeRegistrationLegacy)
          break $label0$0;
        if (cert instanceof A.Certificate_StakeDelegation)
          break $label0$0;
        if (cert instanceof A.Certificate_PoolRegistration)
          break $label0$0;
        if (cert instanceof A.Certificate_PoolRetirement)
          break $label0$0;
        if (cert instanceof A.Certificate_StakeRegistration)
          break $label0$0;
        if (cert instanceof A.Certificate_StakeDeRegistration)
          break $label0$0;
        if (cert instanceof A.Certificate_VoteDelegation)
          break $label0$0;
        if (cert instanceof A.Certificate_StakeVoteDelegation)
          break $label0$0;
        if (cert instanceof A.Certificate_StakeRegistrationDelegation)
          break $label0$0;
        if (cert instanceof A.Certificate_VoteRegistrationDelegation)
          break $label0$0;
        if (cert instanceof A.Certificate_StakeVoteRegistrationDelegation)
          break $label0$0;
        if (cert instanceof A.Certificate_AuthorizeCommitteeHot)
          break $label0$0;
        if (cert instanceof A.Certificate_ResignCommitteeCold)
          break $label0$0;
        if (cert instanceof A.Certificate_RegisterDRep) {
          t1 = B.ListEquality_DefaultEquality.equals$2(cert.dRepCredential.vKeyHash, this.walletDRepCredentials);
          break $label0$0;
        }
        if (cert instanceof A.Certificate_UnregisterDRep) {
          t1 = B.ListEquality_DefaultEquality.equals$2(cert.dRepCredential.vKeyHash, this.walletDRepCredentials);
          break $label0$0;
        }
        if (cert instanceof A.Certificate_UpdateDRep) {
          t1 = B.ListEquality_DefaultEquality.equals$2(cert.dRepCredential.vKeyHash, this.walletDRepCredentials);
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    },
    $signature: 17
  };
  A.ListCertsX_requiresStakeSignature_closure.prototype = {
    call$1(cert) {
      var t1, _this = this;
      type$.Certificate._as(cert);
      $label0$0: {
        t1 = false;
        if (cert instanceof A.Certificate_StakeRegistrationLegacy) {
          t1 = B.ListEquality_DefaultEquality.equals$2(cert.stakeCredential.vKeyHash, _this.walletStakeCredentials);
          break $label0$0;
        }
        if (cert instanceof A.Certificate_StakeDeRegistrationLegacy) {
          t1 = B.ListEquality_DefaultEquality.equals$2(cert.stakeCredential.vKeyHash, _this.walletStakeCredentials);
          break $label0$0;
        }
        if (cert instanceof A.Certificate_StakeDelegation) {
          t1 = B.ListEquality_DefaultEquality.equals$2(cert.stakeCredential.vKeyHash, _this.walletStakeCredentials);
          break $label0$0;
        }
        if (cert instanceof A.Certificate_PoolRegistration)
          break $label0$0;
        if (cert instanceof A.Certificate_PoolRetirement)
          break $label0$0;
        if (cert instanceof A.Certificate_StakeRegistration) {
          t1 = B.ListEquality_DefaultEquality.equals$2(cert.stakeCredential.vKeyHash, _this.walletStakeCredentials);
          break $label0$0;
        }
        if (cert instanceof A.Certificate_StakeDeRegistration) {
          t1 = B.ListEquality_DefaultEquality.equals$2(cert.stakeCredential.vKeyHash, _this.walletStakeCredentials);
          break $label0$0;
        }
        if (cert instanceof A.Certificate_VoteDelegation) {
          t1 = B.ListEquality_DefaultEquality.equals$2(cert.stakeCredential.vKeyHash, _this.walletStakeCredentials);
          break $label0$0;
        }
        if (cert instanceof A.Certificate_StakeVoteDelegation) {
          t1 = B.ListEquality_DefaultEquality.equals$2(cert.stakeCredential.vKeyHash, _this.walletStakeCredentials);
          break $label0$0;
        }
        if (cert instanceof A.Certificate_StakeRegistrationDelegation) {
          t1 = B.ListEquality_DefaultEquality.equals$2(cert.stakeCredential.vKeyHash, _this.walletStakeCredentials);
          break $label0$0;
        }
        if (cert instanceof A.Certificate_VoteRegistrationDelegation) {
          t1 = B.ListEquality_DefaultEquality.equals$2(cert.stakeCredential.vKeyHash, _this.walletStakeCredentials);
          break $label0$0;
        }
        if (cert instanceof A.Certificate_StakeVoteRegistrationDelegation) {
          t1 = B.ListEquality_DefaultEquality.equals$2(cert.stakeCredential.vKeyHash, _this.walletStakeCredentials);
          break $label0$0;
        }
        if (cert instanceof A.Certificate_AuthorizeCommitteeHot)
          break $label0$0;
        if (cert instanceof A.Certificate_ResignCommitteeCold)
          break $label0$0;
        if (cert instanceof A.Certificate_RegisterDRep)
          break $label0$0;
        if (cert instanceof A.Certificate_UnregisterDRep)
          break $label0$0;
        if (cert instanceof A.Certificate_UpdateDRep)
          break $label0$0;
        t1 = null;
      }
      return t1;
    },
    $signature: 17
  };
  A.ListCertsX_requiresCommitteeColdSignature_closure.prototype = {
    call$1(cert) {
      var t1;
      type$.Certificate._as(cert);
      $label0$0: {
        t1 = false;
        if (cert instanceof A.Certificate_AuthorizeCommitteeHot) {
          t1 = B.ListEquality_DefaultEquality.equals$2(cert.committeeColdCredential.vKeyHash, this.walletCommitteeColdCredentials);
          break $label0$0;
        }
        if (cert instanceof A.Certificate_ResignCommitteeCold) {
          t1 = B.ListEquality_DefaultEquality.equals$2(cert.committeeColdCredential.vKeyHash, this.walletCommitteeColdCredentials);
          break $label0$0;
        }
        if (cert instanceof A.Certificate_StakeRegistrationLegacy)
          break $label0$0;
        if (cert instanceof A.Certificate_StakeDeRegistrationLegacy)
          break $label0$0;
        if (cert instanceof A.Certificate_StakeDelegation)
          break $label0$0;
        if (cert instanceof A.Certificate_PoolRegistration)
          break $label0$0;
        if (cert instanceof A.Certificate_PoolRetirement)
          break $label0$0;
        if (cert instanceof A.Certificate_StakeRegistration)
          break $label0$0;
        if (cert instanceof A.Certificate_StakeDeRegistration)
          break $label0$0;
        if (cert instanceof A.Certificate_VoteDelegation)
          break $label0$0;
        if (cert instanceof A.Certificate_StakeVoteDelegation)
          break $label0$0;
        if (cert instanceof A.Certificate_StakeRegistrationDelegation)
          break $label0$0;
        if (cert instanceof A.Certificate_VoteRegistrationDelegation)
          break $label0$0;
        if (cert instanceof A.Certificate_StakeVoteRegistrationDelegation)
          break $label0$0;
        if (cert instanceof A.Certificate_RegisterDRep)
          break $label0$0;
        if (cert instanceof A.Certificate_UnregisterDRep)
          break $label0$0;
        if (cert instanceof A.Certificate_UpdateDRep)
          break $label0$0;
        t1 = null;
      }
      return t1;
    },
    $signature: 17
  };
  A.VotingProceduresX_requiresDrepSignature_closure.prototype = {
    call$1(voter) {
      return B.ListEquality_DefaultEquality.equals$2(type$.Voter._as(voter).vKeyHash, this.walletDRepCredentials);
    },
    $signature: 69
  };
  A.VotingProceduresX_requiresCommitteeHotSignature_closure.prototype = {
    call$1(voter) {
      return B.ListEquality_DefaultEquality.equals$2(type$.Voter._as(voter).vKeyHash, this.walletCommitteeHotCredentials);
    },
    $signature: 69
  };
  A._extension_3__$getOperations_closure.prototype = {
    call$1($$req) {
      return this.$call$body$_extension_3__$getOperations_closure11($$req);
    },
    $call$body$_extension_3__$getOperations_closure11($$req) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, $$dsr, $$sr, t1, t2, $$res;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $$res = null;
              $async$handler = 3;
              $$dsr = A._$Deser$(true);
              t1 = J.getInterceptor$asx($$req);
              t2 = type$.List_dynamic;
              $async$goto = 6;
              return A._asyncAwait($async$self._this.buildHdWalletFromMnemonic$2($$dsr.$$0$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 0)), $$dsr.$$1$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 1))), $async$call$1);
            case 6:
              // returning from await.
              $$res = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              try {
                $$sr = A._$Ser$(true);
                t1 = $$sr.$$0$1($$res);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } finally {
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 4
  };
  A._extension_3__$getOperations_closure0.prototype = {
    call$1($$req) {
      return this.$call$body$_extension_3__$getOperations_closure10($$req);
    },
    $call$body$_extension_3__$getOperations_closure10($$req) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, $$dsr, $$sr, t1, t2, $$res;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $$res = null;
              $async$handler = 3;
              $$dsr = A._$Deser$(false);
              t1 = J.getInterceptor$asx($$req);
              t2 = type$.List_dynamic;
              $async$goto = 6;
              return A._asyncAwait($async$self._this.buildHdWalletFromSeed$2($$dsr.$$2$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 0)), $$dsr.$$1$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 1))), $async$call$1);
            case 6:
              // returning from await.
              $$res = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              try {
                $$sr = A._$Ser$(true);
                t1 = $$sr.$$0$1($$res);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } finally {
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 4
  };
  A._extension_3__$getOperations_closure1.prototype = {
    call$1($$req) {
      return this.$call$body$_extension_3__$getOperations_closure9($$req);
    },
    $call$body$_extension_3__$getOperations_closure9($$req) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, $$dsr, $$sr, t1, t2, $$res;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $$res = null;
              $async$handler = 3;
              $$dsr = A._$Deser$(true);
              t1 = J.getInterceptor$asx($$req);
              t2 = type$.List_dynamic;
              $async$goto = 6;
              return A._asyncAwait($async$self._this.buildWalletFromHdWallet$2($$dsr.$$3$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 0)), $$dsr.$$4$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 1))), $async$call$1);
            case 6:
              // returning from await.
              $$res = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              try {
                $$sr = A._$Ser$(true);
                t1 = $$sr.$$1$1($$res);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } finally {
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 4
  };
  A._extension_3__$getOperations_closure2.prototype = {
    call$1($$req) {
      return this.$call$body$_extension_3__$getOperations_closure8($$req);
    },
    $call$body$_extension_3__$getOperations_closure8($$req) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, $$dsr, $$sr, t1, t2, $$res;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $$res = null;
              $async$handler = 3;
              $$dsr = A._$Deser$(true);
              t1 = J.getInterceptor$asx($$req);
              t2 = type$.List_dynamic;
              $async$goto = 6;
              return A._asyncAwait($async$self._this.ckdPubBip32Ed25519KeyDerivation$2($$dsr.$$5$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 0)), $$dsr.$$1$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 1))), $async$call$1);
            case 6:
              // returning from await.
              $$res = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              try {
                $$sr = A._$Ser$(true);
                t1 = $$sr.$$2$1($$res);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } finally {
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 4
  };
  A._extension_3__$getOperations_closure3.prototype = {
    call$1($$req) {
      return this.$call$body$_extension_3__$getOperations_closure7($$req);
    },
    $call$body$_extension_3__$getOperations_closure7($$req) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, $$dsr, $$sr, t1, t2, $$res;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $$res = null;
              $async$handler = 3;
              $$dsr = A._$Deser$(true);
              t1 = J.getInterceptor$asx($$req);
              t2 = type$.List_dynamic;
              $async$goto = 6;
              return A._asyncAwait($async$self._this.ckdPubBip32Ed25519KeyDerivations$3($$dsr.$$5$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 0)), $$dsr.$$1$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 1)), $$dsr.$$1$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 2))), $async$call$1);
            case 6:
              // returning from await.
              $$res = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              try {
                $$sr = A._$Ser$(true);
                t1 = $$sr.$$3$1($$res);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } finally {
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 4
  };
  A._extension_3__$getOperations_closure4.prototype = {
    call$1($$req) {
      return this.$call$body$_extension_3__$getOperations_closure6($$req);
    },
    $call$body$_extension_3__$getOperations_closure6($$req) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, $$dsr, $$sr, t1, t2, $$res;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $$res = null;
              $async$handler = 3;
              $$dsr = A._$Deser$(true);
              t1 = J.getInterceptor$asx($$req);
              t2 = type$.List_dynamic;
              $async$goto = 6;
              return A._asyncAwait($async$self._this.deriveAddressKit$4($$dsr.$$3$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 0)), $$dsr.$$4$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 1)), $$dsr.$$1$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 2)), $$dsr.$$6$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 3))), $async$call$1);
            case 6:
              // returning from await.
              $$res = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              try {
                $$sr = A._$Ser$(true);
                t1 = $$sr.$$4$1($$res);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } finally {
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 4
  };
  A._extension_3__$getOperations_closure5.prototype = {
    call$1($$req) {
      return this.$call$body$_extension_3__$getOperations_closure5($$req);
    },
    $call$body$_extension_3__$getOperations_closure5($$req) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, $$dsr, $$sr, t1, t2, $$res;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $$res = null;
              $async$handler = 3;
              $$dsr = A._$Deser$(false);
              t1 = J.getInterceptor$asx($$req);
              t2 = type$.List_dynamic;
              $async$goto = 6;
              return A._asyncAwait($async$self._this.findCardanoSigningPath$3($$dsr.$$7$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 0)), $$dsr.$$7$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 1)), $$dsr.$$1$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 2))), $async$call$1);
            case 6:
              // returning from await.
              $$res = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              try {
                $$sr = A._$Ser$(true);
                t1 = $$sr.$$5$1($$res);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } finally {
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 4
  };
  A._extension_3__$getOperations_closure6.prototype = {
    call$1($$req) {
      return this.$call$body$_extension_3__$getOperations_closure4($$req);
    },
    $call$body$_extension_3__$getOperations_closure4($$req) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, $$dsr, $$sr, t1, t2, $$res;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $$res = null;
              $async$handler = 3;
              $$dsr = A._$Deser$(true);
              t1 = J.getInterceptor$asx($$req);
              t2 = type$.List_dynamic;
              $async$goto = 6;
              return A._asyncAwait($async$self._this.hexCredentialsDerivation$3($$dsr.$$5$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 0)), $$dsr.$$1$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 1)), $$dsr.$$1$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 2))), $async$call$1);
            case 6:
              // returning from await.
              $$res = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              try {
                $$sr = A._$Ser$(true);
                t1 = $$sr.$$6$1($$res);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } finally {
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 4
  };
  A._extension_3__$getOperations_closure7.prototype = {
    call$1($$req) {
      return this.$call$body$_extension_3__$getOperations_closure3($$req);
    },
    $call$body$_extension_3__$getOperations_closure3($$req) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, $$dsr, $$sr, t1, t2, $$res;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $$res = null;
              $async$handler = 3;
              $$dsr = A._$Deser$(true);
              t1 = J.getInterceptor$asx($$req);
              t2 = type$.List_dynamic;
              $async$goto = 6;
              return A._asyncAwait($async$self._this.prepareTxsForSigningImpl$7($$dsr.$$7$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 0)), $$dsr.$$7$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 1)), $$dsr.$$7$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 2)), $$dsr.$$7$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 3)), $$dsr.$$4$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 4)), $$dsr.$$8$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 5)), $$dsr.$$9$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 6))), $async$call$1);
            case 6:
              // returning from await.
              $$res = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              try {
                $$sr = A._$Ser$(true);
                t1 = $$sr.$$7$1($$res);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } finally {
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 4
  };
  A._extension_3__$getOperations_closure8.prototype = {
    call$1($$req) {
      return this.$call$body$_extension_3__$getOperations_closure2($$req);
    },
    $call$body$_extension_3__$getOperations_closure2($$req) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, $$dsr, $$sr, t1, t2, $$res;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $$res = null;
              $async$handler = 3;
              $$dsr = A._$Deser$(true);
              t1 = J.getInterceptor$asx($$req);
              t2 = type$.List_dynamic;
              $async$goto = 6;
              return A._asyncAwait($async$self._this.signData$4($$dsr.$$10$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 0)), $$dsr.$$7$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 1)), $$dsr.$$7$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 2)), $$dsr.$$1$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 3))), $async$call$1);
            case 6:
              // returning from await.
              $$res = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              try {
                $$sr = A._$Ser$(true);
                t1 = $$sr.$$8$1($$res);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } finally {
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 4
  };
  A._extension_3__$getOperations_closure9.prototype = {
    call$1($$req) {
      return this.$call$body$_extension_3__$getOperations_closure1($$req);
    },
    $call$body$_extension_3__$getOperations_closure1($$req) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, $$dsr, $$sr, t1, t2, $$res;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $$res = null;
              $async$handler = 3;
              $$dsr = A._$Deser$(true);
              t1 = J.getInterceptor$asx($$req);
              t2 = type$.List_dynamic;
              $async$goto = 6;
              return A._asyncAwait($async$self._this.signTransactionsBundle$3($$dsr.$$10$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 0)), $$dsr.$$11$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 1)), $$dsr.$$1$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 2))), $async$call$1);
            case 6:
              // returning from await.
              $$res = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              try {
                $$sr = A._$Ser$(true);
                t1 = $$sr.$$9$1($$res);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } finally {
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 4
  };
  A._extension_3__$getOperations_closure10.prototype = {
    call$1($$req) {
      return this.$call$body$_extension_3__$getOperations_closure0($$req);
    },
    $call$body$_extension_3__$getOperations_closure0($$req) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, $$dsr, $$sr, t1, t2, $$res;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $$res = null;
              $async$handler = 3;
              $$dsr = A._$Deser$(true);
              t1 = J.getInterceptor$asx($$req);
              t2 = type$.List_dynamic;
              $async$goto = 6;
              return A._asyncAwait($async$self._this.toCardanoBaseAddress$5$paymentType$stakeType($$dsr.$$5$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 0)), $$dsr.$$5$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 1)), $$dsr.$$4$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 2)), $$dsr.$$12$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 3)), $$dsr.$$12$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 4))), $async$call$1);
            case 6:
              // returning from await.
              $$res = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              try {
                $$sr = A._$Ser$(true);
                t1 = $$sr.$$10$1($$res);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } finally {
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 71
  };
  A._extension_3__$getOperations_closure11.prototype = {
    call$1($$req) {
      return this.$call$body$_extension_3__$getOperations_closure($$req);
    },
    $call$body$_extension_3__$getOperations_closure($$req) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, $$dsr, $$sr, t1, t2, $$res;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $$res = null;
              $async$handler = 3;
              $$dsr = A._$Deser$(true);
              t1 = J.getInterceptor$asx($$req);
              t2 = type$.List_dynamic;
              $async$goto = 6;
              return A._asyncAwait($async$self._this.toCardanoRewardAddress$3$paymentType($$dsr.$$5$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 0)), $$dsr.$$4$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 1)), $$dsr.$$12$1(J.$index$asx(t2._as(t1.$index($$req, 3)), 2))), $async$call$1);
            case 6:
              // returning from await.
              $$res = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              try {
                $$sr = A._$Ser$(true);
                t1 = $$sr.$$10$1($$res);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } finally {
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 71
  };
  A._$WalletTasks$Invoker.prototype = {
    ckdPubBip32Ed25519KeyDerivation$2(pubKey, index) {
      return this.ckdPubBip32Ed25519KeyDerivation$body$_$WalletTasks$Invoker(pubKey, index);
    },
    ckdPubBip32Ed25519KeyDerivation$body$_$WalletTasks$Invoker(pubKey, index) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Bip32PublicKey),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, $$sr, $$dsr, t1, $$res;
      var $async$ckdPubBip32Ed25519KeyDerivation$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $$res = null;
              $async$handler = 3;
              $$sr = A._$Ser$(true);
              $async$goto = 6;
              return A._asyncAwait($async$self.send$2$args(4, [$$sr.$$2$1(pubKey), index]), $async$ckdPubBip32Ed25519KeyDerivation$2);
            case 6:
              // returning from await.
              $$res = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              try {
                $$dsr = A._$Deser$(true);
                t1 = $$dsr.$$5$1($$res);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } finally {
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$ckdPubBip32Ed25519KeyDerivation$2, $async$completer);
    },
    deriveAddressKit$4(wallet, networkId, index, role) {
      return this.deriveAddressKit$body$_$WalletTasks$Invoker(wallet, networkId, index, role);
    },
    deriveAddressKit$body$_$WalletTasks$Invoker(wallet, networkId, index, role) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.CardanoAddressKit),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, $$sr, $$dsr, t1, $$res;
      var $async$deriveAddressKit$4 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $$res = null;
              $async$handler = 3;
              $$sr = A._$Ser$(true);
              $async$goto = 6;
              return A._asyncAwait($async$self.send$2$args(6, [$$sr.$$0$1(wallet), $$sr.$$11$1(networkId), index, $$sr.$$12$1(role)]), $async$deriveAddressKit$4);
            case 6:
              // returning from await.
              $$res = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              try {
                $$dsr = A._$Deser$(true);
                t1 = $$dsr.$$14$1($$res);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } finally {
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$deriveAddressKit$4, $async$completer);
    },
    toCardanoBaseAddress$5$paymentType$stakeType(spend, stake, networkId, paymentType, stakeType) {
      return this.toCardanoBaseAddress$body$_$WalletTasks$Invoker(spend, stake, networkId, paymentType, stakeType);
    },
    toCardanoBaseAddress$body$_$WalletTasks$Invoker(spend, stake, networkId, paymentType, stakeType) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.CardanoAddress),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, $$sr, $$dsr, t1, $$res;
      var $async$toCardanoBaseAddress$5$paymentType$stakeType = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $$res = null;
              $async$handler = 3;
              $$sr = A._$Ser$(true);
              $async$goto = 6;
              return A._asyncAwait($async$self.send$2$args(12, [$$sr.$$2$1(spend), $$sr.$$2$1(stake), $$sr.$$11$1(networkId), $$sr.$$15$1(paymentType), $$sr.$$15$1(stakeType)]), $async$toCardanoBaseAddress$5$paymentType$stakeType);
            case 6:
              // returning from await.
              $$res = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              try {
                $$dsr = A._$Deser$(true);
                t1 = $$dsr.$$18$1($$res);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              } finally {
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$toCardanoBaseAddress$5$paymentType$stakeType, $async$completer);
    }
  };
  A._$WalletTasks$Facade.prototype = {};
  A._$WalletTasks$WorkerService.prototype = {
    get$operations() {
      return A._extension_3__$getOperations(this);
    },
    $isWorkerService: 1
  };
  A.WalletTasksWorker.prototype = {};
  A.WalletTasksWorkerPool.prototype = {
    ckdPubBip32Ed25519KeyDerivation$2(pubKey, index) {
      return this.execute$1$1(new A.WalletTasksWorkerPool_ckdPubBip32Ed25519KeyDerivation_closure(pubKey, index), type$.Bip32PublicKey);
    },
    toCardanoBaseAddress$5$paymentType$stakeType(spend, stake, networkId, paymentType, stakeType) {
      return this.execute$1$1(new A.WalletTasksWorkerPool_toCardanoBaseAddress_closure(spend, stake, networkId, paymentType, stakeType), type$.CardanoAddress);
    },
    toCardanoBaseAddress$3(spend, stake, networkId) {
      return this.toCardanoBaseAddress$5$paymentType$stakeType(spend, stake, networkId, B.CredentialType_0, B.CredentialType_0);
    }
  };
  A.WalletTasksWorkerPool_closure.prototype = {
    call$1(exceptionManager) {
      type$.ExceptionManager._as(exceptionManager);
      return new A.WalletTasksWorker(A.$getWalletTasksActivator($.$get$Squadron_platformType()), exceptionManager, this.threadHook, false, new A.Object());
    },
    $signature: 231
  };
  A.WalletTasksWorkerPool_ckdPubBip32Ed25519KeyDerivation_closure.prototype = {
    call$1(w) {
      return type$.WalletTasksWorker._as(w).ckdPubBip32Ed25519KeyDerivation$2(this.pubKey, this.index);
    },
    $signature: 185
  };
  A.WalletTasksWorkerPool_toCardanoBaseAddress_closure.prototype = {
    call$1(w) {
      var _this = this;
      return type$.WalletTasksWorker._as(w).toCardanoBaseAddress$5$paymentType$stakeType(_this.spend, _this.stake, _this.networkId, _this.paymentType, _this.stakeType);
    },
    $signature: 186
  };
  A._$Deser.prototype = {
    get$$$0() {
      var value = this.___$Deser_$0_FI;
      return value === $ ? this.___$Deser_$0_FI = new A._$Deser_$0_closure(this) : value;
    },
    get$$$1() {
      var result, _this = this,
        value = _this.___$Deser_$1_FI;
      if (value === $) {
        result = A.ConverterExt_get_converter(_this).value$1$0(type$.int);
        _this.___$Deser_$1_FI !== $ && A.throwLateFieldADI("$1");
        _this.___$Deser_$1_FI = result;
        value = result;
      }
      return value;
    },
    get$$$2() {
      var result, _this = this,
        value = _this.___$Deser_$2_FI;
      if (value === $) {
        result = A.ConverterExt_get_converter(_this).value$1$0(type$.Uint8List);
        _this.___$Deser_$2_FI !== $ && A.throwLateFieldADI("$2");
        _this.___$Deser_$2_FI = result;
        value = result;
      }
      return value;
    },
    get$$$3() {
      var value = this.___$Deser_$3_FI;
      return value === $ ? this.___$Deser_$3_FI = new A._$Deser_$3_closure(this) : value;
    },
    get$$$4() {
      var value = this.___$Deser_$4_FI;
      return value === $ ? this.___$Deser_$4_FI = new A._$Deser_$4_closure(this) : value;
    },
    get$$$5() {
      var value = this.___$Deser_$5_FI;
      return value === $ ? this.___$Deser_$5_FI = new A._$Deser_$5_closure(this) : value;
    },
    get$$$6() {
      var value = this.___$Deser_$6_FI;
      return value === $ ? this.___$Deser_$6_FI = new A._$Deser_$6_closure(this) : value;
    },
    get$$$7() {
      var result, _this = this,
        value = _this.___$Deser_$7_FI;
      if (value === $) {
        result = A.ConverterExt_get_converter(_this).value$1$0(type$.String);
        _this.___$Deser_$7_FI !== $ && A.throwLateFieldADI("$7");
        _this.___$Deser_$7_FI = result;
        value = result;
      }
      return value;
    },
    get$$$8() {
      var value = this.___$Deser_$8_FI;
      return value === $ ? this.___$Deser_$8_FI = new A._$Deser_$8_closure(this) : value;
    },
    get$$$9() {
      var value = this.___$Deser_$9_FI;
      return value === $ ? this.___$Deser_$9_FI = new A._$Deser_$9_closure(this) : value;
    },
    get$$$10() {
      var value = this.___$Deser_$10_FI;
      return value === $ ? this.___$Deser_$10_FI = new A._$Deser_$10_closure(this) : value;
    },
    get$$$11() {
      var value = this.___$Deser_$11_FI;
      return value === $ ? this.___$Deser_$11_FI = new A._$Deser_$11_closure(this) : value;
    },
    get$$$12() {
      var value = this.___$Deser_$12_FI;
      return value === $ ? this.___$Deser_$12_FI = new A._$Deser_$12_closure(this) : value;
    },
    get$$$14() {
      var value = this.___$Deser_$14_FI;
      return value === $ ? this.___$Deser_$14_FI = new A._$Deser_$14_closure(this) : value;
    },
    get$$$18() {
      var value = this.___$Deser_$18_FI;
      return value === $ ? this.___$Deser_$18_FI = new A._$Deser_$18_closure(this) : value;
    },
    $$0$1(arg0) {
      return this.get$$$0().call$1(arg0);
    },
    $$1$1(arg0) {
      return this.get$$$1().call$1(arg0);
    },
    $$2$1(arg0) {
      return this.get$$$2().call$1(arg0);
    },
    $$3$1(arg0) {
      return this.get$$$3().call$1(arg0);
    },
    $$4$1(arg0) {
      return this.get$$$4().call$1(arg0);
    },
    $$5$1(arg0) {
      return this.get$$$5().call$1(arg0);
    },
    $$6$1(arg0) {
      return this.get$$$6().call$1(arg0);
    },
    $$7$1(arg0) {
      return this.get$$$7().call$1(arg0);
    },
    $$8$1(arg0) {
      return this.get$$$8().call$1(arg0);
    },
    $$9$1(arg0) {
      return this.get$$$9().call$1(arg0);
    },
    $$10$1(arg0) {
      return this.get$$$10().call$1(arg0);
    },
    $$11$1(arg0) {
      return this.get$$$11().call$1(arg0);
    },
    $$12$1(arg0) {
      return this.get$$$12().call$1(arg0);
    },
    $$14$1(arg0) {
      return this.get$$$14().call$1(arg0);
    },
    $$18$1(arg0) {
      return this.get$$$18().call$1(arg0);
    }
  };
  A._$Deser_$0_closure.prototype = {
    call$1($$) {
      return A.BinaryReaderImpl$(type$.Uint8List._as($$)).readStringList$0();
    },
    $signature: 187
  };
  A._$Deser_$3_closure.prototype = {
    call$1($$) {
      return A.HdWallet_HdWallet$unmarshal(type$.Uint8List._as($$));
    },
    $signature: 188
  };
  A._$Deser_$4_closure.prototype = {
    call$1($$) {
      return A.NetworkId_NetworkId$fromIntValue(A._asInt($$));
    },
    $signature: 189
  };
  A._$Deser_$5_closure.prototype = {
    call$1($$) {
      return A.Bip32VerifyKey$(type$.Uint8List._as($$));
    },
    $signature: 190
  };
  A._$Deser_$6_closure.prototype = {
    call$1($$) {
      return A.Bip32KeyRole_fromDerivationIndex(A._asInt($$));
    },
    $signature: 191
  };
  A._$Deser_$8_closure.prototype = {
    call$1($$) {
      var t1 = A.BinaryReaderImpl$(type$.Uint8List._as($$)).readBytesList$0(),
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,CardanoTransaction>");
      t1 = A.List_List$_of(new A.MappedListIterable(t1, t2._eval$1("CardanoTransaction(1)")._as(A.transaction_CardanoTransaction___deserializeBytes_tearOff$closure()), t3), t3._eval$1("ListIterable.E"));
      return t1;
    },
    $signature: 192
  };
  A._$Deser_$9_closure.prototype = {
    call$1($$) {
      var t1 = A.BinaryReaderImpl$(type$.Uint8List._as($$)).readBytesList$0(),
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,Utxo>");
      t1 = A.List_List$_of(new A.MappedListIterable(t1, t2._eval$1("Utxo(1)")._as(A.utxo_Utxo___deserializeBytes_tearOff$closure()), t3), t3._eval$1("ListIterable.E"));
      return t1;
    },
    $signature: 193
  };
  A._$Deser_$10_closure.prototype = {
    call$1($$) {
      var reader = A.BinaryReaderImpl$(type$.Uint8List._as($$)),
        hdWallet = A.HdWallet_HdWallet$unmarshal(reader.readByteList$0()),
        accountIndex = B.JSNumber_methods.toInt$0(reader.readDouble$0()),
        t1 = type$.Map_String_dynamic,
        stakeAddress = A._$CardanoAddressFromJson(t1._as(B.C_JsonCodec.decode$2$reviver(reader.readString$0(), null)));
      return A.CardanoWalletImpl$(accountIndex, A._$CardanoAddressFromJson(t1._as(B.C_JsonCodec.decode$2$reviver(reader.readString$0(), null))), hdWallet, stakeAddress);
    },
    $signature: 194
  };
  A._$Deser_$11_closure.prototype = {
    call$1($$) {
      return A.TxSigningBundle_TxSigningBundle$unmarshal(type$.Uint8List._as($$));
    },
    $signature: 195
  };
  A._$Deser_$12_closure.prototype = {
    call$1($$) {
      A._asInt($$);
      if (!($$ >= 0 && $$ < 2))
        return A.ioore(B.List_CredentialType_0_CredentialType_1, $$);
      return B.List_CredentialType_0_CredentialType_1[$$];
    },
    $signature: 196
  };
  A._$Deser_$14_closure.prototype = {
    call$1($$) {
      var reader = A.BinaryReaderImpl$(type$.Uint8List._as($$));
      return new A.CardanoAddressKit(B.JSNumber_methods.toInt$0(reader.readDouble$0()), A.Bip32KeyRole_fromDerivationIndex(B.JSNumber_methods.toInt$0(reader.readDouble$0())), B.JSNumber_methods.toInt$0(reader.readDouble$0()), A.CardanoAddress_CardanoAddress(reader.readIntList$0()), A.Bip32SigningKey$(new Uint8Array(A._ensureNativeList(reader.readIntList$0()))), A.Bip32VerifyKey$(new Uint8Array(A._ensureNativeList(reader.readIntList$0()))));
    },
    $signature: 197
  };
  A._$Deser_$18_closure.prototype = {
    call$1($$) {
      return A._$CardanoAddressFromJson(type$.Map_String_dynamic._as(B.C_JsonCodec.decode$2$reviver(A._asString($$), null)));
    },
    $signature: 198
  };
  A._$Ser.prototype = {
    get$$$0() {
      var value = this.___$Ser_$0_FI;
      return value === $ ? this.___$Ser_$0_FI = new A._$Ser_$0_closure(this) : value;
    },
    get$$$1() {
      var value = this.___$Ser_$1_FI;
      return value === $ ? this.___$Ser_$1_FI = new A._$Ser_$1_closure(this) : value;
    },
    get$$$2() {
      var value = this.___$Ser_$2_FI;
      return value === $ ? this.___$Ser_$2_FI = new A._$Ser_$2_closure(this) : value;
    },
    get$$$3() {
      var value = this.___$Ser_$3_FI;
      return value === $ ? this.___$Ser_$3_FI = new A._$Ser_$3_closure(this) : value;
    },
    get$$$4() {
      var value = this.___$Ser_$4_FI;
      return value === $ ? this.___$Ser_$4_FI = new A._$Ser_$4_closure(this) : value;
    },
    get$$$5() {
      var value = this.___$Ser_$5_FI;
      return value === $ ? this.___$Ser_$5_FI = new A._$Ser_$5_closure(this) : value;
    },
    get$$$6() {
      var value = this.___$Ser_$6_FI;
      return value === $ ? this.___$Ser_$6_FI = new A._$Ser_$6_closure(this) : value;
    },
    get$$$7() {
      var value = this.___$Ser_$7_FI;
      return value === $ ? this.___$Ser_$7_FI = new A._$Ser_$7_closure(this) : value;
    },
    get$$$8() {
      var value = this.___$Ser_$8_FI;
      return value === $ ? this.___$Ser_$8_FI = new A._$Ser_$8_closure(this) : value;
    },
    get$$$9() {
      var value = this.___$Ser_$9_FI;
      return value === $ ? this.___$Ser_$9_FI = new A._$Ser_$9_closure(this) : value;
    },
    get$$$10() {
      var value = this.___$Ser_$10_FI;
      return value === $ ? this.___$Ser_$10_FI = new A._$Ser_$10_closure(this) : value;
    },
    get$$$11() {
      var value = this.___$Ser_$11_FI;
      return value === $ ? this.___$Ser_$11_FI = new A._$Ser_$11_closure(this) : value;
    },
    get$$$12() {
      var value = this.___$Ser_$12_FI;
      return value === $ ? this.___$Ser_$12_FI = new A._$Ser_$12_closure(this) : value;
    },
    get$$$15() {
      var value = this.___$Ser_$15_FI;
      return value === $ ? this.___$Ser_$15_FI = new A._$Ser_$15_closure(this) : value;
    },
    $$0$1(arg0) {
      return this.get$$$0().call$1(arg0);
    },
    $$1$1(arg0) {
      return this.get$$$1().call$1(arg0);
    },
    $$2$1(arg0) {
      return this.get$$$2().call$1(arg0);
    },
    $$3$1(arg0) {
      return this.get$$$3().call$1(arg0);
    },
    $$4$1(arg0) {
      return this.get$$$4().call$1(arg0);
    },
    $$5$1(arg0) {
      return this.get$$$5().call$1(arg0);
    },
    $$6$1(arg0) {
      return this.get$$$6().call$1(arg0);
    },
    $$7$1(arg0) {
      return this.get$$$7().call$1(arg0);
    },
    $$8$1(arg0) {
      return this.get$$$8().call$1(arg0);
    },
    $$9$1(arg0) {
      return this.get$$$9().call$1(arg0);
    },
    $$10$1(arg0) {
      return this.get$$$10().call$1(arg0);
    },
    $$11$1(arg0) {
      return this.get$$$11().call$1(arg0);
    },
    $$12$1(arg0) {
      return this.get$$$12().call$1(arg0);
    },
    $$15$1(arg0) {
      return this.get$$$15().call$1(arg0);
    }
  };
  A._$Ser_$0_closure.prototype = {
    call$1($$) {
      return type$.HdWallet._as($$).marshal$0();
    },
    $signature: 2
  };
  A._$Ser_$1_closure.prototype = {
    call$1($$) {
      var writer;
      type$.CardanoWallet._as($$);
      writer = new A.BinaryWriterImpl(new Uint8Array(4096));
      writer.writeByteList$1($$.hdWallet.marshal$0());
      writer.writeDouble$1($$.accountIndex);
      writer.writeString$1(B.C_JsonCodec.encode$2$toEncodable($$.stakeAddress.toJson$0(), null));
      writer.writeString$1(B.C_JsonCodec.encode$2$toEncodable($$.firstAddress.toJson$0(), null));
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(writer._buffer), 0, writer._binary_writer_impl$_offset);
    },
    $signature: 2
  };
  A._$Ser_$2_closure.prototype = {
    call$1($$) {
      return new Uint8Array(A._ensureNativeList(type$.Bip32PublicKey._as($$)));
    },
    $signature: 2
  };
  A._$Ser_$3_closure.prototype = {
    call$1($$) {
      var t1;
      type$.List_Bip32PublicKey._as($$);
      t1 = new A.BinaryWriterImpl(new Uint8Array(4096));
      t1.writeBytesList$1(J.map$1$1$ax($$, A.typed_data_Uint8List___fromList_tearOff$closure(), type$.Uint8List).toList$0(0));
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(t1._buffer), 0, t1._binary_writer_impl$_offset);
    },
    $signature: 2
  };
  A._$Ser_$4_closure.prototype = {
    call$1($$) {
      var writer;
      type$.CardanoAddressKit._as($$);
      writer = new A.BinaryWriterImpl(new Uint8Array(4096));
      writer.writeDouble$1($$.account);
      writer.writeDouble$1($$.role.derivationIndex);
      writer.writeDouble$1($$.index);
      writer.writeIntList$1($$.address.get$bytes());
      writer.writeIntList$1($$.signingKey);
      writer.writeIntList$1($$.verifyKey);
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(writer._buffer), 0, writer._binary_writer_impl$_offset);
    },
    $signature: 2
  };
  A._$Ser_$5_closure.prototype = {
    call$1($$) {
      var writer, t1;
      type$.CardanoSigner._as($$);
      writer = new A.BinaryWriterImpl(new Uint8Array(4096));
      writer.writeByteList$1(new Uint8Array(A._ensureNativeList($$.publicKeyBytes)));
      writer.writeByteList$1($$.requestedSignerBytes);
      t1 = $$.path;
      writer.writeDouble$1(t1.account);
      writer.writeDouble$1(t1.address);
      writer.writeDouble$1(t1.role.derivationIndex);
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(writer._buffer), 0, writer._binary_writer_impl$_offset);
    },
    $signature: 2
  };
  A._$Ser_$6_closure.prototype = {
    call$1($$) {
      var writer;
      type$.List_String._as($$);
      writer = new A.BinaryWriterImpl(new Uint8Array(4096));
      writer.writeStringList$1($$);
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(writer._buffer), 0, writer._binary_writer_impl$_offset);
    },
    $signature: 2
  };
  A._$Ser_$7_closure.prototype = {
    call$1($$) {
      return type$.TxSigningBundle._as($$).marshal$0();
    },
    $signature: 2
  };
  A._$Ser_$8_closure.prototype = {
    call$1($$) {
      var writer;
      type$.DataSignature._as($$);
      writer = new A.BinaryWriterImpl(new Uint8Array(4096));
      writer.writeString$1($$.coseKeyHex);
      writer.writeString$1($$.coseSignHex);
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(writer._buffer), 0, writer._binary_writer_impl$_offset);
    },
    $signature: 2
  };
  A._$Ser_$9_closure.prototype = {
    call$1($$) {
      return type$.TxSignedBundle._as($$).marshal$0();
    },
    $signature: 2
  };
  A._$Ser_$10_closure.prototype = {
    call$1($$) {
      return B.C_JsonCodec.encode$2$toEncodable(type$.CardanoAddress._as($$).toJson$0(), null);
    },
    $signature: 74
  };
  A._$Ser_$11_closure.prototype = {
    call$1($$) {
      return type$.NetworkId._as($$).intValue;
    },
    $signature: 21
  };
  A._$Ser_$12_closure.prototype = {
    call$1($$) {
      return type$.Bip32KeyRole._as($$).derivationIndex;
    },
    $signature: 21
  };
  A._$Ser_$15_closure.prototype = {
    call$1($$) {
      return type$.CredentialType._as($$).index;
    },
    $signature: 21
  };
  A._WalletTasksWorker_Worker__$WalletTasks$Invoker.prototype = {};
  A._WalletTasksWorker_Worker__$WalletTasks$Invoker__$WalletTasks$Facade.prototype = {};
  A._WalletTasksWorkerPool_WorkerPool__$WalletTasks$Facade.prototype = {};
  A.WalletTasksSign_findCardanoSigner_closure.prototype = {
    call$0() {
      var t2, t3, t4, _this = this,
        t1 = type$.HexCodec._eval$1("Codec.T")._as(_this.requestedSignerHex),
        requestedSignerBytes = new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(t1)));
      if (0 >= requestedSignerBytes.length)
        return A.ioore(requestedSignerBytes, 0);
      t2 = _this.pubAccount;
      t3 = _this.deriveMaxAddressCount;
      t4 = _this.requestedSignerRaw;
      return (requestedSignerBytes[0] & 15) > 1 ? A._dataFromDrepIdOrDrepCreds(t3, t1, t2, t4) : A._dataFromAddress(t3, t2, t4, A.CardanoAddress_CardanoAddress(new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(t1)))));
    },
    $signature: 200
  };
  A._dataFromAddress_closure.prototype = {
    call$0() {
      var t1 = this.requestedSigningAddress,
        t2 = t1.get$credentials(),
        t3 = this.pubAccount.get$stakeDerivation();
      if (t2 === t3.get$value().get$_credentialsHex().get$value()) {
        t1 = t3.get$value();
        t2 = type$.HexCodec._eval$1("Codec.T")._as(this.requestedSignerHex);
        return new A.CardanoSigner(t1.bytes, new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(t2))), new A.CardanoSigningPath_Shelley(-1, 0, B.Bip32KeyRole_2_2_staking));
      } else
        throw A.wrapException(A.SigningAddressNotFoundException$(A.LinkedHashSet_LinkedHashSet$_literal([t1.get$bech32Encoded()], type$.String), 1));
    },
    $signature: 201
  };
  A._dataFromAddress_closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.CardanoSigner),
        $async$returnValue, $async$self = this, t1, t2, t3, i, t4, paymentAddrForIndex, changeAddrForIndex, $async$temp1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.deriveMaxAddressCount, t2 = $async$self.requestedSigningAddress, t3 = $async$self.pubAccount, i = 0;
            case 3:
              // for condition
              if (!(i < t1)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              t4 = t2.get$networkId();
              paymentAddrForIndex = A.CardanoPubAccountX_paymentAddress(t3, i, t4);
              changeAddrForIndex = A.CardanoPubAccountX_changeAddress(t3, i, t4);
              $async$temp1 = J;
              $async$goto = 9;
              return A._asyncAwait(paymentAddrForIndex, $async$call$0);
            case 9:
              // returning from await.
              $async$goto = $async$temp1.$eq$($async$result, t2) ? 6 : 8;
              break;
            case 6:
              // then
              $async$goto = 10;
              return A._asyncAwait($.$get$cardanoWorker().ckdPubBip32Ed25519KeyDerivation$2(t3.paymentRoleKey, i), $async$call$0);
            case 10:
              // returning from await.
              t1 = $async$result;
              t2 = t1.get$prefixLength();
              t3 = A.instanceType(t1);
              t4 = new A.SubListIterable(t1, 0, t2, t3._eval$1("SubListIterable<ListBase.E>"));
              t4.SubListIterable$3(t1, 0, t2, t3._eval$1("ListBase.E"));
              t1 = t1.get$prefixLength();
              t1 = A.ByteList__constructList(t4, t1, t1);
              t4 = type$.HexCodec._eval$1("Codec.T")._as($async$self.requestedSignerHex);
              $async$returnValue = new A.CardanoSigner(new A.ByteList(t1), new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(t4))), new A.CardanoSigningPath_Shelley(-1, i, B.Bip32KeyRole_0_0_payment));
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              $async$temp1 = J;
              $async$goto = 13;
              return A._asyncAwait(changeAddrForIndex, $async$call$0);
            case 13:
              // returning from await.
              $async$goto = $async$temp1.$eq$($async$result, t2) ? 11 : 12;
              break;
            case 11:
              // then
              $async$goto = 14;
              return A._asyncAwait($.$get$cardanoWorker().ckdPubBip32Ed25519KeyDerivation$2(t3.changeRoleKey, i), $async$call$0);
            case 14:
              // returning from await.
              t1 = $async$result;
              t2 = t1.get$prefixLength();
              t3 = A.instanceType(t1);
              t4 = new A.SubListIterable(t1, 0, t2, t3._eval$1("SubListIterable<ListBase.E>"));
              t4.SubListIterable$3(t1, 0, t2, t3._eval$1("ListBase.E"));
              t1 = t1.get$prefixLength();
              t1 = A.ByteList__constructList(t4, t1, t1);
              t4 = type$.HexCodec._eval$1("Codec.T")._as($async$self.requestedSignerHex);
              $async$returnValue = new A.CardanoSigner(new A.ByteList(t1), new Uint8Array(A._ensureNativeList(B.C_HexCodec.get$decoder().convert$1(t4))), new A.CardanoSigningPath_Shelley(-1, i, B.Bip32KeyRole_1_1_change));
              // goto return
              $async$goto = 1;
              break;
            case 12:
              // join
            case 7:
              // join
            case 4:
              // for update
              ++i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              throw A.wrapException(A.SigningAddressNotFoundException$(A.LinkedHashSet_LinkedHashSet$_literal([t2.get$bech32Encoded()], type$.String), t1));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 202
  };
  A.CborCodec.prototype = {};
  A.CborDecoder.prototype = {
    convert$1(input) {
      var t2, t3, t4, t5, t1 = {};
      type$.List_int._as(input);
      t1.value = null;
      t2 = new A.CborDecoder_convert_closure(t1);
      t3 = A._setArrayType([], type$.JSArray_CborValue);
      t4 = type$.Sink_CborValue._as(new A._SimpleCallbackSink(t2, t3, type$._SimpleCallbackSink_CborValue));
      t5 = A._setArrayType([], type$.JSArray_int);
      new A.RawSink(new A.Reader(new A.Uint8Buffer(new Uint8Array(0), 0)), new A.RawSinkTagged(new A.CborSink(t4), t5)).addSlice$4(input, 0, J.get$length$asx(input), false);
      t2.call$1(t3);
      t1 = t1.value;
      t1.toString;
      return t1;
    }
  };
  A.CborDecoder_convert_closure.prototype = {
    call$1(values) {
      var t1, _null = null;
      type$.List_CborValue._as(values);
      t1 = values.length;
      if (t1 === 0)
        throw A.wrapException(A.FormatException$("Expected at least one CBOR value.", _null, _null));
      if (t1 > 1)
        throw A.wrapException(A.FormatException$("Expected at most one CBOR value.", _null, _null));
      this._box_0.value = B.JSArray_methods.get$single(values);
    },
    $signature: 203
  };
  A.Reader.prototype = {
    get$length(_) {
      return this._stage0$_bytes._typed_buffer$_length - this._read;
    },
    peekUint8$0() {
      var t1 = this._read,
        t2 = this._stage0$_bytes;
      if (t1 === t2._typed_buffer$_length)
        return null;
      return t2.$index(0, t1);
    },
    readUint8$0() {
      var t1 = this.readExactBytes$1(1);
      return t1 == null ? null : B.NativeUint8List_methods.get$first(t1);
    },
    readExactBytes$1(c) {
      var t2, t3, bytes, _this = this,
        t1 = _this._stage0$_bytes;
      if (_this._read + c <= t1._typed_buffer$_length) {
        t2 = J.asUint8List$0$x(B.NativeUint8List_methods.get$buffer(t1._typed_buffer$_buffer));
        t3 = _this._read;
        bytes = B.NativeUint8List_methods.sublist$2(t2, t3, c + t3);
        t3 = _this._read += c;
        _this._stage0$_offset += c;
        t2 = t1._typed_buffer$_length;
        if (t2 - t3 < B.JSInt_methods._tdivFast$1(t2, 4)) {
          t1.removeRange$2(t1, 0, t3);
          _this._read = 0;
        }
        return bytes;
      }
      return null;
    }
  };
  A.Header.prototype = {
    get$arg() {
      var _this = this,
        t1 = _this.additionalInfo;
      if (t1 < 24)
        return new A._ArgInt(t1);
      else
        switch (t1) {
          case 24:
            return new A._ArgInt(B.NativeUint8List_methods.get$first(_this.dataBytes));
          case 25:
            return new A._ArgInt(J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(_this.dataBytes), 0, null).getUint16(0, false));
          case 26:
            return new A._ArgInt(J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(_this.dataBytes), 0, null).getUint32(0, false));
          case 27:
            t1 = _this.dataBytes;
            return new A._ArgBigInt(A._BigIntImpl__BigIntImpl$from(J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(t1), 0, null).getUint32(0, false)).$shl(0, 32).$or(0, A._BigIntImpl__BigIntImpl$from(J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(t1), 0, null).getUint32(4, false))));
          case 31:
            return B.C__ArgIndefiniteLength;
          default:
            throw A.wrapException(new A.Error());
        }
    }
  };
  A.RawValue.prototype = {};
  A._Builder.prototype = {
    poll$0() {
      var t3, _this = this,
        t1 = _this.bytes,
        t2 = _this.header;
      if (t1._typed_buffer$_length < t2.get$arg().toInt$0(0)) {
        t3 = _this.reader;
        t3 = t3.readExactBytes$1(Math.min(t2.get$arg().toInt$0(0) - t1._typed_buffer$_length, t3._stage0$_bytes._typed_buffer$_length - t3._read));
        t3.toString;
        t1.addAll$1(0, t3);
      }
      if (t1._typed_buffer$_length < t2.get$arg().toInt$0(0))
        return null;
      return new A.RawValue(t2, t1, _this.offset);
    }
  };
  A.RawSink.prototype = {
    addSlice$4(chunk, start, end, isLast) {
      var t2, t3, value, offset, header, _this = this,
        t1 = _this._reader;
      t1._stage0$_bytes.addAll$3(0, type$.List_int._as(chunk), start, end);
      for (t2 = _this._stage1$_sink; true;) {
        t3 = _this._stage1$_next;
        if (t3 != null) {
          value = t3.poll$0();
          if (value == null)
            break;
          _this._stage1$_next = null;
          t2.add$1(0, value);
        }
        offset = t1._stage0$_offset;
        header = A._readHeader(t1);
        if (header == null)
          break;
        if (header.additionalInfo !== 31) {
          t3 = header.majorType;
          if (t3 === 2 || t3 === 3) {
            _this._stage1$_next = new A._Builder(header, t1, offset, new A.Uint8Buffer(new Uint8Array(0), 0));
            continue;
          }
        }
        t2.add$1(0, new A.RawValue(header, B.List_empty, offset));
      }
    }
  };
  A.RawValueTagged.prototype = {};
  A.RawSinkTagged.prototype = {
    add$1(_, data) {
      var tags, _this = this,
        t1 = data.header;
      if (t1.majorType === 6) {
        if (t1.get$arg().get$isIndefiniteLength())
          throw A.wrapException(A.CborMalformedException$("Tag can not have additional info 31", null));
        B.JSArray_methods.add$1(_this._stage2$_tags, t1.get$arg().toInt$0(0));
      } else {
        tags = _this._stage2$_tags;
        _this._stage2$_tags = A._setArrayType([], type$.JSArray_int);
        _this.sink.add$1(0, new A.RawValueTagged(t1, data.data, data.start, tags));
      }
    },
    $isSink: 1
  };
  A.CborSink.prototype = {
    add$1(_, data) {
      var builder, t2, built, value, _this = this,
        t1 = data.header;
      switch (t1.majorType) {
        case 0:
        case 1:
          builder = new A._ValueBuilder(A._createInt(data));
          break;
        case 2:
          builder = t1.get$arg().get$isIndefiniteLength() ? new A._IndefiniteLengthByteBuilder(data, A._setArrayType([], type$.JSArray_List_int)) : new A._ValueBuilder(A._createBytes(data.data, data.offset, data.tags));
          break;
        case 3:
          builder = t1.get$arg().get$isIndefiniteLength() ? new A._IndefiniteLengthStringBuilder(data, A._setArrayType([], type$.JSArray_List_int)) : new A._ValueBuilder(A._createString(data.data, data.offset, data.tags));
          break;
        case 4:
          t2 = type$.JSArray_CborValue;
          builder = t1.get$arg().get$isIndefiniteLength() ? new A._IndefiniteLengthListBuilder(data, A._setArrayType([], t2)) : new A._ListBuilder(data, A._setArrayType([], t2));
          break;
        case 5:
          t2 = type$.JSArray_CborValue;
          builder = t1.get$arg().get$isIndefiniteLength() ? new A._IndefiniteLengthMapBuilder(data, A._setArrayType([], t2)) : new A._MapBuilder(data, A._setArrayType([], t2));
          break;
        case 6:
          throw A.wrapException(new A.Error());
        case 7:
          t2 = t1.additionalInfo;
          switch (t2) {
            case 20:
            case 21:
              t1 = t2 === 20;
              t2 = t1 ? 20 : 21;
              builder = new A._ValueBuilder(new A._CborBoolImpl(!t1, t2, data.tags));
              break;
            case 22:
              builder = new A._ValueBuilder(new A._CborNullImpl(22, data.tags));
              break;
            case 23:
              builder = new A._ValueBuilder(new A._CborUndefinedImpl(23, data.tags));
              break;
            case 25:
            case 26:
            case 27:
              builder = new A._ValueBuilder(A._createFloat(data));
              break;
            case 31:
              builder = new A._ValueBuilder(B.C_Break);
              break;
            default:
              if (t2 <= 24)
                builder = new A._ValueBuilder(new A._CborSimpleValueImpl(t1.get$arg().toInt$0(0), data.tags));
              else
                throw A.wrapException(A.CborMalformedException$("Reserved simple value", data.offset));
              break;
          }
          break;
        default:
          throw A.wrapException(new A.Error());
      }
      t1 = _this._stage3$_next;
      if (t1 != null) {
        t1.add$1(0, builder);
        if (_this._stage3$_next.get$isDone()) {
          built = _this._stage3$_next.build$0();
          _this._stage3$_next = null;
          t1 = _this._stage3$_sink;
          B.JSArray_methods.add$1(t1._accumulated, t1.$ti._precomputed1._as(built));
          return;
        }
      } else if (builder.get$isDone()) {
        value = builder.build$0();
        if (value instanceof A.Break)
          throw A.wrapException(A._CborUnexpectedBreakException$(data.offset));
        t1 = _this._stage3$_sink;
        B.JSArray_methods.add$1(t1._accumulated, t1.$ti._precomputed1._as(value));
      } else
        _this._stage3$_next = builder;
    },
    $isSink: 1
  };
  A._CborUnexpectedBreakException.prototype = {};
  A._CborUnexpectedUndefinedLengthException.prototype = {};
  A._createMap_closure.prototype = {
    call$1(x) {
      var t1;
      type$.List_CborValue._as(x);
      t1 = J.getInterceptor$ax(x);
      return new A.MapEntry(t1.get$first(x), t1.$index(x, 1), type$.MapEntry_CborValue_CborValue);
    },
    $signature: 204
  };
  A._Builder0.prototype = {};
  A._ValueBuilder.prototype = {
    add$1(_, builder) {
      throw A.wrapException(new A.Error());
    },
    build$0() {
      return this.data;
    },
    get$isDone() {
      return true;
    }
  };
  A._ListBuilder.prototype = {
    get$isDone() {
      return this.items.length === this.raw.header.get$arg().toInt$0(0);
    },
    add$1(_, builder) {
      var value, _this = this,
        next = _this._stage3$_next;
      if (next != null) {
        next.add$1(0, builder);
        if (next.get$isDone()) {
          B.JSArray_methods.add$1(_this.items, next.build$0());
          _this._stage3$_next = null;
        }
      } else if (builder.get$isDone()) {
        value = builder.build$0();
        if (value instanceof A.Break)
          throw A.wrapException(A._CborUnexpectedBreakException$(_this.raw.offset));
        B.JSArray_methods.add$1(_this.items, value);
      } else
        _this._stage3$_next = builder;
    },
    build$0() {
      return A._createList(this.raw, this.items, B.CborLengthType_0);
    }
  };
  A._MapBuilder.prototype = {
    get$isDone() {
      return this.items.length === 2 * this.raw.header.get$arg().toInt$0(0);
    },
    add$1(_, builder) {
      var value, _this = this,
        next = _this._stage3$_next;
      if (next != null) {
        next.add$1(0, builder);
        if (next.get$isDone()) {
          B.JSArray_methods.add$1(_this.items, next.build$0());
          _this._stage3$_next = null;
        }
      } else if (builder.get$isDone()) {
        value = builder.build$0();
        if (value instanceof A.Break)
          throw A.wrapException(A._CborUnexpectedBreakException$(_this.raw.offset));
        B.JSArray_methods.add$1(_this.items, value);
      } else
        _this._stage3$_next = builder;
    },
    build$0() {
      return A._createMap(this.raw, this.items, B.CborLengthType_0);
    }
  };
  A._IndefiniteLengthByteBuilder.prototype = {
    add$1(_, builder) {
      var value;
      if (builder instanceof A._ValueBuilder) {
        value = builder.data;
        if (value instanceof A.Break) {
          this.isDone = true;
          return;
        } else if (type$.CborBytes._is(value)) {
          B.JSArray_methods.add$1(this.bytes, value.get$bytes());
          return;
        }
      }
      throw A.wrapException(A.CborMalformedException$("An indefinite byte string must only contain byte strings.", this.raw.offset));
    },
    build$0() {
      return new A._CborBytesIndefiniteLengthImpl(this.raw.tags, this.bytes);
    },
    get$isDone() {
      return this.isDone;
    }
  };
  A._IndefiniteLengthStringBuilder.prototype = {
    add$1(_, builder) {
      var value;
      if (builder instanceof A._ValueBuilder) {
        value = builder.data;
        if (value instanceof A.Break) {
          this.isDone = true;
          return;
        } else if (type$.CborString._is(value)) {
          B.JSArray_methods.add$1(this.bytes, value.get$utf8Bytes());
          return;
        }
      }
      throw A.wrapException(A.CborMalformedException$("An indefinite string must only contain strings.", this.raw.offset));
    },
    build$0() {
      return new A._CborIndefiniteLengthStringImpl(this.raw.tags, this.bytes);
    },
    get$isDone() {
      return this.isDone;
    }
  };
  A._IndefiniteLengthListBuilder.prototype = {
    add$1(_, builder) {
      var _this = this,
        next = _this._stage3$_next;
      if (next != null) {
        next.add$1(0, builder);
        if (next.get$isDone()) {
          B.JSArray_methods.add$1(_this.items, next.build$0());
          _this._stage3$_next = null;
        }
      } else if (builder.get$isDone())
        if (builder.build$0() instanceof A.Break)
          _this.isDone = true;
        else
          B.JSArray_methods.add$1(_this.items, builder.build$0());
      else
        _this._stage3$_next = builder;
    },
    build$0() {
      return A._createList(this.raw, this.items, B.CborLengthType_1);
    },
    get$isDone() {
      return this.isDone;
    }
  };
  A._IndefiniteLengthMapBuilder.prototype = {
    add$1(_, builder) {
      var _this = this,
        next = _this._stage3$_next;
      if (next != null) {
        next.add$1(0, builder);
        if (next.get$isDone()) {
          B.JSArray_methods.add$1(_this.items, next.build$0());
          _this._stage3$_next = null;
        }
      } else if (builder.get$isDone())
        if (builder.build$0() instanceof A.Break)
          _this.isDone = true;
        else
          B.JSArray_methods.add$1(_this.items, builder.build$0());
      else
        _this._stage3$_next = builder;
    },
    build$0() {
      return A._createMap(this.raw, this.items, B.CborLengthType_1);
    },
    get$isDone() {
      return this.isDone;
    }
  };
  A.CborEncoder.prototype = {
    convert$1(input) {
      var b;
      type$.CborValue._as(input);
      b = new A.Uint8Buffer(new Uint8Array(0), 0);
      input.encode$1(new A._BufferEncodeSink(b, A.LinkedHashSet_LinkedHashSet$_empty(type$.Object)));
      return b;
    }
  };
  A.EncodeSink.prototype = {
    addTags$1(tags) {
      var t1;
      for (t1 = J.get$iterator$ax(type$.List_int._as(tags)); t1.moveNext$0();)
        this.addHeaderInfo$2(6, new A._ArgInt(t1.get$current()));
    },
    addHeaderInfo$2(majorType, info) {
      var int, t1, t2, t3, x, t4, infoBigInt, t5, _this = this;
      if (info.get$isIndefiniteLength())
        _this.buffer.addAll$1(0, type$.List_int._as(A._setArrayType([(majorType << 5 | 31) >>> 0], type$.JSArray_int)));
      else if (info.get$isValidInt()) {
        int = info.toInt$0(0);
        if (int <= 23) {
          _this.buffer.addAll$1(0, type$.List_int._as(A._setArrayType([(majorType << 5 | info.toInt$0(0)) >>> 0], type$.JSArray_int)));
          return;
        } else if (B.JSInt_methods.get$bitLength(int) <= 8) {
          t1 = type$.JSArray_int;
          t2 = type$.List_int;
          t3 = _this.buffer;
          t3.addAll$1(0, t2._as(A._setArrayType([(majorType << 5 | 24) >>> 0], t1)));
          t3.addAll$1(0, t2._as(A._setArrayType([int], t1)));
        } else if (B.JSInt_methods.get$bitLength(int) <= 16) {
          t1 = type$.List_int;
          t2 = _this.buffer;
          t2.addAll$1(0, t1._as(A._setArrayType([(majorType << 5 | 25) >>> 0], type$.JSArray_int)));
          x = new Uint8Array(2);
          t3 = J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(x), 0, null);
          t4 = info.toInt$0(0);
          t3.$flags & 2 && A.throwUnsupportedOperation(t3, 10);
          t3.setUint16(0, t4, false);
          t2.addAll$1(0, t1._as(x));
        } else {
          t1 = type$.JSArray_int;
          t2 = type$.List_int;
          t3 = majorType << 5;
          t4 = _this.buffer;
          if (B.JSInt_methods.get$bitLength(int) <= 32) {
            t4.addAll$1(0, t2._as(A._setArrayType([(t3 | 26) >>> 0], t1)));
            x = new Uint8Array(4);
            t1 = J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(x), 0, null);
            t3 = info.toInt$0(0);
            t1.$flags & 2 && A.throwUnsupportedOperation(t1, 11);
            t1.setUint32(0, t3, false);
            t4.addAll$1(0, t2._as(x));
          } else {
            t4.addAll$1(0, t2._as(A._setArrayType([(t3 | 27) >>> 0], t1)));
            t4.addAll$1(0, t2._as(A.u64BytesHelper(info.toInt$0(0))));
          }
        }
      } else {
        t1 = type$.List_int;
        t2 = _this.buffer;
        t2.addAll$1(0, t1._as(A._setArrayType([(majorType << 5 | 27) >>> 0], type$.JSArray_int)));
        x = new Uint8Array(8);
        infoBigInt = info.toBigInt$0();
        t3 = J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(x), 0, null);
        t4 = infoBigInt.$shr(0, 32);
        t5 = $.$get$_BigIntImpl_one();
        t4 = t4.$and(0, t5.$shl(0, 32).$sub(0, t5)).toInt$0(0);
        t3.$flags & 2 && A.throwUnsupportedOperation(t3, 11);
        t3.setUint32(0, t4, false);
        t4 = J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(x), 0, null);
        t5 = infoBigInt.$and(0, t5.$shl(0, 32).$sub(0, t5)).toInt$0(0);
        t4.$flags & 2 && A.throwUnsupportedOperation(t4, 11);
        t4.setUint32(4, t5, false);
        t2.addAll$1(0, t1._as(x));
      }
    },
    $isSink: 1
  };
  A._BufferEncodeSink.prototype = {};
  A.CborMalformedException.prototype = {
    toString$0(_) {
      var t1 = this.offset,
        string = t1 != null ? "Malformed CBOR" + (" at " + A.S(t1)) : "Malformed CBOR";
      return string + (": " + this.message);
    }
  };
  A.CborCyclicError.prototype = {
    toString$0(_) {
      return "Cbor cyclic error";
    }
  };
  A._ArgIndefiniteLength.prototype = {
    $not(_) {
      return this;
    },
    toInt$0(_) {
      return 0;
    },
    toBigInt$0() {
      return $.$get$_BigIntImpl_zero();
    },
    $isArg: 1,
    get$isIndefiniteLength() {
      return true;
    },
    get$isValidInt() {
      return false;
    }
  };
  A._ArgInt.prototype = {
    $not(_) {
      var t1 = A._BigIntImpl__BigIntImpl$from(this.value).$not(0),
        t2 = $.$get$_BigIntImpl_one(),
        signMask = t2.$shl(0, 32);
      return new A._ArgInt(t1.$and(0, signMask.$sub(0, t2)).$sub(0, t1.$and(0, signMask)).toInt$0(0));
    },
    toInt$0(_) {
      return this.value;
    },
    toBigInt$0() {
      return A._BigIntImpl__BigIntImpl$from(this.value);
    },
    $isArg: 1,
    get$isIndefiniteLength() {
      return false;
    },
    get$isValidInt() {
      return true;
    }
  };
  A._ArgBigInt.prototype = {
    $not(_) {
      return new A._ArgBigInt(this.value.$not(0));
    },
    toInt$0(_) {
      return this.value.toInt$0(0);
    },
    toBigInt$0() {
      return this.value;
    },
    $isArg: 1,
    get$isIndefiniteLength() {
      return false;
    },
    get$isValidInt() {
      return false;
    }
  };
  A._CborBytesImpl.prototype = {
    get$bytesList() {
      return A._setArrayType([this.bytes], type$.JSArray_List_int);
    },
    get$hashCode(_) {
      return A.Object_hashAll(A.IterableIterableExtension_get_flattened(A._setArrayType([this.bytes, this.tags], type$.JSArray_List_int), type$.int));
    },
    toString$0(_) {
      return J.toString$0$(this.bytes);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (type$.CborBytes._is(other)) {
        t1 = type$.int;
        t1 = A.ListExtensions_equals(this.tags, other.get$tags(), t1) && A.ListExtensions_equals(this.bytes, other.get$bytes(), t1);
      } else
        t1 = false;
      return t1;
    },
    toJsonInternal$2(cyclicCheck, o) {
      var t1, _this = this;
      type$.Set_Object._as(cyclicCheck);
      t1 = _this.get$expectedConversion();
      switch (t1.index) {
        case 2:
          return B.HexEncoder_true.convert$1(_this.bytes);
        case 1:
          t1 = type$.Base64Codec._eval$1("Codec.S")._as(_this.bytes);
          return B.Base64Codec_Base64Encoder_false.get$encoder().convert$1(t1);
        case 0:
          t1 = type$.Base64Codec._eval$1("Codec.S")._as(_this.bytes);
          t1 = B.Base64Codec_Base64Encoder_true.get$encoder().convert$1(t1);
          return A.stringReplaceAllUnchecked(t1, "=", "");
      }
    },
    encode$1(sink) {
      new A._CborEncodeDefiniteLengthBytesImpl(this).encode$1(sink);
    },
    $isCborBytes: 1,
    $isCborValue: 1,
    get$bytes() {
      return this.bytes;
    },
    get$tags() {
      return this.tags;
    },
    get$type() {
      return B.CborLengthType_0;
    }
  };
  A._CborBytesIndefiniteLengthImpl.prototype = {
    get$bytes() {
      var t1 = A.IterableIterableExtension_get_flattened(this.bytesList, type$.int);
      t1 = A.List_List$_of(t1, t1.$ti._eval$1("Iterable.E"));
      t1.$flags = 1;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hashAll(A.IterableIterableExtension_get_flattened(A._setArrayType([this.bytesList, this.tags], type$.JSArray_List_Object), type$.Object));
    },
    toString$0(_) {
      var t1 = A.IterableIterableExtension_get_flattened(this.bytesList, type$.int);
      t1 = A.List_List$_of(t1, t1.$ti._eval$1("Iterable.E"));
      t1.$flags = 1;
      return A.Iterable_iterableToFullString(t1, "[", "]");
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A._CborBytesIndefiniteLengthImpl && A.ListExtensions_equals(this.tags, other.tags, type$.int) && new A.DeepCollectionEquality(false).equals$2(this.bytesList, other.bytesList);
    },
    toJsonInternal$2(cyclicCheck, o) {
      var t1, _this = this;
      type$.Set_Object._as(cyclicCheck);
      t1 = _this.get$expectedConversion();
      switch (t1.index) {
        case 2:
          t1 = A.IterableIterableExtension_get_flattened(_this.bytesList, type$.int);
          t1 = A.List_List$_of(t1, t1.$ti._eval$1("Iterable.E"));
          t1.$flags = 1;
          return B.HexEncoder_true.convert$1(t1);
        case 1:
          t1 = A.IterableIterableExtension_get_flattened(_this.bytesList, type$.int);
          t1 = A.List_List$_of(t1, t1.$ti._eval$1("Iterable.E"));
          t1.$flags = 1;
          t1 = type$.Base64Codec._eval$1("Codec.S")._as(t1);
          return B.Base64Codec_Base64Encoder_false.get$encoder().convert$1(t1);
        case 0:
          t1 = A.IterableIterableExtension_get_flattened(_this.bytesList, type$.int);
          t1 = A.List_List$_of(t1, t1.$ti._eval$1("Iterable.E"));
          t1.$flags = 1;
          t1 = type$.Base64Codec._eval$1("Codec.S")._as(t1);
          t1 = B.Base64Codec_Base64Encoder_true.get$encoder().convert$1(t1);
          return A.stringReplaceAllUnchecked(t1, "=", "");
      }
    },
    encode$1(sink) {
      new A._CborEncodeIndefiniteLengthBytesImpl(this.bytesList).encode$1(sink);
    },
    $isCborBytes: 1,
    $isCborValue: 1,
    get$tags() {
      return this.tags;
    },
    get$type() {
      return B.CborLengthType_1;
    },
    get$bytesList() {
      return this.bytesList;
    }
  };
  A._CborEncodeIndefiniteLengthBytesImpl.prototype = {
    toJsonInternal$2(cyclicCheck, o) {
      var t1;
      type$.Set_Object._as(cyclicCheck);
      t1 = A.IterableIterableExtension_get_flattened(this.items, type$.int);
      t1 = A.List_List$_of(t1, t1.$ti._eval$1("Iterable.E"));
      return new A._CborBytesImpl(t1, B.List_empty).toJsonInternal$2(cyclicCheck, o);
    },
    encode$1(sink) {
      var t1, t2, t3, t4, t5, _i, value;
      sink.addTags$1(B.List_empty);
      sink.addHeaderInfo$2(2, B.C__ArgIndefiniteLength);
      for (t1 = this.items, t2 = t1.length, t3 = type$.List_int, t4 = sink.buffer, t5 = A._instanceType(t4)._eval$1("Iterable<TypedDataBuffer.E>"), _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        value = t1[_i];
        sink.addTags$1(B.List_empty);
        sink.addHeaderInfo$2(2, new A._ArgInt(J.get$length$asx(value)));
        value = t5._as(t3._as(value));
        t4._addAll$3(value, 0, null);
      }
      sink.addHeaderInfo$2(7, B.C__ArgIndefiniteLength);
    },
    $isCborValue: 1,
    get$tags() {
      return B.List_empty;
    }
  };
  A._CborEncodeDefiniteLengthBytesImpl.prototype = {
    get$tags() {
      return this.inner.tags;
    },
    toJsonInternal$2(cyclicCheck, o) {
      return this.inner.toJsonInternal$2(type$.Set_Object._as(cyclicCheck), o);
    },
    encode$1(sink) {
      var t1 = this.inner;
      sink.addTags$1(t1.tags);
      t1 = t1.bytes;
      sink.addHeaderInfo$2(2, new A._ArgInt(J.get$length$asx(t1)));
      sink.buffer.addAll$1(0, type$.List_int._as(t1));
    },
    $isCborValue: 1
  };
  A._CborBigIntImpl.prototype = {
    toJsonInternal$2(cyclicCheck, o) {
      var t1;
      type$.Set_Object._as(cyclicCheck);
      t1 = this.isNegative ? "~" : "";
      t1 += A.S(this.super$_CborBytesImpl$toJsonInternal(cyclicCheck, o.copyWith$1$encoding(B.JsonBytesEncoding_0)));
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    toBigInt$0() {
      var t1, t2,
        data = $.$get$_BigIntImpl_zero();
      for (t1 = J.get$iterator$ax(this.bytes); t1.moveNext$0();) {
        t2 = t1.get$current();
        data = data.$shl(0, 8).$or(0, A._BigIntImpl__BigIntImpl$from(t2));
      }
      return this.isNegative ? data.$not(0) : data;
    },
    toInt$0(_) {
      return this.toBigInt$0().toInt$0(0);
    },
    $isCborInt: 1
  };
  A.__CborBytesImpl_Object_CborValueMixin.prototype = {};
  A.__CborBytesIndefiniteLengthImpl_Object_CborValueMixin.prototype = {};
  A.__CborEncodeDefiniteLengthBytesImpl_Object_CborValueMixin.prototype = {};
  A.__CborEncodeIndefiniteLengthBytesImpl_Object_CborValueMixin.prototype = {};
  A.CborFloatPrecision.prototype = {
    _enumToString$0() {
      return "CborFloatPrecision." + this._core$_name;
    }
  };
  A._CborFloatImpl.prototype = {
    get$hashCode(_) {
      return A.Object_hash(this.value, A.Object_hashAll(this.tags), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return B.JSNumber_methods.toString$0(this.value);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A._CborFloatImpl && A.ListExtensions_equals(this.tags, other.tags, type$.int) && this.value === other.value;
    },
    encode$1(sink) {
      var t1, parts, t2, t3;
      sink.addTags$1(this.tags);
      t1 = this.value;
      if (isNaN(t1)) {
        sink.buffer.addAll$1(0, type$.List_int._as(A._setArrayType([249, 126, 0], type$.JSArray_int)));
        return;
      }
      parts = new A._FromDouble(t1);
      if (B._Codec16_10_5.isLossless$1(parts)) {
        t1 = type$.List_int;
        t2 = sink.buffer;
        t2.addAll$1(0, t1._as(A._setArrayType([249], type$.JSArray_int)));
        t2.addAll$1(0, t1._as(B._Codec16_10_5.encode$2(parts, B.C_Endian)));
      } else {
        t1 = type$.JSArray_int;
        t2 = type$.List_int;
        t3 = sink.buffer;
        if (B._Codec32_23_8.isLossless$1(parts)) {
          t3.addAll$1(0, t2._as(A._setArrayType([250], t1)));
          t3.addAll$1(0, t2._as(parts.toFloat32Bytes$0()));
        } else {
          t3.addAll$1(0, t2._as(A._setArrayType([251], t1)));
          t3.addAll$1(0, t2._as(parts.toFloat64Bytes$0()));
        }
      }
    },
    toJsonInternal$2(cyclicCheck, o) {
      var t1;
      type$.Set_Object._as(cyclicCheck);
      t1 = this.value;
      return isFinite(t1) ? t1 : o.substituteValue;
    },
    $isCborValue: 1,
    get$tags() {
      return this.tags;
    }
  };
  A._CborDateTimeFloatImpl.prototype = {};
  A.__CborFloatImpl_Object_CborValueMixin.prototype = {};
  A._CborSmallIntImpl.prototype = {
    get$hashCode(_) {
      return A.Object_hash(this.value, A.Object_hashAll(this.tags), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return B.JSInt_methods.toString$0(this.value);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A._CborSmallIntImpl && A.ListExtensions_equals(this.tags, other.tags, type$.int) && this.value === other.value;
    },
    toBigInt$0() {
      return A._BigIntImpl__BigIntImpl$from(this.value);
    },
    toInt$0(_) {
      return this.value;
    },
    toJsonInternal$2(cyclicCheck, o) {
      var t1;
      type$.Set_Object._as(cyclicCheck);
      t1 = this.value;
      return B.JSInt_methods.get$bitLength(t1) < 53 ? t1 : A.CborBigInt_CborBigInt(A._BigIntImpl__BigIntImpl$from(t1), null).toJsonInternal$2(cyclicCheck, o);
    },
    encode$1(sink) {
      var t1;
      sink.addTags$1(this.tags);
      t1 = this.value;
      if (!B.JSInt_methods.get$isNegative(t1))
        sink.addHeaderInfo$2(0, new A._ArgInt(t1));
      else
        sink.addHeaderInfo$2(1, new A._ArgInt(A._BigIntImpl__BigIntImpl$from(t1).$not(0).toInt$0(0)));
    },
    $isCborInt: 1,
    $isCborSmallInt: 1,
    $isCborValue: 1,
    get$tags() {
      return this.tags;
    }
  };
  A._LargeInt.prototype = {
    get$hashCode(_) {
      return A.Object_hash(this.value, A.Object_hashAll(this.tags), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return this.value.toString$0(0);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = false;
      if (type$.CborInt._is(other))
        if (A.ListExtensions_equals(this.tags, other.get$tags(), type$.int))
          t1 = this.value.compareTo$1(0, other.toBigInt$0()) === 0;
      return t1;
    },
    toBigInt$0() {
      return this.value;
    },
    toInt$0(_) {
      return this.value.toInt$0(0);
    },
    toJsonInternal$2(cyclicCheck, o) {
      type$.Set_Object._as(cyclicCheck);
      return A.CborBigInt_CborBigInt(this.value, null).toJsonInternal$2(cyclicCheck, o);
    },
    encode$1(sink) {
      var t1;
      sink.addTags$1(this.tags);
      t1 = this.value;
      if (!t1._isNegative)
        sink.addHeaderInfo$2(0, new A._ArgBigInt(t1));
      else
        sink.addHeaderInfo$2(1, new A._ArgBigInt(t1.$not(0)));
    },
    $isCborInt: 1,
    $isCborValue: 1,
    get$tags() {
      return this.tags;
    }
  };
  A._CborDateTimeIntImpl.prototype = {};
  A.__CborSmallIntImpl_Object_CborValueMixin.prototype = {};
  A.__LargeInt_Object_CborValueMixin.prototype = {};
  A.ToJsonOptions.prototype = {
    copyWith$1$encoding(encoding) {
      return new A.ToJsonOptions(encoding, false, this.substituteValue);
    }
  };
  A.JsonBytesEncoding.prototype = {
    _enumToString$0() {
      return "JsonBytesEncoding." + this._core$_name;
    }
  };
  A.Break.prototype = {
    toJsonInternal$2(cyclicCheck, o) {
      type$.Set_Object._as(cyclicCheck);
      throw A.wrapException(A.UnimplementedError$(null));
    },
    encode$1(sink) {
      sink.addHeaderInfo$2(7, B.C__ArgIndefiniteLength);
    },
    $isCborValue: 1,
    get$tags() {
      return B.List_empty;
    }
  };
  A.CborValueMixin.prototype = {
    toJson$0() {
      return this.toJsonInternal$2(A.LinkedHashSet_LinkedHashSet$_empty(type$.Object), new A.ToJsonOptions(B.JsonBytesEncoding_2, false, null));
    },
    get$expectedConversion() {
      var t1, t2, retVal, t3;
      for (t1 = J.get$reversed$ax(this.get$tags()), t2 = t1.$ti, t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"), retVal = B.JsonBytesEncoding_2; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        switch (t3 == null ? t2._as(t3) : t3) {
          case 23:
            retVal = B.JsonBytesEncoding_2;
            break;
          case 22:
            retVal = B.JsonBytesEncoding_1;
            break;
          case 21:
            retVal = B.JsonBytesEncoding_0;
            break;
        }
      }
      return retVal;
    }
  };
  A._Break_Object_CborValueMixin.prototype = {};
  A._CborListImpl.prototype = {
    toJsonInternal$2(cyclicCheck, o) {
      var res, _this = this;
      type$.Set_Object._as(cyclicCheck);
      if (!cyclicCheck.add$1(0, _this))
        throw A.wrapException(A.CborCyclicError$(_this));
      res = B.JSArray_methods.map$1$1(_this._base, A._instanceType(_this)._eval$1("Object?(_DelegatingIterableBase.E)")._as(new A._CborListImpl_toJsonInternal_closure(_this, cyclicCheck, o)), type$.nullable_Object).toList$0(0);
      cyclicCheck.remove$1(0, _this);
      return res;
    },
    encode$1(sink) {
      var _this = this,
        t1 = _this.type;
      if (t1 !== B.CborLengthType_0)
        t1 = t1 === B.CborLengthType_2 && _this._base.length < 256;
      else
        t1 = true;
      if (t1)
        new A._CborEncodeDefiniteLengthListImpl(_this).encode$1(sink);
      else
        new A._CborEncodeIndefiniteLengthListImpl(_this).encode$1(sink);
    },
    $isCborList: 1,
    $isCborValue: 1,
    get$tags() {
      return this.tags;
    },
    get$type() {
      return this.type;
    }
  };
  A._CborListImpl_toJsonInternal_closure.prototype = {
    call$1(i) {
      return type$.CborValue._as(i).toJsonInternal$2(this.cyclicCheck, this.o.copyWith$1$encoding(this.$this.get$expectedConversion()));
    },
    $signature: 205
  };
  A._CborEncodeIndefiniteLengthListImpl.prototype = {
    get$tags() {
      return this.inner.tags;
    },
    toJsonInternal$2(cyclicCheck, o) {
      return this.inner.toJsonInternal$2(type$.Set_Object._as(cyclicCheck), o);
    },
    encode$1(sink) {
      var t2, t3,
        t1 = this.inner;
      sink.addTags$1(t1.tags);
      sink.addHeaderInfo$2(4, B.C__ArgIndefiniteLength);
      t2 = sink._references;
      if (!t2.add$1(0, t1))
        A.throwExpression(A.CborCyclicError$(t1));
      for (t3 = B.JSArray_methods.get$iterator(t1._base); t3.moveNext$0();)
        t3.get$current().encode$1(sink);
      t2.remove$1(0, t1);
      sink.addHeaderInfo$2(7, B.C__ArgIndefiniteLength);
    },
    $isCborValue: 1
  };
  A._CborEncodeDefiniteLengthListImpl.prototype = {
    get$tags() {
      return this.inner.tags;
    },
    toJsonInternal$2(cyclicCheck, o) {
      return this.inner.toJsonInternal$2(type$.Set_Object._as(cyclicCheck), o);
    },
    encode$1(sink) {
      var t2, t3,
        t1 = this.inner;
      sink.addTags$1(t1.tags);
      t2 = t1._base;
      sink.addHeaderInfo$2(4, new A._ArgInt(t2.length));
      t3 = sink._references;
      if (!t3.add$1(0, t1))
        A.throwExpression(A.CborCyclicError$(t1));
      for (t2 = B.JSArray_methods.get$iterator(t2); t2.moveNext$0();)
        t2.get$current().encode$1(sink);
      t3.remove$1(0, t1);
    },
    $isCborValue: 1
  };
  A._CborDecimalFractionImpl.prototype = {
    toJsonInternal$2(cyclicCheck, o) {
      type$.Set_Object._as(cyclicCheck);
      return [this.exponent.toJsonInternal$2(cyclicCheck, o), this.mantissa.toJsonInternal$2(cyclicCheck, o)];
    },
    encode$1(sink) {
      var _0_0, t1, _this = this;
      sink.addTags$1(_this.tags);
      _0_0 = _this.type;
      $label0$0: {
        if (B.CborLengthType_0 === _0_0 || B.CborLengthType_2 === _0_0) {
          t1 = B._ArgInt_2;
          break $label0$0;
        }
        if (B.CborLengthType_1 === _0_0) {
          t1 = B.C__ArgIndefiniteLength;
          break $label0$0;
        }
        t1 = null;
      }
      sink.addHeaderInfo$2(4, t1);
      _this.exponent.encode$1(sink);
      _this.mantissa.encode$1(sink);
      if (_0_0 === B.CborLengthType_1)
        sink.addHeaderInfo$2(7, B.C__ArgIndefiniteLength);
    },
    $isCborList: 1,
    $isCborValue: 1,
    get$tags() {
      return this.tags;
    },
    get$type() {
      return this.type;
    }
  };
  A._CborRationalNumberImpl.prototype = {
    toJsonInternal$2(cyclicCheck, o) {
      type$.Set_Object._as(cyclicCheck);
      return [this.numerator.toJsonInternal$2(cyclicCheck, o), this.denominator.toJsonInternal$2(cyclicCheck, o)];
    },
    encode$1(sink) {
      var _0_0, t1, _this = this;
      sink.addTags$1(_this.tags);
      _0_0 = _this.type;
      $label0$0: {
        if (B.CborLengthType_0 === _0_0 || B.CborLengthType_2 === _0_0) {
          t1 = B._ArgInt_2;
          break $label0$0;
        }
        if (B.CborLengthType_1 === _0_0) {
          t1 = B.C__ArgIndefiniteLength;
          break $label0$0;
        }
        t1 = null;
      }
      sink.addHeaderInfo$2(4, t1);
      _this.numerator.encode$1(sink);
      _this.denominator.encode$1(sink);
      if (_0_0 === B.CborLengthType_1)
        sink.addHeaderInfo$2(7, B.C__ArgIndefiniteLength);
    },
    $isCborList: 1,
    $isCborValue: 1,
    get$tags() {
      return this.tags;
    },
    get$type() {
      return this.type;
    }
  };
  A._CborBigFloatImpl.prototype = {
    encode$1(sink) {
      var _0_0, t1, _this = this;
      sink.addTags$1(_this.tags);
      _0_0 = _this.type;
      $label0$0: {
        if (B.CborLengthType_0 === _0_0 || B.CborLengthType_2 === _0_0) {
          t1 = B._ArgInt_2;
          break $label0$0;
        }
        if (B.CborLengthType_1 === _0_0) {
          t1 = B.C__ArgIndefiniteLength;
          break $label0$0;
        }
        t1 = null;
      }
      sink.addHeaderInfo$2(4, t1);
      _this.exponent.encode$1(sink);
      _this.mantissa.encode$1(sink);
      if (_0_0 === B.CborLengthType_1)
        sink.addHeaderInfo$2(7, B.C__ArgIndefiniteLength);
    },
    toJsonInternal$2(cyclicCheck, o) {
      type$.Set_Object._as(cyclicCheck);
      return [this.exponent.toJsonInternal$2(cyclicCheck, o), this.mantissa.toJsonInternal$2(cyclicCheck, o)];
    },
    $isCborList: 1,
    $isCborValue: 1,
    get$tags() {
      return this.tags;
    },
    get$type() {
      return this.type;
    }
  };
  A.__CborBigFloatImpl_DelegatingList_CborValueMixin.prototype = {};
  A.__CborDecimalFractionImpl_DelegatingList_CborValueMixin.prototype = {};
  A.__CborEncodeDefiniteLengthListImpl_Object_CborValueMixin.prototype = {};
  A.__CborEncodeIndefiniteLengthListImpl_Object_CborValueMixin.prototype = {};
  A.__CborListImpl_DelegatingList_CborValueMixin.prototype = {};
  A.__CborRationalNumberImpl_DelegatingList_CborValueMixin.prototype = {};
  A._CborMapImpl.prototype = {
    toJsonInternal$2(cyclicCheck, o) {
      var result, _this = this;
      type$.Set_Object._as(cyclicCheck);
      if (!cyclicCheck.add$1(0, _this))
        throw A.wrapException(A.CborCyclicError$(_this));
      result = A.Map_Map$fromEntries(_this._base.get$entries().map$1$1(0, new A._CborMapImpl_toJsonInternal_closure(cyclicCheck, o), type$.MapEntry_of_String_and_nullable_Object), type$.String, type$.nullable_Object);
      cyclicCheck.remove$1(0, _this);
      return result;
    },
    encode$1(sink) {
      var _this = this,
        t1 = _this.type;
      if (t1 !== B.CborLengthType_0)
        if (t1 === B.CborLengthType_2) {
          t1 = _this._base;
          t1 = t1.get$length(t1) < 256;
        } else
          t1 = false;
      else
        t1 = true;
      if (t1)
        new A._CborEncodeDefiniteLengthMapImpl(_this).encode$1(sink);
      else
        new A._CborEncodeIndefiniteLengthMapImpl(_this).encode$1(sink);
    },
    $isCborMap: 1,
    $isCborValue: 1,
    get$tags() {
      return this.tags;
    }
  };
  A._CborMapImpl_toJsonInternal_closure.prototype = {
    call$1(a) {
      var t1, t2, k;
      type$.MapEntry_CborValue_CborValue._as(a);
      t1 = this.cyclicCheck;
      t2 = this.o;
      k = a.key.toJsonInternal$2(t1, t2);
      if (typeof k != "string")
        k = B.C_JsonCodec.encode$1(k);
      return new A.MapEntry(k, a.value.toJsonInternal$2(t1, t2), type$.MapEntry_of_String_and_nullable_Object);
    },
    $signature: 206
  };
  A._CborEncodeIndefiniteLengthMapImpl.prototype = {
    get$tags() {
      return this.inner.tags;
    },
    toJsonInternal$2(cyclicCheck, o) {
      return this.inner.toJsonInternal$2(type$.Set_Object._as(cyclicCheck), o);
    },
    encode$1(sink) {
      var t2, t3, t4,
        t1 = this.inner;
      sink.addTags$1(t1.tags);
      sink.addHeaderInfo$2(5, B.C__ArgIndefiniteLength);
      t2 = sink._references;
      if (!t2.add$1(0, t1))
        A.throwExpression(A.CborCyclicError$(t1));
      for (t3 = t1._base.get$entries(), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current();
        t4.key.encode$1(sink);
        t4.value.encode$1(sink);
      }
      t2.remove$1(0, t1);
      sink.addHeaderInfo$2(7, B.C__ArgIndefiniteLength);
    },
    $isCborValue: 1
  };
  A._CborEncodeDefiniteLengthMapImpl.prototype = {
    get$tags() {
      return this.inner.tags;
    },
    toJsonInternal$2(cyclicCheck, o) {
      return this.inner.toJsonInternal$2(type$.Set_Object._as(cyclicCheck), o);
    },
    encode$1(sink) {
      var t2, t3, t4,
        t1 = this.inner;
      sink.addTags$1(t1.tags);
      t2 = t1._base;
      sink.addHeaderInfo$2(5, new A._ArgInt(t2.get$length(t2)));
      t3 = sink._references;
      if (!t3.add$1(0, t1))
        A.throwExpression(A.CborCyclicError$(t1));
      for (t2 = t2.get$entries(), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t4 = t2.get$current();
        t4.key.encode$1(sink);
        t4.value.encode$1(sink);
      }
      t3.remove$1(0, t1);
    },
    $isCborValue: 1
  };
  A.__CborEncodeDefiniteLengthMapImpl_Object_CborValueMixin.prototype = {};
  A.__CborEncodeIndefiniteLengthMapImpl_Object_CborValueMixin.prototype = {};
  A.__CborMapImpl_DelegatingMap_CborValueMixin.prototype = {};
  A._CborSimpleValueImpl.prototype = {
    get$hashCode(_) {
      return A.Object_hash(this.simpleValue, A.Object_hashAll(this.tags), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return B.JSInt_methods.toString$0(this.simpleValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A._CborSimpleValueImpl && A.ListExtensions_equals(this.tags, other.tags, type$.int) && other.simpleValue === this.simpleValue;
    },
    encode$1(sink) {
      sink.addTags$1(this.tags);
      sink.addHeaderInfo$2(7, new A._ArgInt(this.simpleValue));
    },
    toJsonInternal$2(cyclicCheck, o) {
      type$.Set_Object._as(cyclicCheck);
      return o.substituteValue;
    },
    $isCborSimpleValue: 1,
    $isCborValue: 1,
    get$tags() {
      return this.tags;
    }
  };
  A._CborNullImpl.prototype = {
    toJsonInternal$2(cyclicCheck, o) {
      type$.Set_Object._as(cyclicCheck);
      return null;
    }
  };
  A._CborUndefinedImpl.prototype = {
    toJsonInternal$2(cyclicCheck, o) {
      type$.Set_Object._as(cyclicCheck);
      return o.substituteValue;
    }
  };
  A._CborBoolImpl.prototype = {
    toJsonInternal$2(cyclicCheck, o) {
      type$.Set_Object._as(cyclicCheck);
      return this.value;
    },
    $isCborBool: 1
  };
  A.__CborSimpleValueImpl_Object_CborValueMixin.prototype = {};
  A._CborStringImpl.prototype = {
    get$hashCode(_) {
      return A.Object_hashAll(A.IterableIterableExtension_get_flattened(A._setArrayType([this.get$utf8Bytes(), this.tags], type$.JSArray_List_int), type$.int));
    },
    get$utf8Bytes() {
      var t1 = this._utf8;
      if (t1 == null) {
        t1 = this._string$_string;
        t1.toString;
        t1 = this._utf8 = B.C_Utf8Encoder.convert$1(t1);
      }
      return t1;
    },
    toString$0(_) {
      var t1 = this._string$_string;
      if (t1 == null) {
        t1 = this._utf8;
        t1.toString;
        t1 = new A._Utf8Decoder(false)._convertGeneral$4(type$.List_int._as(t1), 0, null, true);
        this._string$_string = t1;
      }
      return t1;
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (type$.CborString._is(other)) {
        t1 = type$.int;
        t1 = A.ListExtensions_equals(this.tags, other.get$tags(), t1) && A.ListExtensions_equals(this.get$utf8Bytes(), other.get$utf8Bytes(), t1);
      } else
        t1 = false;
      return t1;
    },
    encode$1(sink) {
      new A._CborEncodeDefiniteLengthStringImpl(this).encode$1(sink);
    },
    toJsonInternal$2(cyclicCheck, o) {
      type$.Set_Object._as(cyclicCheck);
      return this.toString$0(0);
    },
    $isCborString: 1,
    $isCborValue: 1,
    get$tags() {
      return this.tags;
    }
  };
  A._CborIndefiniteLengthStringImpl.prototype = {
    get$hashCode(_) {
      return A.Object_hashAll(A.IterableIterableExtension_get_flattened(A._setArrayType([this.get$utf8Bytes(), this.tags], type$.JSArray_List_int), type$.int));
    },
    get$utf8Bytes() {
      var t1 = A.IterableIterableExtension_get_flattened(this._utf8, type$.int);
      t1 = A.List_List$_of(t1, t1.$ti._eval$1("Iterable.E"));
      t1.$flags = 1;
      return t1;
    },
    toString$0(_) {
      var t2, t3,
        t1 = this._string$_string;
      if (t1 == null) {
        t1 = this._utf8;
        t2 = A._arrayInstanceType(t1);
        t3 = t2._eval$1("MappedListIterable<1,String>");
        t1 = A.List_List$_of(new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.Utf8Decoder(false).get$convert()), t3), t3._eval$1("ListIterable.E"));
        t1.$flags = 1;
        t1 = this._string$_string = t1;
      }
      return B.JSArray_methods.join$0(t1);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (type$.CborString._is(other)) {
        t1 = type$.int;
        t1 = A.ListExtensions_equals(this.tags, other.get$tags(), t1) && A.ListExtensions_equals(this.get$utf8Bytes(), other.get$utf8Bytes(), t1);
      } else
        t1 = false;
      return t1;
    },
    encode$1(sink) {
      var t2, t3,
        t1 = this._string$_string;
      if (t1 == null) {
        t1 = this._utf8;
        t2 = A._arrayInstanceType(t1);
        t3 = t2._eval$1("MappedListIterable<1,String>");
        t1 = A.List_List$_of(new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(B.Utf8Decoder_true.get$convert()), t3), t3._eval$1("ListIterable.E"));
        t1.$flags = 1;
        t1 = this._string$_string = t1;
      }
      new A._CborEncodeIndefiniteLengthStringImpl(t1).encode$1(sink);
    },
    toJsonInternal$2(cyclicCheck, o) {
      type$.Set_Object._as(cyclicCheck);
      return this.toString$0(0);
    },
    $isCborString: 1,
    $isCborValue: 1,
    get$tags() {
      return this.tags;
    }
  };
  A._CborEncodeIndefiniteLengthStringImpl.prototype = {
    encode$1(sink) {
      var t1, t2, _i;
      sink.addTags$1(B.List_empty);
      sink.addHeaderInfo$2(3, B.C__ArgIndefiniteLength);
      for (t1 = this.items, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        new A._CborEncodeDefiniteLengthStringImpl(new A._CborStringImpl(B.List_empty, t1[_i], null)).encode$1(sink);
      sink.addHeaderInfo$2(7, B.C__ArgIndefiniteLength);
    },
    toJsonInternal$2(cyclicCheck, o) {
      type$.Set_Object._as(cyclicCheck);
      return new A._CborStringImpl(B.List_empty, B.JSArray_methods.join$0(this.items), null).toString$0(0);
    },
    $isCborValue: 1,
    get$tags() {
      return B.List_empty;
    }
  };
  A._CborEncodeDefiniteLengthStringImpl.prototype = {
    get$tags() {
      return this.inner.tags;
    },
    toJsonInternal$2(cyclicCheck, o) {
      type$.Set_Object._as(cyclicCheck);
      return this.inner.toString$0(0);
    },
    encode$1(sink) {
      var t1 = this.inner,
        bytes = B.C_Utf8Encoder.convert$1(t1.toString$0(0));
      sink.addTags$1(t1.tags);
      sink.addHeaderInfo$2(3, new A._ArgInt(bytes.length));
      sink.buffer.addAll$1(0, type$.List_int._as(bytes));
    },
    $isCborValue: 1
  };
  A._CborDateTimeStringImpl.prototype = {};
  A._CborUriImpl.prototype = {};
  A._CborBase64Impl.prototype = {};
  A._CborBase64UrlImpl.prototype = {};
  A._CborRegexImpl.prototype = {};
  A._CborMimeImpl.prototype = {};
  A.__CborEncodeDefiniteLengthStringImpl_Object_CborValueMixin.prototype = {};
  A.__CborEncodeIndefiniteLengthStringImpl_Object_CborValueMixin.prototype = {};
  A.__CborIndefiniteLengthStringImpl_Object_CborValueMixin.prototype = {};
  A.__CborStringImpl_Object_CborValueMixin.prototype = {};
  A.CborLengthType.prototype = {
    _enumToString$0() {
      return "CborLengthType." + this._core$_name;
    }
  };
  A.StringCharacters.prototype = {
    get$iterator(_) {
      return new A.StringCharacterRange(this.string, 0, 0);
    },
    get$first(_) {
      var t1 = this.string,
        t2 = t1.length;
      return t2 === 0 ? A.throwExpression(A.StateError$("No element")) : B.JSString_methods.substring$2(t1, 0, new A.Breaks(t1, t2, 0, 240).nextBreak$0());
    },
    get$isEmpty(_) {
      return this.string.length === 0;
    },
    get$isNotEmpty(_) {
      return this.string.length !== 0;
    },
    get$length(_) {
      var brk, $length,
        t1 = this.string,
        t2 = t1.length;
      if (t2 === 0)
        return 0;
      brk = new A.Breaks(t1, t2, 0, 240);
      for ($length = 0; brk.nextBreak$0() >= 0;)
        ++$length;
      return $length;
    },
    elementAt$1(_, index) {
      var t1, t2, count, breaks, start, end;
      A.RangeError_checkNotNegative(index, "index");
      t1 = this.string;
      t2 = t1.length;
      count = 0;
      if (t2 !== 0) {
        breaks = new A.Breaks(t1, t2, 0, 240);
        for (start = 0; end = breaks.nextBreak$0(), end >= 0; start = end) {
          if (count === index)
            return B.JSString_methods.substring$2(t1, start, end);
          ++count;
        }
      }
      throw A.wrapException(A.IndexError$(index, this, "index", null, count));
    },
    _skipIndices$3(count, cursor, breaks) {
      var t1, nextBreak;
      if (count === 0 || cursor === this.string.length)
        return cursor;
      if (breaks == null) {
        t1 = this.string;
        breaks = new A.Breaks(t1, t1.length, cursor, 240);
      }
      do {
        nextBreak = breaks.nextBreak$0();
        if (nextBreak < 0)
          break;
        if (--count, count > 0) {
          cursor = nextBreak;
          continue;
        } else {
          cursor = nextBreak;
          break;
        }
      } while (true);
      return cursor;
    },
    skip$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this._skip$1(count);
    },
    _skip$1(count) {
      var start = this._skipIndices$3(count, 0, null),
        t1 = this.string;
      if (start === t1.length)
        return B.StringCharacters_GVp;
      return new A.StringCharacters(B.JSString_methods.substring$1(t1, start));
    },
    take$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this._take$1(count);
    },
    _take$1(count) {
      var end = this._skipIndices$3(count, 0, null),
        t1 = this.string;
      if (end === t1.length)
        return this;
      return new A.StringCharacters(B.JSString_methods.substring$2(t1, 0, end));
    },
    getRange$2(_, start, end) {
      var t1, t2, breaks, startIndex, _this = this;
      A.RangeError_checkNotNegative(start, "start");
      if (end < start)
        throw A.wrapException(A.RangeError$range(end, start, null, "end", null));
      if (end === start)
        return B.StringCharacters_GVp;
      if (start === 0)
        return _this._take$1(end);
      t1 = _this.string;
      t2 = t1.length;
      if (t2 === 0)
        return _this;
      breaks = new A.Breaks(t1, t2, 0, 240);
      startIndex = _this._skipIndices$3(start, 0, breaks);
      if (startIndex === t2)
        return B.StringCharacters_GVp;
      return new A.StringCharacters(B.JSString_methods.substring$2(t1, startIndex, _this._skipIndices$3(end - start, start, breaks)));
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.StringCharacters && this.string === other.string;
    },
    get$hashCode(_) {
      return B.JSString_methods.get$hashCode(this.string);
    },
    toString$0(_) {
      return this.string;
    }
  };
  A.StringCharacterRange.prototype = {
    get$current() {
      var _this = this,
        t1 = _this._currentCache;
      return t1 == null ? _this._currentCache = B.JSString_methods.substring$2(_this._characters_impl$_string, _this._characters_impl$_start, _this._end) : t1;
    },
    moveNext$0() {
      return this._advanceEnd$2(1, this._end);
    },
    _advanceEnd$2(count, newStart) {
      var index, t1, t2, state, char, surrogate, nextIndex, t3, index0, category, nextSurrogate, _this = this,
        _s6144_ = string$.u1132_____,
        _s10964_ = string$.x10_____,
        _s500_ = string$.x15_____;
      if (count > 0) {
        index = _this._end;
        for (t1 = _this._characters_impl$_string, t2 = t1.length, state = 240; index < t2; index = nextIndex) {
          if (!(index >= 0))
            return A.ioore(t1, index);
          char = t1.charCodeAt(index);
          surrogate = char ^ 55296;
          nextIndex = index + 1;
          if (surrogate > 1023) {
            t3 = char >>> 5;
            if (!(t3 < 6144))
              return A.ioore(_s6144_, t3);
            index0 = _s6144_.charCodeAt(t3) + (char & 31);
            if (!(index0 < 10964))
              return A.ioore(_s10964_, index0);
            category = _s10964_.charCodeAt(index0);
          } else {
            category = 1;
            if (nextIndex < t2) {
              nextSurrogate = t1.charCodeAt(nextIndex) ^ 56320;
              if (nextSurrogate <= 1023) {
                ++nextIndex;
                t3 = 2048 + ((nextSurrogate >>> 8) + (surrogate << 2 >>> 0));
                if (!(t3 < 6144))
                  return A.ioore(_s6144_, t3);
                t3 = _s6144_.charCodeAt(t3) + (nextSurrogate & 255);
                if (!(t3 < 10964))
                  return A.ioore(_s10964_, t3);
                category = _s10964_.charCodeAt(t3);
              }
            }
          }
          t3 = (state & -4) + category;
          if (!(t3 >= 0 && t3 < 500))
            return A.ioore(_s500_, t3);
          state = _s500_.charCodeAt(t3);
          if ((state & 1) !== 0) {
            --count;
            t3 = count === 0;
          } else
            t3 = false;
          if (t3) {
            _this._characters_impl$_start = newStart;
            _this._end = index;
            _this._currentCache = null;
            return true;
          }
        }
        _this._characters_impl$_start = newStart;
        _this._end = t2;
        _this._currentCache = null;
        return count === 1 && state !== 240;
      } else {
        _this._characters_impl$_start = newStart;
        _this._currentCache = null;
        return true;
      }
    },
    $isIterator: 1
  };
  A.Breaks.prototype = {
    nextBreak$0() {
      var t1, t2, _this = this,
        _s500_ = string$.x15_____;
      for (t1 = _this.end; t2 = _this.cursor, t2 < t1;) {
        _this.step$0();
        if ((_this.state & 3) !== 0)
          return t2;
      }
      t1 = (_this.state & -4) + 18;
      if (!(t1 < 500))
        return A.ioore(_s500_, t1);
      t1 = _s500_.charCodeAt(t1);
      _this.state = t1;
      if ((t1 & 3) !== 0)
        return t2;
      return -1;
    },
    step$0() {
      var char, surrogate, index, nextSurrogate, category, _this = this,
        _s6144_ = string$.u1132_____,
        _s10964_ = string$.x10_____,
        _s500_ = string$.x15_____,
        t1 = _this.base,
        t2 = _this.cursor,
        t3 = _this.cursor = t2 + 1,
        t4 = t1.length;
      if (!(t2 >= 0 && t2 < t4))
        return A.ioore(t1, t2);
      char = t1.charCodeAt(t2);
      surrogate = char ^ 55296;
      if (surrogate > 1023) {
        t1 = _this.state;
        t2 = char >>> 5;
        if (!(t2 < 6144))
          return A.ioore(_s6144_, t2);
        index = _s6144_.charCodeAt(t2) + (char & 31);
        if (!(index < 10964))
          return A.ioore(_s10964_, index);
        t1 = (t1 & -4) + _s10964_.charCodeAt(index);
        if (!(t1 < 500))
          return A.ioore(_s500_, t1);
        _this.state = _s500_.charCodeAt(t1);
        return;
      }
      if (t3 < _this.end) {
        if (!(t3 >= 0 && t3 < t4))
          return A.ioore(t1, t3);
        nextSurrogate = t1.charCodeAt(t3) ^ 56320;
        t1 = nextSurrogate <= 1023;
      } else {
        nextSurrogate = null;
        t1 = false;
      }
      if (t1) {
        t1 = 2048 + ((nextSurrogate >>> 8) + (surrogate << 2 >>> 0));
        if (!(t1 < 6144))
          return A.ioore(_s6144_, t1);
        t1 = _s6144_.charCodeAt(t1) + (nextSurrogate & 255);
        if (!(t1 < 10964))
          return A.ioore(_s10964_, t1);
        category = _s10964_.charCodeAt(t1);
        _this.cursor = t3 + 1;
      } else
        category = 1;
      t1 = (_this.state & -4) + category;
      if (!(t1 < 500))
        return A.ioore(_s500_, t1);
      _this.state = _s500_.charCodeAt(t1);
    }
  };
  A.DefaultEquality.prototype = {
    equals$2(e1, e2) {
      return J.$eq$(e1, e2);
    },
    hash$1(e) {
      return J.get$hashCode$(e);
    },
    $isEquality: 1
  };
  A.IterableEquality.prototype = {
    equals$2(elements1, elements2) {
      var it1, it2, hasNext,
        t1 = this.$ti._eval$1("Iterable<1>?");
      t1._as(elements1);
      t1._as(elements2);
      if (elements1 === elements2)
        return true;
      it1 = J.get$iterator$ax(elements1);
      it2 = J.get$iterator$ax(elements2);
      for (t1 = this._elementEquality; true;) {
        hasNext = it1.moveNext$0();
        if (hasNext !== it2.moveNext$0())
          return false;
        if (!hasNext)
          return true;
        if (!t1.equals$2(it1.get$current(), it2.get$current()))
          return false;
      }
    },
    hash$1(elements) {
      var t1, t2, hash;
      this.$ti._eval$1("Iterable<1>?")._as(elements);
      for (t1 = J.get$iterator$ax(elements), t2 = this._elementEquality, hash = 0; t1.moveNext$0();) {
        hash = hash + t2.hash$1(t1.get$current()) & 2147483647;
        hash = hash + (hash << 10 >>> 0) & 2147483647;
        hash ^= hash >>> 6;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A.ListEquality.prototype = {
    equals$2(list1, list2) {
      var $length, t2, t3, i,
        t1 = this.$ti._eval$1("List<1>?");
      t1._as(list1);
      t1._as(list2);
      if (list1 === list2)
        return true;
      t1 = J.getInterceptor$asx(list1);
      $length = t1.get$length(list1);
      t2 = J.getInterceptor$asx(list2);
      if ($length !== t2.get$length(list2))
        return false;
      for (t3 = this._elementEquality, i = 0; i < $length; ++i)
        if (!t3.equals$2(t1.$index(list1, i), t2.$index(list2, i)))
          return false;
      return true;
    },
    hash$1(list) {
      var t1, t2, hash, i;
      this.$ti._eval$1("List<1>?")._as(list);
      for (t1 = J.getInterceptor$asx(list), t2 = this._elementEquality, hash = 0, i = 0; i < t1.get$length(list); ++i) {
        hash = hash + t2.hash$1(t1.$index(list, i)) & 2147483647;
        hash = hash + (hash << 10 >>> 0) & 2147483647;
        hash ^= hash >>> 6;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A._UnorderedEquality.prototype = {
    equals$2(elements1, elements2) {
      var counts, $length, e, count,
        t1 = A._instanceType(this),
        t2 = t1._eval$1("_UnorderedEquality.T?");
      t2._as(elements1);
      t2._as(elements2);
      if (elements1 === elements2)
        return true;
      t2 = this._elementEquality;
      counts = A.HashMap_HashMap(t1._eval$1("bool(_UnorderedEquality.E,_UnorderedEquality.E)")._as(t2.get$equals()), t1._eval$1("int(_UnorderedEquality.E)")._as(t2.get$hash()), t2.get$isValidKey(), t1._eval$1("_UnorderedEquality.E"), type$.int);
      for (t1 = J.get$iterator$ax(elements1), $length = 0; t1.moveNext$0();) {
        e = t1.get$current();
        count = counts.$index(0, e);
        counts.$indexSet(0, e, (count == null ? 0 : count) + 1);
        ++$length;
      }
      for (t1 = J.get$iterator$ax(elements2); t1.moveNext$0();) {
        e = t1.get$current();
        count = counts.$index(0, e);
        if (count == null || count === 0)
          return false;
        counts.$indexSet(0, e, count - 1);
        --$length;
      }
      return $length === 0;
    },
    hash$1(elements) {
      var t1, t2, hash;
      A._instanceType(this)._eval$1("_UnorderedEquality.T?")._as(elements);
      for (t1 = J.get$iterator$ax(elements), t2 = this._elementEquality, hash = 0; t1.moveNext$0();)
        hash = hash + t2.hash$1(t1.get$current()) & 2147483647;
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A.UnorderedIterableEquality.prototype = {};
  A.SetEquality.prototype = {};
  A._MapEntry.prototype = {
    get$hashCode(_) {
      var t1 = this.equality;
      return 3 * t1._keyEquality.hash$1(this.key) + 7 * t1._valueEquality.hash$1(this.value) & 2147483647;
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof A._MapEntry) {
        t1 = this.equality;
        t1 = t1._keyEquality.equals$2(this.key, other.key) && t1._valueEquality.equals$2(this.value, other.value);
      } else
        t1 = false;
      return t1;
    }
  };
  A.MapEquality.prototype = {
    equals$2(map1, map2) {
      var equalElementCounts, key, entry, count,
        t1 = this.$ti._eval$1("Map<1,2>?");
      t1._as(map1);
      t1._as(map2);
      if (map1 === map2)
        return true;
      if (map1.get$length(map1) !== map2.get$length(map2))
        return false;
      equalElementCounts = A.HashMap_HashMap(null, null, null, type$._MapEntry, type$.int);
      for (t1 = map1.get$keys(), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        key = t1.get$current();
        entry = new A._MapEntry(this, key, map1.$index(0, key));
        count = equalElementCounts.$index(0, entry);
        equalElementCounts.$indexSet(0, entry, (count == null ? 0 : count) + 1);
      }
      for (t1 = map2.get$keys(), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        key = t1.get$current();
        entry = new A._MapEntry(this, key, map2.$index(0, key));
        count = equalElementCounts.$index(0, entry);
        if (count == null || count === 0)
          return false;
        equalElementCounts.$indexSet(0, entry, count - 1);
      }
      return true;
    },
    hash$1(map) {
      var t2, t3, t4, hash, key, keyHash, t5,
        t1 = this.$ti;
      t1._eval$1("Map<1,2>?")._as(map);
      for (t2 = map.get$keys(), t2 = t2.get$iterator(t2), t3 = this._keyEquality, t4 = this._valueEquality, t1 = t1._rest[1], hash = 0; t2.moveNext$0();) {
        key = t2.get$current();
        keyHash = t3.hash$1(key);
        t5 = map.$index(0, key);
        hash = hash + 3 * keyHash + 7 * t4.hash$1(t5 == null ? t1._as(t5) : t5) & 2147483647;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A.DeepCollectionEquality.prototype = {
    equals$2(e1, e2) {
      var t2, _this = this,
        t1 = type$.Set_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && new A.SetEquality(_this, type$.SetEquality_dynamic).equals$2(e1, e2);
      t1 = type$.Map_dynamic_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && new A.MapEquality(_this, _this, type$.MapEquality_dynamic_dynamic).equals$2(e1, e2);
      if (!_this._unordered) {
        t1 = type$.List_dynamic;
        if (t1._is(e1))
          return t1._is(e2) && new A.ListEquality(_this, type$.ListEquality_dynamic).equals$2(e1, e2);
        t1 = type$.Iterable_dynamic;
        if (t1._is(e1))
          return t1._is(e2) && new A.IterableEquality(_this, type$.IterableEquality_dynamic).equals$2(e1, e2);
      } else {
        t1 = type$.Iterable_dynamic;
        if (t1._is(e1)) {
          t2 = type$.List_dynamic;
          if (t2._is(e1) !== t2._is(e2))
            return false;
          return t1._is(e2) && new A.UnorderedIterableEquality(_this, type$.UnorderedIterableEquality_dynamic).equals$2(e1, e2);
        }
      }
      return J.$eq$(e1, e2);
    },
    hash$1(o) {
      var _this = this;
      if (type$.Set_dynamic._is(o))
        return new A.SetEquality(_this, type$.SetEquality_dynamic).hash$1(o);
      if (type$.Map_dynamic_dynamic._is(o))
        return new A.MapEquality(_this, _this, type$.MapEquality_dynamic_dynamic).hash$1(o);
      if (!_this._unordered) {
        if (type$.List_dynamic._is(o))
          return new A.ListEquality(_this, type$.ListEquality_dynamic).hash$1(o);
        if (type$.Iterable_dynamic._is(o))
          return new A.IterableEquality(_this, type$.IterableEquality_dynamic).hash$1(o);
      } else if (type$.Iterable_dynamic._is(o))
        return new A.UnorderedIterableEquality(_this, type$.UnorderedIterableEquality_dynamic).hash$1(o);
      return J.get$hashCode$(o);
    },
    isValidKey$1(o) {
      return true;
    },
    $isEquality: 1
  };
  A.UnmodifiableSetView.prototype = {};
  A.UnmodifiableSetMixin.prototype = {
    remove$1(_, value) {
      return A.UnmodifiableSetMixin__throw();
    }
  };
  A._UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin.prototype = {};
  A._DelegatingIterableBase.prototype = {
    any$1(_, test) {
      A._instanceType(this)._eval$1("bool(_DelegatingIterableBase.E)")._as(test);
      return J.any$1$ax(this.get$_base(), test);
    },
    cast$1$0(_, $T) {
      return J.cast$1$0$ax(this.get$_base(), $T);
    },
    elementAt$1(_, index) {
      return J.elementAt$1$ax(this.get$_base(), index);
    },
    get$first(_) {
      return J.get$first$ax(this.get$_base());
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.get$_base());
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this.get$_base());
    },
    get$iterator(_) {
      return J.get$iterator$ax(this.get$_base());
    },
    join$1(_, separator) {
      return J.join$1$ax(this.get$_base(), separator);
    },
    get$length(_) {
      return J.get$length$asx(this.get$_base());
    },
    map$1$1(_, f, $T) {
      A._instanceType(this)._bind$1($T)._eval$1("1(_DelegatingIterableBase.E)")._as(f);
      return J.map$1$1$ax(this.get$_base(), f, $T);
    },
    map$1(_, f) {
      return this.map$1$1(0, f, type$.dynamic);
    },
    skip$1(_, n) {
      return J.skip$1$ax(this.get$_base(), n);
    },
    take$1(_, n) {
      return J.take$1$ax(this.get$_base(), n);
    },
    toList$1$growable(_, growable) {
      return J.toList$1$growable$ax(this.get$_base(), growable);
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    where$1(_, test) {
      A._instanceType(this)._eval$1("bool(_DelegatingIterableBase.E)")._as(test);
      return J.where$1$ax(this.get$_base(), test);
    },
    toString$0(_) {
      return J.toString$0$(this.get$_base());
    },
    $isIterable: 1
  };
  A.DelegatingList.prototype = {
    $index(_, index) {
      var t1 = this._base;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      return t1[index];
    },
    $indexSet(_, index, value) {
      B.JSArray_methods.$indexSet(this._base, index, A._instanceType(this)._eval$1("DelegatingList.E")._as(value));
    },
    cast$1$0(_, $T) {
      var t1 = this._base;
      return new A.CastList(t1, A._arrayInstanceType(t1)._eval$1("@<1>")._bind$1($T)._eval$1("CastList<1,2>"));
    },
    get$reversed(_) {
      var t1 = this._base;
      return new A.ReversedListIterable(t1, A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"));
    },
    $isEfficientLengthIterable: 1,
    $isList: 1,
    get$_base() {
      return this._base;
    }
  };
  A.DelegatingSet.prototype = {
    cast$1$0(_, $T) {
      return this._base.cast$1$0(0, $T);
    },
    remove$1(_, value) {
      return this._base.remove$1(0, value);
    },
    $isEfficientLengthIterable: 1,
    $isSet: 1,
    get$_base() {
      return this._base;
    }
  };
  A.DelegatingMap.prototype = {
    $index(_, key) {
      return this._base.$index(0, key);
    },
    get$entries() {
      return this._base.get$entries();
    },
    forEach$1(_, f) {
      this._base.forEach$1(0, A._instanceType(this)._eval$1("~(DelegatingMap.K,DelegatingMap.V)")._as(f));
    },
    get$isEmpty(_) {
      var t1 = this._base;
      return t1.get$isEmpty(t1);
    },
    get$keys() {
      return this._base.get$keys();
    },
    get$length(_) {
      var t1 = this._base;
      return t1.get$length(t1);
    },
    map$2$1(_, transform, $K2, $V2) {
      return this._base.map$2$1(0, A._instanceType(this)._bind$1($K2)._bind$1($V2)._eval$1("MapEntry<1,2>(DelegatingMap.K,DelegatingMap.V)")._as(transform), $K2, $V2);
    },
    map$1(_, transform) {
      var t1 = type$.dynamic;
      return this.map$2$1(0, transform, t1, t1);
    },
    toString$0(_) {
      return this._base.toString$0(0);
    },
    $isMap: 1
  };
  A.Digest.prototype = {
    $eq(_, other) {
      var a, b, n, t1, mismatch, i, t2;
      if (other == null)
        return false;
      if (other instanceof A.Digest) {
        a = this.bytes;
        b = other.bytes;
        n = a.length;
        t1 = b.length;
        if (n !== t1)
          return false;
        for (mismatch = 0, i = 0; i < n; ++i) {
          t2 = a[i];
          if (!(i < t1))
            return A.ioore(b, i);
          mismatch |= t2 ^ b[i];
        }
        return mismatch === 0;
      }
      return false;
    },
    get$hashCode(_) {
      return A.Object_hashAll(this.bytes);
    },
    toString$0(_) {
      return A._hexEncode(this.bytes);
    }
  };
  A.DigestSink.prototype = {$isSink: 1};
  A.Hash.prototype = {
    convert$1(input) {
      var innerSink, t1, t2, t3;
      type$.List_int._as(input);
      innerSink = new A.DigestSink();
      type$.Sink_Digest._as(innerSink);
      t1 = new Uint32Array(A._ensureNativeList(A._setArrayType([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], type$.JSArray_int)));
      t2 = new Uint32Array(64);
      t3 = new Uint8Array(0);
      t1 = new A._Sha256Sink(t1, t2, innerSink, new Uint32Array(16), new A.Uint8Buffer(t3, 0));
      t1.add$1(0, input);
      t1.close$0();
      t1 = innerSink._digest_sink$_value;
      t1.toString;
      return t1;
    }
  };
  A.HashSink.prototype = {
    add$1(_, data) {
      var _this = this;
      type$.List_int._as(data);
      if (_this._isClosed)
        throw A.wrapException(A.StateError$("Hash.add() called after close()."));
      _this._lengthInBytes = _this._lengthInBytes + J.get$length$asx(data);
      _this._pendingData.addAll$1(0, data);
      _this._iterate$0();
    },
    close$0() {
      var t1, t2, _this = this;
      if (_this._isClosed)
        return;
      _this._isClosed = true;
      _this._finalizeData$0();
      _this._iterate$0();
      t1 = _this._hash_sink$_sink;
      t2 = _this._byteDigest$0();
      if (t1._digest_sink$_value != null)
        A.throwExpression(A.StateError$("add may only be called once."));
      t1._digest_sink$_value = new A.Digest(t2);
    },
    _byteDigest$0() {
      var cachedDigest, t1, byteDigest, byteData, t2, i, t3;
      if (B.C_Endian === $.$get$Endian_host())
        return J.asUint8List$0$x(B.NativeUint32List_methods.get$buffer(this._digest));
      cachedDigest = this._digest;
      t1 = cachedDigest.byteLength;
      byteDigest = new Uint8Array(t1);
      byteData = J.asByteData$0$x(B.NativeUint8List_methods.get$buffer(byteDigest));
      for (t1 = cachedDigest.length, t2 = byteData.$flags | 0, i = 0; i < t1; ++i) {
        t3 = cachedDigest[i];
        t2 & 2 && A.throwUnsupportedOperation(byteData, 11);
        byteData.setUint32(i * 4, t3, false);
      }
      return byteDigest;
    },
    _iterate$0() {
      var t3, t4, i, j, t5,
        t1 = this._pendingData,
        pendingDataBytes = J.asByteData$0$x(B.NativeUint8List_methods.get$buffer(t1._typed_buffer$_buffer)),
        t2 = this._currentChunk,
        pendingDataChunks = B.JSInt_methods.$tdiv(t1._typed_buffer$_length, t2.byteLength);
      for (t3 = t2.length, t4 = t2.$flags | 0, i = 0; i < pendingDataChunks; ++i) {
        for (j = 0; j < t3; ++j) {
          t5 = pendingDataBytes.getUint32(i * t2.byteLength + j * 4, false);
          t4 & 2 && A.throwUnsupportedOperation(t2);
          t2[j] = t5;
        }
        this.updateHash$1(t2);
      }
      t1.removeRange$2(t1, 0, pendingDataChunks * t2.byteLength);
    },
    _finalizeData$0() {
      var contentsLength, t3, i, lengthInBits, offset, byteData, highBits, _this = this,
        t1 = _this._pendingData,
        t2 = A._instanceType(t1)._eval$1("TypedDataBuffer.E");
      t1._typed_buffer$_add$1(t2._as(128));
      contentsLength = _this._lengthInBytes + 1 + 8;
      t3 = _this._currentChunk.byteLength;
      for (t3 = ((contentsLength + t3 - 1 & -t3) >>> 0) - contentsLength, i = 0; i < t3; ++i)
        t1._typed_buffer$_add$1(t2._as(0));
      t2 = _this._lengthInBytes;
      if (t2 > 1125899906842623)
        throw A.wrapException(A.UnsupportedError$("Hashing is unsupported for messages with more than 2^53 bits."));
      lengthInBits = t2 * 8;
      offset = t1._typed_buffer$_length;
      t1.addAll$1(0, new Uint8Array(8));
      byteData = J.asByteData$0$x(B.NativeUint8List_methods.get$buffer(t1._typed_buffer$_buffer));
      highBits = B.JSInt_methods._tdivFast$1(lengthInBits, 4294967296);
      byteData.$flags & 2 && A.throwUnsupportedOperation(byteData, 11);
      byteData.setUint32(offset, highBits, false);
      byteData.setUint32(offset + 4, lengthInBits >>> 0, false);
    },
    $isSink: 1
  };
  A._Sha256.prototype = {};
  A._Sha32BitSink.prototype = {
    updateHash$1(chunk) {
      var t1, t2, t3, i, t4, t5, t6, a, b, c, d, e, f, g, h, a0, temp1, e0, a1;
      for (t1 = this._extended, t2 = chunk.length, t3 = t1.$flags | 0, i = 0; i < 16; ++i) {
        if (!(i < t2))
          return A.ioore(chunk, i);
        t4 = chunk[i];
        t3 & 2 && A.throwUnsupportedOperation(t1);
        t1[i] = t4;
      }
      for (i = 16; i < 64; ++i) {
        t2 = t1[i - 2];
        t4 = t1[i - 7];
        t5 = t1[i - 15];
        t6 = t1[i - 16];
        t3 & 2 && A.throwUnsupportedOperation(t1);
        t1[i] = ((((t2 >>> 17 | t2 << 15) ^ (t2 >>> 19 | t2 << 13) ^ t2 >>> 10) >>> 0) + t4 >>> 0) + ((((t5 >>> 7 | t5 << 25) ^ (t5 >>> 18 | t5 << 14) ^ t5 >>> 3) >>> 0) + t6 >>> 0) >>> 0;
      }
      t2 = this._digest;
      t3 = t2.length;
      if (0 >= t3)
        return A.ioore(t2, 0);
      a = t2[0];
      if (1 >= t3)
        return A.ioore(t2, 1);
      b = t2[1];
      if (2 >= t3)
        return A.ioore(t2, 2);
      c = t2[2];
      if (3 >= t3)
        return A.ioore(t2, 3);
      d = t2[3];
      if (4 >= t3)
        return A.ioore(t2, 4);
      e = t2[4];
      if (5 >= t3)
        return A.ioore(t2, 5);
      f = t2[5];
      if (6 >= t3)
        return A.ioore(t2, 6);
      g = t2[6];
      if (7 >= t3)
        return A.ioore(t2, 7);
      h = t2[7];
      for (a0 = a, i = 0; i < 64; ++i, h = g, g = f, f = e, e = e0, d = c, c = b, b = a0, a0 = a1) {
        temp1 = (h + (((e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7)) >>> 0) >>> 0) + (((e & f ^ ~e & g) >>> 0) + (B.List_H5O[i] + t1[i] >>> 0) >>> 0) >>> 0;
        e0 = d + temp1 >>> 0;
        a1 = temp1 + ((((a0 >>> 2 | a0 << 30) ^ (a0 >>> 13 | a0 << 19) ^ (a0 >>> 22 | a0 << 10)) >>> 0) + ((a0 & b ^ a0 & c ^ b & c) >>> 0) >>> 0) >>> 0;
      }
      t2.$flags & 2 && A.throwUnsupportedOperation(t2);
      t2[0] = a0 + a >>> 0;
      t2[1] = b + t2[1] >>> 0;
      t2[2] = c + t2[2] >>> 0;
      t2[3] = d + t2[3] >>> 0;
      t2[4] = e + t2[4] >>> 0;
      t2[5] = f + t2[5] >>> 0;
      t2[6] = g + t2[6] >>> 0;
      t2[7] = h + t2[7] >>> 0;
    }
  };
  A._Sha256Sink.prototype = {};
  A.Base58Exception.prototype = {};
  A.Alphabet.prototype = {
    Alphabet$1(s, _box_0) {
      var t1, _this = this;
      if (s.length !== 58)
        throw A.wrapException(A.Base58Exception$("base58 alphabets must be 58 bytes long"));
      t1 = type$.List_int;
      _this.__Alphabet_encode_A = t1._as(new A.CodeUnits(s));
      _this.__Alphabet_decode_A = t1._as(A.List_List$filled(128, -1, false, type$.int));
      _box_0.distinct = 0;
      t1 = _this.__Alphabet_encode_A;
      new A.ListMapView(t1, A._instanceType(t1)._eval$1("ListMapView<ListBase.E>")).forEach$1(0, new A.Alphabet_closure(_box_0, _this));
      if (_box_0.distinct !== 58)
        throw A.wrapException(A.Base58Exception$("provided alphabet does not consist of 58 distinct characters"));
    }
  };
  A.Alphabet_closure.prototype = {
    call$2(i, b) {
      var t1;
      A._asInt(b);
      t1 = this.$this.__Alphabet_decode_A;
      t1 === $ && A.throwLateFieldNI("decode");
      if (!(b >= 0 && b < 128))
        return A.ioore(t1, b);
      if (t1[b] === -1)
        ++this._box_0.distinct;
      B.JSArray_methods.$indexSet(t1, b, i & 255);
    },
    $signature: 209
  };
  A.FastBase58EncodingAlphabet_closure.prototype = {
    call$1(b) {
      var t1, t2, t3, t4, carry;
      A._asInt(b);
      t1 = this._box_0;
      t2 = t1.i = t1.size - 1;
      t3 = this.out;
      t4 = t3.length;
      carry = b;
      while (true) {
        if (!(t2 > t1.high || carry !== 0))
          break;
        if (!(t2 >= 0 && t2 < t4))
          return A.ioore(t3, t2);
        carry = carry + 256 * t3[t2] >>> 0;
        B.JSArray_methods.$indexSet(t3, t2, B.JSInt_methods.$mod(carry, 58));
        carry = carry / 58 | 0;
        t2 = --t1.i;
      }
      t1.high = t2;
    },
    $signature: 75
  };
  A.FastBase58DecodingAlphabet_closure.prototype = {
    call$1(r) {
      var t1, t2, j, t3, t4, t;
      A._asInt(r);
      if (r > 127)
        throw A.wrapException(A.Base58Exception$("high-bit set on invalid digit"));
      t1 = this.alphabet.__Alphabet_decode_A;
      t1 === $ && A.throwLateFieldNI("decode");
      if (!(r >= 0))
        return A.ioore(t1, r);
      t1 = t1[r];
      if (t1 === -1)
        throw A.wrapException(A.Base58Exception$("invalid base58 digit" + A.String_String$fromCharCode(r)));
      t2 = this._box_0;
      t2.c = t1;
      for (t1 = this.outi, j = t1.length - 1; j >= 0; --j) {
        t3 = $.$get$support64();
        t4 = t2.c;
        if (t3) {
          t = t2.t = t1[j] * 58 + t4;
          t2.c = B.JSInt_methods._shrOtherPositive$1(t, 32);
          B.JSArray_methods.$indexSet(t1, j, t >>> 0);
        } else {
          t = t2.t = t1[j] * 58 + t4;
          t2.c = B.JSInt_methods._tdivFast$1(t, 4294967295);
          B.JSArray_methods.$indexSet(t1, j, t >>> 0);
        }
      }
    },
    $signature: 75
  };
  A.EqualUnmodifiableListView.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return this.$ti._is(other) && A.getRuntimeTypeOfDartObject(other) === A.getRuntimeTypeOfDartObject(this) && J.$eq$(other._freezed_annotation$_source, this._freezed_annotation$_source);
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this._freezed_annotation$_source, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.EqualUnmodifiableSetView.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return this.$ti._is(other) && A.getRuntimeTypeOfDartObject(other) === A.getRuntimeTypeOfDartObject(this) && other._freezed_annotation$_source.$eq(0, this._freezed_annotation$_source);
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this._freezed_annotation$_source, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.EqualUnmodifiableMapView.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return this.$ti._is(other) && A.getRuntimeTypeOfDartObject(other) === A.getRuntimeTypeOfDartObject(this) && other._freezed_annotation$_source === this._freezed_annotation$_source;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this._freezed_annotation$_source, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.HexCodec.prototype = {
    get$encoder() {
      return B.HexEncoder_false;
    },
    get$decoder() {
      return B.C_HexDecoder;
    }
  };
  A.HexEncoder.prototype = {
    convert$1(bytes) {
      var t1, t2, t3, t4;
      for (t1 = J.get$iterator$ax(type$.List_int._as(bytes)), t2 = ""; t1.moveNext$0(); t2 = t3) {
        t3 = t1.get$current();
        if ((t3 & 255) !== t3)
          throw A.wrapException(A.FormatException$("Non-byte integer detected", null, null));
        t4 = t3 < 16 ? "0" : "";
        t3 = t2 + (t4 + B.JSInt_methods.toRadixString$1(t3, 16));
      }
      t1 = t2.charCodeAt(0) == 0 ? t2 : t2;
      if (this.upperCase)
        return t1.toUpperCase();
      else
        return t1;
    }
  };
  A.HexDecoder.prototype = {
    convert$1(hex) {
      var str, t1, t2, result, i, t3, firstDigit, secondDigit,
        _s16_ = "0123456789abcdef";
      A._asString(hex);
      str = A.stringReplaceAllUnchecked(hex, " ", "").toLowerCase();
      if (B.JSInt_methods.$mod(str.length, 2) !== 0)
        str = "0" + str;
      t1 = str.length;
      t2 = B.JSInt_methods._tdivFast$1(t1, 2);
      result = new Uint8Array(t2);
      for (i = 0; i < t2; ++i) {
        t3 = i * 2;
        if (!(t3 < t1))
          return A.ioore(str, t3);
        firstDigit = B.JSString_methods.indexOf$1(_s16_, str[t3]);
        ++t3;
        if (!(t3 < t1))
          return A.ioore(str, t3);
        secondDigit = B.JSString_methods.indexOf$1(_s16_, str[t3]);
        if (firstDigit === -1 || secondDigit === -1)
          throw A.wrapException(A.FormatException$("Non-hex character detected in " + hex, null, null));
        if (!(i < t2))
          return A.ioore(result, i);
        result[i] = (firstDigit << 4 >>> 0) + secondDigit;
      }
      return result;
    }
  };
  A.Codec0.prototype = {
    get$exponentBias() {
      return B.JSInt_methods.$shl(1, this.exponentBitLength - 1) - 1;
    },
    decode$2(bytes, e) {
      var exponent, mantissa, _this = this,
        bits = _this._codec$_read$2(B.NativeUint8List_methods.get$buffer(bytes), e),
        t1 = _this.mantissaBitLength,
        mantissaBits = bits.mask$1(t1),
        t2 = _this.exponentBitLength,
        exponentBits = bits.$shr(0, t1).mask$1(t2).toInt$0(0),
        t3 = bits.$shr(0, t2 + t1).get$isZero(),
        sign = !t3;
      if (exponentBits === B.JSInt_methods._shlPositive$1(1, t2) - 1)
        if (!mantissaBits.get$isZero())
          return B.C__Nan;
        else if (t3)
          return B._Infinity_false;
        else
          return B._Infinity_true;
      if (exponentBits === 0) {
        exponent = 1 - _this.get$exponentBias() - t1;
        mantissa = mantissaBits;
      } else {
        exponent = exponentBits - _this.get$exponentBias() - t1;
        mantissa = mantissaBits.withBit$1(t1);
      }
      if (sign)
        mantissa = mantissa.$negate(0);
      if (mantissa.get$isIntLossless()) {
        mantissa = mantissa.toInt$0(0);
        if (!B.JSInt_methods.get$isNegative(mantissa) && mantissa !== 0 && sign)
          mantissa = -mantissa;
        t1 = !t3 || B.JSInt_methods.get$isNegative(mantissa);
        return new A._FloatParts(new A._IntInteger(mantissa), exponent, t1).minimize$0();
      } else {
        mantissa = mantissa.toBigInt$0();
        if (!mantissa._isNegative) {
          t1 = mantissa.compareTo$1(0, $.$get$_BigIntImpl_zero());
          t1 = t1 !== 0 && sign;
        } else
          t1 = false;
        if (t1)
          mantissa = mantissa.$negate(0);
        t1 = A.Integer_Integer(mantissa);
        return new A._FloatParts(t1, exponent, !t3 || mantissa._isNegative).minimize$0();
      }
    },
    isLossless$1(float) {
      var t1, t2, t3, t4, exponent, subnormalMantissaLength, _this = this;
      if (float.get$isNaN(float) || float.get$isInfinite(float) || float.get$mantissaInteger().get$isZero())
        return true;
      float = float.abs$0(0).minimize$0();
      t1 = _this.mantissaBitLength;
      t2 = t1 + 1;
      t3 = float.mantissaInteger;
      if (t2 < t3.get$bitLength(t3))
        return false;
      t4 = float.exponent;
      exponent = t4 + t1 + _this.get$exponentBias() + (t3.toBigInt$0().get$bitLength(0) - t2);
      if (exponent >= B.JSInt_methods._shlPositive$1(1, _this.exponentBitLength) - 1)
        return false;
      if (exponent >= 1)
        return true;
      t2 = _this.get$exponentBias();
      subnormalMantissaLength = t3.get$bitLength(t3) + t4 - -(t2 - 1 + t1);
      return subnormalMantissaLength > 0 && subnormalMantissaLength <= t1;
    },
    encode$2(float, e) {
      var sign, t1, normal, exponent, t2, subnormal, _this = this;
      if (float.get$isNaN(float))
        return _this._encode$4(float.get$isNegative(float), A.Integer_Integer$allOnes(_this.mantissaBitLength - 1), B.JSInt_methods._shlPositive$1(1, _this.exponentBitLength) - 1, e);
      if (float.get$isInfinite(float))
        return _this._encode$4(float.get$isNegative(float), $.$get$Integer_zero(), B.JSInt_methods._shlPositive$1(1, _this.exponentBitLength) - 1, e);
      sign = float.get$isNegative(float);
      float = float.abs$0(0);
      if (float.get$mantissaInteger().get$isZero())
        return _this._encode$4(sign, $.$get$Integer_zero(), 0, e);
      t1 = _this.mantissaBitLength;
      normal = float.roundToMantissa$1(t1 + 1);
      exponent = normal.get$exponent() + t1 + _this.get$exponentBias();
      t2 = B.JSInt_methods._shlPositive$1(1, _this.exponentBitLength) - 1;
      if (exponent >= t2)
        return _this._encode$4(sign, $.$get$Integer_zero(), t2, e);
      if (exponent >= 1)
        return _this._encode$4(sign, normal.get$mantissaInteger().mask$1(t1), exponent, e);
      subnormal = float.roundToExponent$1(-(_this.get$exponentBias() - 1 + t1));
      t2 = subnormal.get$mantissaInteger();
      if (t2.get$bitLength(t2) > t1)
        return _this._encode$4(sign, $.$get$Integer_zero(), 0, e);
      return _this._encode$4(sign, subnormal.get$mantissaInteger(), 0, e);
    },
    _encode$4(isNegative, mantissa, exponent, e) {
      var bits = $.$get$Integer_zero(),
        t1 = this.mantissaBitLength,
        bits0 = bits.$or(0, mantissa).$or(0, new A._IntInteger(exponent).$shl(0, t1));
      return this._write$2(isNegative ? bits0.$or(0, bits.withBit$1(this.exponentBitLength + t1)) : bits0, e);
    }
  };
  A._Codec16.prototype = {
    _codec$_read$2(data, e) {
      return new A._IntInteger(J.asByteData$2$x(data, 0, null).getInt16(0, B.C_Endian0 === e));
    },
    _write$2(x, e) {
      var r = new Uint8Array(2),
        t1 = J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(r), 0, null),
        t2 = x.toInt$0(0);
      t1.$flags & 2 && A.throwUnsupportedOperation(t1, 7);
      t1.setInt16(0, t2, B.C_Endian0 === e);
      return r;
    }
  };
  A._Codec32.prototype = {
    _codec$_read$2(data, e) {
      return new A._IntInteger(J.asByteData$2$x(data, 0, null).getInt32(0, B.C_Endian0 === e));
    },
    _write$2(x, e) {
      var r = new Uint8Array(4),
        t1 = J.asByteData$2$x(B.NativeUint8List_methods.get$buffer(r), 0, null),
        t2 = x.toInt$0(0);
      t1.$flags & 2 && A.throwUnsupportedOperation(t1, 8);
      t1.setInt32(0, t2, B.C_Endian0 === e);
      return r;
    }
  };
  A._Codec64.prototype = {
    _codec$_read$2(data, e) {
      return A._readBytes(data, e);
    },
    _write$2(x, e) {
      return A._writeBytes(x, 8, e);
    }
  };
  A.FloatParts.prototype = {
    minimize$0() {
      var _this = this,
        mant = _this.get$mantissaInteger(),
        exp = _this.get$exponent();
      while (true) {
        if (!(mant.get$isEven(mant) && !mant.get$isZero()))
          break;
        mant = mant.$shr(0, 1);
        ++exp;
      }
      return new A._FloatParts(mant, exp, _this.get$isNegative(_this));
    },
    abs$0(_) {
      var _this = this;
      if (_this.get$isNaN(_this))
        return B.C__Nan;
      else if (_this.get$isInfinite(_this))
        return B._Infinity_false;
      else
        return new A._FloatParts(_this.get$mantissaInteger().abs$0(0), _this.get$exponent(), false);
    },
    roundToMantissa$1(bits) {
      var mant, exp, c, _this = this;
      if (_this.get$isNaN(_this) || _this.get$isInfinite(_this) || _this.get$mantissaInteger().get$isZero())
        return _this;
      mant = _this.get$mantissaInteger().abs$0(0);
      exp = _this.get$exponent();
      if (mant.get$bitLength(mant) < bits) {
        exp -= bits - mant.get$bitLength(mant);
        mant = mant.$shl(0, bits - mant.get$bitLength(mant));
      } else
        for (; mant.get$bitLength(mant) > bits;) {
          exp += mant.get$bitLength(mant) - bits;
          mant = mant.$shr(0, mant.get$bitLength(mant) - bits - 1);
          c = mant.get$isOdd(mant);
          mant = mant.$shr(0, 1);
          if (c)
            mant = mant.$add(0, $.$get$Integer_one());
        }
      if (_this.get$isNegative(_this))
        mant = mant.$negate(0);
      return new A._FloatParts(mant, exp, _this.get$isNegative(_this));
    },
    roundToExponent$1(val) {
      var mant, c, _this = this;
      if (_this.get$isNaN(_this) || _this.get$isInfinite(_this) || _this.get$mantissaInteger().get$isZero())
        return _this;
      mant = _this.get$mantissaInteger().abs$0(0);
      if (_this.get$exponent() > val)
        mant = mant.$shl(0, _this.get$exponent() - val);
      else if (_this.get$exponent() < val) {
        mant = mant.$shr(0, val - _this.get$exponent() - 1);
        c = mant.get$isOdd(mant);
        mant = mant.$shr(0, 1);
        if (c)
          mant = mant.$add(0, $.$get$Integer_one());
      }
      if (_this.get$isNegative(_this))
        mant = mant.$negate(0);
      return new A._FloatParts(mant, val, _this.get$isNegative(_this));
    },
    toDouble$0(_) {
      var t1 = J.asFloat32List$0$x(B.NativeUint8List_methods.get$buffer(this.toFloat32Bytes$1($.$get$hostEndian())));
      if (0 >= t1.length)
        return A.ioore(t1, 0);
      return t1[0];
    },
    toFloat32Bytes$1(e) {
      return B._Codec32_23_8.encode$2(this, e);
    }
  };
  A._FloatParts.prototype = {
    abs$0(_) {
      var t1 = this.mantissaInteger.abs$0(0);
      return new A._FloatParts(t1, this.exponent, false);
    },
    get$mantissaInteger() {
      return this.mantissaInteger;
    },
    get$isInfinite() {
      return false;
    },
    get$isNaN() {
      return false;
    },
    get$exponent() {
      return this.exponent;
    },
    get$isNegative(receiver) {
      return this.isNegative;
    }
  };
  A._Decoding.prototype = {
    get$_parts() {
      var result, _this = this,
        value = _this.___Decoding__parts_FI;
      if (value === $) {
        result = _this.codec.decode$2(_this._float_parts$_bytes, _this._endian);
        _this.___Decoding__parts_FI !== $ && A.throwLateFieldADI("_parts");
        _this.___Decoding__parts_FI = result;
        value = result;
      }
      return value;
    },
    get$mantissaInteger() {
      return this.get$_parts().get$mantissaInteger();
    },
    get$isInfinite(_) {
      var t1 = this.float64;
      return t1 == 1 / 0 || t1 == -1 / 0;
    },
    get$isNaN(_) {
      return isNaN(this.float64);
    },
    get$exponent() {
      return this.get$_parts().get$exponent();
    },
    get$isNegative(_) {
      return B.JSNumber_methods.get$isNegative(this.float64);
    },
    toFloat32Bytes$1(e) {
      var t1, t2,
        bytes = new Float32Array(A._ensureNativeList(A._setArrayType([this.float64], type$.JSArray_double)));
      if ($.$get$hostEndian() === e)
        return J.asUint8List$0$x(B.NativeFloat32List_methods.get$buffer(bytes));
      else {
        t1 = J.asUint8List$0$x(B.NativeFloat32List_methods.get$buffer(bytes));
        t2 = A.instanceType(t1)._eval$1("ReversedListIterable<ListBase.E>");
        t1 = A.List_List$_of(new A.ReversedListIterable(t1, t2), t2._eval$1("ListIterable.E"));
        return new Uint8Array(A._ensureNativeList(t1));
      }
    }
  };
  A._FromDouble.prototype = {
    get$_parts() {
      var result, _this = this,
        value = _this.___FromDouble__parts_FI;
      if (value === $) {
        result = A.FloatParts_FloatParts$fromFloat64Bytes(J.asUint8List$0$x(B.NativeFloat64List_methods.get$buffer(new Float64Array(A._ensureNativeList(A._setArrayType([_this.value], type$.JSArray_double))))), $.$get$hostEndian());
        _this.___FromDouble__parts_FI !== $ && A.throwLateFieldADI("_parts");
        _this.___FromDouble__parts_FI = result;
        value = result;
      }
      return value;
    },
    get$isInfinite(_) {
      var t1 = this.value;
      return t1 == 1 / 0 || t1 == -1 / 0;
    },
    get$isNaN(_) {
      return isNaN(this.value);
    },
    get$mantissaInteger() {
      return this.get$_parts().get$_parts().get$mantissaInteger();
    },
    get$exponent() {
      return this.get$_parts().get$_parts().get$exponent();
    },
    get$isNegative(_) {
      return B.JSNumber_methods.get$isNegative(this.get$_parts().float64);
    },
    toFloat64Bytes$0() {
      var t1, t2,
        bytes = new Float64Array(A._ensureNativeList(A._setArrayType([this.value], type$.JSArray_double)));
      if ($.$get$hostEndian() === B.C_Endian)
        return J.asUint8List$0$x(B.NativeFloat64List_methods.get$buffer(bytes));
      else {
        t1 = J.asUint8List$0$x(B.NativeFloat64List_methods.get$buffer(bytes));
        t2 = A.instanceType(t1)._eval$1("ReversedListIterable<ListBase.E>");
        t1 = A.List_List$_of(new A.ReversedListIterable(t1, t2), t2._eval$1("ListIterable.E"));
        return new Uint8Array(A._ensureNativeList(t1));
      }
    },
    toFloat32Bytes$1(e) {
      var t1, t2,
        bytes = new Float32Array(A._ensureNativeList(A._setArrayType([this.value], type$.JSArray_double)));
      if ($.$get$hostEndian() === e)
        return J.asUint8List$0$x(B.NativeFloat32List_methods.get$buffer(bytes));
      else {
        t1 = J.asUint8List$0$x(B.NativeFloat32List_methods.get$buffer(bytes));
        t2 = A.instanceType(t1)._eval$1("ReversedListIterable<ListBase.E>");
        t1 = A.List_List$_of(new A.ReversedListIterable(t1, t2), t2._eval$1("ListIterable.E"));
        return new Uint8Array(A._ensureNativeList(t1));
      }
    },
    toFloat32Bytes$0() {
      return this.toFloat32Bytes$1(B.C_Endian);
    }
  };
  A._Nan.prototype = {
    get$mantissaInteger() {
      return $.$get$Integer_zero();
    },
    toDouble$0(_) {
      return 0 / 0;
    },
    get$exponent() {
      return 0;
    },
    get$isInfinite() {
      return false;
    },
    get$isNaN() {
      return true;
    },
    get$isNegative() {
      return false;
    }
  };
  A._Infinity.prototype = {
    get$mantissaInteger() {
      return $.$get$Integer_zero();
    },
    toDouble$0(_) {
      return !this.isNegative ? 1 / 0 : -1 / 0;
    },
    get$exponent() {
      return 0;
    },
    get$isInfinite() {
      return true;
    },
    get$isNaN() {
      return false;
    },
    get$isNegative(receiver) {
      return this.isNegative;
    }
  };
  A._IntInteger.prototype = {
    get$_bigInt() {
      var result, _this = this,
        value = _this.___IntInteger__bigInt_FI;
      if (value === $) {
        result = A._BigIntImpl__BigIntImpl$from(_this._x);
        _this.___IntInteger__bigInt_FI !== $ && A.throwLateFieldADI("_bigInt");
        _this.___IntInteger__bigInt_FI = result;
        value = result;
      }
      return value;
    },
    toBigInt$0() {
      return this.get$_bigInt();
    },
    toInt$0(_) {
      return this._x;
    },
    get$isEven(_) {
      return (this._x & 1) === 0;
    },
    get$isOdd(_) {
      return (this._x & 1) === 1;
    },
    get$isZero() {
      return this._x === 0;
    },
    mask$1(count) {
      if (count < 52)
        return new A._IntInteger((this._x & B.JSInt_methods._shlPositive$1(1, count) - 1) >>> 0);
      else
        return this;
    },
    $shl(_, i) {
      var t1 = this._x;
      if (B.JSInt_methods.get$bitLength(t1) + i < 52)
        return new A._IntInteger(B.JSInt_methods.$shl(t1, i));
      else
        return A.Integer_Integer(this.get$_bigInt().$shl(0, i));
    },
    $shr(_, i) {
      return new A._IntInteger(B.JSInt_methods.$shr(this._x, i));
    },
    $negate(_) {
      return A.Integer_Integer(this.get$_bigInt().$negate(0));
    },
    $or(_, x) {
      if (x.get$isIntLossless())
        return new A._IntInteger((this._x | x.toInt$0(0)) >>> 0);
      else
        return A.Integer_Integer(this.get$_bigInt().$or(0, x.toBigInt$0()));
    },
    $add(_, other) {
      return A.Integer_Integer(this.get$_bigInt().$add(0, other.get$_bigInt()));
    },
    withBit$1(i) {
      if (i < 52)
        return new A._IntInteger((this._x | B.JSInt_methods._shlPositive$1(1, i)) >>> 0);
      else
        return A.Integer_Integer(this.get$_bigInt().$or(0, $.$get$_BigIntImpl_one().$shl(0, i)));
    },
    get$bitLength(_) {
      return B.JSInt_methods.get$bitLength(this._x);
    },
    abs$0(_) {
      var t1 = this.get$_bigInt();
      return A.Integer_Integer(t1._isNegative ? t1.$negate(0) : t1);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (A._isInt(other))
        return this._x === other;
      else if (other instanceof A._IntInteger)
        return this._x === other._x;
      else
        return false;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this._x);
    },
    $isInteger: 1,
    get$isIntLossless() {
      return true;
    }
  };
  A._BigIntInteger.prototype = {
    get$isOdd(_) {
      return !this._x.get$isEven(0);
    },
    get$isEven(_) {
      return this._x.get$isEven(0);
    },
    toBigInt$0() {
      return this._x;
    },
    toInt$0(_) {
      return this._x.toInt$0(0);
    },
    mask$1(count) {
      return A.Integer_Integer(this._x.$and(0, $.$get$_BigIntImpl_zero().$not(0).$shl(0, count).$not(0)));
    },
    $shl(_, i) {
      return A.Integer_Integer(this._x.$shl(0, i));
    },
    $shr(_, i) {
      return A.Integer_Integer(this._x.$shr(0, i));
    },
    $negate(_) {
      return A.Integer_Integer(this._x.$negate(0));
    },
    $or(_, x) {
      return A.Integer_Integer(this._x.$or(0, x.toBigInt$0()));
    },
    $add(_, other) {
      return A.Integer_Integer(this._x.$add(0, other.get$_bigInt()));
    },
    get$bitLength(_) {
      return this._x.get$bitLength(0);
    },
    abs$0(_) {
      var t1 = this._x;
      return A.Integer_Integer(t1._isNegative ? t1.$negate(0) : t1);
    },
    withBit$1(i) {
      return A.Integer_Integer(this._x.$or(0, $.$get$_BigIntImpl_one().$shl(0, i)));
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof A._BigIntImpl)
        return false;
      else if (other instanceof A._BigIntInteger) {
        t1 = this._x.compareTo$1(0, other._x);
        return t1 === 0;
      } else
        return false;
    },
    get$hashCode(_) {
      return this._x.get$hashCode(0);
    },
    $isInteger: 1,
    get$isIntLossless() {
      return false;
    },
    get$isZero() {
      return false;
    }
  };
  A.CheckedFromJsonException.prototype = {
    toString$0(_) {
      var t1 = A._setArrayType(["CheckedFromJsonException"], type$.JSArray_String);
      t1.push("Could not create `" + this._className + "`.");
      t1.push('There is a problem with "' + this.key + '".');
      t1.push(this.message);
      return B.JSArray_methods.join$1(t1, "\n");
    },
    map$1($receiver, arg0) {
      return this.map.call$1(arg0);
    }
  };
  A.LogEvent.prototype = {};
  A.LogFilter.prototype = {
    init$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$init$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$init$0, $async$completer);
    }
  };
  A.Level.prototype = {
    _enumToString$0() {
      return "Level." + this._core$_name;
    }
  };
  A.LogOutput.prototype = {
    init$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$init$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$init$0, $async$completer);
    }
  };
  A.LogPrinter.prototype = {
    init$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$init$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$init$0, $async$completer);
    }
  };
  A.Logger.prototype = {
    Logger$4$filter$level$output$printer(filter, level, output, printer) {
      var _this = this,
        filterInit = _this._filter.init$0(),
        t1 = A.Future_wait(A._setArrayType([filterInit, _this._printer.init$0(), _this._output.init$0()], type$.JSArray_Future_void), type$.void);
      _this.__Logger__initialization_F !== $ && A.throwLateFieldAI("_initialization");
      _this.__Logger__initialization_F = t1;
    },
    e$1(message) {
      this.log$5$error$stackTrace$time(B.Level_5000_6_error, message, null, null, null);
    },
    log$5$error$stackTrace$time(level, message, error, stackTrace, time) {
      var outputEvent, callback, e, s, t1, logEvent, t2, callback0, output, exception;
      if (level === B.Level_0_0_all)
        throw A.wrapException(A.ArgumentError$("Log events cannot have Level.all", null));
      else if (level === B.Level_10000_10_off || level === B.Level_9999_9_nothing)
        throw A.wrapException(A.ArgumentError$("Log events cannot have Level.off", null));
      t1 = Date.now();
      logEvent = new A.LogEvent(level, message, error, stackTrace, new A.DateTime(t1, 0, false));
      for (t1 = A._LinkedHashSetIterator$($.Logger__logCallbacks, $.Logger__logCallbacks._collection$_modifications, A._instanceType($.Logger__logCallbacks)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        callback0 = t1._collection$_current;
        (callback0 == null ? t2._as(callback0) : callback0).call$1(logEvent);
      }
      if (this._filter.shouldLog$1(logEvent)) {
        output = this._printer.log$1(logEvent);
        if (output.length !== 0) {
          outputEvent = new A.OutputEvent(output, logEvent);
          try {
            for (t1 = A._LinkedHashSetIterator$($.Logger__outputCallbacks, $.Logger__outputCallbacks._collection$_modifications, A._instanceType($.Logger__outputCallbacks)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
              callback0 = t1._collection$_current;
              callback = callback0 == null ? t2._as(callback0) : callback0;
              callback.call$1(outputEvent);
            }
            this._output.output$1(outputEvent);
          } catch (exception) {
            e = A.unwrapException(exception);
            s = A.getTraceFromException(exception);
            A.print(e);
            A.print(s);
          }
        }
      }
    }
  };
  A.OutputEvent.prototype = {};
  A.AsymmetricKey.prototype = {};
  A.AsymmetricPublicKey.prototype = {};
  A.AsymmetricPrivateKey.prototype = {};
  A.ByteList.prototype = {
    set$length(_, newLength) {
      B.NativeUint8List_methods.set$length(this._u8l, newLength);
    },
    get$length(_) {
      return this._u8l.length;
    },
    $index(_, index) {
      var t1 = this._u8l;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      return t1[index];
    },
    $indexSet(_, index, value) {
      var t1;
      A._asInt(value);
      t1 = this._u8l;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      t1[index] = value;
    },
    $eq(_, other) {
      var isEqual, t1, t2, t3, i, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        isEqual = other instanceof A.ByteList && A.getRuntimeTypeOfDartObject(_this) === A.getRuntimeTypeOfDartObject(other) && _this._u8l.length === other._u8l.length;
      else
        isEqual = true;
      if (!isEqual)
        return false;
      for (t1 = _this._u8l, t2 = t1.length, t3 = type$.List_dynamic, i = 0; i < t2; ++i)
        if (t1[i] !== J.$index$asx(t3._as(other), i))
          return false;
      return true;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.Suffix.prototype = {
    get$suffix() {
      var _this = this,
        t1 = A.SubListIterable$(_this, _this.get$prefixLength(), null, A._instanceType(_this)._eval$1("ListBase.E")),
        t2 = _this._u8l.length - _this.get$prefixLength();
      return new A.ByteList(A.ByteList__constructList(t1, t2, t2));
    }
  };
  A.Encodable.prototype = {};
  A._AsymmetricKey_ByteList_Encodable.prototype = {};
  A._ByteList_Object_ListMixin.prototype = {};
  A._ByteList_Object_ListMixin_Encodable.prototype = {};
  A.Bech32Encoder.prototype = {
    encode$1(data) {
      return new A._Bech32Encoder().convert$2(new A._Bech32(this.hrp, A.Base32Encoder__convertBits(type$.List_int._as(data), 8, 5, true)), 249);
    },
    $isEncoder: 1
  };
  A._Bech32.prototype = {};
  A._Bech32Encoder.prototype = {
    convert$2(input, maxLength) {
      var hrp, data, t1, t2, checksummed;
      type$._Bech32._as(input);
      hrp = input.hrp;
      data = input.data;
      t1 = hrp.length;
      t2 = t1 + data.length + 1 + 6;
      if (t2 > maxLength)
        throw A.wrapException(A.TooLong$(t2));
      if (t1 === 0)
        throw A.wrapException(new A.TooShortHrp());
      if (this.hasOutOfRangeHrpCharacters$1(hrp))
        throw A.wrapException(A.OutOfRangeHrpCharacters$(hrp));
      if (this.isMixedCase$1(hrp))
        throw A.wrapException(A.MixedCase$(hrp));
      hrp = hrp.toLowerCase();
      checksummed = B.JSArray_methods.$add(data, A._createChecksum(hrp, data));
      if (this.hasOutOfBoundsChars$1(checksummed))
        throw A.wrapException(A.OutOfBoundChars$("<unknown>"));
      t1 = A._arrayInstanceType(checksummed);
      return hrp + "1" + new A.MappedListIterable(checksummed, t1._eval$1("String(1)")._as(new A._Bech32Encoder_convert_closure()), t1._eval$1("MappedListIterable<1,String>")).join$0(0);
    }
  };
  A._Bech32Encoder_convert_closure.prototype = {
    call$1(i) {
      A._asInt(i);
      if (!(i >= 0 && i < 32))
        return A.ioore(B.List_y4T, i);
      return B.List_y4T[i];
    },
    $signature: 31
  };
  A._Bech32Decoder.prototype = {
    convert$2(input, maxLength) {
      var t1, separatorPosition, hrp, data, checksum, t2, t3, t4, dataBytes, checksumBytes, _this = this;
      A._asString(input);
      t1 = input.length;
      if (t1 > maxLength)
        throw A.wrapException(A.TooLong$(t1));
      if (_this.isMixedCase$1(input))
        throw A.wrapException(A.MixedCase$(input));
      if (B.JSString_methods.lastIndexOf$1(input, "1") === -1)
        throw A.wrapException(new A.InvalidSeparator(B.JSString_methods.lastIndexOf$1(input, "1")));
      separatorPosition = B.JSString_methods.lastIndexOf$1(input, "1");
      if (t1 - separatorPosition - 1 - 6 < 0)
        throw A.wrapException(new A.TooShortChecksum());
      if (separatorPosition === 0)
        throw A.wrapException(new A.TooShortHrp());
      input = input.toLowerCase();
      hrp = B.JSString_methods.substring$2(input, 0, separatorPosition);
      t1 = input.length - 6;
      data = B.JSString_methods.substring$2(input, separatorPosition + 1, t1);
      checksum = B.JSString_methods.substring$1(input, t1);
      if (_this.hasOutOfRangeHrpCharacters$1(hrp))
        throw A.wrapException(A.OutOfRangeHrpCharacters$(hrp));
      t1 = type$.JSArray_String;
      t2 = type$.int_Function_String;
      t3 = type$.MappedListIterable_String_int;
      t4 = t3._eval$1("ListIterable.E");
      dataBytes = A.List_List$_of(new A.MappedListIterable(A._setArrayType(data.split(""), t1), t2._as(new A._Bech32Decoder_convert_closure()), t3), t4);
      if (_this.hasOutOfBoundsChars$1(dataBytes)) {
        t1 = B.JSArray_methods.indexOf$1(dataBytes, -1);
        if (!(t1 >= 0 && t1 < data.length))
          return A.ioore(data, t1);
        throw A.wrapException(A.OutOfBoundChars$(data[t1]));
      }
      checksumBytes = A.List_List$_of(new A.MappedListIterable(A._setArrayType(checksum.split(""), t1), t2._as(new A._Bech32Decoder_convert_closure0()), t3), t4);
      if (_this.hasOutOfBoundsChars$1(checksumBytes)) {
        t1 = B.JSArray_methods.indexOf$1(checksumBytes, -1);
        if (!(t1 >= 0 && t1 < checksum.length))
          return A.ioore(checksum, t1);
        throw A.wrapException(A.OutOfBoundChars$(checksum[t1]));
      }
      t1 = type$.List_int;
      t1 = B.JSArray_methods.$add(t1._as(dataBytes), t1._as(checksumBytes));
      if (A._polymod(B.JSArray_methods.$add(A._hrpExpand(hrp), t1)) !== 1)
        throw A.wrapException(new A.InvalidChecksum());
      return new A._Bech32(hrp, dataBytes);
    }
  };
  A._Bech32Decoder_convert_closure.prototype = {
    call$1(c) {
      return B.JSArray_methods.indexOf$1(B.List_y4T, A._asString(c));
    },
    $signature: 76
  };
  A._Bech32Decoder_convert_closure0.prototype = {
    call$1(c) {
      return B.JSArray_methods.indexOf$1(B.List_y4T, A._asString(c));
    },
    $signature: 76
  };
  A.Bech32Validations.prototype = {
    hasOutOfBoundsChars$1(data) {
      return B.JSArray_methods.any$1(type$.List_int._as(data), new A.Bech32Validations_hasOutOfBoundsChars_closure());
    },
    isMixedCase$1(input) {
      return input.toLowerCase() !== input && input.toUpperCase() !== input;
    },
    hasOutOfRangeHrpCharacters$1(hrp) {
      var t1 = new A.CodeUnits(hrp);
      return t1.any$1(t1, new A.Bech32Validations_hasOutOfRangeHrpCharacters_closure());
    }
  };
  A.Bech32Validations_hasOutOfBoundsChars_closure.prototype = {
    call$1(c) {
      return A._asInt(c) === -1;
    },
    $signature: 16
  };
  A.Bech32Validations_hasOutOfRangeHrpCharacters_closure.prototype = {
    call$1(c) {
      A._asInt(c);
      return c < 33 || c > 126;
    },
    $signature: 16
  };
  A._hrpExpand_closure.prototype = {
    call$1(c) {
      return B.JSInt_methods._shrOtherPositive$1(A._asInt(c), 5);
    },
    $signature: 19
  };
  A._hrpExpand_closure0.prototype = {
    call$1(c) {
      return A._asInt(c) & 31;
    },
    $signature: 19
  };
  A.TooShortHrp.prototype = {
    toString$0(_) {
      return "The human readable part should have non zero length.";
    }
  };
  A.TooLong.prototype = {
    toString$0(_) {
      return "The bech32 string is too long: " + this.length + " (>90)";
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.OutOfRangeHrpCharacters.prototype = {
    toString$0(_) {
      return "The human readable part contains invalid characters: " + this.hpr;
    }
  };
  A.MixedCase.prototype = {
    toString$0(_) {
      return "The human readable part is mixed case, should either be all lower or all upper case: " + this.hpr;
    }
  };
  A.OutOfBoundChars.prototype = {
    toString$0(_) {
      return "A character is undefined in bech32: " + this.char;
    }
  };
  A.InvalidSeparator.prototype = {
    toString$0(_) {
      return "separator '1' at invalid position: " + this.pos;
    }
  };
  A.InvalidChecksum.prototype = {
    toString$0(_) {
      return "Checksum verification failed";
    }
  };
  A.TooShortChecksum.prototype = {
    toString$0(_) {
      return "Checksum is shorter than 6 characters";
    }
  };
  A.__Bech32Decoder_Converter_Bech32Validations.prototype = {};
  A.__Bech32Encoder_Converter_Bech32Validations.prototype = {};
  A._Context.prototype = {};
  A.Blake2b__sigma82_closure.prototype = {
    call$1(x) {
      return A._asInt(x) * 2;
    },
    $signature: 19
  };
  A.Blake2b__blake2bCompress_b2bG.prototype = {
    call$6(a, b, c, d, ix, iy) {
      var x0, t2, x1, y0, y1, t3, t4, t5, t6, t7, xor0, xor1,
        t1 = this.m;
      if (!(ix < 32))
        return A.ioore(t1, ix);
      x0 = t1[ix];
      t2 = ix + 1;
      if (!(t2 < 32))
        return A.ioore(t1, t2);
      x1 = t1[t2];
      if (!(iy < 32))
        return A.ioore(t1, iy);
      y0 = t1[iy];
      t2 = iy + 1;
      if (!(t2 < 32))
        return A.ioore(t1, t2);
      y1 = t1[t2];
      t2 = this.v;
      A.Blake2b__add64aa(t2, a, b);
      A.Blake2b__add64ac(t2, a, x0, x1);
      if (!(d < 32))
        return A.ioore(t2, d);
      t1 = t2[d];
      if (!(a < 32))
        return A.ioore(t2, a);
      t3 = t2[a];
      t4 = d + 1;
      if (!(t4 < 32))
        return A.ioore(t2, t4);
      t5 = t2[t4];
      t6 = a + 1;
      if (!(t6 < 32))
        return A.ioore(t2, t6);
      t7 = t2[t6];
      t2.$flags & 2 && A.throwUnsupportedOperation(t2);
      t2[d] = (t5 ^ t7) >>> 0;
      t2[t4] = (t1 ^ t3) >>> 0;
      A.Blake2b__add64aa(t2, c, d);
      if (!(b < 32))
        return A.ioore(t2, b);
      t3 = t2[b];
      if (!(c < 32))
        return A.ioore(t2, c);
      xor0 = t3 ^ t2[c];
      t3 = b + 1;
      if (!(t3 < 32))
        return A.ioore(t2, t3);
      t1 = t2[t3];
      t7 = c + 1;
      if (!(t7 < 32))
        return A.ioore(t2, t7);
      xor1 = t1 ^ t2[t7];
      t2[b] = (xor0 >>> 24 ^ xor1 << 8) >>> 0;
      t2[t3] = (xor1 >>> 24 ^ xor0 << 8) >>> 0;
      A.Blake2b__add64aa(t2, a, b);
      A.Blake2b__add64ac(t2, a, y0, y1);
      xor0 = t2[d] ^ t2[a];
      xor1 = t2[t4] ^ t2[t6];
      t2[d] = (xor0 >>> 16 ^ xor1 << 16) >>> 0;
      t2[t4] = (xor1 >>> 16 ^ xor0 << 16) >>> 0;
      A.Blake2b__add64aa(t2, c, d);
      xor0 = t2[b] ^ t2[c];
      xor1 = t2[t3] ^ t2[t7];
      t2[b] = (xor1 >>> 31 ^ xor0 << 1) >>> 0;
      t2[t3] = (xor0 >>> 31 ^ xor1 << 1) >>> 0;
    },
    $signature: 212
  };
  A.Signature.prototype = {};
  A.VerifyKey.prototype = {
    get$publicKey() {
      return this;
    }
  };
  A.SigningKey.prototype = {
    get$prefixLength() {
      return 32;
    }
  };
  A.SignedMessage.prototype = {
    get$prefixLength() {
      return 64;
    }
  };
  A._SignedMessage_ByteList_Suffix.prototype = {};
  A._SigningKey_AsymmetricPrivateKey_Suffix.prototype = {};
  A.bootstrap_closure0.prototype = {
    call$1(r) {
      var t1;
      r.internalLogger.log$5$error$stackTrace$time(B.Level_1000_2_trace, "Terminating Web Worker", null, null, null);
      t1 = this.com;
      A._asJSObject(t1.port1).close();
      A._asJSObject(t1.port2).close();
      A._asJSObject(init.G.self).close();
    },
    $signature: 213
  };
  A.bootstrap_closure.prototype = {
    call$1(e) {
      var t1, t2, t3;
      A._asJSObject(e);
      t1 = this.com;
      t2 = this.runner;
      A._asJSObject(t1.port1).onmessage = A._functionToJS1(A.JsWorkerRunnerExt_get_handle(t2));
      t3 = type$.nullable_List_dynamic._as(A.$JSEventExt__getMessageEventData(e));
      t3.toString;
      t2.connect$3(A.WorkerRequestExt_from(t3), A._asJSObject(t1.port2), this.initializer);
    },
    $signature: 18
  };
  A.openChannel_fail.prototype = {
    call$1(ex) {
      var t1 = this.ready;
      if ((t1.future._state & 30) === 0)
        t1.completeError$1(ex);
      t1 = this.completer;
      if ((t1.future._state & 30) === 0)
        t1.completeError$1(ex);
    },
    $signature: 215
  };
  A.openChannel_success.prototype = {
    call$1(channel) {
      var t1;
      if ((this.ready.future._state & 30) === 0)
        throw A.wrapException(A.SquadronError$_("Invalid state: worker is not ready", null, null));
      t1 = this.completer;
      if ((t1.future._state & 30) === 0)
        t1.complete$1(channel);
    },
    $signature: 216
  };
  A.openChannel_$errorHandler.prototype = {
    call$1(e) {
      var err, error, t1;
      A._asJSObjectQ(e);
      err = A.$JSEventExt_get_dartError(e);
      error = A.SquadronError$_(J.toString$0$(err), null, null);
      this.fail.call$1(error);
      t1 = this.entryPoint;
      A.UriChecker_exists(t1).then$1$1(new A.openChannel_$errorHandler_closure(e, t1, err, this.logger), type$.Null);
    },
    $signature: 78
  };
  A.openChannel_$errorHandler_closure.prototype = {
    call$1(found) {
      var msg, t1, t2, t3, t4, exception;
      A._asBool(found);
      try {
        t1 = this.e;
        t2 = this.entryPoint;
        t3 = this.err;
        t4 = J.getInterceptor$(t3);
        msg = t1 != null ? t2.toString$0(0) + " => " + t4.get$runtimeType(t3).toString$0(0) + " " + A.S(t3) + " [" + A._asString(t1.filename) + "(" + A._asInt(t1.lineno) + ")]" : t2.toString$0(0) + " => " + t4.get$runtimeType(t3).toString$0(0) + " " + A.S(t3);
      } catch (exception) {
      }
    },
    $signature: 218
  };
  A.openChannel_closure.prototype = {
    call$1(e) {
      var response, error, ex, st, t1, exception, _this = this;
      A._asJSObjectQ(e);
      try {
        t1 = type$.nullable_List_dynamic._as(A.$JSEventExt__getMessageEventData(e));
        t1.toString;
        response = A.WorkerResponseImpl_from(t1);
        if (!A.WorkerResponseImpl_unwrapInPlace(response, _this.disconnected))
          return;
        error = type$.nullable_SquadronException._as(J.$index$asx(response, 2));
        if (error != null)
          _this.fail.call$1(error);
        else {
          t1 = _this.ready;
          if ((t1.future._state & 30) === 0)
            t1.complete$1(type$.nullable_FutureOr_bool._as(A.WorkerResponse_get_result(response)));
        }
      } catch (exception) {
        ex = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        t1 = _this.fail.call$1(A.SquadronException_from(ex, st, null));
        return t1;
      }
    },
    $signature: 78
  };
  A.openChannel_closure0.prototype = {
    call$1(e) {
      var response, error, webCh, _this = this,
        t1 = type$.nullable_List_dynamic._as(A.$JSEventExt__getMessageEventData(A._asJSObject(e)));
      t1.toString;
      response = A.WorkerResponseImpl_from(t1);
      if (!A.WorkerResponseImpl_unwrapInPlace(response, _this.disconnected))
        return;
      error = type$.nullable_SquadronException._as(J.$index$asx(response, 2));
      if (error != null)
        _this.fail.call$1(error);
      else if (A._asBool(J.$index$asx(response, 3))) {
        t1 = _this._box_0.channel;
        if (t1 != null)
          t1.close$0();
      } else if ((_this.completer.future._state & 30) === 0) {
        webCh = new A._WebChannel(A._asJSObject(A.WorkerResponse_get_result(response)), A._setArrayType([], type$.JSArray_StreamController_List_dynamic), _this.exceptionManager, _this.logger);
        webCh.set$_thread(_this.worker._readLocal$0());
        _this._box_0.channel = webCh;
        _this.success.call$1(webCh);
      }
    },
    $signature: 18
  };
  A._WebChannel.prototype = {
    _postRequest$2$force(req, force) {
      var data, transfer, msg, ex, st, t1, t2, exception, _null = null;
      if (this._closed && !force)
        throw A.wrapException(A.SquadronError$_("Channel is closed", _null, _null));
      try {
        t1 = J.getInterceptor$asx(req);
        t2 = type$.nullable_SquadronCancelationToken._as(t1.$index(req, 4));
        if (t2 != null)
          t2.ensureStarted$0();
        data = A.WorkerRequestExt_wrapInPlace(req);
        transfer = type$.JSArray_nullable_Object._as(new init.G.Array());
        if (A._asJSObjectQ(t1.$index(req, 1)) != null)
          A._asInt(transfer.push(A._asJSObjectQ(t1.$index(req, 1))));
        msg = A.$jsify(data, _null);
        this._sendPort.postMessage(msg, transfer);
      } catch (exception) {
        ex = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        throw A.wrapException(A.SquadronError$_("Failed to post request: " + A.S(ex), st, _null));
      }
    },
    _postRequest$1(req) {
      return this._postRequest$2$force(req, false);
    },
    close$0() {
      if (!this._closed) {
        this._postRequest$1([A.microsecTimeStamp(null), null, -4, null, null, null, null]);
        this._closed = true;
      }
    },
    cancelToken$1(token) {
      if (token != null)
        this._postRequest$2$force([A.microsecTimeStamp(null), null, -3, null, token, null, null], true);
    },
    _getResponseStream$4$streaming(com, req, post, streaming) {
      var t1, t2,
        _s11_ = "_controller";
      type$.void_Function_List_dynamic._as(post);
      t1 = A.ResultStream$(this, req, new A._WebChannel__getResponseStream_$sendRequest(this, A._asInt(J.$index$asx(req, 2)), com, post, req), false).__ResultStream__controller_F;
      t1 === $ && A.throwLateFieldNI(_s11_);
      t2 = t1.__ForwardStreamController__controller_F;
      t2 === $ && A.throwLateFieldNI(_s11_);
      A.FutureExtensions_ignore(t2._ensureDoneFuture$0().whenComplete$1(new A._WebChannel__getResponseStream_closure(com)), type$.void);
      t1 = t1.__ForwardStreamController__controller_F;
      t1 === $ && A.throwLateFieldNI(_s11_);
      return new A._ControllerStream(t1, A._instanceType(t1)._eval$1("_ControllerStream<1>"));
    },
    sendRequest$5$inspectRequest$inspectResponse$token(command, args, inspectRequest, inspectResponse, token) {
      var t1 = new A._Future($.Zone__current, type$._Future_dynamic),
        completer = new A._AsyncCompleter(t1, type$._AsyncCompleter_dynamic),
        sub = A._Cell$named("sub"),
        t2 = new A._WebChannel_sendRequest_$fail(sub, completer),
        com = A._asJSObject(new init.G.MessageChannel()),
        t3 = A._asJSObject(com.port2),
        t4 = A.microsecTimeStamp(null);
      sub.set$finalLocalValue(this._getResponseStream$4$streaming(com, [t4, t3, command, args, token, null, false], this.get$_postRequest(), false).listen$3$onDone$onError(new A._WebChannel_sendRequest_$success(sub, completer), new A._WebChannel_sendRequest_$done(sub, completer, t2, command), t2));
      return t1;
    },
    set$_thread(_thread) {
      this._thread = A._asJSObjectQ(_thread);
    },
    $isChannel: 1,
    get$exceptionManager() {
      return this.exceptionManager;
    },
    get$logger() {
      return this.logger;
    }
  };
  A._WebChannel__getResponseStream_$sendRequest.prototype = {
    call$0() {
      var _this = this,
        controller = A._Cell$named("controller"),
        t1 = new A._WebChannel__getResponseStream_$sendRequest_$forwardMessage(controller),
        t2 = _this.command,
        t3 = new A._WebChannel__getResponseStream_$sendRequest_$forwardError(controller, t2),
        buffer = new A.EventBuffer(t1, t3, A._setArrayType([], type$.JSArray_of_void_Function), type$.EventBuffer_List_dynamic),
        t4 = _this.$this,
        t5 = _this.com,
        t6 = new A._WebChannel__getResponseStream_$sendRequest_$close(t4, t5, controller);
      controller.set$finalLocalValue(A.StreamController_StreamController(t6, new A._WebChannel__getResponseStream_$sendRequest_closure(t4, controller, t5, t2, buffer, t3, t1, _this.post, _this.req, t6), buffer.get$activate(), buffer.get$deactivate(), type$.List_dynamic));
      t6 = controller._readLocal$0();
      return new A._ControllerStream(t6, A._instanceType(t6)._eval$1("_ControllerStream<1>"));
    },
    $signature: 220
  };
  A._WebChannel__getResponseStream_$sendRequest_$forwardMessage.prototype = {
    call$1(msg) {
      type$.List_dynamic._as(msg);
      return J.add$1$ax(this.controller._readLocal$0(), msg);
    },
    $signature: 29
  };
  A._WebChannel__getResponseStream_$sendRequest_$forwardError.prototype = {
    call$2(error, st) {
      A._asObject(error);
      type$.nullable_StackTrace._as(st);
      return this.controller._readLocal$0().addError$1(A.SquadronException_from(error, st, this.command));
    },
    $signature: 38
  };
  A._WebChannel__getResponseStream_$sendRequest_$close.prototype = {
    call$0() {
      var t1 = this.com;
      A._asJSObject(t1.port1).close();
      A._asJSObject(t1.port2).close();
      t1 = type$.StreamController_List_dynamic._as(this.controller._readLocal$0());
      B.JSArray_methods.remove$1(this.$this._activeConnections, t1);
      return t1.close$0();
    },
    $signature: 12
  };
  A._WebChannel__getResponseStream_$sendRequest_closure.prototype = {
    call$0() {
      var ex, st, t2, t3, t4, exception, _this = this,
        t1 = _this.controller;
      if ((t1._readLocal$0()._state & 4) !== 0)
        return;
      t2 = _this.com;
      t3 = _this.buffer;
      t4 = _this.$$forwardError;
      A._asJSObject(t2.port1).onmessageerror = A._functionToJS1(new A._WebChannel__getResponseStream_$sendRequest__closure(_this.command, t3, t4));
      A._asJSObject(t2.port1).onmessage = A._functionToJS1(new A._WebChannel__getResponseStream_$sendRequest__closure0(t3, _this.$$forwardMessage));
      try {
        B.JSArray_methods.add$1(_this.$this._activeConnections, type$.StreamController_List_dynamic._as(t1._readLocal$0()));
        _this.post.call$1(_this.req);
      } catch (exception) {
        ex = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        t2 = _this.$$close;
        if (t3.__event_buffer$_pauses > 0) {
          t3.addError$2(ex, st);
          t3.set$onDeactivate(t2);
        } else {
          t4.call$2(ex, st);
          t2.call$0();
        }
        t1 = type$.StreamController_List_dynamic._as(t1._readLocal$0());
        B.JSArray_methods.remove$1(_this.$this._activeConnections, t1);
        t1.close$0();
      }
    },
    $signature: 0
  };
  A._WebChannel__getResponseStream_$sendRequest__closure.prototype = {
    call$1(e) {
      var ex = A.SquadronException_from(A.$JSEventExt_get_dartError(A._asJSObject(e)), null, this.command),
        t1 = this.buffer;
      (t1.__event_buffer$_pauses > 0 ? t1.get$addError() : this.$$forwardError).call$2(ex, null);
    },
    $signature: 18
  };
  A._WebChannel__getResponseStream_$sendRequest__closure0.prototype = {
    call$1(e) {
      var res,
        t1 = type$.nullable_List_dynamic._as(A.$JSEventExt__getMessageEventData(A._asJSObject(e)));
      t1.toString;
      res = A.WorkerResponseImpl_from(t1);
      t1 = this.buffer;
      (t1.__event_buffer$_pauses > 0 ? type$.void_Function_List_dynamic._as(t1.get$add(t1)) : this.$$forwardMessage).call$1(res);
    },
    $signature: 18
  };
  A._WebChannel__getResponseStream_closure.prototype = {
    call$0() {
      var t1 = this.com;
      A._asJSObject(t1.port1).close();
      A._asJSObject(t1.port2).close();
    },
    $signature: 5
  };
  A._WebChannel_sendRequest_$success.prototype = {
    call$1(data) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait($async$self.sub._readLocal$0().cancel$0(), $async$call$1);
            case 2:
              // returning from await.
              t1 = $async$self.completer;
              if ((t1.future._state & 30) === 0)
                t1.complete$1(data);
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 6
  };
  A._WebChannel_sendRequest_$fail.prototype = {
    $call$body$_WebChannel_sendRequest_$fail(ex, st) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$call$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait($async$self.sub._readLocal$0().cancel$0(), $async$call$2);
            case 2:
              // returning from await.
              t1 = $async$self.completer;
              if ((t1.future._state & 30) === 0)
                t1.completeError$2(ex, st);
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$2, $async$completer);
    },
    call$2(ex, st) {
      return this.$call$body$_WebChannel_sendRequest_$fail(A._asObject(ex), type$.nullable_StackTrace._as(st));
    },
    call$1(ex) {
      return this.call$2(ex, null);
    },
    $signature: 81
  };
  A._WebChannel_sendRequest_$done.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait($async$self.sub._readLocal$0().cancel$0(), $async$call$0);
            case 2:
              // returning from await.
              if (($async$self.completer.future._state & 30) === 0)
                $async$self.$$fail.call$1(A.WorkerException$("No response from worker", null, $async$self.command));
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 0
  };
  A.EntryPointUri.prototype = {};
  A._EntryPointUri_Object_Releasable.prototype = {};
  A.EventBuffer.prototype = {
    activate$0() {
      return this.__event_buffer$_pauses++;
    },
    deactivate$0() {
      var t1, t2, _i, _this = this;
      if (_this.__event_buffer$_pauses === 1) {
        for (t1 = _this.__event_buffer$_buffer, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].call$0();
        B.JSArray_methods.clear$0(t1);
        t1 = _this.onDeactivate;
        if (t1 != null)
          t1.call$0();
      }
      t1 = _this.__event_buffer$_pauses;
      if (t1 > 0)
        _this.__event_buffer$_pauses = t1 - 1;
    },
    add$1(_, value) {
      return B.JSArray_methods.add$1(this.__event_buffer$_buffer, new A.EventBuffer_add_closure(this, this.$ti._precomputed1._as(value)));
    },
    addError$2(err, st) {
      return B.JSArray_methods.add$1(this.__event_buffer$_buffer, new A.EventBuffer_addError_closure(this, err, type$.nullable_StackTrace._as(st)));
    },
    set$onDeactivate(onDeactivate) {
      this.onDeactivate = type$.nullable_void_Function._as(onDeactivate);
    }
  };
  A.EventBuffer_add_closure.prototype = {
    call$0() {
      return this.$this._processValue.call$1(this.value);
    },
    $signature: 0
  };
  A.EventBuffer_addError_closure.prototype = {
    call$0() {
      return this.$this._processError.call$2(this.err, this.st);
    },
    $signature: 0
  };
  A.$jsify_closure.prototype = {
    call$1(js) {
      A._asObject(js);
    },
    $signature: 82
  };
  A.$jsify_closure0.prototype = {
    call$1(js) {
      var t1, t2;
      A._asObject(js);
      t1 = init.G;
      t2 = A._asJSObject(t1.Object);
      t1 = type$.JavaScriptFunction._as(t2.getPrototypeOf.apply(t2, [A._asJSObject(t1.Int8Array)]));
      if (js instanceof t1) {
        t1 = type$.NativeTypedData._as(js).buffer;
        t1.toString;
        t2 = this.cache;
        if (t2.containsKey$1(t1))
          return;
        t2.$indexSet(0, t1, t1);
        js = t1;
      }
      if (A._isTransferable(js))
        A._asInt(this.transfer.push(js));
    },
    $signature: 82
  };
  A.$jsify_closure1.prototype = {
    call$1(obj) {
      var t1, cached, jsifier, t2, len, jsArray, i, kjsifier, vjsifier, jsMap, jsSet, res, _this = this;
      if (obj == null)
        return null;
      t1 = _this.cache;
      cached = t1.$index(0, obj);
      if (cached != null)
        return cached;
      if (type$.List_dynamic._is(obj) && !type$.TypedData._is(obj)) {
        if (type$.List_nullable_String._is(obj))
          jsifier = A._patch___toJSStr$closure();
        else if (type$.List_nullable_bool._is(obj))
          jsifier = A._patch___toJSBool$closure();
        else if (type$.List_nullable_num._is(obj))
          jsifier = A._patch___toJSNum$closure();
        else
          jsifier = type$.List_nullable_BigInt._is(obj) ? A._patch___toJSBigInt$closure() : _this.squadronJsify._readLocal$0();
        t2 = J.getInterceptor$asx(obj);
        len = t2.get$length(obj);
        jsArray = type$.JSArray_nullable_Object._as(new init.G.Array());
        t1.$indexSet(0, obj, jsArray);
        for (i = 0; i < len; ++i)
          A._asInt(jsArray.push(jsifier.call$1(t2.$index(obj, i))));
        return jsArray;
      }
      if (type$.Map_dynamic_dynamic._is(obj)) {
        if (type$.Map_of_nullable_String_and_dynamic._is(obj))
          kjsifier = A._patch___toJSStr$closure();
        else if (type$.Map_of_nullable_bool_and_dynamic._is(obj))
          kjsifier = A._patch___toJSBool$closure();
        else if (type$.Map_of_nullable_num_and_dynamic._is(obj))
          kjsifier = A._patch___toJSNum$closure();
        else
          kjsifier = type$.Map_of_nullable_BigInt_and_dynamic._is(obj) ? A._patch___toJSBigInt$closure() : _this.squadronJsify._readLocal$0();
        if (type$.Map_of_dynamic_and_nullable_String._is(obj))
          vjsifier = A._patch___toJSStr$closure();
        else if (type$.Map_of_dynamic_and_nullable_bool._is(obj))
          vjsifier = A._patch___toJSBool$closure();
        else if (type$.Map_of_dynamic_and_nullable_num._is(obj))
          vjsifier = A._patch___toJSNum$closure();
        else
          vjsifier = type$.Map_of_dynamic_and_nullable_BigInt._is(obj) ? A._patch___toJSBigInt$closure() : _this.squadronJsify._readLocal$0();
        jsMap = A._asJSObject(new init.G.Map());
        t1.$indexSet(0, obj, jsMap);
        for (t1 = obj.get$entries(), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
          t2 = t1.get$current();
          A._asJSObject(jsMap.set(kjsifier.call$1(t2.key), vjsifier.call$1(t2.value)));
        }
        return jsMap;
      }
      if (type$.Set_dynamic._is(obj)) {
        if (type$.Set_nullable_String._is(obj))
          jsifier = A._patch___toJSStr$closure();
        else if (type$.Set_nullable_bool._is(obj))
          jsifier = A._patch___toJSBool$closure();
        else if (type$.Set_nullable_num._is(obj))
          jsifier = A._patch___toJSNum$closure();
        else
          jsifier = type$.Set_nullable_BigInt._is(obj) ? A._patch___toJSBigInt$closure() : _this.squadronJsify._readLocal$0();
        jsSet = A._asJSObject(new init.G.Set());
        t1.$indexSet(0, obj, jsSet);
        for (t1 = obj.get$iterator(obj); t1.moveNext$0();)
          A._asJSObject(jsSet.add(jsifier.call$1(t1.get$current())));
        return jsSet;
      }
      if (obj instanceof A._BigIntImpl)
        return A._toJSBigInt(obj);
      res = A.jsify(obj);
      if (res != null) {
        if (typeof obj != "number" && !A._isBool(obj) && typeof obj != "string")
          t1.$indexSet(0, obj, res);
        _this.$$registerTransferable.call$1(res);
      }
      return res;
    },
    $signature: 8
  };
  A.$dartify_closure.prototype = {
    call$1(js) {
      var t1, cached, t2, len, dartList, i, t3, keys, dartMap, res, entry, t4, t5, values, dartSet, result, _this = this, _null = null;
      if (js == null)
        return _null;
      t1 = _this.cache;
      cached = t1.$index(0, js);
      if (cached != null)
        return cached;
      t2 = A.JSAnyUtilityExtension_instanceOfString(js, "Array");
      if (t2) {
        type$.JSArray_nullable_Object._as(js);
        len = A._asInt(js.length);
        dartList = [];
        t1.$indexSet(0, js, dartList);
        for (t1 = _this.squadronDartify, t2 = t1._name, i = 0; i < len; ++i) {
          t3 = t1._value;
          if (t3 === t1)
            A.throwExpression(A.LateError$localNI(t2));
          dartList.push(t3.call$1(js.at(i)));
        }
        return dartList;
      }
      t2 = A.JSAnyUtilityExtension_instanceOfString(js, "Map");
      if (t2) {
        A._asJSObject(js);
        keys = A._asJSObject(js.entries());
        t2 = type$.dynamic;
        dartMap = A.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
        t1.$indexSet(0, js, dartMap);
        for (t1 = _this.squadronDartify, t2 = type$.JSArray_nullable_Object, t3 = t1._name; true;) {
          res = A._asJSObjectQ(A.JSObjectUnsafeUtilExtension__callMethod(keys, $.$get$_$JSProps_next(), _null, _null, _null, _null));
          if (res == null || !!res[$.$get$_$JSProps_done()])
            break;
          entry = t2._as(res[$.$get$_$JSProps_value()]);
          t4 = t1._value;
          if (t4 === t1)
            A.throwExpression(A.LateError$localNI(t3));
          t4 = t4.call$1(entry.at(0));
          t5 = t1._value;
          if (t5 === t1)
            A.throwExpression(A.LateError$localNI(t3));
          dartMap.$indexSet(0, t4, t5.call$1(entry.at(1)));
        }
        return dartMap;
      }
      t2 = A.JSAnyUtilityExtension_instanceOfString(js, "Set");
      if (t2) {
        A._asJSObject(js);
        values = A._asJSObject(js.values());
        dartSet = A.LinkedHashSet_LinkedHashSet$_empty(type$.dynamic);
        t1.$indexSet(0, js, dartSet);
        for (t1 = _this.squadronDartify, t2 = t1._name; true;) {
          res = A._asJSObjectQ(A.JSObjectUnsafeUtilExtension__callMethod(values, $.$get$_$JSProps_next(), _null, _null, _null, _null));
          if (res == null || !!res[$.$get$_$JSProps_done()])
            break;
          t3 = t1._value;
          if (t3 === t1)
            A.throwExpression(A.LateError$localNI(t2));
          dartSet.add$1(0, t3.call$1(res[$.$get$_$JSProps_value()]));
        }
        return dartSet;
      }
      if (typeof js === "bigint") {
        t1 = A._asString(type$.JavaScriptBigInt._as(js).toString());
        result = A._BigIntImpl__tryParse(t1, _null);
        if (result == null)
          A.throwExpression(A.FormatException$("Could not parse BigInt", t1, _null));
        return result;
      }
      res = A.dartify(js);
      if (res != null && typeof res != "number" && !A._isBool(res) && typeof res != "string")
        t1.$indexSet(0, js, res);
      return res;
    },
    $signature: 8
  };
  A._WebWorkerChannel.prototype = {
    _postResponse$1(res) {
      var ex, st, exception;
      try {
        this.__worker_channel$_sendPort.postMessage(A.$jsify(A.WorkerResponseImpl_wrapInPlace(res), null));
      } catch (exception) {
        ex = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        this._logger.e$1(new A._WebWorkerChannel__postResponse_closure(res, ex));
        throw A.wrapException(A.SquadronError$_("Failed to post response: " + A.S(ex), st, null));
      }
    },
    _inspectAndPostResponse$1(res) {
      var data, transfer, message, ex, st, exception;
      try {
        data = A.WorkerResponseImpl_wrapInPlace(res);
        transfer = type$.JSArray_nullable_Object._as(new init.G.Array());
        message = A.$jsify(data, transfer);
        this.__worker_channel$_sendPort.postMessage(message, transfer);
      } catch (exception) {
        ex = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        this._logger.e$1(new A._WebWorkerChannel__inspectAndPostResponse_closure(res, ex));
        throw A.wrapException(A.SquadronError$_("Failed to post response: " + A.S(ex), st, null));
      }
    },
    reply$1(data) {
      return this._postResponse$1([A.microsecTimeStamp(null), data, null, null, null]);
    },
    inspectAndReply$1(data) {
      return this._inspectAndPostResponse$1([A.microsecTimeStamp(null), data, null, null, null]);
    },
    log$1(message) {
      var t5,
        t1 = A.microsecTimeStamp(null),
        t2 = A._LogEventSerializationExt__stringify(message.message),
        t3 = A.microsecTimeStamp(message.time),
        t4 = message.error;
      t4 = t4 == null ? null : J.toString$0$(t4);
      t5 = message.stackTrace;
      t5 = t5 == null ? null : t5._stackTrace;
      return this._postResponse$1([t1, null, null, null, [message.level.value, t2, t3, t4, t5]]);
    },
    error$3(err, stackTrace, command) {
      var ex = A.SquadronException_from(err, type$.nullable_StackTrace._as(stackTrace), command);
      this._postResponse$1([A.microsecTimeStamp(null), null, ex, null, null]);
    },
    error$1(err) {
      return this.error$3(err, null, null);
    },
    error$2(err, stackTrace) {
      return this.error$3(err, stackTrace, null);
    },
    $isWorkerChannel: 1
  };
  A._WebWorkerChannel__postResponse_closure.prototype = {
    call$0() {
      return "Failed to post response " + A.S(this.res) + ": " + A.S(this.ex);
    },
    $signature: 1
  };
  A._WebWorkerChannel__inspectAndPostResponse_closure.prototype = {
    call$0() {
      return "Failed to post response " + A.S(this.res) + ": " + A.S(this.ex);
    },
    $signature: 1
  };
  A.JsWorkerRunnerExt_get_handle_closure.prototype = {
    call$1($event) {
      var t1 = type$.nullable_List_dynamic._as(A.$JSEventExt__getMessageEventData(A._asJSObject($event)));
      t1.toString;
      return this._this.processRequest$1(A.WorkerRequestExt_from(t1));
    },
    $signature: 227
  };
  A.DisconnectedChannel.prototype = {
    _disconnectedError$0() {
      return A.throwExpression(A.SquadronError$_("Channel is not connected", null, null));
    },
    cancelToken$1(token) {
      return this._disconnectedError$0();
    },
    close$0() {
      return this._disconnectedError$0();
    },
    sendRequest$5$inspectRequest$inspectResponse$token(command, args, inspectRequest, inspectResponse, token) {
      return this._disconnectedError$0();
    },
    $isChannel: 1,
    get$exceptionManager() {
      return this.exceptionManager;
    },
    get$logger() {
      return this.logger;
    }
  };
  A.ForwardCompleter.prototype = {};
  A.ForwardStreamController.prototype = {
    close$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$close$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.__forward_stream_controller$_closed = true;
              t1 = $async$self._sub;
              t1 = t1 == null ? null : t1.cancel$0();
              $async$goto = 2;
              return A._asyncAwait(t1 instanceof A._Future ? t1 : A._Future$value(t1, type$.void), $async$close$0);
            case 2:
              // returning from await.
              $async$self._sub = null;
              t1 = $async$self.__ForwardStreamController__controller_F;
              t1 === $ && A.throwLateFieldNI("_controller");
              t1.close$0();
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$close$0, $async$completer);
    },
    _pause$0() {
      ++this._pauses;
    },
    _resume$0() {
      var t1 = this._pauses;
      if (t1 > 0)
        this._pauses = t1 - 1;
    },
    attachSubscription$1(sub) {
      var t1, _this = this;
      _this.$ti._eval$1("StreamSubscription<1>")._as(sub);
      if (_this._sub != null)
        throw A.wrapException(A.SquadronError$_("Invalid state: a subscription is already attached", null, null));
      _this._sub = sub;
      for (; t1 = _this._pauses, t1 > 0;) {
        _this._pauses = t1 - 1;
        sub.pause$0();
      }
      t1 = _this.__ForwardStreamController__controller_F;
      t1 === $ && A.throwLateFieldNI("_controller");
      t1.set$onPause(sub.get$pause());
      t1.set$onResume(sub.get$resume());
    }
  };
  A.InternalLogger.prototype = {};
  A._NoLogOutput.prototype = {
    output$1($event) {
    }
  };
  A._DummyPrinter.prototype = {
    log$1($event) {
      return B.List_4i6;
    }
  };
  A._LogAllFilter.prototype = {
    shouldLog$1($event) {
      return true;
    }
  };
  A.ResultStream.prototype = {
    ResultStream$4(channel, req, sendRequest, streaming) {
      var _this = this,
        t1 = J.getInterceptor$asx(req),
        command = A._asInt(t1.$index(req, 2)),
        token = type$.nullable_SquadronCancelationToken._as(t1.$index(req, 4));
      t1 = new A.ForwardStreamController(type$.ForwardStreamController_dynamic);
      t1.__ForwardStreamController__controller_F = A.StreamController_StreamController(new A.ResultStream_$onCancel(_this, null, new A.ResultStream_$getStreamId(null), channel), new A.ResultStream_$onListen(_this, token, sendRequest, false, new A.ResultStream_$decodeStreamOfResponses(_this, channel, null, command, token), new A.ResultStream_$decodeSingleResponse(_this, channel, command), new A.ResultStream_$closeWithError(_this, command)), t1.get$_pause(), t1.get$_resume(), type$.dynamic);
      _this.__ResultStream__controller_F !== $ && A.throwLateFieldAI("_controller");
      _this.__ResultStream__controller_F = t1;
    }
  };
  A.ResultStream_$decodeStreamOfResponses.prototype = {
    call$1(res) {
      var ex, st, t1, t2, t3, error, t4, exception, canceled, _this = this, _null = null,
        _s11_ = "_controller";
      type$.List_dynamic._as(res);
      if (!A.WorkerResponseImpl_unwrapInPlace(res, _this.channel))
        return;
      t1 = _this.streamIdCompleter;
      t2 = (t1.future._state & 30) === 0;
      t3 = J.getInterceptor$asx(res);
      if (A._asBool(t3.$index(res, 3))) {
        if (t2) {
          t1.complete$1(_null);
          t1 = _this.$this.__ResultStream__controller_F;
          t1 === $ && A.throwLateFieldNI(_s11_);
          t2 = A.SquadronError$_("Invalid state: unexpected endOfStream", _null, _this.command);
          if (!t1.__forward_stream_controller$_closed) {
            t3 = t1.__ForwardStreamController__controller_F;
            t3 === $ && A.throwLateFieldNI(_s11_);
            t3 = (t3._state & 4) !== 0;
          } else
            t3 = true;
          if (!t3) {
            t1 = t1.__ForwardStreamController__controller_F;
            t1 === $ && A.throwLateFieldNI(_s11_);
            t1.addError$1(t2);
          }
        }
        t1 = _this.$this.__ResultStream__controller_F;
        t1 === $ && A.throwLateFieldNI(_s11_);
        t1.close$0();
        return;
      }
      error = type$.nullable_SquadronException._as(t3.$index(res, 2));
      t3 = error == null;
      if (t3 && t2)
        t1.complete$1(B.JSNumber_methods.toInt$0(A._asNum(A.WorkerResponse_get_result(res))));
      else if (!t3) {
        t3 = _this.$this.__ResultStream__controller_F;
        t3 === $ && A.throwLateFieldNI(_s11_);
        if (!t3.__forward_stream_controller$_closed) {
          t4 = t3.__ForwardStreamController__controller_F;
          t4 === $ && A.throwLateFieldNI(_s11_);
          t4 = (t4._state & 4) !== 0;
        } else
          t4 = true;
        if (!t4) {
          t4 = t3.__ForwardStreamController__controller_F;
          t4 === $ && A.throwLateFieldNI(_s11_);
          t4.addError$1(error);
        }
        if (t2) {
          t1.complete$1(_null);
          t3.close$0();
          return;
        }
      } else
        try {
          t1 = _this.$this.__ResultStream__controller_F;
          t1 === $ && A.throwLateFieldNI(_s11_);
          t2 = t1.$ti._precomputed1._as(A.WorkerResponse_get_result(res));
          if (!t1.__forward_stream_controller$_closed) {
            t3 = t1.__ForwardStreamController__controller_F;
            t3 === $ && A.throwLateFieldNI(_s11_);
            t3 = (t3._state & 4) !== 0;
          } else
            t3 = true;
          if (!t3) {
            t1 = t1.__ForwardStreamController__controller_F;
            t1 === $ && A.throwLateFieldNI(_s11_);
            t1.add$1(0, t2);
          }
        } catch (exception) {
          ex = A.unwrapException(exception);
          st = A.getTraceFromException(exception);
          t1 = _this.$this.__ResultStream__controller_F;
          t1 === $ && A.throwLateFieldNI(_s11_);
          t2 = A.SquadronException_from(ex, st, _this.command);
          if (!t1.__forward_stream_controller$_closed) {
            t3 = t1.__ForwardStreamController__controller_F;
            t3 === $ && A.throwLateFieldNI(_s11_);
            t3 = (t3._state & 4) !== 0;
          } else
            t3 = true;
          if (!t3) {
            t1 = t1.__ForwardStreamController__controller_F;
            t1 === $ && A.throwLateFieldNI(_s11_);
            t1.addError$1(t2);
          }
        }
      t1 = _this.token;
      canceled = t1 == null ? _null : t1.get$exception();
      if (canceled != null) {
        t1 = _this.$this.__ResultStream__controller_F;
        t1 === $ && A.throwLateFieldNI(_s11_);
        if (!t1.__forward_stream_controller$_closed) {
          t2 = t1.__ForwardStreamController__controller_F;
          t2 === $ && A.throwLateFieldNI(_s11_);
          t2 = (t2._state & 4) !== 0;
        } else
          t2 = true;
        if (!t2) {
          t2 = t1.__ForwardStreamController__controller_F;
          t2 === $ && A.throwLateFieldNI(_s11_);
          t2.addError$1(canceled);
        }
        t1.close$0();
      }
    },
    $signature: 29
  };
  A.ResultStream_$decodeSingleResponse.prototype = {
    call$1(res) {
      var ex, st, error, t1, t2, t3, exception, _this = this,
        _s11_ = "_controller";
      type$.List_dynamic._as(res);
      if (!A.WorkerResponseImpl_unwrapInPlace(res, _this.channel))
        return;
      error = type$.nullable_SquadronException._as(J.$index$asx(res, 2));
      if (error != null) {
        t1 = _this.$this.__ResultStream__controller_F;
        t1 === $ && A.throwLateFieldNI(_s11_);
        if (!t1.__forward_stream_controller$_closed) {
          t2 = t1.__ForwardStreamController__controller_F;
          t2 === $ && A.throwLateFieldNI(_s11_);
          t2 = (t2._state & 4) !== 0;
        } else
          t2 = true;
        if (!t2) {
          t1 = t1.__ForwardStreamController__controller_F;
          t1 === $ && A.throwLateFieldNI(_s11_);
          t1.addError$1(error);
        }
      } else
        try {
          t1 = _this.$this.__ResultStream__controller_F;
          t1 === $ && A.throwLateFieldNI(_s11_);
          t2 = t1.$ti._precomputed1._as(A.WorkerResponse_get_result(res));
          if (!t1.__forward_stream_controller$_closed) {
            t3 = t1.__ForwardStreamController__controller_F;
            t3 === $ && A.throwLateFieldNI(_s11_);
            t3 = (t3._state & 4) !== 0;
          } else
            t3 = true;
          if (!t3) {
            t1 = t1.__ForwardStreamController__controller_F;
            t1 === $ && A.throwLateFieldNI(_s11_);
            t1.add$1(0, t2);
          }
        } catch (exception) {
          ex = A.unwrapException(exception);
          st = A.getTraceFromException(exception);
          t1 = _this.$this.__ResultStream__controller_F;
          t1 === $ && A.throwLateFieldNI(_s11_);
          t2 = A.SquadronException_from(ex, st, _this.command);
          if (!t1.__forward_stream_controller$_closed) {
            t3 = t1.__ForwardStreamController__controller_F;
            t3 === $ && A.throwLateFieldNI(_s11_);
            t3 = (t3._state & 4) !== 0;
          } else
            t3 = true;
          if (!t3) {
            t1 = t1.__ForwardStreamController__controller_F;
            t1 === $ && A.throwLateFieldNI(_s11_);
            t1.addError$1(t2);
          }
        }
      t1 = _this.$this.__ResultStream__controller_F;
      t1 === $ && A.throwLateFieldNI(_s11_);
      t1.close$0();
    },
    $signature: 29
  };
  A.ResultStream_$getStreamId.prototype = {
    call$1(sub) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_int),
        $async$returnValue, $async$self = this, count, streamId, t1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.streamIdCompleter;
              if (t1 == null)
                type$.Completer_nullable_int._as(t1);
              count = 0;
              if (sub._state >= 256 && (t1.future._state & 30) === 0)
                for (; sub._state >= 256;) {
                  ++count;
                  sub.resume$0();
                }
              $async$goto = 3;
              return A._asyncAwait(t1.future, $async$call$1);
            case 3:
              // returning from await.
              streamId = $async$result;
              for (; count > 0;) {
                --count;
                sub.pause$0();
              }
              $async$returnValue = streamId;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 228
  };
  A.ResultStream_$onCancel.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, sub, streamId, t1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this.__ResultStream__controller_F;
              t1 === $ && A.throwLateFieldNI("_controller");
              sub = t1._sub;
              $async$goto = $async$self.streamIdCompleter != null && sub != null ? 2 : 3;
              break;
            case 2:
              // then
              $async$goto = 4;
              return A._asyncAwait($async$self.$$getStreamId.call$1(sub), $async$call$0);
            case 4:
              // returning from await.
              streamId = $async$result;
              if (streamId != null)
                $async$self.channel._postRequest$2$force([A.microsecTimeStamp(null), null, -2, null, null, streamId, null], true);
              $async$goto = 5;
              return A._asyncAwait(sub.cancel$0(), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 12
  };
  A.ResultStream_$closeWithError.prototype = {
    call$2(error, st) {
      var t1, t2, t3,
        _s11_ = "_controller";
      A._asObject(error);
      type$.nullable_StackTrace._as(st);
      t1 = this.$this.__ResultStream__controller_F;
      t1 === $ && A.throwLateFieldNI(_s11_);
      t2 = A.SquadronException_from(error, st, this.command);
      if (!t1.__forward_stream_controller$_closed) {
        t3 = t1.__ForwardStreamController__controller_F;
        t3 === $ && A.throwLateFieldNI(_s11_);
        t3 = (t3._state & 4) !== 0;
      } else
        t3 = true;
      if (!t3) {
        t3 = t1.__ForwardStreamController__controller_F;
        t3 === $ && A.throwLateFieldNI(_s11_);
        t3.addError$1(t2);
      }
      t1.close$0();
    },
    $signature: 38
  };
  A.ResultStream_$onListen.prototype = {
    call$0() {
      var ex, st, t1, t2, exception, _this = this;
      try {
        t1 = _this.token;
        if (t1 != null)
          t1.throwIfCanceled$0();
        t1 = _this.$this.__ResultStream__controller_F;
        t1 === $ && A.throwLateFieldNI("_controller");
        t2 = _this.sendRequest.call$0();
        t1.attachSubscription$1(t2.listen$4$cancelOnError$onDone$onError(_this.$$decodeSingleResponse, false, t1.get$close(), _this.$$closeWithError));
      } catch (exception) {
        ex = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        _this.$$closeWithError.call$2(ex, st);
      }
    },
    $signature: 0
  };
  A.WorkerRunner.prototype = {
    _checkOperations$0() {
      var t2, t3, invalidKeys,
        t1 = this._operations;
      t1.toString;
      t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeysIterable<1>");
      t3 = t2._eval$1("WhereIterable<Iterable.E>");
      invalidKeys = A.List_List$_of(new A.WhereIterable(new A.LinkedHashMapKeysIterable(t1, t2), t2._eval$1("bool(Iterable.E)")._as(new A.WorkerRunner__checkOperations_closure()), t3), t3._eval$1("Iterable.E"));
      t1 = invalidKeys.length;
      if (t1 !== 0) {
        t1 = t1 > 1 ? "s" : "";
        throw A.wrapException(A.SquadronError$_("Invalid command identifier" + t1 + " in service operations map: " + B.JSArray_methods.join$1(invalidKeys, ", ") + ". Command ids must be positive.", null, null));
      }
    },
    connect$3(startRequest, channelInfo, initializer) {
      return this.connect$body$WorkerRunner(startRequest, channelInfo, type$.FutureOr_WorkerService_Function_List_dynamic._as(initializer));
    },
    connect$body$WorkerRunner(startRequest, channelInfo, initializer) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$errorStack = [], $async$self = this, logger, ex, st, t2, channel, t3, exception, t1, $async$exception;
      var $async$connect$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              t1.channel = null;
              $async$handler = 3;
              A.WorkerRequestExt_unwrapInPlace(startRequest, $async$self.internalLogger);
              t2 = J.getInterceptor$asx(startRequest);
              channel = type$.nullable_WorkerChannel._as(t2.$index(startRequest, 1));
              t1.channel = channel;
              if (channel == null) {
                t2 = A.SquadronError$_("Missing client for connection request", null, null);
                throw A.wrapException(t2);
              }
              if ($async$self._logForwarder == null) {
                logger = channel.get$log();
                t3 = new A.WorkerRunner_connect_closure(logger);
                $async$self._logForwarder = t3;
                $.Logger__outputCallbacks.add$1(0, t3);
              }
              if (A._asInt(t2.$index(startRequest, 2)) !== -1) {
                t2 = A.SquadronError$_("Connection request expected", null, null);
                throw A.wrapException(t2);
              } else if ($async$self._service != null || $async$self._operations != null) {
                t2 = A.SquadronError$_("Already connected", null, null);
                throw A.wrapException(t2);
              }
              t2 = initializer.call$1(startRequest);
              t3 = type$.WorkerService;
              $async$goto = 6;
              return A._asyncAwait(type$.Future_WorkerService._is(t2) ? t2 : A._Future$value(t3._as(t2), t3), $async$connect$3);
            case 6:
              // returning from await.
              t2 = $async$result;
              $async$self._service = t2;
              $async$self._operations = t2.get$operations();
              $async$self._checkOperations$0();
              channel._inspectAndPostResponse$1([A.microsecTimeStamp(null), channelInfo, null, null, null]);
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$errorStack.pop();
              ex = A.unwrapException($async$exception);
              st = A.getTraceFromException($async$exception);
              $async$self.internalLogger.e$1(new A.WorkerRunner_connect_closure0(ex));
              t1 = t1.channel;
              if (t1 != null) {
                ex = A.SquadronException_from(A._asObject(ex), type$.nullable_StackTrace._as(st), null);
                t1._postResponse$1([A.microsecTimeStamp(null), null, ex, null, null]);
              }
              $async$self._exit$0();
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return A._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$connect$3, $async$completer);
    },
    processRequest$1(request) {
      return this.processRequest$body$WorkerRunner(request);
    },
    processRequest$body$WorkerRunner(request) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, pendingInstallation, token, canceler, token0, tokenRef, cmd, op, result, reply, replyWithError, postError, post, ex, st, t1, t2, t3, ex0, t4, exception, channel, $async$exception;
      var $async$processRequest$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              channel = null;
              $async$handler = 4;
              A.WorkerRequestExt_unwrapInPlace(request, $async$self.internalLogger);
              t1 = J.getInterceptor$asx(request);
              t2 = type$.nullable_WorkerChannel;
              channel = t2._as(t1.$index(request, 1));
              if (A._asInt(t1.$index(request, 2)) === -4) {
                $async$self._terminationRequested = true;
                if ($async$self._executing === 0)
                  $async$self._unmount$0();
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              t3 = $async$self._installCompleter;
              pendingInstallation = t3 == null ? null : t3.future;
              $async$goto = pendingInstallation != null ? 7 : 8;
              break;
            case 7:
              // then
              $async$goto = 9;
              return A._asyncAwait(pendingInstallation, $async$processRequest$1);
            case 9:
              // returning from await.
              $async$self._installCompleter = null;
            case 8:
              // join
              t3 = $async$self._installError;
              if (t3 != null)
                throw A.wrapException(t3);
              if (A._asInt(t1.$index(request, 2)) === -3) {
                t1 = type$.nullable_SquadronCancelationToken._as(t1.$index(request, 4));
                t1.toString;
                token = t1;
                t1 = $async$self._getTokenRef$1(token);
                ex0 = type$.SquadronCancelationToken._as(token).get$exception();
                if (ex0 != null && (t1.__cancelation_token_ref$_completer.future._state & 30) === 0) {
                  t1.__cancelation_token_ref$_exception = ex0;
                  t1.__cancelation_token_ref$_completer.complete$1(ex0);
                }
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              } else if (A._asInt(t1.$index(request, 2)) === -2) {
                canceler = $async$self._streamCancelers.$index(0, A._asIntQ(t1.$index(request, 5)));
                t1 = canceler;
                t1 = t1 == null ? null : t1.call$0();
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              }
              if (A._asInt(t1.$index(request, 2)) === -1) {
                t1 = A.SquadronError$_("Unexpected connection request: " + A.S(request), null, null);
                throw A.wrapException(t1);
              } else if ($async$self._operations == null) {
                t1 = A.SquadronError$_("Worker service is not ready", null, null);
                throw A.wrapException(t1);
              }
              if (channel == null) {
                t1 = A.SquadronError$_("Missing client for request: " + A.S(request), null, null);
                throw A.wrapException(t1);
              }
              t3 = type$.nullable_SquadronCancelationToken;
              token0 = t3._as(t1.$index(request, 4));
              t4 = token0;
              if (t4 != null)
                t4.throwIfCanceled$0();
              ++$async$self._executing;
              token = $async$self._getTokenRef$1(t3._as(t1.$index(request, 4)));
              if (token._hasRef) {
                ++token._refCount;
                if (t3._as(t1.$index(request, 4)) == null || t3._as(t1.$index(request, 4)).get$id() !== token.id)
                  A.throwExpression(A.SquadronError$_("Cancelation token mismatch", null, null));
                t1.$indexSet(request, 4, token);
              } else if (t3._as(t1.$index(request, 4)) != null)
                A.throwExpression(A.SquadronError$_("Token reference mismatch", null, null));
              tokenRef = token;
              $async$handler = 10;
              cmd = A._asInt(t1.$index(request, 2));
              op = $async$self._operations.$index(0, cmd);
              if (op == null) {
                t1 = A.SquadronError$_("Unknown command: " + A.S(cmd), null, null);
                throw A.wrapException(t1);
              }
              result = op.call$1(request);
              $async$goto = result instanceof A._Future ? 13 : 14;
              break;
            case 13:
              // then
              $async$goto = 15;
              return A._asyncAwait(result, $async$processRequest$1);
            case 15:
              // returning from await.
              result = $async$result;
            case 14:
              // join
              if (A._asBool(t1.$index(request, 6))) {
                t1 = t2._as(t1.$index(request, 1));
                t1 = t1 == null ? null : t1.get$inspectAndReply();
              } else {
                t1 = t2._as(t1.$index(request, 1));
                t1 = t1 == null ? null : t1.get$reply();
              }
              t1.toString;
              reply = t1;
              t1 = result;
              $async$goto = t1 instanceof A.Stream ? 16 : 18;
              break;
            case 16:
              // then
              replyWithError = channel.get$error();
              postError = new A.WorkerRunner_processRequest_postError(replyWithError, cmd);
              post = new A.WorkerRunner_processRequest_post(reply, postError);
              $async$goto = 19;
              return A._asyncAwait($async$self._pipe$5(result, channel, post, postError, token0), $async$processRequest$1);
            case 19:
              // returning from await.
              // goto join
              $async$goto = 17;
              break;
            case 18:
              // else
              reply.call$1(result);
            case 17:
              // join
              $async$next.push(12);
              // goto finally
              $async$goto = 11;
              break;
            case 10:
              // uncaught
              $async$next = [4];
            case 11:
              // finally
              $async$handler = 4;
              t1 = type$.CancelationTokenReference._as(tokenRef);
              if (t1._hasRef)
                --t1._refCount;
              if (t1._refCount === 0)
                $async$self._cancelTokens.remove$1(0, t1.id);
              t1 = --$async$self._executing;
              if ($async$self._terminationRequested && t1 === 0)
                $async$self._unmount$0();
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 12:
              // after finally
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$errorStack.pop();
              ex = A.unwrapException($async$exception);
              st = A.getTraceFromException($async$exception);
              if (channel != null) {
                t1 = channel;
                t2 = A._asInt(J.$index$asx(request, 2));
                ex = A.SquadronException_from(A._asObject(ex), type$.nullable_StackTrace._as(st), t2);
                t1._postResponse$1([A.microsecTimeStamp(null), null, ex, null, null]);
              } else
                $async$self.internalLogger.e$1("Unhandled error: " + A.S(ex));
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$processRequest$1, $async$completer);
    },
    _getTokenRef$1(token) {
      return token == null ? $.$get$CancelationTokenReference_noToken() : this._cancelTokens.putIfAbsent$2(token.get$id(), new A.WorkerRunner__getTokenRef_closure(token));
    },
    _pipe$5(stream, channel, post, postError, token) {
      var subscription, t2, streamId, t3, t4, t5, t1 = {};
      type$.void_Function_dynamic._as(post);
      type$.void_Function_Object_$opt_nullable_StackTrace._as(postError);
      subscription = A._Cell$named("subscription");
      t2 = new A._Future($.Zone__current, type$._Future_dynamic);
      streamId = A._Cell$named("streamId");
      t3 = new A.WorkerRunner__pipe_onDone(this, streamId, channel, subscription, new A._AsyncCompleter(t2, type$._AsyncCompleter_dynamic));
      t1.checkToken = null;
      t4 = token == null ? t1.checkToken = new A.WorkerRunner__pipe_closure() : t1.checkToken = new A.WorkerRunner__pipe_closure0(token, postError, t3);
      type$.void_Function._as(t3);
      t5 = ++this._streamId;
      this._streamCancelers.$indexSet(0, t5, t3);
      streamId.set$finalLocalValue(t5);
      post.call$1(streamId._readLocal$0());
      if (t4.call$0())
        subscription.set$finalLocalValue(stream.listen$4$cancelOnError$onDone$onError(new A.WorkerRunner__pipe_closure1(t1, post), false, t3, new A.WorkerRunner__pipe_closure2(t1, postError)));
      return t2;
    },
    _unmount$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$next = [], $async$self = this, ex, exception;
      var $async$_unmount$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              try {
              } catch (exception) {
                ex = A.unwrapException(exception);
                $async$self.internalLogger.e$1("Service uninstallation failed with error: " + A.S(ex));
              } finally {
                $async$self._exit$0();
              }
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$_unmount$0, $async$completer);
    },
    _exit$0() {
      var ex, exception, t1, _this = this;
      try {
        _this._terminate.call$1(_this);
      } catch (exception) {
        ex = A.unwrapException(exception);
        _this.internalLogger.e$1("Worker termination failed with error: " + A.S(ex));
      }
      t1 = _this._logForwarder;
      if (t1 != null)
        $.Logger__outputCallbacks.remove$1(0, t1);
    }
  };
  A.WorkerRunner__checkOperations_closure.prototype = {
    call$1(k) {
      return A._asInt(k) <= 0;
    },
    $signature: 16
  };
  A.WorkerRunner_connect_closure.prototype = {
    call$1($event) {
      return this.logger.call$1(type$.OutputEvent._as($event).origin);
    },
    $signature: 229
  };
  A.WorkerRunner_connect_closure0.prototype = {
    call$0() {
      return "Connection failed: " + A.S(this.ex);
    },
    $signature: 1
  };
  A.WorkerRunner_processRequest_postError.prototype = {
    call$2(exception, stackTrace) {
      this.replyWithError.call$3(exception, type$.nullable_StackTrace._as(stackTrace), this.cmd);
    },
    call$1(exception) {
      return this.call$2(exception, null);
    },
    $signature: 81
  };
  A.WorkerRunner_processRequest_post.prototype = {
    call$1(data) {
      var ex, st, exception;
      try {
        this.reply.call$1(data);
      } catch (exception) {
        ex = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        this.postError.call$2(ex, st);
      }
    },
    $signature: 6
  };
  A.WorkerRunner__getTokenRef_closure.prototype = {
    call$0() {
      return new A.CancelationTokenReference(this.token.get$id(), new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_SquadronCanceledException), type$._AsyncCompleter_SquadronCanceledException), true);
    },
    $signature: 230
  };
  A.WorkerRunner__pipe_onDone.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.$this._streamCancelers.remove$1(0, A._asInt($async$self.streamId._readLocal$0()));
              $async$self.channel._postResponse$1([A.microsecTimeStamp(null), null, null, true, null]);
              $async$goto = 2;
              return A._asyncAwait($async$self.subscription._readLocal$0().cancel$0(), $async$call$0);
            case 2:
              // returning from await.
              $async$self.done.complete$0();
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 12
  };
  A.WorkerRunner__pipe_closure.prototype = {
    call$0() {
      return true;
    },
    $signature: 72
  };
  A.WorkerRunner__pipe_closure0.prototype = {
    call$0() {
      var ex = this.token.get$exception(),
        t1 = ex == null;
      if (!t1) {
        this.postError.call$1(ex);
        this.onDone.call$0();
      }
      return t1;
    },
    $signature: 72
  };
  A.WorkerRunner__pipe_closure1.prototype = {
    call$1(data) {
      if (this._box_0.checkToken.call$0())
        this.post.call$1(data);
    },
    $signature: 6
  };
  A.WorkerRunner__pipe_closure2.prototype = {
    call$2(ex, st) {
      var t1;
      if (this._box_0.checkToken.call$0()) {
        t1 = ex == null ? A._asObject(ex) : ex;
        this.postError.call$2(t1, type$.nullable_StackTrace._as(st));
      }
    },
    $signature: 83
  };
  A.ConcurrencySettings.prototype = {};
  A.CastConverter.prototype = {
    value$1$0($T) {
      A.checkTypeBound($T, type$.Object, "T", "value");
      return A.instantiate1(A.converter_Converter_identity$closure(), $T);
    }
  };
  A.ContextAwareConverter.prototype = {
    value$1$0($T) {
      var op;
      A.checkTypeBound($T, type$.Object, "T", "value");
      op = this._context_aware_converter$_converter.value$1$0($T);
      if (A.createRuntimeType($T) === B.Type_int_T7V || A.createRuntimeType($T) === B.Type_double_JIQ || J.$eq$(op, A.instantiate1(A.converter_Converter_identity$closure(), $T)))
        return op;
      return new A.ContextAwareConverter_value_closure(this, op, $T);
    }
  };
  A.ContextAwareConverter_value_closure.prototype = {
    call$1(x) {
      var t1, t2, t3, ref;
      if (x == null)
        A._asObject(x);
      t1 = this.T;
      t2 = type$.Object;
      A.checkTypeBound(t1, t2, "T", "getReference");
      t3 = this.$this._context_aware_converter$_arguments._cache;
      ref = t3.$index(0, x);
      ref = t1._is(ref) ? ref : null;
      if (ref != null)
        return ref;
      ref = this.op.call$1(x);
      A.checkTypeBound(t1, t2, "T", "setReference");
      t1._as(ref);
      t3.$indexSet(0, x, ref);
      return ref;
    },
    $signature() {
      return this.T._eval$1("0(@)");
    }
  };
  A.Converter0.prototype = {};
  A.NumConverter.prototype = {
    value$1$0($T) {
      A.checkTypeBound($T, type$.Object, "T", "value");
      if (A.createRuntimeType($T) === B.Type_int_T7V)
        return $T._eval$1("0(@)")._as(A.num_converter_NumConverter__toInt$closure());
      if (A.createRuntimeType($T) === B.Type_double_JIQ)
        return $T._eval$1("0(@)")._as(A.num_converter_NumConverter__toDbl$closure());
      return A.instantiate1(A.converter_Converter_identity$closure(), $T);
    }
  };
  A.SerializationContext.prototype = {};
  A.ExceptionManager.prototype = {
    deserialize$1(data) {
      var exceptionType, deserializer, ex, st, t1, exception, _null = null;
      if (data == null || J.get$isEmpty$asx(data))
        return _null;
      try {
        exceptionType = J.$index$asx(data, 0);
        deserializer = this._deserializers.$index(0, exceptionType);
        t1 = deserializer;
        t1 = t1 == null ? _null : t1.call$1(data);
        if (t1 == null)
          t1 = A.WorkerException$("Failed to deserialize exception information for " + A.S(exceptionType), _null, _null);
        type$.nullable_SquadronException._as(t1);
        return t1;
      } catch (exception) {
        ex = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        t1 = A.SquadronException_from(ex, st, _null);
        return t1;
      }
    }
  };
  A.SquadronCanceledException.prototype = {
    serialize$0() {
      var t1 = this.get$message(),
        t2 = this.get$stackTrace();
      t2 = t2 == null ? null : t2.toString$0(0);
      return A.List_List$unmodifiable(["$C", this.tokenId, t1, t2], type$.dynamic);
    },
    $isCanceledException: 1
  };
  A.SquadronCanceledException_SquadronCanceledException$from_closure.prototype = {
    call$1(e) {
      type$.CanceledException._as(e);
      return A.SquadronCanceledException_SquadronCanceledException$from(this.tokenId, e, e.get$stackTrace());
    },
    $signature: 233
  };
  A.SquadronCanceledExceptions.prototype = {
    get$message() {
      var t1 = this._exceptions,
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.SquadronCanceledExceptions_message_closure()), t2._eval$1("MappedListIterable<1,String>")).join$1(0, "\n");
    },
    get$stackTrace() {
      return null;
    },
    toString$0(_) {
      return B.C_JsonCodec.encode$2$toEncodable(this.serialize$0(), null);
    },
    serialize$0() {
      var t1 = this._exceptions,
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,List<@>>");
      t1 = A.List_List$_of(new A.MappedListIterable(t1, t2._eval$1("List<@>(1)")._as(new A.SquadronCanceledExceptions_serialize_closure()), t3), t3._eval$1("ListIterable.E"));
      return A.List_List$unmodifiable(["$C*", this.tokenId, t1], type$.dynamic);
    }
  };
  A.SquadronCanceledExceptions_message_closure.prototype = {
    call$1(e) {
      return type$.SquadronCanceledException._as(e).get$message();
    },
    $signature: 234
  };
  A.SquadronCanceledExceptions_serialize_closure.prototype = {
    call$1(e) {
      return type$.SquadronCanceledException._as(e).serialize$0();
    },
    $signature: 235
  };
  A.SquadronError.prototype = {
    serialize$0() {
      var t1 = this._squadron_exception$_stackTrace;
      t1 = t1 == null ? null : t1.toString$0(0);
      return A.List_List$unmodifiable(["$!", this.message, t1, this._command], type$.dynamic);
    }
  };
  A.SquadronException.prototype = {
    SquadronException$init$2(message, _stackTrace) {
      var st, exception;
      if (this._squadron_exception$_stackTrace == null)
        try {
          this._squadron_exception$_stackTrace = A.StackTrace_current();
        } catch (exception) {
          st = A.getTraceFromException(exception);
          this._squadron_exception$_stackTrace = st;
        }
    },
    get$stackTrace() {
      return this._squadron_exception$_stackTrace;
    },
    toString$0(_) {
      return B.C_JsonCodec.encode$2$toEncodable(this.serialize$0(), null);
    },
    get$message() {
      return this.message;
    }
  };
  A.SquadronTimeoutException.prototype = {
    serialize$0() {
      var t2, _this = this,
        t1 = _this._squadron_exception$_stackTrace;
      t1 = t1 == null ? null : t1.toString$0(0);
      t2 = _this.duration;
      t2 = t2 == null ? null : t2._duration;
      return A.List_List$unmodifiable(["$T", _this.tokenId, _this.message, t1, t2], type$.dynamic);
    }
  };
  A.TaskCanceledException.prototype = {
    get$stackTrace() {
      return null;
    },
    toString$0(_) {
      return B.C_JsonCodec.encode$2$toEncodable(A.List_List$unmodifiable(["$C1", this.message], type$.dynamic), null);
    },
    serialize$0() {
      return A.List_List$unmodifiable(["$C1", this.message], type$.dynamic);
    },
    $isCanceledException: 1,
    $isSquadronError: 1,
    $isSquadronException: 1,
    get$message() {
      return this.message;
    }
  };
  A.TaskTerminatedException.prototype = {
    toString$0(_) {
      return B.C_JsonCodec.encode$2$toEncodable(this.serialize$0(), null);
    },
    serialize$0() {
      var t1 = this.stackTrace;
      t1 = t1 == null ? null : t1._stackTrace;
      return A.List_List$unmodifiable(["$K", this.message, t1], type$.dynamic);
    },
    $isCanceledException: 1,
    $isSquadronError: 1,
    $isSquadronException: 1,
    get$message() {
      return this.message;
    },
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A.WorkerException.prototype = {
    serialize$0() {
      var t1 = this._squadron_exception$_stackTrace;
      t1 = t1 == null ? null : t1.toString$0(0);
      return A.List_List$unmodifiable(["$#", this.message, t1, this._worker_exception$_command], type$.dynamic);
    }
  };
  A.MarshalingContext.prototype = {};
  A.PoolWorker.prototype = {
    run$1(task) {
      var t1, _this = this;
      type$.WorkerTask_dynamic_Worker._as(task);
      _this._lastStart = Date.now();
      --_this._capacity;
      t1 = task.$ti._rest[1]._as(_this.worker);
      if (task._scheduled == null)
        task._scheduled = A.microsecTimeStamp(null);
      return task.execute$1(t1).then$1$2$onError(task.get$_success(), task.get$_fail(), type$.void).whenComplete$1(new A.PoolWorker_run_closure(_this));
    }
  };
  A.PoolWorker_run_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (++t1._capacity === t1._maxWorkload)
        t1._lastStart = null;
    },
    $signature: 5
  };
  A.WorkerTask.prototype = {
    cancel$1(message) {
      var _this = this;
      if (_this._canceled == null)
        _this._canceled = A.microsecTimeStamp(null);
      if (_this._canceledException == null)
        _this._canceledException = new A.TaskCanceledException(message);
      if (_this._scheduled == null)
        _this._fail$0();
    },
    _success$1(res) {
      var t1;
      A._asBool(res);
      if (this._finished == null)
        this._finished = A.microsecTimeStamp(null);
      t1 = this._done;
      if ((t1.future._state & 30) === 0)
        t1.complete$0();
    },
    _fail$1(_) {
      var t1;
      if (this._finished == null)
        this._finished = A.microsecTimeStamp(null);
      t1 = this._done;
      if ((t1.future._state & 30) === 0)
        t1.complete$0();
    },
    _fail$0() {
      return this._fail$1(null);
    }
  };
  A.WorkerValueTask.prototype = {
    _failure$1(exception) {
      var t1 = this._result;
      if ((t1.future._state & 30) === 0)
        t1.completeError$1(exception);
    },
    execute$1(worker) {
      return this.execute$body$WorkerValueTask(this.$ti._rest[1]._as(worker));
    },
    execute$body$WorkerValueTask(worker) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$self = this, res, ex, st, t1, exception, $async$exception;
      var $async$execute$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              t1 = $async$self._canceledException;
              if (t1 != null)
                A.throwExpression(t1);
              $async$goto = 7;
              return A._asyncAwait($async$self._computer.call$1(worker), $async$execute$1);
            case 7:
              // returning from await.
              res = $async$result;
              t1 = $async$self._result;
              if ((t1.future._state & 30) === 0)
                t1.complete$1($async$self.$ti._eval$1("1/?")._as(res));
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$errorStack.pop();
              ex = A.unwrapException($async$exception);
              st = A.getTraceFromException($async$exception);
              $async$self._failure$1(A.SquadronException_from(ex, st, null));
              $async$returnValue = false;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$execute$1, $async$completer);
    },
    $isValueTask: 1
  };
  A.WorkerPool.prototype = {
    _getProvisionNeeds$1(workload) {
      var maxWorkers,
        t1 = this.concurrencySettings,
        minWorkers = t1.minWorkers;
      if (workload < minWorkers)
        workload = minWorkers;
      maxWorkers = t1.maxWorkers;
      if (maxWorkers > 0 && workload > maxWorkers)
        workload = maxWorkers;
      return workload - this._workers.length - this._startingWorkers;
    },
    _provisionWorkers$1(workload) {
      var worker, poolWorker, ex, st, t1, t2, t3, i, t4, onError, t5, t6, result, exception, _this = this,
        tasks = A._setArrayType([], type$.JSArray_Future_dynamic),
        errors = [],
        maxParallel = _this.concurrencySettings.maxParallel;
      for (t1 = _this._workerFactory, t2 = A._instanceType(_this)._eval$1("PoolWorker<WorkerPool.W>"), t3 = type$.Null, i = 0; i < workload; ++i)
        try {
          t4 = _this._exceptionManager;
          worker = t1.call$1(t4);
          worker.channelLogger = _this.channelLogger;
          t4 = maxParallel;
          poolWorker = new A.PoolWorker(worker, t4, t4, t2);
          ++_this._startingWorkers;
          t4 = poolWorker.worker.start$0().whenComplete$1(new A.WorkerPool__provisionWorkers_closure(_this)).then$1$1(new A.WorkerPool__provisionWorkers_closure0(_this, poolWorker), t3);
          onError = new A.WorkerPool__provisionWorkers_closure1(poolWorker, errors);
          t5 = t4.$ti;
          t6 = $.Zone__current;
          result = new A._Future(t6, t5);
          if (t6 !== B.C__RootZone)
            onError = A._registerErrorHandler(onError, t6);
          t4._addListener$1(new A._FutureListener(result, 2, null, onError, t5._eval$1("_FutureListener<1,1>")));
          J.add$1$ax(tasks, result);
        } catch (exception) {
          ex = A.unwrapException(exception);
          st = A.getTraceFromException(exception);
          J.add$1$ax(errors, A.SquadronException_from(ex, st, null));
        }
      return A.Future_wait(tasks, type$.dynamic).whenComplete$1(new A.WorkerPool__provisionWorkers_closure2(_this, errors, tasks));
    },
    start$0() {
      var t1, needs, _this = this;
      _this._stopped = false;
      t1 = _this._queue;
      needs = _this._getProvisionNeeds$1(t1._head === t1._tail ? 1 : t1.get$length(0));
      if (needs > 0)
        return _this._provisionWorkers$1(needs);
    },
    _notify$2$removed(stats, removed) {
      var listener, exception,
        t1 = this._workerPoolListeners;
      if (t1.__js_helper$_length !== 0)
        for (t1 = new A.LinkedHashMapValueIterator(t1, t1._modifications, t1._first, A._instanceType(t1)._eval$1("LinkedHashMapValueIterator<2>")); t1.moveNext$0();) {
          listener = t1.__js_helper$_current;
          try {
            listener.call$2(stats, removed);
          } catch (exception) {
          }
        }
    },
    _removeWorkerAndNotify$2(poolWorker, force) {
      var worker, stats, _this = this;
      A._instanceType(_this)._eval$1("PoolWorker<WorkerPool.W>")._as(poolWorker);
      if (force || _this._workers.length > _this.concurrencySettings.minWorkers) {
        worker = poolWorker.worker;
        worker.stop$0();
        if (B.JSArray_methods.remove$1(_this._workers, poolWorker)) {
          stats = worker.get$_stats().get$snapshot();
          B.JSArray_methods.add$1(_this._deadWorkerStats, stats);
          _this._notify$2$removed(stats, true);
          return 1;
        }
      }
      return 0;
    },
    stop$0() {
      var t2, targets, stopped, _i, _this = this,
        t1 = _this._workers;
      B.JSArray_methods.sort$1(t1, A._pool_worker_PoolWorker_compareCapacity$closure());
      t2 = A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>");
      targets = A.SubListIterable$(new A.ReversedListIterable(t1, t2), _this._queue.get$length(0), null, t2._eval$1("ListIterable.E")).toList$0(0);
      _this._stopped = true;
      for (t1 = targets.length, stopped = 0, _i = 0; _i < targets.length; targets.length === t1 || (0, A.throwConcurrentModificationError)(targets), ++_i)
        stopped += _this._removeWorkerAndNotify$2(targets[_i], true);
      return stopped;
    },
    execute$1$1(task, $T) {
      var t3, t4, t5, t6, _this = this, _null = null,
        t1 = A._instanceType(_this),
        t2 = t1._bind$1($T);
      task = t2._eval$1("Future<1>(WorkerPool.W)")._as(t2._eval$1("Future<1>(WorkerPool.W)")._as(task));
      t3 = $.Zone__current;
      t4 = new A._Future(t3, $T._eval$1("_Future<0>"));
      t5 = type$._Future_void;
      t6 = type$._AsyncCompleter_void;
      A.microsecTimeStamp(_null);
      t1 = t2._eval$1("WorkerTask<1,WorkerPool.W>")._as(new A.WorkerValueTask(task, new A._AsyncCompleter(t4, $T._eval$1("_AsyncCompleter<0>")), new A._AsyncCompleter(new A._Future(t3, t5), t6), _null, new A._AsyncCompleter(new A._Future(t3, t5), t6), $T._eval$1("@<0>")._bind$1(t1._eval$1("WorkerPool.W"))._eval$1("WorkerValueTask<1,2>")));
      if (_this._stopped)
        A.throwExpression(A.SquadronError$_(string$.The_po, _null, _null));
      t2 = _this._queue;
      t2._add$1(t2.$ti._precomputed1._as(t1));
      _this._schedule$0();
      $T._eval$1("ValueTask<0>")._as(t1);
      return t4;
    },
    _schedule$0() {
      var t1 = this._timer;
      if ((t1 == null ? null : t1._handle != null) !== true)
        this._timer = A.Timer_Timer(B.Duration_0, this.get$__schedule());
    },
    __schedule$0() {
      var t1, needs, _this = this;
      if (_this._workers.length === 0 && _this._startingWorkers > 0) {
        _this._schedule$0();
        return;
      }
      t1 = _this._queue;
      if (t1._head === t1._tail) {
        if (_this._stopped && _this._worker_pool$_executing._collection$_length === 0)
          _this.stop$0();
        return;
      }
      _this._dispatchTasks$0();
      needs = _this._getProvisionNeeds$1(t1.get$length(0));
      if (needs > 0)
        _this._provisionWorkers$1(needs).then$1$2$onError(new A.WorkerPool___schedule_closure(_this), new A.WorkerPool___schedule_closure0(_this), type$.void);
    },
    _dispatchTasks$0() {
      var idx, t2, t3, w, task, _this = this,
        t1 = _this._workers;
      B.JSArray_methods.sort$1(t1, A._pool_worker_PoolWorker_compareCapacity$closure());
      for (idx = t1.length - 1, t2 = _this._queue, t3 = _this._worker_pool$_executing; idx >= 0; --idx) {
        if (!(idx < t1.length))
          return A.ioore(t1, idx);
        w = t1[idx];
        if (w.worker.get$_stats()._worker$_stopped != null) {
          _this._removeWorkerAndNotify$2(w, false);
          continue;
        }
        while (true) {
          if (!(!t2.get$isEmpty(0) && w._capacity > 0))
            break;
          task = t2.removeFirst$0();
          if (task._canceled == null) {
            t3.add$1(0, task);
            w.run$1(task).whenComplete$1(new A.WorkerPool__dispatchTasks_closure(_this, task));
          }
        }
      }
    },
    get$operations() {
      return $.$get$WorkerService_noOperations();
    },
    $isWorkerService: 1
  };
  A.WorkerPool__provisionWorkers_closure.prototype = {
    call$0() {
      --this.$this._startingWorkers;
    },
    $signature: 5
  };
  A.WorkerPool__provisionWorkers_closure0.prototype = {
    call$1(_) {
      var t1, t2;
      type$.Channel._as(_);
      t1 = this.$this;
      t2 = A._instanceType(t1)._eval$1("PoolWorker<WorkerPool.W>")._as(this.poolWorker);
      B.JSArray_methods.add$1(t1._workers, t2);
      t1._notify$2$removed(t2.worker.get$_stats().get$snapshot(), false);
    },
    $signature: 238
  };
  A.WorkerPool__provisionWorkers_closure1.prototype = {
    call$2(ex, st) {
      var t1;
      this.poolWorker.worker.terminate$0();
      t1 = ex == null ? A._asObject(ex) : ex;
      B.JSArray_methods.add$1(this.errors, A.SquadronException_from(t1, type$.nullable_StackTrace._as(st), null));
    },
    $signature: 83
  };
  A.WorkerPool__provisionWorkers_closure2.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._workers.length;
      if (t2 > t1._maxSize)
        t1._maxSize = t2;
      t1 = this.errors;
      t2 = t1.length;
      if (t2 !== 0)
        if (!(t2 < this.tasks.length)) {
          t2 = B.JSArray_methods.firstWhere$2$orElse(t1, new A.WorkerPool__provisionWorkers__closure(), new A.WorkerPool__provisionWorkers__closure0());
          if (t2 == null)
            t2 = B.JSArray_methods.firstWhere$2$orElse(t1, new A.WorkerPool__provisionWorkers__closure1(), new A.WorkerPool__provisionWorkers__closure2());
          t1 = t2 == null ? B.JSArray_methods.get$first(t1) : t2;
          throw A.wrapException(t1);
        }
    },
    $signature: 5
  };
  A.WorkerPool__provisionWorkers__closure.prototype = {
    call$1(e) {
      return type$.SquadronError._is(e);
    },
    $signature: 56
  };
  A.WorkerPool__provisionWorkers__closure0.prototype = {
    call$0() {
      return null;
    },
    $signature: 5
  };
  A.WorkerPool__provisionWorkers__closure1.prototype = {
    call$1(e) {
      return e instanceof A.WorkerException;
    },
    $signature: 56
  };
  A.WorkerPool__provisionWorkers__closure2.prototype = {
    call$0() {
      return null;
    },
    $signature: 5
  };
  A.WorkerPool___schedule_closure.prototype = {
    call$1(_) {
      return this.$this._dispatchTasks$0();
    },
    $signature: 240
  };
  A.WorkerPool___schedule_closure0.prototype = {
    call$1(ex) {
      var t2, t3,
        t1 = this.$this;
      if (t1._workers.length === 0)
        for (t1 = t1._queue; !t1.get$isEmpty(0);) {
          t2 = t1.removeFirst$0();
          t2.super$WorkerTask$cancel("Provisionning workers failed");
          t3 = t2._canceledException;
          t3.toString;
          t2 = t2._result.future;
          if ((t2._state & 30) === 0)
            t2._asyncCompleteErrorObject$1(A._interceptUserError(t3, null));
        }
      else
        t1._schedule$0();
    },
    $signature: 30
  };
  A.WorkerPool__dispatchTasks_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._worker_pool$_executing.remove$1(0, this.task);
      t1._schedule$0();
    },
    $signature: 5
  };
  A._WorkerPool_Object_Releasable.prototype = {};
  A.SquadronPlatformType.prototype = {
    _enumToString$0() {
      return "SquadronPlatformType." + this._core$_name;
    },
    get$isJs() {
      return this === B.SquadronPlatformType_JavaScript_2_js;
    },
    toString$0(_) {
      return this.label;
    }
  };
  A.WorkerStat.prototype = {};
  A.CancelationTokenReference.prototype = {
    get$exception() {
      return this.__cancelation_token_ref$_exception;
    },
    ensureStarted$0() {
    },
    throwIfCanceled$0() {
      var t1 = this.__cancelation_token_ref$_exception;
      if (t1 != null)
        throw A.wrapException(t1);
    },
    serialize$0() {
      return A.throwExpression(A.UnimplementedError$(null));
    },
    $isCancelationToken: 1,
    $isSquadronCancelationToken: 1,
    get$id() {
      return this.id;
    }
  };
  A.SquadronCancelationToken.prototype = {
    serialize$0() {
      this._checkToken$0();
      var t1 = this.__squadron_cancelation_token$_exception;
      t1 = t1 == null ? null : t1.serialize$0();
      return A.List_List$unmodifiable([this.id, t1], type$.dynamic);
    },
    get$exception() {
      return this.__squadron_cancelation_token$_exception;
    },
    ensureStarted$0() {
    },
    _checkToken$1(_) {
    },
    _checkToken$0() {
      return this._checkToken$1(null);
    },
    get$id() {
      return this.id;
    }
  };
  A.Worker.prototype = {
    get$_stats() {
      var t1, _this = this,
        value = _this.__Worker__stats_FI;
      if (value === $) {
        t1 = A.microsecTimeStamp(null);
        _this.__Worker__stats_FI !== $ && A.throwLateFieldADI("_stats");
        value = _this.__Worker__stats_FI = new A._Stats(_this, t1);
      }
      return value;
    },
    send$2$args(command, args) {
      var inspectRequest = false,
        inspectResponse = false;
      return this.send$body$Worker(command, args);
    },
    send$body$Worker(command, args) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$self = this, res, ex, st, t2, t3, exception, inspectRequest, inspectResponse, channel0, channel, completer, squadronToken, t1, $async$exception;
      var $async$send$2$args = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              inspectRequest = false;
              inspectResponse = false;
              channel0 = $async$self._channel;
              $async$goto = channel0 == null ? 3 : 5;
              break;
            case 3:
              // then
              $async$goto = 6;
              return A._asyncAwait($async$self.start$0(), $async$send$2$args);
            case 6:
              // returning from await.
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$result = channel0;
            case 4:
              // join
              channel = $async$result;
              completer = new A.ForwardCompleter(new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_dynamic), type$._AsyncCompleter_dynamic), type$.ForwardCompleter_dynamic);
              squadronToken = null;
              t1 = squadronToken;
              if (t1 != null)
                t1._completer.future.then$1$1(new A.Worker_send_closure($async$self, squadronToken, completer, command), type$.Null);
              t1 = $async$self.get$_stats();
              t2 = ++t1._workload;
              if (t2 > t1._worker$_maxWorkload)
                t1._worker$_maxWorkload = t2;
              A.FutureExtensions_ignore(completer._res.future.whenComplete$1(t1.get$endWork()), type$.dynamic);
              $async$handler = 8;
              $async$goto = 11;
              return A._asyncAwait(channel.sendRequest$5$inspectRequest$inspectResponse$token(command, args, inspectRequest, inspectResponse, squadronToken), $async$send$2$args);
            case 11:
              // returning from await.
              res = $async$result;
              t2 = completer;
              t3 = t2.$ti._precomputed1._as(res);
              t2 = t2._res;
              if ((t2.future._state & 30) === 0)
                t2.complete$1(t3);
              $async$handler = 2;
              // goto after finally
              $async$goto = 10;
              break;
            case 8:
              // catch
              $async$handler = 7;
              $async$exception = $async$errorStack.pop();
              ex = A.unwrapException($async$exception);
              st = A.getTraceFromException($async$exception);
              ++t1._totalErrors;
              t1 = A.SquadronException_from(ex, st, command);
              t2 = completer._res;
              if ((t2.future._state & 30) === 0)
                t2.completeError$1(t1);
              // goto after finally
              $async$goto = 10;
              break;
            case 7:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 10:
              // after finally
              $async$returnValue = completer._res.future;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$send$2$args, $async$completer);
    },
    start$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Channel),
        $async$returnValue, $async$self = this, t2, channel, t3, t1;
      var $async$start$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.get$_stats();
              if (t1._worker$_stopped != null)
                throw A.wrapException(A.WorkerException$("Invalid state: worker is stopped", null, null));
              t2 = $async$self._openChannel;
              if (t2 == null) {
                t2 = $async$self._worker$_exceptionManager;
                t2 = A.openChannel($async$self._entryPoint, t2, $async$self.channelLogger, B.List_empty1, $async$self._threadHook);
                $async$self._openChannel = t2;
              }
              channel = $async$self._channel;
              $async$goto = channel == null ? 3 : 4;
              break;
            case 3:
              // then
              t3 = type$.nullable_Channel;
              $async$goto = 5;
              return A._asyncAwait(type$.Future_nullable_Channel._is(t2) ? t2 : A._Future$value(t3._as(t2), t3), $async$start$0);
            case 5:
              // returning from await.
              channel = $async$result;
            case 4:
              // join
              if ($async$self._channel == null) {
                $async$self._channel = channel;
                t1._idle = t1._started = A.microsecTimeStamp(null);
              }
              t1 = $async$self._channel;
              t1.toString;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$start$0, $async$completer);
    },
    stop$0() {
      var _this = this,
        t1 = _this.get$_stats();
      if (t1._worker$_stopped == null) {
        t1._worker$_stopped = A.microsecTimeStamp(null);
        _this._openChannel = null;
        t1 = _this._channel;
        if (t1 != null)
          t1.close$0();
        _this._channel = null;
      }
    },
    terminate$1(ex) {
      var t1 = this._channel;
      if (t1 != null)
        A.terminateChannel(t1, new A.TaskTerminatedException("Worker has been terminated", null));
      this.stop$0();
    },
    terminate$0() {
      return this.terminate$1(null);
    },
    get$operations() {
      return $.$get$WorkerService_noOperations();
    },
    $isWorkerService: 1
  };
  A.Worker_send_closure.prototype = {
    call$1(ex) {
      var t1, t2, _this = this;
      type$.CanceledException._as(ex);
      t1 = _this.$this._channel;
      if (t1 != null)
        t1.cancelToken$1(_this.squadronToken);
      t1 = A.SquadronException_from(ex, null, _this.command);
      t2 = _this.completer._res;
      if ((t2.future._state & 30) === 0)
        t2.completeError$1(t1);
    },
    $signature: 241
  };
  A._Stats.prototype = {
    endWork$1(_) {
      --this._workload;
      this._idle = A.microsecTimeStamp(null);
      ++this._totalWorkload;
    },
    endWork$0() {
      return this.endWork$1(null);
    },
    get$snapshot() {
      var t2, t3, _this = this,
        ts = A.microsecTimeStamp(null),
        t1 = _this._worker;
      A.getRuntimeTypeOfDartObject(t1);
      A.Primitives_objectHashCode(t1);
      t1 = _this._worker$_stopped;
      t2 = t1 == null;
      if (t2)
        t1 = ts;
      t3 = _this._started;
      if (t3 != null)
        A.Duration$(t1 - t3, 0);
      if (_this._workload <= 0)
        A.Duration$(ts - _this._idle, 0);
      return new A.WorkerStat(new A.DateTime(Date.now(), 0, false).toUtc$0(), !t2);
    }
  };
  A._Worker_Object_Releasable.prototype = {};
  A._LogEventSerializationExt__getLevel_closure.prototype = {
    call$1(l) {
      return type$.Level._as(l).value === this.value;
    },
    $signature: 243
  };
  A.TypedDataBuffer.prototype = {
    get$length(_) {
      return this._typed_buffer$_length;
    },
    $index(_, index) {
      var t1;
      if (index >= this._typed_buffer$_length)
        throw A.wrapException(A.IndexError$(index, this, null, null, null));
      t1 = this._typed_buffer$_buffer;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      return t1[index];
    },
    $indexSet(_, index, value) {
      var _this = this;
      A._instanceType(_this)._eval$1("TypedDataBuffer.E")._as(value);
      if (index >= _this._typed_buffer$_length)
        throw A.wrapException(A.IndexError$(index, _this, null, null, null));
      B.NativeUint8List_methods.$indexSet(_this._typed_buffer$_buffer, index, value);
    },
    set$length(_, newLength) {
      var t2, t3, i, newBuffer, _this = this,
        t1 = _this._typed_buffer$_length;
      if (newLength < t1)
        for (t2 = _this._typed_buffer$_buffer, t3 = t2.$flags | 0, i = newLength; i < t1; ++i) {
          t3 & 2 && A.throwUnsupportedOperation(t2);
          if (!(i >= 0 && i < t2.length))
            return A.ioore(t2, i);
          t2[i] = 0;
        }
      else {
        t1 = _this._typed_buffer$_buffer.length;
        if (newLength > t1) {
          if (t1 === 0)
            newBuffer = new Uint8Array(newLength);
          else
            newBuffer = _this._createBiggerBuffer$1(newLength);
          B.NativeUint8List_methods.setRange$3(newBuffer, 0, _this._typed_buffer$_length, _this._typed_buffer$_buffer);
          _this._typed_buffer$_buffer = newBuffer;
        }
      }
      _this._typed_buffer$_length = newLength;
    },
    _typed_buffer$_add$1(value) {
      var t1, t2, _this = this;
      A._instanceType(_this)._eval$1("TypedDataBuffer.E")._as(value);
      t1 = _this._typed_buffer$_length;
      t2 = _this._typed_buffer$_buffer;
      if (t1 === t2.length) {
        t2 = _this._createBiggerBuffer$1(null);
        B.NativeUint8List_methods.setRange$3(t2, 0, t1, _this._typed_buffer$_buffer);
        _this._typed_buffer$_buffer = t2;
        t1 = t2;
      } else
        t1 = t2;
      B.NativeUint8List_methods.$indexSet(t1, _this._typed_buffer$_length++, value);
    },
    addAll$3(_, values, start, end) {
      A._instanceType(this)._eval$1("Iterable<TypedDataBuffer.E>")._as(values);
      A.RangeError_checkNotNegative(start, "start");
      if (end != null && start > end)
        throw A.wrapException(A.RangeError$range(end, start, null, "end", null));
      this._addAll$3(values, start, end);
    },
    addAll$1(_, values) {
      return this.addAll$3(0, values, 0, null);
    },
    _addAll$3(values, start, end) {
      var t2, valuesLength, newLength, t3, i, value, _this = this,
        _s16_ = "Too few elements",
        t1 = A._instanceType(_this);
      t1._eval$1("Iterable<TypedDataBuffer.E>")._as(values);
      t2 = type$.List_dynamic._is(values);
      if (t2)
        end = end == null ? J.get$length$asx(values) : end;
      if (end != null) {
        t1 = _this._typed_buffer$_length;
        if (t2) {
          t2 = J.getInterceptor$asx(values);
          if (start > t2.get$length(values) || end > t2.get$length(values))
            A.throwExpression(A.StateError$(_s16_));
        }
        valuesLength = end - start;
        newLength = _this._typed_buffer$_length + valuesLength;
        _this._ensureCapacity$1(newLength);
        t2 = _this._typed_buffer$_buffer;
        t3 = t1 + valuesLength;
        B.NativeUint8List_methods.setRange$4(t2, t3, _this._typed_buffer$_length + valuesLength, t2, t1);
        B.NativeUint8List_methods.setRange$4(_this._typed_buffer$_buffer, t1, t3, values, start);
        _this._typed_buffer$_length = newLength;
        return;
      }
      for (t2 = J.get$iterator$ax(values), t1 = t1._eval$1("TypedDataBuffer.E"), i = 0; t2.moveNext$0();) {
        value = t2.get$current();
        if (i >= start)
          _this._typed_buffer$_add$1(t1._as(value));
        ++i;
      }
      if (i < start)
        throw A.wrapException(A.StateError$(_s16_));
    },
    _ensureCapacity$1(requiredCapacity) {
      var newBuffer, _this = this;
      if (requiredCapacity <= _this._typed_buffer$_buffer.length)
        return;
      newBuffer = _this._createBiggerBuffer$1(requiredCapacity);
      B.NativeUint8List_methods.setRange$3(newBuffer, 0, _this._typed_buffer$_length, _this._typed_buffer$_buffer);
      _this._typed_buffer$_buffer = newBuffer;
    },
    _createBiggerBuffer$1(requiredCapacity) {
      var newLength = this._typed_buffer$_buffer.length * 2;
      if (requiredCapacity != null && newLength < requiredCapacity)
        newLength = requiredCapacity;
      else if (newLength < 8)
        newLength = 8;
      return new Uint8Array(newLength);
    }
  };
  A._IntBuffer.prototype = {};
  A.Uint8Buffer.prototype = {};
  A.Releasable.prototype = {
    release$0() {
      this.Releasable__released = true;
      this.Releasable__token = new A.Object();
      $.ReleasableTracker__releasables.remove$1(0, this);
    }
  };
  (function aliases() {
    var _ = J.LegacyJavaScriptObject.prototype;
    _.super$LegacyJavaScriptObject$toString = _.toString$0;
    _ = A._BufferingStreamSubscription.prototype;
    _.super$_BufferingStreamSubscription$_add = _._async$_add$1;
    _.super$_BufferingStreamSubscription$_addError = _._addError$2;
    _ = A._HashMap.prototype;
    _.super$_HashMap$_containsKey = _._containsKey$1;
    _.super$_HashMap$_get = _._get$1;
    _.super$_HashMap$_set = _._set$2;
    _ = A.ListBase.prototype;
    _.super$ListBase$setRange = _.setRange$4;
    _ = A._CborBytesImpl.prototype;
    _.super$_CborBytesImpl$toJsonInternal = _.toJsonInternal$2;
    _ = A.WorkerTask.prototype;
    _.super$WorkerTask$cancel = _.cancel$1;
    _ = A.Releasable.prototype;
    _.super$Releasable$release = _.release$0;
  })();
  (function installTearOffs() {
    var _static_2 = hunkHelpers._static_2,
      _instance = hunkHelpers.installInstanceTearOff,
      _static_1 = hunkHelpers._static_1,
      _static_0 = hunkHelpers._static_0,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance_1_u = hunkHelpers._instance_1u,
      _static = hunkHelpers.installStaticTearOff,
      _instance_1_i = hunkHelpers._instance_1i;
    _static_2(J, "_interceptors_JSArray__compareAny$closure", "JSArray__compareAny", 244);
    var _;
    _instance(_ = J.JSString.prototype, "get$startsWith", 1, 1, null, ["call$2", "call$1"], ["startsWith$2", "startsWith$1"], 50, 0, 0);
    _instance(_, "get$contains", 1, 1, null, ["call$2", "call$1"], ["contains$2", "contains$1"], 50, 0, 0);
    _static_1(A, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 39);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 39);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 39);
    _static_0(A, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 0);
    _static_1(A, "async___nullDataHandler$closure", "_nullDataHandler", 6);
    _static_2(A, "async___nullErrorHandler$closure", "_nullErrorHandler", 37);
    _instance_2_u(A._Future.prototype, "get$_completeError", "_completeError$2", 37);
    _instance_0_u(_ = A._ControllerSubscription.prototype, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance(_ = A._BufferingStreamSubscription.prototype, "get$pause", 0, 0, null, ["call$1", "call$0"], ["pause$1", "pause$0"], 155, 0, 0);
    _instance_0_u(_, "get$resume", "resume$0", 0);
    _instance_0_u(_, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance_0_u(_ = A._ForwardingStreamSubscription.prototype, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance_1_u(_, "get$_handleData", "_handleData$1", 55);
    _instance_2_u(_, "get$_handleError", "_handleError$2", 167);
    _instance_0_u(_, "get$_handleDone", "_handleDone$0", 0);
    _static_2(A, "collection___defaultEquals$closure", "_defaultEquals", 33);
    _static_1(A, "collection___defaultHashCode$closure", "_defaultHashCode", 32);
    _instance(A._LinkedHashSet.prototype, "get$_newSimilarSet", 0, 0, null, ["call$1$0", "call$0"], ["_newSimilarSet$1$0", "_newSimilarSet$0"], 217, 0, 0);
    _static_1(A, "convert___defaultToEncodable$closure", "_defaultToEncodable", 2);
    _instance(A.Utf8Decoder.prototype, "get$convert", 0, 1, null, ["call$3", "call$1", "call$2"], ["convert$3", "convert$1", "convert$2"], 142, 0, 0);
    _static_1(A, "core__identityHashCode$closure", "identityHashCode", 32);
    _static_2(A, "core__identical$closure", "identical", 33);
    _static_1(A, "core_Uri_decodeComponent$closure", "Uri_decodeComponent", 61);
    _static_1(A, "typed_data_Uint8List___fromList_tearOff$closure", "Uint8List___fromList_tearOff", 246);
    _instance_2_u(A.Bip32Ed25519KeyDerivation.prototype, "get$ckdPub", "ckdPub$2", 159);
    _static_1(A, "transaction_output_CardanoTransactionOutput___deserialize_tearOff$closure", "CardanoTransactionOutput___deserialize_tearOff", 247);
    _static_1(A, "proposal_procedure_ProposalProcedure___deserialize_tearOff$closure", "ProposalProcedure___deserialize_tearOff", 248);
    _static_1(A, "certificate_Certificate___deserialize_tearOff$closure", "Certificate___deserialize_tearOff", 249);
    _static_1(A, "credential_Credential___deserialize_tearOff$closure", "Credential___deserialize_tearOff", 250);
    _static_1(A, "witness_bootstrap_WitnessBootstrap___deserialize_tearOff$closure", "WitnessBootstrap___deserialize_tearOff", 251);
    _static_1(A, "plutus_script_v1_PlutusScriptV1___deserialize_tearOff$closure", "PlutusScriptV1___deserialize_tearOff", 252);
    _static_1(A, "plutus_data_PlutusData___deserialize_tearOff$closure", "PlutusData___deserialize_tearOff", 253);
    _static_1(A, "redeemer_Redeemer___deserializePreConway_tearOff$closure", "Redeemer___deserializePreConway_tearOff", 254);
    _static_1(A, "plutus_script_v2_PlutusScriptV2___deserialize_tearOff$closure", "PlutusScriptV2___deserialize_tearOff", 255);
    _static_1(A, "plutus_script_v3_PlutusScriptV3___deserialize_tearOff$closure", "PlutusScriptV3___deserialize_tearOff", 256);
    _static(A, "asset___$identity$closure", 1, null, ["call$1$1", "call$1"], ["_$identity", function(value) {
      return A._$identity(value, type$.dynamic);
    }], 257, 0);
    _static_1(A, "utxo_Utxo___deserializeBytes_tearOff$closure", "Utxo___deserializeBytes_tearOff", 258);
    _static_1(A, "transaction_CardanoTransaction___deserializeBytes_tearOff$closure", "CardanoTransaction___deserializeBytes_tearOff", 259);
    _static_1(A, "proposal_diff_info_ProposalDiffInfo___unmarshal_tearOff$closure", "ProposalDiffInfo___unmarshal_tearOff", 260);
    _static_1(A, "signing_types_TxPreparedForSigning___unmarshal_tearOff$closure", "TxPreparedForSigning___unmarshal_tearOff", 261);
    _static_1(A, "vote_info_VoteInfo___unmarshal_tearOff$closure", "VoteInfo___unmarshal_tearOff", 262);
    _static_1(A, "wallet_tasks__$WalletTasksInitializer$closure", "$WalletTasksInitializer", 263);
    _static(A, "bytes_CborBytes___new_tearOff$closure", 1, null, ["call$2$tags", "call$1"], ["CborBytes___new_tearOff", function(bytes) {
      return A.CborBytes___new_tearOff(bytes, B.List_empty);
    }], 264, 0);
    _instance_2_u(_ = A.DeepCollectionEquality.prototype, "get$equals", "equals$2", 33);
    _instance_1_u(_, "get$hash", "hash$1", 32);
    _instance_1_u(_, "get$isValidKey", "isValidKey$1", 80);
    _instance(A._WebChannel.prototype, "get$_postRequest", 0, 1, null, ["call$2$force", "call$1"], ["_postRequest$2$force", "_postRequest$1"], 219, 0, 0);
    _instance_0_u(_ = A.EventBuffer.prototype, "get$activate", "activate$0", 0);
    _instance_0_u(_, "get$deactivate", "deactivate$0", 0);
    _instance_1_i(_, "get$add", "add$1", 55);
    _instance_2_u(_, "get$addError", "addError$2", 38);
    _static_1(A, "_patch___toJSStr$closure", "_toJSStr", 8);
    _static_1(A, "_patch___toJSBool$closure", "_toJSBool", 8);
    _static_1(A, "_patch___toJSNum$closure", "_toJSNum", 8);
    _static_1(A, "_patch___toJSBigInt$closure", "_toJSBigInt", 8);
    _instance_1_u(_ = A._WebWorkerChannel.prototype, "get$reply", "reply$1", 6);
    _instance_1_u(_, "get$inspectAndReply", "inspectAndReply$1", 6);
    _instance_1_u(_, "get$log", "log$1", 225);
    _instance(_, "get$error", 0, 1, null, ["call$3", "call$1", "call$2"], ["error$3", "error$1", "error$2"], 226, 0, 0);
    _instance_0_u(_ = A.ForwardStreamController.prototype, "get$close", "close$0", 12);
    _instance_0_u(_, "get$_pause", "_pause$0", 0);
    _instance_0_u(_, "get$_resume", "_resume$0", 0);
    _static(A, "converter_Converter_identity$closure", 1, null, ["call$1$1", "call$1"], ["Converter_identity", function(x) {
      return A.Converter_identity(x, type$.dynamic);
    }], 265, 0);
    _static_1(A, "num_converter_NumConverter__toInt$closure", "NumConverter__toInt", 21);
    _static_1(A, "num_converter_NumConverter__toDbl$closure", "NumConverter__toDbl", 266);
    _static_1(A, "squadron_canceled_exception__SquadronCanceledExceptionExt_deserialize$closure", "SquadronCanceledExceptionExt_deserialize", 267);
    _static_1(A, "squadron_canceled_exceptions__SquadronCanceledExceptionsExt_deserialize$closure", "SquadronCanceledExceptionsExt_deserialize", 268);
    _static_1(A, "squadron_error__SquadronErrorImpl_deserialize$closure", "SquadronErrorImpl_deserialize", 269);
    _static_1(A, "squadron_timeout_exception__SquadronTimeoutExceptionExt_deserialize$closure", "SquadronTimeoutExceptionExt_deserialize", 270);
    _static_1(A, "task_canceled_exception__TaskCanceledExceptionExt_deserialize$closure", "TaskCanceledExceptionExt_deserialize", 271);
    _static_1(A, "task_terminated_exception__TaskTerminatedExceptionExt_deserialize$closure", "TaskTerminatedExceptionExt_deserialize", 272);
    _static_1(A, "worker_exception__WorkerExceptionImpl_deserialize$closure", "WorkerExceptionImpl_deserialize", 273);
    _static_2(A, "_pool_worker_PoolWorker_compareCapacity$closure", "PoolWorker_compareCapacity", 274);
    _instance_1_u(_ = A.WorkerTask.prototype, "get$_success", "_success$1", 236);
    _instance(_, "get$_fail", 0, 0, null, ["call$1", "call$0"], ["_fail$1", "_fail$0"], 237, 0, 0);
    _instance_0_u(A.WorkerPool.prototype, "get$__schedule", "__schedule$0", 0);
    _instance(A._Stats.prototype, "get$endWork", 0, 0, null, ["call$1", "call$0"], ["endWork$1", "endWork$0"], 242, 0, 0);
    _static_1(A, "utils__isHintSubtype$closure", "isHintSubtype", 16);
    _static_2(A, "tweetnacl_TweetNaCl_crypto_hash$closure", "TweetNaCl_crypto_hash", 275);
    _static(A, "tweetnacl__TweetNaClExt_crypto_auth_hmacsha512$closure", 3, null, ["call$3"], ["TweetNaClExt_crypto_auth_hmacsha512"], 276, 0);
    _static_2(A, "_platform__isSameInstance$closure", "isSameInstance", 184);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.Object, null);
    _inheritMany(A.Object, [A.JS_CONST, J.Interceptor, A.SafeToStringHook, J.ArrayIterator, A.Iterable, A.CastIterator, A.Error, A.ListBase, A.Closure, A.SentinelValue, A.ListIterator, A.MappedIterator, A.WhereIterator, A.TakeIterator, A.SkipIterator, A.EmptyIterator, A.WhereTypeIterator, A.NonNullsIterator, A.FixedLengthListMixin, A.UnmodifiableListMixin, A.MapBase, A.Symbol, A._Record, A.ConstantMap, A.TypeErrorDecoder, A.NullThrownFromJavaScriptException, A.ExceptionAndStackTrace, A._StackTrace, A.LinkedHashMapCell, A.LinkedHashMapKeyIterator, A.LinkedHashMapValueIterator, A.LinkedHashMapEntryIterator, A.JSSyntaxRegExp, A._MatchImplementation, A._AllMatchesIterator, A.StringMatch, A._StringAllMatchesIterator, A._Cell, A._UnmodifiableNativeByteBufferView, A.Rti, A._FunctionParameters, A._Type, A._TimerImpl, A._AsyncAwaitCompleter, A._SyncStarIterator, A.AsyncError, A._Completer, A._FutureListener, A._Future, A._AsyncCallbackEntry, A.Stream, A._StreamController, A._AsyncStreamControllerDispatch, A._BufferingStreamSubscription, A._DelayedEvent, A._DelayedDone, A._PendingEvents, A._StreamIterator, A._Zone, A._HashMapKeyIterator, A.SetBase, A._LinkedHashSetCell, A._LinkedHashSetIterator, A._UnmodifiableMapMixin, A.MapView, A._ListQueueIterator, A.Codec, A.Converter, A._Base64Encoder, A.ByteConversionSink, A._SimpleCallbackSink, A._JsonStringifier, A._JsonPrettyPrintMixin, A._Utf8Encoder, A._Utf8Decoder, A._BigIntImpl, A.DateTime, A.Duration, A._Enum, A.OutOfMemoryError, A.StackOverflowError, A._Exception, A.FormatException, A.IntegerDivisionByZeroException, A.MapEntry, A.Null, A._StringStackTrace, A.RuneIterator, A.StringBuffer, A._Uri, A.UriData, A._SimpleUri, A.NullRejectionException, A.Endian, A._ByteList_Object_ListMixin, A.Bip32PrivateKey, A.Bip32PublicKey, A.InvalidBip32Ed25519IndexException, A.Bip32Ed25519KeyDerivation, A.CancelationToken, A.BinaryReader, A.BinaryWriterImpl, A._CardanoTransactionInput_Object__$CardanoTransactionInput, A._$CardanoTransactionInput, A._CardanoTransactionInputs_Object__$CardanoTransactionInputs, A._$CardanoTransactionInputs, A._RequiredSigners_Object__$RequiredSigners, A._$RequiredSigners, A._GovActionId_Object__$GovActionId, A._$GovActionId, A._Voter_Object__$Voter, A._$Voter, A._VotingProcedure_Object__$VotingProcedure, A._$VotingProcedure, A._VotingProcedures_Object__$VotingProcedures, A._$VotingProcedures, A._OutputDatum_Object__$OutputDatum, A._$OutputDatum, A._CardanoTransactionOutput_Object__$CardanoTransactionOutput, A._$CardanoTransactionOutput, A._Constitution_Object__$Constitution, A._$Constitution, A._GovAction_Object__$GovAction, A._$GovAction, A._ProposalProcedure_Object__$ProposalProcedure, A._$ProposalProcedure, A._ProtocolParamUpdate_Object__$ProtocolParamUpdate, A._$ProtocolParamUpdate, A._ProtocolVersion_Object__$ProtocolVersion, A._$ProtocolVersion, A._Certificate_Object__$Certificate, A._$Certificate, A._Credential_Object__$Credential, A._$Credential, A._PoolMetadata_Object__$PoolMetadata, A._$PoolMetadata, A._StakePoolId_Object__$StakePoolId, A._$StakePoolId, A._Withdraw_Object__$Withdraw, A._$Withdraw, A._CardanoTransactionBody_Object__$CardanoTransactionBody, A._$CardanoTransactionBody, A._WitnessVKey_Object__$WitnessVKey, A._$WitnessVKey, A.Script, A._$NativeScript, A._WitnessBootstrap_Object__$WitnessBootstrap, A._$WitnessBootstrap, A._$PlutusScriptV1, A._PlutusData_Object__$PlutusData, A._$PlutusData, A._ExUnits_Object__$ExUnits, A._$ExUnits, A._Redeemer_Object__$Redeemer, A._$Redeemer, A._$PlutusScriptV2, A._$PlutusScriptV3, A._ListWithCborType_Object__$ListWithCborType, A._WitnessSet_Object__$WitnessSet, A._$ListWithCborType, A._$WitnessSet, A._CBORMetadata_Object__$CBORMetadata, A._$CBORMetadata, A._Anchor_Object__$Anchor, A._$Anchor, A._Value_Object__$Value, A._MultiAsset_Object__$MultiAsset, A._Asset_Object__$Asset, A._$Value, A._$MultiAsset, A.__$MultiAssetCopyWithImpl, A._$Asset, A.__$AssetCopyWithImpl, A._Drep_Object__$Drep, A._$Drep, A._Nonce_Object__$Nonce, A._$Nonce, A._RationalNumber_Object__$RationalNumber, A._$RationalNumber, A._Utxo_Object__$Utxo, A._$Utxo, A._CardanoTransaction_Object__$CardanoTransaction, A._$CardanoTransaction, A._CoseHeaderMap_Object__$CoseHeaderMap, A._$CoseHeaderMap, A._CoseHeaders_Object__$CoseHeaders, A._$CoseHeaders, A._CoseKey_Object__$CoseKey, A._$CoseKey, A._CoseProtectedHeaderMap_Object__$CoseProtectedHeaderMap, A._$CoseProtectedHeaderMap, A._CoseSigStructure_Object__$CoseSigStructure, A._$CoseSigStructure, A._CoseSign1_Object__$CoseSign1, A._$CoseSign1, A._DataSignature_Object__$DataSignature, A._$DataSignature, A.InvalidAddressTypeError, A._CardanoAddress_Object__$CardanoAddress, A._$CardanoAddress, A._CardanoDerivation_Object__$CardanoDerivation, A._DRepDerivation_Object__$DRepDerivation, A._ConstitutionalCommitee_Object__$ConstitutionalCommitee, A._$CardanoDerivation, A._$DRepDerivation, A._$ConstitutionalCommitee, A.CardanoPubAccountFactory, A._CardanoPubAccount_Object__$CardanoPubAccount, A._$CardanoPubAccount, A.Bip32KeyPair, A.CardanoWallet, A._DRepDiffInfo_Object__$DRepDiffInfo, A._$DRepDiffInfo, A._ProposalDiffInfo_Object__$ProposalDiffInfo, A._$ProposalDiffInfo, A._TxDiff_Object__$TxDiff, A._TxSigningBundle_Object__$TxSigningBundle, A._TxSignedBundle_Object__$TxSignedBundle, A._TxPreparedForSigning_Object__$TxPreparedForSigning, A._TxAndSignature_Object__$TxAndSignature, A._$TxDiff, A._$TxSigningBundle, A._$TxSignedBundle, A._$TxPreparedForSigning, A._$TxAndSignature, A._VoteInfo_Object__$VoteInfo, A._$VoteInfo, A.CborDeserializationException, A._CardanoSigningPath_Object__$CardanoSigningPath, A._$CardanoSigningPath, A.Lazy, A.HdWallet, A.CardanoSigner, A.WalletTasks, A._$WalletTasks$Invoker, A._$WalletTasks$Facade, A._Worker_Object_Releasable, A._WorkerPool_Object_Releasable, A.MarshalingContext, A.Reader, A.Header, A.RawValue, A._Builder, A.RawValueTagged, A.RawSinkTagged, A.CborSink, A._Builder0, A.EncodeSink, A._ArgIndefiniteLength, A._ArgInt, A._ArgBigInt, A.__CborBytesImpl_Object_CborValueMixin, A.__CborBytesIndefiniteLengthImpl_Object_CborValueMixin, A.__CborEncodeIndefiniteLengthBytesImpl_Object_CborValueMixin, A.__CborEncodeDefiniteLengthBytesImpl_Object_CborValueMixin, A.__CborFloatImpl_Object_CborValueMixin, A.__CborSmallIntImpl_Object_CborValueMixin, A.__LargeInt_Object_CborValueMixin, A.ToJsonOptions, A._Break_Object_CborValueMixin, A.CborValueMixin, A._DelegatingIterableBase, A.__CborEncodeIndefiniteLengthListImpl_Object_CborValueMixin, A.__CborEncodeDefiniteLengthListImpl_Object_CborValueMixin, A.DelegatingMap, A.__CborEncodeIndefiniteLengthMapImpl_Object_CborValueMixin, A.__CborEncodeDefiniteLengthMapImpl_Object_CborValueMixin, A.__CborSimpleValueImpl_Object_CborValueMixin, A.__CborStringImpl_Object_CborValueMixin, A.__CborIndefiniteLengthStringImpl_Object_CborValueMixin, A.__CborEncodeIndefiniteLengthStringImpl_Object_CborValueMixin, A.__CborEncodeDefiniteLengthStringImpl_Object_CborValueMixin, A.StringCharacterRange, A.Breaks, A.DefaultEquality, A.IterableEquality, A.ListEquality, A._UnorderedEquality, A._MapEntry, A.MapEquality, A.DeepCollectionEquality, A.UnmodifiableSetMixin, A.Digest, A.DigestSink, A.HashSink, A.Base58Exception, A.Alphabet, A.Codec0, A.FloatParts, A._IntInteger, A._BigIntInteger, A.CheckedFromJsonException, A.LogEvent, A.LogFilter, A.LogOutput, A.LogPrinter, A.Logger, A.OutputEvent, A.Suffix, A.Encodable, A.Bech32Encoder, A._Bech32, A.Bech32Validations, A.TooShortHrp, A.TooLong, A.OutOfRangeHrpCharacters, A.MixedCase, A.OutOfBoundChars, A.InvalidSeparator, A.InvalidChecksum, A.TooShortChecksum, A._Context, A._WebChannel, A._EntryPointUri_Object_Releasable, A.EventBuffer, A._WebWorkerChannel, A.DisconnectedChannel, A.ForwardCompleter, A.ForwardStreamController, A.ResultStream, A.WorkerRunner, A.ConcurrencySettings, A.Converter0, A.SerializationContext, A.ExceptionManager, A.SquadronException, A.TaskCanceledException, A.TaskTerminatedException, A.PoolWorker, A.WorkerTask, A.WorkerStat, A.CancelationTokenReference, A._Stats, A.Releasable]);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JavaScriptBigInt, J.JavaScriptSymbol, J.JSNumber, J.JSString]);
    _inheritMany(J.JavaScriptObject, [J.LegacyJavaScriptObject, J.JSArray, A.NativeByteBuffer, A.NativeTypedData]);
    _inheritMany(J.LegacyJavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction]);
    _inherit(J.JSArraySafeToStringHook, A.SafeToStringHook);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSNumNotInt]);
    _inheritMany(A.Iterable, [A._CastIterableBase, A.EfficientLengthIterable, A.MappedIterable, A.WhereIterable, A.TakeIterable, A.SkipIterable, A.WhereTypeIterable, A.NonNullsIterable, A._AllMatchesIterable, A._StringAllMatchesIterable, A._SyncStarIterable, A.Runes, A.StringCharacters]);
    _inheritMany(A._CastIterableBase, [A.CastIterable, A.__CastListBase__CastIterableBase_ListMixin, A.CastSet]);
    _inherit(A._EfficientLengthCastIterable, A.CastIterable);
    _inherit(A._CastListBase, A.__CastListBase__CastIterableBase_ListMixin);
    _inherit(A.CastList, A._CastListBase);
    _inheritMany(A.Error, [A.LateError, A.TypeError, A.JsNoSuchMethodError, A.UnknownJsTypeError, A.RuntimeError, A._Error, A.JsonUnsupportedObjectError, A.AssertionError, A.ArgumentError, A.UnsupportedError, A.UnimplementedError, A.StateError, A.ConcurrentModificationError, A.InvalidBip23Ed25519DerivationKeyError, A.MaxDepthExceededBip23Ed25519DerivationKeyError, A.InvalidSigningKeyError, A.TransactionParseException, A.WitnessParseException, A.SigningAddressNotFoundException, A.UnexpectedSigningAddressTypeException, A.SigningAddressNotValidException, A.CborCyclicError]);
    _inheritMany(A.ListBase, [A.UnmodifiableListBase, A.TypedDataBuffer]);
    _inheritMany(A.UnmodifiableListBase, [A.CodeUnits, A.UnmodifiableListView]);
    _inheritMany(A.Closure, [A.Closure0Args, A.Closure2Args, A.Instantiation, A.TearOffClosure, A.initHooks_closure, A.initHooks_closure1, A._AsyncRun__initializeScheduleImmediate_internalCallback, A._AsyncRun__initializeScheduleImmediate_closure, A._awaitOnObject_closure, A.Future_wait_closure, A._Future__propagateToListeners_handleWhenCompleteCallback_closure, A.Stream_length_closure, A._CustomHashMap_closure, A.MapBase_entries_closure, A._BigIntImpl_hashCode_finish, A.jsify__convert, A.promiseToFuture_closure, A.promiseToFuture_closure0, A.dartify_convert, A._bytesToBinary_closure, A.mnemonicToEntropy_closure, A.mnemonicToEntropy_closure0, A.mnemonicToEntropy_closure1, A.CardanoTransactionInputs_CardanoTransactionInputs$deserialize_closure, A.CardanoTransactionInputs_serialize_closure, A.RequiredSigners_serialize_closure, A.RequiredSigners_deserialize_closure, A.Vote_fromSerializeIntValue_closure, A.VoterType_fromSerializeIntValue_closure, A.VotingProcedures_VotingProcedures$deserialize_closure, A.VotingProcedures_serialize_closure, A._deserializeVotingProcedureMap_closure, A.VotingProcedureMapX_serialize_closure, A.CardanoTransactionOutput_CardanoTransactionOutput$deserializePostAlonzo_closure, A.CardanoTransactionOutput_CardanoTransactionOutput$deserializePostAlonzo_closure0, A.CardanoTransactionOutput_CardanoTransactionOutput$deserializeAlonzo_closure, A._CardanoTxOutputPostAlonzoExtensions__serializePostAlonzo_closure, A._CardanoTxOutputPostAlonzoExtensions__serializePostAlonzo_closure0, A.TransactionOutputIterableExtension_serialize_closure, A.GovAction_GovAction$deserialize_closure, A.GovAction_GovAction$deserialize_closure0, A._TreasuryWithdrawalsX_serializeAction_closure, A._UpdateCommitteeX_serializeAction_closure, A._UpdateCommitteeX_serializeAction_closure0, A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure0, A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure1, A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure2, A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure3, A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure4, A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure5, A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure6, A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure7, A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure8, A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure9, A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure10, A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure11, A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure12, A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure13, A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure14, A.ProtocolParamUpdate_serialize_closure, A.ProtocolParamUpdate_serialize_closure0, A.ProtocolParamUpdate_serialize_closure1, A.ProtocolParamUpdate_serialize_closure2, A.ProtocolParamUpdate_serialize_closure3, A.ProtocolParamUpdate_serialize_closure4, A.ProtocolParamUpdate_serialize_closure5, A.ProtocolParamUpdate_serialize_closure6, A.ProtocolParamUpdate_serialize_closure7, A.ProtocolParamUpdate_serialize_closure8, A.ProtocolParamUpdate_serialize_closure9, A.ProtocolParamUpdate_serialize_closure10, A.ProtocolParamUpdate_serialize_closure11, A.ProtocolParamUpdate_serialize_closure12, A.ProtocolParamUpdate_serialize_closure13, A.ProtocolParamUpdate_serialize_closure14, A.ProtocolParamUpdate_serialize_closure15, A.ProtocolParamUpdate_serialize_closure16, A.ProtocolParamUpdate_serialize_closure17, A.ProtocolParamUpdate_serialize_closure18, A.ProtocolParamUpdate_serialize_closure19, A.ProtocolParamUpdate_serialize_closure20, A.ProtocolParamUpdate_serialize_closure21, A.ProtocolParamUpdate_serialize_closure22, A.ProtocolParamUpdate_serialize_closure23, A.CertificateIterableExtension_serialize_closure, A._deserializePoolRegistration_closure, A.CredType_CredType$fromSmallInt_closure, A.WithdrawIterableExtension_serialize_closure, A.CardanoTransactionBody_CardanoTransactionBody$deserialize_closure, A.CardanoTransactionBody_CardanoTransactionBody$deserialize__closure, A.CardanoTransactionBody_CardanoTransactionBody$deserialize_closure0, A.CardanoTransactionBody_CardanoTransactionBody$deserialize_closure1, A.CardanoTransactionBody_CardanoTransactionBody$deserialize_closure2, A.CardanoTransactionBody_CardanoTransactionBody$deserialize_closure3, A.CardanoTransactionBody_serialize_closure, A.CardanoTransactionBody_serialize_closure0, A.CardanoTransactionBody_serialize_closure1, A.CardanoTransactionBody_serialize_closure2, A.CardanoTransactionBody_serialize_closure3, A.CardanoTransactionBody_serialize_closure4, A.CardanoTransactionBody_serialize_closure5, A.CardanoTransactionBody_serialize_closure6, A.CardanoTransactionBody_serialize_closure7, A.CardanoTransactionBody_serialize__closure, A.CardanoTransactionBody_serialize_closure8, A.CardanoTransactionBody_serialize_closure9, A.NativeScript_serialize_encoder, A.NativeScript_serialize_closure, A.NativeScript_serialize_closure0, A.NativeScript_serialize_closure1, A.NativeScript_NativeScript$deserialize_closure, A.NativeScript_NativeScript$deserialize_closure0, A.NativeScript_NativeScript$deserialize_closure1, A.PlutusData_PlutusData$deserialize_fromCborList, A.PlutusData_PlutusData$deserialize_fromCborList_closure, A._serializePlutusData_List_closure, A.RedeemerTag_RedeemerTag$fromInt_closure, A.WitnessSet_WitnessSet$deserialize_closure, A.WitnessSet_WitnessSet$deserialize__closure0, A.WitnessSet_WitnessSet$deserialize_closure0, A.WitnessSet_WitnessSet$deserialize__closure, A.WitnessSet_WitnessSet$deserialize_closure1, A.WitnessSet_WitnessSet$deserialize_closure2, A.WitnessSet_WitnessSet$deserialize_closure3, A.WitnessSet_WitnessSet$deserialize_closure4, A.WitnessSet_WitnessSet$deserialize_closure5, A.WitnessSet_WitnessSet$deserialize_closure6, A.WitnessSet_serialize_closure, A.WitnessSet_serialize__closure7, A.WitnessSet_serialize_closure0, A.WitnessSet_serialize__closure6, A.WitnessSet_serialize_closure1, A.WitnessSet_serialize__closure5, A.WitnessSet_serialize_closure2, A.WitnessSet_serialize__closure4, A.WitnessSet_serialize_closure3, A.WitnessSet_serialize__closure3, A.WitnessSet_serialize_closure4, A.WitnessSet_serialize__closure1, A.WitnessSet_serialize__closure2, A.WitnessSet_serialize_closure5, A.WitnessSet_serialize__closure0, A.WitnessSet_serialize_closure6, A.WitnessSet_serialize__closure, A.Value_serialize_closure, A.Value_Value$deserialize_closure, A.MultiAsset_serialize_closure, A.MultiAssetIterableX_serialize_closure, A.MultiAssetListOperations_merge_closure, A.MultiAssetListOperations_merge_closure0, A.MultiAssetListOperations_merge__closure, A.AssetListOperations_merge_closure, A.AssetListOperations_merge_closure0, A.CardanoTransaction_diff_closure, A.CardanoTransaction_diff_closure1, A.CardanoTransaction_diff_closure3, A.CardanoTransaction_diff_closure5, A.CardanoTransaction_diff_closure7, A.CardanoTransaction_diff__closure, A.CardanoTransaction_diff_closure8, A.CardanoTransaction_diff_closure9, A.CardanoTransaction_diff_closure10, A.CardanoTransaction_diff_closure11, A.CardanoTransaction_diff_closure12, A.CardanoTransaction_diff_closure13, A.CardanoTransaction_diff_closure14, A.CardanoTransaction_diff_closure15, A.CoseHeaderMap_serialize_closure, A.CoseHeaderMap_serialize_closure0, A.CoseHeaderMap_serialize_closure1, A.CoseHeaderMap_serialize__closure, A.CoseHeaderMap_serialize_closure2, A.NetworkId_NetworkId$fromIntValue_closure, A.CardanoAddress_stakeCredentialsBytes_closure, A.CardanoAddress_stakeBech32Encoded_closure, A.Bip32KeyRole_fromDerivationIndex_closure, A.TxDiff_marshal_closure, A.TxDiff_marshal_closure0, A.TxDiff_marshal_closure1, A.TxDiff_TxDiff$unmarshal_closure, A.TxDiff_TxDiff$unmarshal_closure0, A.TxDiff_TxDiff$unmarshal_closure1, A.TxSigningBundle_marshal_closure, A.TxSigningBundle_marshal_closure0, A.TxSigningBundle_marshal_closure1, A.TxSigningBundle_TxSigningBundle$unmarshal_closure, A.TxSigningBundle_TxSigningBundle$unmarshal_closure0, A.TxSigningBundle_TxSigningBundle$unmarshal_closure1, A.TxSignedBundle_marshal_closure, A.TxPreparedForSigning_marshal_closure, A.TxAndSignature_marshal_closure, A.WalletTasks_prepareTxsForSigningImpl_closure, A.WalletTasks_prepareTxsForSigningImpl_closure0, A.WalletTasks_prepareTxsForSigningImpl_closure1, A.WalletTasks_prepareTxsForSigningImpl_closure2, A.WalletTasks_prepareTxsForSigningImpl_closure3, A.WalletTasks_prepareTxsForSigningImpl_closure6, A.WalletTasks_prepareTxsForSigningImpl_closure7, A.WalletTasks_prepareTxsForSigningImpl_closure8, A.WalletTasks_prepareTxsForSigningImpl_closure9, A.WalletTasks_prepareTxsForSigningImpl_closure10, A.WalletTasks_prepareTxsForSigningImpl_closure11, A.WalletTasks_prepareTxsForSigningImpl_closure12, A.WalletTasks_prepareTxsForSigningImpl_closure13, A.WalletTasks_prepareTxsForSigningImpl_closure14, A.WalletTasks_prepareTxsForSigningImpl_closure15, A.WalletTasks_signTransactionsBundle_closure, A.WalletTasks_signTransactionsBundle_closure0, A.WalletTasks_signTransactionsBundle_closure1, A.WalletTasks_signTransactionsBundle__closure2, A.WalletTasks_signTransactionsBundle_closure2, A.WalletTasks_signTransactionsBundle__closure1, A.WalletTasks_signTransactionsBundle_closure3, A.WalletTasks_signTransactionsBundle_closure4, A.WalletTasks_signTransactionsBundle_closure5, A.WalletTasks_signTransactionsBundle_closure6, A.WalletTasks_signTransactionsBundle_closure7, A.WalletTasks_signTransactionsBundle_closure8, A.WalletTasks_signTransactionsBundle_closure9, A.WalletTasks_signTransactionsBundle_closure10, A.WalletTasks_signTransactionsBundle_closure11, A.WalletTasks_signTransactionsBundle_closure12, A.WalletTasks_signTransactionsBundle__closure0, A.WalletTasks_signTransactionsBundle_closure13, A.WalletTasks_signTransactionsBundle_closure14, A.WalletTasks_signTransactionsBundle_closure18, A.WalletTasks_signTransactionsBundle_closure19, A.WalletTasks_signTransactionsBundle_closure20, A.WalletTasks_signTransactionsBundle__closure, A.WalletTasks_signData_dataFromAddress, A.WalletTasks_signData_dataFromDrepIdOrCreds, A._credsFromNativeScripts_closure, A.ListCertsX_requiresDrepSignature_closure, A.ListCertsX_requiresStakeSignature_closure, A.ListCertsX_requiresCommitteeColdSignature_closure, A.VotingProceduresX_requiresDrepSignature_closure, A.VotingProceduresX_requiresCommitteeHotSignature_closure, A._extension_3__$getOperations_closure, A._extension_3__$getOperations_closure0, A._extension_3__$getOperations_closure1, A._extension_3__$getOperations_closure2, A._extension_3__$getOperations_closure3, A._extension_3__$getOperations_closure4, A._extension_3__$getOperations_closure5, A._extension_3__$getOperations_closure6, A._extension_3__$getOperations_closure7, A._extension_3__$getOperations_closure8, A._extension_3__$getOperations_closure9, A._extension_3__$getOperations_closure10, A._extension_3__$getOperations_closure11, A.WalletTasksWorkerPool_closure, A.WalletTasksWorkerPool_ckdPubBip32Ed25519KeyDerivation_closure, A.WalletTasksWorkerPool_toCardanoBaseAddress_closure, A._$Deser_$0_closure, A._$Deser_$3_closure, A._$Deser_$4_closure, A._$Deser_$5_closure, A._$Deser_$6_closure, A._$Deser_$8_closure, A._$Deser_$9_closure, A._$Deser_$10_closure, A._$Deser_$11_closure, A._$Deser_$12_closure, A._$Deser_$14_closure, A._$Deser_$18_closure, A._$Ser_$0_closure, A._$Ser_$1_closure, A._$Ser_$2_closure, A._$Ser_$3_closure, A._$Ser_$4_closure, A._$Ser_$5_closure, A._$Ser_$6_closure, A._$Ser_$7_closure, A._$Ser_$8_closure, A._$Ser_$9_closure, A._$Ser_$10_closure, A._$Ser_$11_closure, A._$Ser_$12_closure, A._$Ser_$15_closure, A.CborDecoder_convert_closure, A._createMap_closure, A._CborListImpl_toJsonInternal_closure, A._CborMapImpl_toJsonInternal_closure, A.FastBase58EncodingAlphabet_closure, A.FastBase58DecodingAlphabet_closure, A._Bech32Encoder_convert_closure, A._Bech32Decoder_convert_closure, A._Bech32Decoder_convert_closure0, A.Bech32Validations_hasOutOfBoundsChars_closure, A.Bech32Validations_hasOutOfRangeHrpCharacters_closure, A._hrpExpand_closure, A._hrpExpand_closure0, A.Blake2b__sigma82_closure, A.Blake2b__blake2bCompress_b2bG, A.bootstrap_closure0, A.bootstrap_closure, A.openChannel_fail, A.openChannel_success, A.openChannel_$errorHandler, A.openChannel_$errorHandler_closure, A.openChannel_closure, A.openChannel_closure0, A._WebChannel__getResponseStream_$sendRequest_$forwardMessage, A._WebChannel__getResponseStream_$sendRequest__closure, A._WebChannel__getResponseStream_$sendRequest__closure0, A._WebChannel_sendRequest_$success, A._WebChannel_sendRequest_$fail, A.$jsify_closure, A.$jsify_closure0, A.$jsify_closure1, A.$dartify_closure, A.JsWorkerRunnerExt_get_handle_closure, A.ResultStream_$decodeStreamOfResponses, A.ResultStream_$decodeSingleResponse, A.ResultStream_$getStreamId, A.WorkerRunner__checkOperations_closure, A.WorkerRunner_connect_closure, A.WorkerRunner_processRequest_postError, A.WorkerRunner_processRequest_post, A.WorkerRunner__pipe_closure1, A.ContextAwareConverter_value_closure, A.SquadronCanceledException_SquadronCanceledException$from_closure, A.SquadronCanceledExceptions_message_closure, A.SquadronCanceledExceptions_serialize_closure, A.WorkerPool__provisionWorkers_closure0, A.WorkerPool__provisionWorkers__closure, A.WorkerPool__provisionWorkers__closure1, A.WorkerPool___schedule_closure, A.WorkerPool___schedule_closure0, A.Worker_send_closure, A._LogEventSerializationExt__getLevel_closure]);
    _inheritMany(A.Closure0Args, [A.nullFuture_closure, A._AsyncRun__scheduleImmediateJsOverride_internalCallback, A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, A._TimerImpl_internalCallback, A._Future__addListener_closure, A._Future__prependListeners_closure, A._Future__chainCoreFuture_closure, A._Future__asyncCompleteWithValue_closure, A._Future__asyncCompleteErrorObject_closure, A._Future__propagateToListeners_handleWhenCompleteCallback, A._Future__propagateToListeners_handleValueCallback, A._Future__propagateToListeners_handleError, A.Stream_length_closure0, A._StreamController__subscribe_closure, A._StreamController__recordCancel_complete, A._BufferingStreamSubscription__sendError_sendError, A._BufferingStreamSubscription__sendDone_sendDone, A._PendingEvents_schedule_closure, A._rootHandleError_closure, A._RootZone_bindCallbackGuarded_closure, A._Utf8Decoder__decoder_closure, A._Utf8Decoder__decoderNonfatal_closure, A.GovActionId_bech32_closure, A.Vote_fromSerializeIntValue_closure0, A.VoterType_fromSerializeIntValue_closure0, A.CredType_CredType$fromSmallInt_closure0, A.PoolMetadata_metadataHashHex_closure, A.Anchor_metadataHashHex_closure, A.CardanoAddress_credentialsType_closure, A.CardanoDerivation__credentialsBytes_closure, A.CardanoDerivation__credentialsHex_closure, A.CardanoDerivation__keyHex_closure, A.DRepDerivation__dRepKeyHex_closure, A.DRepDerivation__credentialsBytes_closure, A.DRepDerivation__credentialsHex_closure, A.DRepDerivation__dRepIdLegacyBech32_closure, A.DRepDerivation__dRepIdNewBytes_closure, A.DRepDerivation__dRepIdNewHex_closure, A.DRepDerivation__dRepIdNewBech32_closure, A.CardanoPubAccount_stakeDerivation_closure, A.CardanoPubAccount_dRepDerivation_closure, A.CardanoPubAccount_constitutionalCommitteeColdDerivation_closure, A.CardanoPubAccount_constitutionalCommitteeHotDerivation_closure, A.HdWallet__paymentRoleKeysDerivator_closure, A.HdWallet__changeRoleKeysDerivator_closure, A.HdWallet__stakeRoleKeysDerivator_closure, A.HdWallet__drepCredentialRoleKeysDerivator_closure, A.HdWallet__constitutionalCommitteeColdRoleKeysDerivator_closure, A.HdWallet__constitutionalCommitteeHotRoleKeysDerivator_closure, A.HdWallet_stakeKeys_closure, A.HdWallet_drepCredentialKeys_closure, A.HdWallet_constitutionalCommitteeColdKeys_closure, A.HdWallet_constitutionalCommitteeHotKeys_closure, A.CardanoWalletImpl_drepId_closure, A.CardanoWalletImpl_constitutionalCommiteeCold_closure, A.CardanoWalletImpl_constitutionalCommiteeHot_closure, A.WalletTasks_signData_dataFromAddress_closure, A.WalletTasks_signData_dataFromAddress_closure0, A.WalletTasks_signData_closure, A.WalletTasksSign_findCardanoSigner_closure, A._dataFromAddress_closure, A._dataFromAddress_closure0, A._WebChannel__getResponseStream_$sendRequest, A._WebChannel__getResponseStream_$sendRequest_$close, A._WebChannel__getResponseStream_$sendRequest_closure, A._WebChannel__getResponseStream_closure, A._WebChannel_sendRequest_$done, A.EventBuffer_add_closure, A.EventBuffer_addError_closure, A._WebWorkerChannel__postResponse_closure, A._WebWorkerChannel__inspectAndPostResponse_closure, A.ResultStream_$onCancel, A.ResultStream_$onListen, A.WorkerRunner_connect_closure0, A.WorkerRunner__getTokenRef_closure, A.WorkerRunner__pipe_onDone, A.WorkerRunner__pipe_closure, A.WorkerRunner__pipe_closure0, A.PoolWorker_run_closure, A.WorkerPool__provisionWorkers_closure, A.WorkerPool__provisionWorkers_closure2, A.WorkerPool__provisionWorkers__closure0, A.WorkerPool__provisionWorkers__closure2, A.WorkerPool__dispatchTasks_closure]);
    _inheritMany(A.EfficientLengthIterable, [A.ListIterable, A.EmptyIterable, A.LinkedHashMapKeysIterable, A.LinkedHashMapValuesIterable, A.LinkedHashMapEntriesIterable, A._HashMapKeyIterable]);
    _inheritMany(A.ListIterable, [A.SubListIterable, A.MappedListIterable, A._ListIndicesIterable, A.ReversedListIterable, A.ListQueue, A._JsonMapKeyIterable]);
    _inherit(A.EfficientLengthMappedIterable, A.MappedIterable);
    _inherit(A.EfficientLengthTakeIterable, A.TakeIterable);
    _inherit(A.EfficientLengthSkipIterable, A.SkipIterable);
    _inheritMany(A.MapBase, [A.UnmodifiableMapBase, A.JsLinkedHashMap, A._HashMap, A._JsonMap]);
    _inherit(A.ListMapView, A.UnmodifiableMapBase);
    _inherit(A._Record3, A._Record);
    _inheritMany(A._Record3, [A._Record_3_addr_keyCred_scriptCred, A._Record_3_keyId_requestedSigningAddressBytes_signingKeyPair]);
    _inheritMany(A.Closure2Args, [A.ConstantMap_map_closure, A.JsLinkedHashMap_addAll_closure, A.initHooks_closure0, A._awaitOnObject_closure0, A._wrapJsFunctionForAsync_closure, A.Future_wait_handleError, A._Future__propagateToListeners_handleWhenCompleteCallback_closure0, A.LinkedHashMap_LinkedHashMap$from_closure, A.MapBase_mapToString_closure, A._JsonStringifier_writeMap_closure, A._JsonPrettyPrintMixin_writeMap_closure, A._BigIntImpl_hashCode_combine, A.Uri__parseIPv4Address_error, A.Uri_parseIPv6Address_error, A.Uri_parseIPv6Address_parseHex, A.ProtocolParamUpdate_ProtocolParamUpdate$deserialize_closure, A.PlutusData_serialize_closure, A.PlutusData_PlutusData$deserialize_closure, A.MultiAsset_MultiAsset$deserialize_closure, A.CardanoTransaction_diff_closure0, A.CardanoTransaction_diff_closure2, A.CardanoTransaction_diff_closure4, A.CardanoTransaction_diff_closure6, A.CardanoTransaction_diff_closure16, A.WalletTasks_prepareTxsForSigningImpl_closure4, A.WalletTasks_prepareTxsForSigningImpl_closure5, A.WalletTasks_signTransactionsBundle_closure15, A.WalletTasks_signTransactionsBundle_closure16, A.WalletTasks_signTransactionsBundle_closure17, A.WalletTasks_signTransactionsBundle_closure21, A.WalletTasks_signTransactionsBundle_closure22, A.WalletTasks_signTransactionsBundle_closure23, A.WalletTasks_signTransactionsBundle_closure24, A.WalletTasks_signTransactionsBundle_closure25, A.Alphabet_closure, A._WebChannel__getResponseStream_$sendRequest_$forwardError, A.ResultStream_$closeWithError, A.WorkerRunner__pipe_closure2, A.WorkerPool__provisionWorkers_closure1]);
    _inherit(A.GeneralConstantMap, A.ConstantMap);
    _inherit(A.Instantiation1, A.Instantiation);
    _inherit(A.NullError, A.TypeError);
    _inheritMany(A.TearOffClosure, [A.StaticClosure, A.BoundClosure]);
    _inherit(A.JsConstantLinkedHashMap, A.JsLinkedHashMap);
    _inheritMany(A.NativeTypedData, [A.NativeByteData, A.NativeTypedArray]);
    _inheritMany(A.NativeTypedArray, [A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfDouble, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfInt, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(A.NativeTypedArrayOfDouble, [A.NativeFloat32List, A.NativeFloat64List]);
    _inheritMany(A.NativeTypedArrayOfInt, [A.NativeInt16List, A.NativeInt32List, A.NativeInt8List, A.NativeUint16List, A.NativeUint32List, A.NativeUint8ClampedList, A.NativeUint8List]);
    _inherit(A._TypeError, A._Error);
    _inherit(A._AsyncCompleter, A._Completer);
    _inherit(A._AsyncStreamController, A._StreamController);
    _inheritMany(A.Stream, [A._StreamImpl, A._ForwardingStream]);
    _inherit(A._ControllerStream, A._StreamImpl);
    _inheritMany(A._BufferingStreamSubscription, [A._ControllerSubscription, A._ForwardingStreamSubscription]);
    _inheritMany(A._DelayedEvent, [A._DelayedData, A._DelayedError]);
    _inherit(A._MapStream, A._ForwardingStream);
    _inherit(A._RootZone, A._Zone);
    _inheritMany(A._HashMap, [A._IdentityHashMap, A._CustomHashMap]);
    _inherit(A._SetBase, A.SetBase);
    _inherit(A._LinkedHashSet, A._SetBase);
    _inherit(A._UnmodifiableMapView_MapView__UnmodifiableMapMixin, A.MapView);
    _inherit(A.UnmodifiableMapView, A._UnmodifiableMapView_MapView__UnmodifiableMapMixin);
    _inheritMany(A.Codec, [A.Base64Codec, A.Encoding, A.JsonCodec, A.CborCodec, A.HexCodec]);
    _inheritMany(A.Converter, [A.Base64Encoder, A.JsonEncoder, A.JsonDecoder, A.Utf8Encoder, A.Utf8Decoder, A.CborDecoder, A.CborEncoder, A.Hash, A.HexEncoder, A.HexDecoder, A.__Bech32Encoder_Converter_Bech32Validations, A.__Bech32Decoder_Converter_Bech32Validations]);
    _inherit(A.JsonCyclicError, A.JsonUnsupportedObjectError);
    _inherit(A._JsonStringStringifier, A._JsonStringifier);
    _inherit(A.__JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin, A._JsonStringStringifier);
    _inherit(A._JsonStringStringifierPretty, A.__JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin);
    _inherit(A.Utf8Codec, A.Encoding);
    _inheritMany(A.ArgumentError, [A.RangeError, A.IndexError]);
    _inherit(A._DataUri, A._Uri);
    _inherit(A._ByteList_Object_ListMixin_Encodable, A._ByteList_Object_ListMixin);
    _inherit(A.ByteList, A._ByteList_Object_ListMixin_Encodable);
    _inheritMany(A.ByteList, [A.ChainCode, A._AsymmetricKey_ByteList_Encodable, A.Signature, A._SignedMessage_ByteList_Suffix]);
    _inherit(A.AsymmetricKey, A._AsymmetricKey_ByteList_Encodable);
    _inheritMany(A.AsymmetricKey, [A.AsymmetricPublicKey, A.AsymmetricPrivateKey]);
    _inherit(A.VerifyKey, A.AsymmetricPublicKey);
    _inherit(A._Bip32VerifyKey_VerifyKey_Suffix, A.VerifyKey);
    _inherit(A._Bip32VerifyKey_VerifyKey_Suffix_Bip32PublicKey, A._Bip32VerifyKey_VerifyKey_Suffix);
    _inherit(A.Bip32VerifyKey, A._Bip32VerifyKey_VerifyKey_Suffix_Bip32PublicKey);
    _inherit(A._SigningKey_AsymmetricPrivateKey_Suffix, A.AsymmetricPrivateKey);
    _inherit(A.SigningKey, A._SigningKey_AsymmetricPrivateKey_Suffix);
    _inherit(A.ExtendedSigningKey, A.SigningKey);
    _inherit(A._Bip32SigningKey_ExtendedSigningKey_Bip32PrivateKey, A.ExtendedSigningKey);
    _inherit(A.Bip32SigningKey, A._Bip32SigningKey_ExtendedSigningKey_Bip32PrivateKey);
    _inherit(A.BinaryReaderImpl, A.BinaryReader);
    _inherit(A.CardanoTransactionInput, A._CardanoTransactionInput_Object__$CardanoTransactionInput);
    _inherit(A._CardanoTransactionInput, A.CardanoTransactionInput);
    _inherit(A.CardanoTransactionInputs, A._CardanoTransactionInputs_Object__$CardanoTransactionInputs);
    _inherit(A._CardanoTransactionInputs, A.CardanoTransactionInputs);
    _inherit(A.RequiredSigners, A._RequiredSigners_Object__$RequiredSigners);
    _inherit(A._RequiredSigner, A.RequiredSigners);
    _inherit(A.GovActionId, A._GovActionId_Object__$GovActionId);
    _inherit(A._GovActionId, A.GovActionId);
    _inheritMany(A._Enum, [A.Vote, A.VoterType, A.CredType, A.RedeemerTag, A.Operation, A.SigContext, A.NetworkId, A.AddressType, A.CredentialType, A.GovKeyType, A.Bip32KeyRole, A.CborFloatPrecision, A.JsonBytesEncoding, A.CborLengthType, A.Level, A.SquadronPlatformType]);
    _inherit(A.Voter, A._Voter_Object__$Voter);
    _inherit(A._Voter, A.Voter);
    _inherit(A.VotingProcedure, A._VotingProcedure_Object__$VotingProcedure);
    _inherit(A._VotingProcedure, A.VotingProcedure);
    _inherit(A.VotingProcedures, A._VotingProcedures_Object__$VotingProcedures);
    _inherit(A._VotingProcedures, A.VotingProcedures);
    _inherit(A.OutputDatum, A._OutputDatum_Object__$OutputDatum);
    _inheritMany(A.OutputDatum, [A.OutputDatum_Hash, A.OutputDatum_Inline]);
    _inherit(A.CardanoTransactionOutput, A._CardanoTransactionOutput_Object__$CardanoTransactionOutput);
    _inheritMany(A.CardanoTransactionOutput, [A.CardanoTransactionOutput_Legacy, A.CardanoTransactionOutput_PostAlonzo]);
    _inherit(A.Constitution, A._Constitution_Object__$Constitution);
    _inherit(A._Constitution, A.Constitution);
    _inherit(A.GovAction, A._GovAction_Object__$GovAction);
    _inheritMany(A.GovAction, [A.GovAction_ParameterChange, A.GovAction_HardForkInitiation, A.GovAction_TreasuryWithdrawals, A.GovAction_NoConfidence, A.GovAction_UpdateCommittee, A.GovAction_NewConstitution, A.GovAction_InfoAction]);
    _inherit(A.ProposalProcedure, A._ProposalProcedure_Object__$ProposalProcedure);
    _inherit(A._ProposalProcedure, A.ProposalProcedure);
    _inherit(A.ProtocolParamUpdate, A._ProtocolParamUpdate_Object__$ProtocolParamUpdate);
    _inherit(A._ProtocolParamUpdate, A.ProtocolParamUpdate);
    _inherit(A.ProtocolVersion, A._ProtocolVersion_Object__$ProtocolVersion);
    _inherit(A._ProtocolVersion, A.ProtocolVersion);
    _inherit(A.Certificate, A._Certificate_Object__$Certificate);
    _inheritMany(A.Certificate, [A.Certificate_StakeRegistrationLegacy, A.Certificate_StakeDeRegistrationLegacy, A.Certificate_StakeDelegation, A.Certificate_PoolRegistration, A.Certificate_PoolRetirement, A.Certificate_StakeRegistration, A.Certificate_StakeDeRegistration, A.Certificate_VoteDelegation, A.Certificate_StakeVoteDelegation, A.Certificate_StakeRegistrationDelegation, A.Certificate_VoteRegistrationDelegation, A.Certificate_StakeVoteRegistrationDelegation, A.Certificate_AuthorizeCommitteeHot, A.Certificate_ResignCommitteeCold, A.Certificate_RegisterDRep, A.Certificate_UnregisterDRep, A.Certificate_UpdateDRep]);
    _inherit(A.Credential, A._Credential_Object__$Credential);
    _inherit(A._Credential, A.Credential);
    _inherit(A.PoolMetadata, A._PoolMetadata_Object__$PoolMetadata);
    _inherit(A._PoolMetadata, A.PoolMetadata);
    _inherit(A.StakePoolId, A._StakePoolId_Object__$StakePoolId);
    _inherit(A._StakePoolId, A.StakePoolId);
    _inherit(A.Withdraw, A._Withdraw_Object__$Withdraw);
    _inherit(A._Withdraw, A.Withdraw);
    _inherit(A.CardanoTransactionBody, A._CardanoTransactionBody_Object__$CardanoTransactionBody);
    _inherit(A._CardanoTransactionBody, A.CardanoTransactionBody);
    _inherit(A.WitnessVKey, A._WitnessVKey_Object__$WitnessVKey);
    _inherit(A._WitnessVKey, A.WitnessVKey);
    _inheritMany(A.Script, [A._NativeScript_Script__$NativeScript, A._PlutusScriptV1_Script__$PlutusScriptV1, A._PlutusScriptV2_Script__$PlutusScriptV2, A._PlutusScriptV3_Script__$PlutusScriptV3]);
    _inherit(A.NativeScript, A._NativeScript_Script__$NativeScript);
    _inheritMany(A.NativeScript, [A.NativeScript_PubKey, A.NativeScript_All, A.NativeScript_Any, A.NativeScript_AtLeast, A.NativeScript_RequireTimeAfter, A.NativeScript_RequireTimeBefore]);
    _inherit(A.WitnessBootstrap, A._WitnessBootstrap_Object__$WitnessBootstrap);
    _inherit(A._WitnessBootstrap, A.WitnessBootstrap);
    _inherit(A.PlutusScriptV1, A._PlutusScriptV1_Script__$PlutusScriptV1);
    _inherit(A._PlutusScriptV1, A.PlutusScriptV1);
    _inherit(A.PlutusData, A._PlutusData_Object__$PlutusData);
    _inheritMany(A.PlutusData, [A.PlutusData_BigInt, A.PlutusData_DefiniteBytes, A.PlutusData_IndefiniteBytes, A.PlutusData_Constr, A.PlutusData_List, A.PlutusData_Map]);
    _inherit(A.ExUnits, A._ExUnits_Object__$ExUnits);
    _inherit(A._ExUnits, A.ExUnits);
    _inherit(A.Redeemer, A._Redeemer_Object__$Redeemer);
    _inheritMany(A.Redeemer, [A.Redeemer_PreConway, A.Redeemer_Conway]);
    _inherit(A.PlutusScriptV2, A._PlutusScriptV2_Script__$PlutusScriptV2);
    _inherit(A._PlutusScriptV2, A.PlutusScriptV2);
    _inherit(A.PlutusScriptV3, A._PlutusScriptV3_Script__$PlutusScriptV3);
    _inherit(A._PlutusScriptV3, A.PlutusScriptV3);
    _inherit(A.ListWithCborType, A._ListWithCborType_Object__$ListWithCborType);
    _inherit(A.WitnessSet, A._WitnessSet_Object__$WitnessSet);
    _inherit(A._ListWithCborType, A.ListWithCborType);
    _inherit(A._WitnessSet, A.WitnessSet);
    _inherit(A.CBORMetadata, A._CBORMetadata_Object__$CBORMetadata);
    _inherit(A._CBORMetadata, A.CBORMetadata);
    _inherit(A.Anchor, A._Anchor_Object__$Anchor);
    _inherit(A._Anchor, A.Anchor);
    _inherit(A.Value, A._Value_Object__$Value);
    _inherit(A.MultiAsset, A._MultiAsset_Object__$MultiAsset);
    _inherit(A.Asset, A._Asset_Object__$Asset);
    _inheritMany(A.Value, [A.Value_v0, A.Value_v1]);
    _inherit(A._MultiAsset, A.MultiAsset);
    _inherit(A._Asset, A.Asset);
    _inherit(A.Drep, A._Drep_Object__$Drep);
    _inheritMany(A.Drep, [A.Drep_AddrKeyHash, A.Drep_ScriptHash, A.Drep_Abstain, A.Drep_NoConfidence]);
    _inherit(A.Nonce, A._Nonce_Object__$Nonce);
    _inherit(A._Nonce, A.Nonce);
    _inherit(A.RationalNumber, A._RationalNumber_Object__$RationalNumber);
    _inherit(A._RationalNumber, A.RationalNumber);
    _inherit(A.Utxo, A._Utxo_Object__$Utxo);
    _inherit(A._Utxo, A.Utxo);
    _inherit(A.CardanoTransaction, A._CardanoTransaction_Object__$CardanoTransaction);
    _inherit(A._CardanoTransaction, A.CardanoTransaction);
    _inherit(A.CoseHeaderMap, A._CoseHeaderMap_Object__$CoseHeaderMap);
    _inherit(A._CoseHeaderMap, A.CoseHeaderMap);
    _inherit(A.CoseHeaders, A._CoseHeaders_Object__$CoseHeaders);
    _inherit(A._CoseHeaders, A.CoseHeaders);
    _inherit(A.CoseKey, A._CoseKey_Object__$CoseKey);
    _inherit(A._CoseKey, A.CoseKey);
    _inherit(A.CoseProtectedHeaderMap, A._CoseProtectedHeaderMap_Object__$CoseProtectedHeaderMap);
    _inherit(A._CoseProtectedHeaderMap, A.CoseProtectedHeaderMap);
    _inherit(A.CoseSigStructure, A._CoseSigStructure_Object__$CoseSigStructure);
    _inherit(A._CoseSigStructure, A.CoseSigStructure);
    _inherit(A.CoseSign1, A._CoseSign1_Object__$CoseSign1);
    _inherit(A._CoseSign1, A.CoseSign1);
    _inherit(A.DataSignature, A._DataSignature_Object__$DataSignature);
    _inherit(A._DataSignature, A.DataSignature);
    _inheritMany(A.TransactionParseException, [A.CardanoValueParseException, A.TransactionOutputParseException, A.TransactionBodyParseException, A.WitnessBootstrapParseException, A.WitnessPlutusScriptV1ParseException, A.WitnessPlutusScriptV2ParseException, A.WitnessPlutusScriptV3ParseException, A.PlutusDataParseException, A.ExUnitsParseException, A.RedeemerParseException]);
    _inherit(A.NativeScriptParseException, A.WitnessParseException);
    _inherit(A.CardanoAddress, A._CardanoAddress_Object__$CardanoAddress);
    _inheritMany(A.CardanoAddress, [A.CardanoAddressByron, A.CardanoAddressPointer, A.CardanoAddressBase, A.CardanoAddressEnterprise, A.CardanoAddressReward]);
    _inherit(A.CardanoDerivation, A._CardanoDerivation_Object__$CardanoDerivation);
    _inherit(A.DRepDerivation, A._DRepDerivation_Object__$DRepDerivation);
    _inherit(A.ConstitutionalCommitee, A._ConstitutionalCommitee_Object__$ConstitutionalCommitee);
    _inherit(A.CardanoDerivedAddress, A.CardanoDerivation);
    _inherit(A._DRepDerivation, A.DRepDerivation);
    _inheritMany(A.ConstitutionalCommitee, [A.ConstitutionalCommiteeCold, A.ConstitutionalCommiteeHot]);
    _inherit(A._CardanoPubAccountSyncFactory, A.CardanoPubAccountFactory);
    _inherit(A.CardanoPubAccount, A._CardanoPubAccount_Object__$CardanoPubAccount);
    _inherit(A._CardanoPubAccount, A.CardanoPubAccount);
    _inherit(A.CardanoAddressKit, A.Bip32KeyPair);
    _inherit(A.DRepDiffInfo, A._DRepDiffInfo_Object__$DRepDiffInfo);
    _inherit(A._DRepDiffInfo, A.DRepDiffInfo);
    _inherit(A.ProposalDiffInfo, A._ProposalDiffInfo_Object__$ProposalDiffInfo);
    _inherit(A._ProposalDiffInfo, A.ProposalDiffInfo);
    _inherit(A.TxDiff, A._TxDiff_Object__$TxDiff);
    _inherit(A.TxSigningBundle, A._TxSigningBundle_Object__$TxSigningBundle);
    _inherit(A.TxSignedBundle, A._TxSignedBundle_Object__$TxSignedBundle);
    _inherit(A.TxPreparedForSigning, A._TxPreparedForSigning_Object__$TxPreparedForSigning);
    _inherit(A.TxAndSignature, A._TxAndSignature_Object__$TxAndSignature);
    _inherit(A._TxDiff, A.TxDiff);
    _inherit(A._TxSigningBundle, A.TxSigningBundle);
    _inherit(A._TxSignedBundle, A.TxSignedBundle);
    _inherit(A._TxPreparedForSigning, A.TxPreparedForSigning);
    _inherit(A._TxAndSignature, A.TxAndSignature);
    _inherit(A.VoteInfo, A._VoteInfo_Object__$VoteInfo);
    _inherit(A._VoteInfo, A.VoteInfo);
    _inherit(A.CardanoSigningPath, A._CardanoSigningPath_Object__$CardanoSigningPath);
    _inherit(A.CardanoSigningPath_Shelley, A.CardanoSigningPath);
    _inherit(A.CardanoWalletImpl, A.CardanoWallet);
    _inherit(A._$WalletTasks$WorkerService, A.WalletTasks);
    _inherit(A.Worker, A._Worker_Object_Releasable);
    _inherit(A._WalletTasksWorker_Worker__$WalletTasks$Invoker, A.Worker);
    _inherit(A._WalletTasksWorker_Worker__$WalletTasks$Invoker__$WalletTasks$Facade, A._WalletTasksWorker_Worker__$WalletTasks$Invoker);
    _inherit(A.WalletTasksWorker, A._WalletTasksWorker_Worker__$WalletTasks$Invoker__$WalletTasks$Facade);
    _inherit(A.WorkerPool, A._WorkerPool_Object_Releasable);
    _inherit(A._WalletTasksWorkerPool_WorkerPool__$WalletTasks$Facade, A.WorkerPool);
    _inherit(A.WalletTasksWorkerPool, A._WalletTasksWorkerPool_WorkerPool__$WalletTasks$Facade);
    _inheritMany(A.MarshalingContext, [A._$Deser, A._$Ser]);
    _inherit(A.RawSink, A.ByteConversionSink);
    _inherit(A.CborMalformedException, A.FormatException);
    _inheritMany(A.CborMalformedException, [A._CborUnexpectedBreakException, A._CborUnexpectedUndefinedLengthException]);
    _inheritMany(A._Builder0, [A._ValueBuilder, A._ListBuilder, A._MapBuilder, A._IndefiniteLengthByteBuilder, A._IndefiniteLengthStringBuilder, A._IndefiniteLengthListBuilder, A._IndefiniteLengthMapBuilder]);
    _inherit(A._BufferEncodeSink, A.EncodeSink);
    _inherit(A._CborBytesImpl, A.__CborBytesImpl_Object_CborValueMixin);
    _inherit(A._CborBytesIndefiniteLengthImpl, A.__CborBytesIndefiniteLengthImpl_Object_CborValueMixin);
    _inherit(A._CborEncodeIndefiniteLengthBytesImpl, A.__CborEncodeIndefiniteLengthBytesImpl_Object_CborValueMixin);
    _inherit(A._CborEncodeDefiniteLengthBytesImpl, A.__CborEncodeDefiniteLengthBytesImpl_Object_CborValueMixin);
    _inherit(A._CborBigIntImpl, A._CborBytesImpl);
    _inherit(A._CborFloatImpl, A.__CborFloatImpl_Object_CborValueMixin);
    _inherit(A._CborDateTimeFloatImpl, A._CborFloatImpl);
    _inherit(A._CborSmallIntImpl, A.__CborSmallIntImpl_Object_CborValueMixin);
    _inherit(A._LargeInt, A.__LargeInt_Object_CborValueMixin);
    _inherit(A._CborDateTimeIntImpl, A._CborSmallIntImpl);
    _inherit(A.Break, A._Break_Object_CborValueMixin);
    _inheritMany(A._DelegatingIterableBase, [A.DelegatingList, A.DelegatingSet]);
    _inheritMany(A.DelegatingList, [A.__CborListImpl_DelegatingList_CborValueMixin, A.__CborDecimalFractionImpl_DelegatingList_CborValueMixin, A.__CborRationalNumberImpl_DelegatingList_CborValueMixin, A.__CborBigFloatImpl_DelegatingList_CborValueMixin]);
    _inherit(A._CborListImpl, A.__CborListImpl_DelegatingList_CborValueMixin);
    _inherit(A._CborEncodeIndefiniteLengthListImpl, A.__CborEncodeIndefiniteLengthListImpl_Object_CborValueMixin);
    _inherit(A._CborEncodeDefiniteLengthListImpl, A.__CborEncodeDefiniteLengthListImpl_Object_CborValueMixin);
    _inherit(A._CborDecimalFractionImpl, A.__CborDecimalFractionImpl_DelegatingList_CborValueMixin);
    _inherit(A._CborRationalNumberImpl, A.__CborRationalNumberImpl_DelegatingList_CborValueMixin);
    _inherit(A._CborBigFloatImpl, A.__CborBigFloatImpl_DelegatingList_CborValueMixin);
    _inherit(A.__CborMapImpl_DelegatingMap_CborValueMixin, A.DelegatingMap);
    _inherit(A._CborMapImpl, A.__CborMapImpl_DelegatingMap_CborValueMixin);
    _inherit(A._CborEncodeIndefiniteLengthMapImpl, A.__CborEncodeIndefiniteLengthMapImpl_Object_CborValueMixin);
    _inherit(A._CborEncodeDefiniteLengthMapImpl, A.__CborEncodeDefiniteLengthMapImpl_Object_CborValueMixin);
    _inherit(A._CborSimpleValueImpl, A.__CborSimpleValueImpl_Object_CborValueMixin);
    _inheritMany(A._CborSimpleValueImpl, [A._CborNullImpl, A._CborUndefinedImpl, A._CborBoolImpl]);
    _inherit(A._CborStringImpl, A.__CborStringImpl_Object_CborValueMixin);
    _inherit(A._CborIndefiniteLengthStringImpl, A.__CborIndefiniteLengthStringImpl_Object_CborValueMixin);
    _inherit(A._CborEncodeIndefiniteLengthStringImpl, A.__CborEncodeIndefiniteLengthStringImpl_Object_CborValueMixin);
    _inherit(A._CborEncodeDefiniteLengthStringImpl, A.__CborEncodeDefiniteLengthStringImpl_Object_CborValueMixin);
    _inheritMany(A._CborStringImpl, [A._CborDateTimeStringImpl, A._CborUriImpl, A._CborBase64Impl, A._CborBase64UrlImpl, A._CborRegexImpl, A._CborMimeImpl]);
    _inheritMany(A._UnorderedEquality, [A.UnorderedIterableEquality, A.SetEquality]);
    _inherit(A._UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin, A.DelegatingSet);
    _inherit(A.UnmodifiableSetView, A._UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin);
    _inherit(A._Sha256, A.Hash);
    _inherit(A._Sha32BitSink, A.HashSink);
    _inherit(A._Sha256Sink, A._Sha32BitSink);
    _inherit(A.EqualUnmodifiableListView, A.UnmodifiableListView);
    _inherit(A.EqualUnmodifiableSetView, A.UnmodifiableSetView);
    _inherit(A.EqualUnmodifiableMapView, A.UnmodifiableMapView);
    _inheritMany(A.Codec0, [A._Codec16, A._Codec32, A._Codec64]);
    _inheritMany(A.FloatParts, [A._FloatParts, A._Decoding, A._FromDouble, A._Nan, A._Infinity]);
    _inherit(A._Bech32Encoder, A.__Bech32Encoder_Converter_Bech32Validations);
    _inherit(A._Bech32Decoder, A.__Bech32Decoder_Converter_Bech32Validations);
    _inherit(A.SignedMessage, A._SignedMessage_ByteList_Suffix);
    _inherit(A.EntryPointUri, A._EntryPointUri_Object_Releasable);
    _inherit(A.InternalLogger, A.Logger);
    _inherit(A._NoLogOutput, A.LogOutput);
    _inherit(A._DummyPrinter, A.LogPrinter);
    _inherit(A._LogAllFilter, A.LogFilter);
    _inheritMany(A.Converter0, [A.CastConverter, A.ContextAwareConverter, A.NumConverter]);
    _inheritMany(A.SquadronException, [A.SquadronCanceledException, A.SquadronError, A.WorkerException]);
    _inheritMany(A.SquadronCanceledException, [A.SquadronCanceledExceptions, A.SquadronTimeoutException]);
    _inherit(A.WorkerValueTask, A.WorkerTask);
    _inherit(A.SquadronCancelationToken, A.CancelationToken);
    _inherit(A._IntBuffer, A.TypedDataBuffer);
    _inherit(A.Uint8Buffer, A._IntBuffer);
    _mixin(A.UnmodifiableListBase, A.UnmodifiableListMixin);
    _mixin(A.__CastListBase__CastIterableBase_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._AsyncStreamController, A._AsyncStreamControllerDispatch);
    _mixin(A.UnmodifiableMapBase, A._UnmodifiableMapMixin);
    _mixin(A._UnmodifiableMapView_MapView__UnmodifiableMapMixin, A._UnmodifiableMapMixin);
    _mixin(A.__JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin, A._JsonPrettyPrintMixin);
    _mixin(A._Bip32SigningKey_ExtendedSigningKey_Bip32PrivateKey, A.Bip32PrivateKey);
    _mixin(A._Bip32VerifyKey_VerifyKey_Suffix, A.Suffix);
    _mixin(A._Bip32VerifyKey_VerifyKey_Suffix_Bip32PublicKey, A.Bip32PublicKey);
    _mixin(A._CardanoTransactionInput_Object__$CardanoTransactionInput, A._$CardanoTransactionInput);
    _mixin(A._CardanoTransactionInputs_Object__$CardanoTransactionInputs, A._$CardanoTransactionInputs);
    _mixin(A._RequiredSigners_Object__$RequiredSigners, A._$RequiredSigners);
    _mixin(A._GovActionId_Object__$GovActionId, A._$GovActionId);
    _mixin(A._Voter_Object__$Voter, A._$Voter);
    _mixin(A._VotingProcedure_Object__$VotingProcedure, A._$VotingProcedure);
    _mixin(A._VotingProcedures_Object__$VotingProcedures, A._$VotingProcedures);
    _mixin(A._OutputDatum_Object__$OutputDatum, A._$OutputDatum);
    _mixin(A._CardanoTransactionOutput_Object__$CardanoTransactionOutput, A._$CardanoTransactionOutput);
    _mixin(A._Constitution_Object__$Constitution, A._$Constitution);
    _mixin(A._GovAction_Object__$GovAction, A._$GovAction);
    _mixin(A._ProposalProcedure_Object__$ProposalProcedure, A._$ProposalProcedure);
    _mixin(A._ProtocolParamUpdate_Object__$ProtocolParamUpdate, A._$ProtocolParamUpdate);
    _mixin(A._ProtocolVersion_Object__$ProtocolVersion, A._$ProtocolVersion);
    _mixin(A._Certificate_Object__$Certificate, A._$Certificate);
    _mixin(A._Credential_Object__$Credential, A._$Credential);
    _mixin(A._PoolMetadata_Object__$PoolMetadata, A._$PoolMetadata);
    _mixin(A._StakePoolId_Object__$StakePoolId, A._$StakePoolId);
    _mixin(A._Withdraw_Object__$Withdraw, A._$Withdraw);
    _mixin(A._CardanoTransactionBody_Object__$CardanoTransactionBody, A._$CardanoTransactionBody);
    _mixin(A._WitnessVKey_Object__$WitnessVKey, A._$WitnessVKey);
    _mixin(A._NativeScript_Script__$NativeScript, A._$NativeScript);
    _mixin(A._WitnessBootstrap_Object__$WitnessBootstrap, A._$WitnessBootstrap);
    _mixin(A._PlutusScriptV1_Script__$PlutusScriptV1, A._$PlutusScriptV1);
    _mixin(A._PlutusData_Object__$PlutusData, A._$PlutusData);
    _mixin(A._ExUnits_Object__$ExUnits, A._$ExUnits);
    _mixin(A._Redeemer_Object__$Redeemer, A._$Redeemer);
    _mixin(A._PlutusScriptV2_Script__$PlutusScriptV2, A._$PlutusScriptV2);
    _mixin(A._PlutusScriptV3_Script__$PlutusScriptV3, A._$PlutusScriptV3);
    _mixin(A._ListWithCborType_Object__$ListWithCborType, A._$ListWithCborType);
    _mixin(A._WitnessSet_Object__$WitnessSet, A._$WitnessSet);
    _mixin(A._CBORMetadata_Object__$CBORMetadata, A._$CBORMetadata);
    _mixin(A._Anchor_Object__$Anchor, A._$Anchor);
    _mixin(A._Asset_Object__$Asset, A._$Asset);
    _mixin(A._MultiAsset_Object__$MultiAsset, A._$MultiAsset);
    _mixin(A._Value_Object__$Value, A._$Value);
    _mixin(A._Drep_Object__$Drep, A._$Drep);
    _mixin(A._Nonce_Object__$Nonce, A._$Nonce);
    _mixin(A._RationalNumber_Object__$RationalNumber, A._$RationalNumber);
    _mixin(A._Utxo_Object__$Utxo, A._$Utxo);
    _mixin(A._CardanoTransaction_Object__$CardanoTransaction, A._$CardanoTransaction);
    _mixin(A._CoseHeaderMap_Object__$CoseHeaderMap, A._$CoseHeaderMap);
    _mixin(A._CoseHeaders_Object__$CoseHeaders, A._$CoseHeaders);
    _mixin(A._CoseKey_Object__$CoseKey, A._$CoseKey);
    _mixin(A._CoseProtectedHeaderMap_Object__$CoseProtectedHeaderMap, A._$CoseProtectedHeaderMap);
    _mixin(A._CoseSigStructure_Object__$CoseSigStructure, A._$CoseSigStructure);
    _mixin(A._CoseSign1_Object__$CoseSign1, A._$CoseSign1);
    _mixin(A._DataSignature_Object__$DataSignature, A._$DataSignature);
    _mixin(A._CardanoAddress_Object__$CardanoAddress, A._$CardanoAddress);
    _mixin(A._CardanoDerivation_Object__$CardanoDerivation, A._$CardanoDerivation);
    _mixin(A._ConstitutionalCommitee_Object__$ConstitutionalCommitee, A._$ConstitutionalCommitee);
    _mixin(A._DRepDerivation_Object__$DRepDerivation, A._$DRepDerivation);
    _mixin(A._CardanoPubAccount_Object__$CardanoPubAccount, A._$CardanoPubAccount);
    _mixin(A._DRepDiffInfo_Object__$DRepDiffInfo, A._$DRepDiffInfo);
    _mixin(A._ProposalDiffInfo_Object__$ProposalDiffInfo, A._$ProposalDiffInfo);
    _mixin(A._TxAndSignature_Object__$TxAndSignature, A._$TxAndSignature);
    _mixin(A._TxDiff_Object__$TxDiff, A._$TxDiff);
    _mixin(A._TxPreparedForSigning_Object__$TxPreparedForSigning, A._$TxPreparedForSigning);
    _mixin(A._TxSignedBundle_Object__$TxSignedBundle, A._$TxSignedBundle);
    _mixin(A._TxSigningBundle_Object__$TxSigningBundle, A._$TxSigningBundle);
    _mixin(A._VoteInfo_Object__$VoteInfo, A._$VoteInfo);
    _mixin(A._CardanoSigningPath_Object__$CardanoSigningPath, A._$CardanoSigningPath);
    _mixin(A._WalletTasksWorker_Worker__$WalletTasks$Invoker, A._$WalletTasks$Invoker);
    _mixin(A._WalletTasksWorker_Worker__$WalletTasks$Invoker__$WalletTasks$Facade, A._$WalletTasks$Facade);
    _mixin(A._WalletTasksWorkerPool_WorkerPool__$WalletTasks$Facade, A._$WalletTasks$Facade);
    _mixin(A.__CborBytesImpl_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborBytesIndefiniteLengthImpl_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborEncodeDefiniteLengthBytesImpl_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborEncodeIndefiniteLengthBytesImpl_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborFloatImpl_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborSmallIntImpl_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A.__LargeInt_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A._Break_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborBigFloatImpl_DelegatingList_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborDecimalFractionImpl_DelegatingList_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborEncodeDefiniteLengthListImpl_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborEncodeIndefiniteLengthListImpl_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborListImpl_DelegatingList_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborRationalNumberImpl_DelegatingList_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborEncodeDefiniteLengthMapImpl_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborEncodeIndefiniteLengthMapImpl_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborMapImpl_DelegatingMap_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborSimpleValueImpl_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborEncodeDefiniteLengthStringImpl_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborEncodeIndefiniteLengthStringImpl_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborIndefiniteLengthStringImpl_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A.__CborStringImpl_Object_CborValueMixin, A.CborValueMixin);
    _mixin(A._UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin, A.UnmodifiableSetMixin);
    _mixin(A._AsymmetricKey_ByteList_Encodable, A.Encodable);
    _mixin(A._ByteList_Object_ListMixin, A.ListBase);
    _mixin(A._ByteList_Object_ListMixin_Encodable, A.Encodable);
    _mixin(A.__Bech32Decoder_Converter_Bech32Validations, A.Bech32Validations);
    _mixin(A.__Bech32Encoder_Converter_Bech32Validations, A.Bech32Validations);
    _mixin(A._SignedMessage_ByteList_Suffix, A.Suffix);
    _mixin(A._SigningKey_AsymmetricPrivateKey_Suffix, A.Suffix);
    _mixin(A._EntryPointUri_Object_Releasable, A.Releasable);
    _mixin(A._WorkerPool_Object_Releasable, A.Releasable);
    _mixin(A._Worker_Object_Releasable, A.Releasable);
  })();
  var init = {
    G: typeof self != "undefined" ? self : globalThis,
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List", Object: "Object", Map: "Map", JSObject: "JSObject"},
    mangledNames: {},
    types: ["~()", "String()", "@(@)", "Bip32KeyPair()", "Future<@>(List<@>)", "Null()", "~(@)", "BigInt(CborValue)", "Object?(Object?)", "MapEntry<CborSmallInt,CborInt>(BigInt)", "int(CborValue)", "MapEntry<CborSmallInt,CborSmallInt>(int)", "Future<~>()", "bool(CardanoTransaction)", "CardanoTransaction(TxPreparedForSigning)", "bool(Set<String>)", "bool(int)", "bool(Certificate)", "Null(JSObject)", "int(int)", "Uint8List(CborValue)", "int(@)", "~(int,bool)", "MapEntry<CborSmallInt,CborValue>(RationalNumber)", "MapEntry<CborSmallInt,CborValue>(CborValue)", "CborList(NativeScript)", "NativeScript(CborValue)", "Credential(Uint8List)", "~(Object?,Object?)", "~(List<@>)", "Null(@)", "String(int)", "int(Object?)", "bool(Object?,Object?)", "0&()", "MapEntry<CborValue,CborValue>(Uint8List)", "~(int,Set<String>)", "~(Object,StackTrace)", "~(Object,StackTrace?)", "~(~())", "Uint8List(Utxo)", "Uint8List()", "bool(Withdraw)", "Credential?(Certificate)", "DRepDiffInfo?(Certificate)", "Asset(Asset)", "MapEntry<CborValue,CborValue>(MultiAsset)", "DRepDerivation()", "ConstitutionalCommiteeCold()", "ConstitutionalCommiteeHot()", "bool(Pattern[int])", "Uint8List(VoteInfo)", "Uint8List(ProposalDiffInfo)", "Drep(Uint8List)", "CborValue(PlutusData)", "~(Object?)", "bool(@)", "bool(Utxo)", "bool(TxPreparedForSigning)", "Credential?(TxPreparedForSigning)", "DRepDiffInfo?(TxPreparedForSigning)", "String(String)", "MapEntry<CborValue,CborInt>(CborInt)", "bool(String)", "MapEntry<CborValue,CborList>(CardanoTransactionInputs)", "MultiAsset(MapEntry<CborValue,CborValue>)", "Future<CardanoAddressKit>(WalletTasksWorker)", "MapEntry<CborValue,CborInt>(Withdraw)", "Withdraw(MapEntry<CborValue,CborValue>)", "bool(Voter)", "String(CardanoTransactionInput)", "Future<String>(List<@>)", "bool()", "CborValue(Uint8List)", "String(@)", "~(int)", "int(String)", "int(int,int)", "~(JSObject?)", "@()", "bool(Object?)", "~(Object[StackTrace?])", "Null(Object)", "Null(@,@)", "String(Utxo)", "ListWithCborType<PlutusScriptV2>(CborList)", "WitnessVKey(CborValue)", "ListWithCborType<NativeScript>(CborList)", "ListWithCborType<WitnessBootstrap>(CborList)", "ListWithCborType<PlutusScriptV1>(CborList)", "ListWithCborType<PlutusData>(CborList)", "Redeemer(MapEntry<CborValue,CborValue>)", "Null(@,StackTrace)", "ListWithCborType<PlutusScriptV3>(CborList)", "MapEntry<CborValue,CborList>(ListWithCborType<WitnessVKey>)", "CborList(WitnessVKey)", "MapEntry<CborValue,CborList>(ListWithCborType<NativeScript>)", "MapEntry<CborValue,CborList>(ListWithCborType<WitnessBootstrap>)", "CborValue(WitnessBootstrap)", "MapEntry<CborValue,CborList>(ListWithCborType<PlutusScriptV1>)", "CborValue(PlutusScriptV1)", "MapEntry<CborValue,CborList>(ListWithCborType<PlutusData>)", "MapEntry<CborValue,CborValue>(ListWithCborType<Redeemer>)", "MapEntry<CborValue,CborValue>(Redeemer)", "CborValue(Redeemer)", "MapEntry<CborValue,CborList>(ListWithCborType<PlutusScriptV2>)", "CborValue(PlutusScriptV2)", "MapEntry<CborValue,CborList>(ListWithCborType<PlutusScriptV3>)", "CborValue(PlutusScriptV3)", "bool(VoterType)", "~(CborValue,CborValue)", "MapEntry<CborValue,CborValue>(Asset)", "bool(MultiAsset)", "MultiAsset(MultiAsset)", "MapEntry<Voter,Map<GovActionId,VotingProcedure>>(MapEntry<CborValue,CborValue>)", "bool(Asset)", "MapEntry<CborValue,CborValue>(MapEntry<Voter,Map<GovActionId,VotingProcedure>>)", "BigInt(BigInt,Withdraw)", "bool(CardanoTransactionOutput)", "Value(Value,CardanoTransactionOutput)", "MapEntry<GovActionId,VotingProcedure>(MapEntry<CborValue,CborValue>)", "Utxo(Object?,Utxo)", "Utxo?(CardanoTransactionInput)", "Value(Value,Utxo)", "List<VoteInfo>(MapEntry<Voter,Map<GovActionId,VotingProcedure>>)", "VoteInfo(MapEntry<GovActionId,VotingProcedure>)", "StakePoolId?(Certificate)", "MapEntry<CborValue,CborValue>(MapEntry<GovActionId,VotingProcedure>)", "Drep?(Certificate)", "OutputDatum(CborValue)", "OutputDatum_Hash(CborValue)", "ProposalDiffInfo(int,ProposalProcedure)", "MapEntry<CborValue,CborValue>(CborValue)", "MapEntry<CborValue,CborList>(List<CoseSignature>)", "CborValue(CoseSignature)", "MapEntry<CborString,CborBool>(bool)", "bool(NetworkId)", "Uint8List?(AddressType)", "String?(AddressType)", "CredentialType()", "~(int,@)", "CardanoDerivedAddress()", "String(Object?[int,int?])", "CborValue(CardanoTransactionOutput)", "@(String)", "bool(Bip32KeyRole)", "MapEntry<Credential,int>(MapEntry<CborValue,CborValue>)", "Null(Object,StackTrace)", "CborValue(Credential)", "MapEntry<CborValue,CborValue>(MapEntry<Credential,int>)", "MapEntry<int,CborValue>(CborValue,CborValue)", "Uint8List(TxPreparedForSigning)", "Uint8List(TxAndSignature)", "~(String,int)", "~(String,int?)", "~([Future<~>?])", "Utxo?(int,CardanoTransactionOutput)", "Value(Value,TxPreparedForSigning)", "String?(TxPreparedForSigning)", "Bip32PublicKey(Bip32PublicKey,int)", "@(@,String)", "Drep?(TxPreparedForSigning)", "MapEntry<CborSmallInt,CborValue>(Nonce)", "List<VoteInfo>(TxPreparedForSigning)", "List<ProposalDiffInfo>(TxPreparedForSigning)", "MapEntry<CborSmallInt,CborValue>(ProtocolVersion)", "String(Uint8List)", "~(@,StackTrace)", "CborValue(Certificate)", "bool(CredType)", "Iterable<Withdraw>(CborValue)", "int(RegExpMatch)", "NetworkId(CborValue)", "CardanoTransactionInput(CborValue)", "TxAndSignature(int,TxPreparedForSigning)", "WitnessVKey(Bip32KeyPair)", "+keyId,requestedSigningAddressBytes,signingKeyPair(Uint8List?,ByteList,Bip32KeyPair)(CardanoAddress)", "CardanoAddressKit()", "+keyId,requestedSigningAddressBytes,signingKeyPair(Uint8List?,ByteList,Bip32KeyPair)(String)", "+keyId,requestedSigningAddressBytes,signingKeyPair(Uint8List?,ByteList,Bip32KeyPair)()", "List<String>(NativeScript)", "MapEntry<CborValue,CborList>(RequiredSigners)", "MapEntry<CborValue,CborValue>(NetworkId)", "MapEntry<CborValue,CborValue>(CardanoTransactionOutput)", "bool(Object,Object)", "Future<Bip32PublicKey>(WalletTasksWorker)", "Future<CardanoAddress>(WalletTasksWorker)", "List<String>(@)", "HdWallet(@)", "NetworkId(@)", "Bip32PublicKey(@)", "Bip32KeyRole(@)", "List<CardanoTransaction>(@)", "List<Utxo>(@)", "CardanoWallet(@)", "TxSigningBundle(@)", "CredentialType(@)", "CardanoAddressKit(@)", "CardanoAddress(@)", "MapEntry<CborValue,CborValue>(BigInt)", "CardanoSigner/()", "CardanoSigner()", "Future<CardanoSigner>()", "~(List<CborValue>)", "MapEntry<CborValue,CborValue>(List<CborValue>)", "Object?(CborValue)", "MapEntry<String,Object?>(MapEntry<CborValue,CborValue>)", "MapEntry<CborValue,CborValue>(VotingProcedures)", "MapEntry<CborValue,CborList>(List<ProposalProcedure>)", "~(int,int)", "CborValue(ProposalProcedure)", "CborList(CardanoTransactionInput)", "~(int,int,int,int,int,int)", "~(WorkerRunner)", "Null(~())", "~(SquadronException)", "~(_WebChannel)", "Set<0^>()<Object?>", "Null(bool)", "~(List<@>{force:bool})", "Stream<List<@>>()", "MapEntry<CborValue,CborValue>(PlutusData,PlutusData)", "PlutusData(CborList)", "~(@,@)", "MapEntry<PlutusData,PlutusData>(CborValue,CborValue)", "~(LogEvent)", "~(Object[StackTrace?,int?])", "~(JSObject)", "Future<int?>(StreamSubscription<@>)", "~(OutputEvent)", "CancelationTokenReference()", "WalletTasksWorker(ExceptionManager)", "bool(Vote)", "SquadronCanceledException(CanceledException)", "String(SquadronCanceledException)", "List<@>(SquadronCanceledException)", "~(bool)", "~([Object?])", "Null(Channel)", "bool(RedeemerTag)", "~(~)", "Null(CanceledException)", "~([@])", "bool(Level)", "int(@,@)", "ListWithCborType<WitnessVKey>(CborList)", "Uint8List(List<int>)", "CardanoTransactionOutput(CborValue)", "ProposalProcedure(CborValue)", "Certificate(CborValue)", "Credential(CborValue)", "WitnessBootstrap(CborValue)", "PlutusScriptV1(CborValue)", "PlutusData(CborValue)", "Redeemer(CborValue)", "PlutusScriptV2(CborValue)", "PlutusScriptV3(CborValue)", "0^(0^)<Object?>", "Utxo(Uint8List)", "CardanoTransaction(Uint8List)", "ProposalDiffInfo(Uint8List)", "TxPreparedForSigning(Uint8List)", "VoteInfo(Uint8List)", "WorkerService(List<@>)", "CborBytes(List<int>{tags:List<int>})", "0^(@)<Object?>", "double(@)", "SquadronCanceledException?(List<@>?)", "SquadronCanceledExceptions?(List<@>?)", "SquadronException?(List<@>)", "SquadronTimeoutException?(List<@>?)", "TaskCanceledException?(List<@>?)", "TaskTerminatedException?(List<@>?)", "WorkerException?(List<@>)", "int(PoolWorker<Worker>,PoolWorker<Worker>)", "int(Uint8List,Uint8List)", "int(Uint8List,Uint8List,Uint8List)", "MapEntry<CborValue,CborList>(OutputDatum)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: Symbol("$ti"),
    rttc: {
      "3;addr,keyCred,scriptCred": (t1, t2, t3) => o => o instanceof A._Record_3_addr_keyCred_scriptCred && t1._is(o._0) && t2._is(o._1) && t3._is(o._2),
      "3;keyId,requestedSigningAddressBytes,signingKeyPair": (t1, t2, t3) => o => o instanceof A._Record_3_keyId_requestedSigningAddressBytes_signingKeyPair && t1._is(o._0) && t2._is(o._1) && t3._is(o._2)
    }
  };
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"JavaScriptFunction":"LegacyJavaScriptObject","PlainJavaScriptObject":"LegacyJavaScriptObject","UnknownJavaScriptObject":"LegacyJavaScriptObject","NativeArrayBuffer":"NativeByteBuffer","JSArray":{"List":["1"],"EfficientLengthIterable":["1"],"JSObject":[],"Iterable":["1"],"JSIndexable":["1"]},"JSBool":{"bool":[],"TrustedGetRuntimeType":[]},"JSNull":{"Null":[],"TrustedGetRuntimeType":[]},"JavaScriptObject":{"JSObject":[]},"LegacyJavaScriptObject":{"JSObject":[]},"JSArraySafeToStringHook":{"SafeToStringHook":[]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"EfficientLengthIterable":["1"],"JSObject":[],"Iterable":["1"],"JSIndexable":["1"]},"ArrayIterator":{"Iterator":["1"]},"JSNumber":{"double":[],"num":[],"Comparable":["num"]},"JSInt":{"double":[],"int":[],"num":[],"Comparable":["num"],"TrustedGetRuntimeType":[]},"JSNumNotInt":{"double":[],"num":[],"Comparable":["num"],"TrustedGetRuntimeType":[]},"JSString":{"String":[],"Comparable":["String"],"Pattern":[],"JSIndexable":["@"],"TrustedGetRuntimeType":[]},"_CastIterableBase":{"Iterable":["2"]},"CastIterator":{"Iterator":["2"]},"CastIterable":{"_CastIterableBase":["1","2"],"Iterable":["2"],"Iterable.E":"2"},"_EfficientLengthCastIterable":{"CastIterable":["1","2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"_CastListBase":{"ListBase":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"]},"CastList":{"_CastListBase":["1","2"],"ListBase":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"ListBase.E":"2","Iterable.E":"2"},"CastSet":{"Set":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"LateError":{"Error":[]},"CodeUnits":{"ListBase":["int"],"UnmodifiableListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int","UnmodifiableListMixin.E":"int"},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"SubListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"ListIterator":{"Iterator":["1"]},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedIterator":{"Iterator":["2"]},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2","ListIterable.E":"2"},"WhereIterable":{"Iterable":["1"],"Iterable.E":"1"},"WhereIterator":{"Iterator":["1"]},"TakeIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthTakeIterable":{"TakeIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"TakeIterator":{"Iterator":["1"]},"SkipIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthSkipIterable":{"SkipIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipIterator":{"Iterator":["1"]},"EmptyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"EmptyIterator":{"Iterator":["1"]},"WhereTypeIterable":{"Iterable":["1"],"Iterable.E":"1"},"WhereTypeIterator":{"Iterator":["1"]},"NonNullsIterable":{"Iterable":["1"],"Iterable.E":"1"},"NonNullsIterator":{"Iterator":["1"]},"UnmodifiableListBase":{"ListBase":["1"],"UnmodifiableListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_ListIndicesIterable":{"ListIterable":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"Iterable.E":"int","ListIterable.E":"int"},"ListMapView":{"MapBase":["int","1"],"_UnmodifiableMapMixin":["int","1"],"Map":["int","1"],"MapBase.K":"int","MapBase.V":"1","_UnmodifiableMapMixin.K":"int","_UnmodifiableMapMixin.V":"1"},"ReversedListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"_Record_3_addr_keyCred_scriptCred":{"_Record3":[],"_Record":[]},"_Record_3_keyId_requestedSigningAddressBytes_signingKeyPair":{"_Record3":[],"_Record":[]},"ConstantMap":{"Map":["1","2"]},"GeneralConstantMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"Instantiation":{"Closure":[],"Function":[]},"Instantiation1":{"Closure":[],"Function":[]},"NullError":{"TypeError":[],"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"Closure0Args":{"Closure":[],"Function":[]},"Closure2Args":{"Closure":[],"Function":[]},"TearOffClosure":{"Closure":[],"Function":[]},"StaticClosure":{"Closure":[],"Function":[]},"BoundClosure":{"Closure":[],"Function":[]},"RuntimeError":{"Error":[]},"JsLinkedHashMap":{"MapBase":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapBase.K":"1","MapBase.V":"2"},"LinkedHashMapKeysIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"LinkedHashMapKeyIterator":{"Iterator":["1"]},"LinkedHashMapValuesIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"LinkedHashMapValueIterator":{"Iterator":["1"]},"LinkedHashMapEntriesIterable":{"EfficientLengthIterable":["MapEntry<1,2>"],"Iterable":["MapEntry<1,2>"],"Iterable.E":"MapEntry<1,2>"},"LinkedHashMapEntryIterator":{"Iterator":["MapEntry<1,2>"]},"JsConstantLinkedHashMap":{"JsLinkedHashMap":["1","2"],"MapBase":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapBase.K":"1","MapBase.V":"2"},"_Record3":{"_Record":[]},"JSSyntaxRegExp":{"RegExp":[],"Pattern":[]},"_MatchImplementation":{"RegExpMatch":[],"Match":[]},"_AllMatchesIterable":{"Iterable":["RegExpMatch"],"Iterable.E":"RegExpMatch"},"_AllMatchesIterator":{"Iterator":["RegExpMatch"]},"StringMatch":{"Match":[]},"_StringAllMatchesIterable":{"Iterable":["Match"],"Iterable.E":"Match"},"_StringAllMatchesIterator":{"Iterator":["Match"]},"NativeByteBuffer":{"JSObject":[],"ByteBuffer":[],"TrustedGetRuntimeType":[]},"NativeTypedData":{"JSObject":[],"TypedData":[]},"_UnmodifiableNativeByteBufferView":{"ByteBuffer":[]},"NativeByteData":{"NativeTypedData":[],"ByteData":[],"JSObject":[],"TypedData":[],"TrustedGetRuntimeType":[]},"NativeTypedArray":{"NativeTypedData":[],"JavaScriptIndexingBehavior":["1"],"JSObject":[],"TypedData":[],"JSIndexable":["1"]},"NativeTypedArrayOfDouble":{"ListBase":["double"],"NativeTypedArray":["double"],"List":["double"],"NativeTypedData":[],"JavaScriptIndexingBehavior":["double"],"EfficientLengthIterable":["double"],"JSObject":[],"TypedData":[],"JSIndexable":["double"],"Iterable":["double"],"FixedLengthListMixin":["double"]},"NativeTypedArrayOfInt":{"ListBase":["int"],"NativeTypedArray":["int"],"List":["int"],"NativeTypedData":[],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"]},"NativeFloat32List":{"Float32List":[],"ListBase":["double"],"TypedDataList":["double"],"NativeTypedArray":["double"],"List":["double"],"NativeTypedData":[],"JavaScriptIndexingBehavior":["double"],"EfficientLengthIterable":["double"],"JSObject":[],"TypedData":[],"JSIndexable":["double"],"Iterable":["double"],"FixedLengthListMixin":["double"],"TrustedGetRuntimeType":[],"ListBase.E":"double"},"NativeFloat64List":{"Float64List":[],"ListBase":["double"],"TypedDataList":["double"],"NativeTypedArray":["double"],"List":["double"],"NativeTypedData":[],"JavaScriptIndexingBehavior":["double"],"EfficientLengthIterable":["double"],"JSObject":[],"TypedData":[],"JSIndexable":["double"],"Iterable":["double"],"FixedLengthListMixin":["double"],"TrustedGetRuntimeType":[],"ListBase.E":"double"},"NativeInt16List":{"NativeTypedArrayOfInt":[],"Int16List":[],"ListBase":["int"],"TypedDataList":["int"],"NativeTypedArray":["int"],"List":["int"],"NativeTypedData":[],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeInt32List":{"NativeTypedArrayOfInt":[],"Int32List":[],"ListBase":["int"],"TypedDataList":["int"],"NativeTypedArray":["int"],"List":["int"],"NativeTypedData":[],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeInt8List":{"NativeTypedArrayOfInt":[],"Int8List":[],"ListBase":["int"],"TypedDataList":["int"],"NativeTypedArray":["int"],"List":["int"],"NativeTypedData":[],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeUint16List":{"NativeTypedArrayOfInt":[],"Uint16List":[],"ListBase":["int"],"TypedDataList":["int"],"NativeTypedArray":["int"],"List":["int"],"NativeTypedData":[],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeUint32List":{"NativeTypedArrayOfInt":[],"Uint32List":[],"ListBase":["int"],"TypedDataList":["int"],"NativeTypedArray":["int"],"List":["int"],"NativeTypedData":[],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeUint8ClampedList":{"NativeTypedArrayOfInt":[],"Uint8ClampedList":[],"ListBase":["int"],"TypedDataList":["int"],"NativeTypedArray":["int"],"List":["int"],"NativeTypedData":[],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeUint8List":{"NativeTypedArrayOfInt":[],"Uint8List":[],"ListBase":["int"],"TypedDataList":["int"],"NativeTypedArray":["int"],"List":["int"],"NativeTypedData":[],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"_Type":{"Type":[]},"_Error":{"Error":[]},"_TypeError":{"TypeError":[],"Error":[]},"StreamController":{"Sink":["1"]},"_TimerImpl":{"Timer":[]},"_AsyncAwaitCompleter":{"Completer":["1"]},"_SyncStarIterator":{"Iterator":["1"]},"_SyncStarIterable":{"Iterable":["1"],"Iterable.E":"1"},"AsyncError":{"Error":[]},"_Completer":{"Completer":["1"]},"_AsyncCompleter":{"_Completer":["1"],"Completer":["1"]},"_Future":{"Future":["1"]},"_StreamController":{"StreamController":["1"],"Sink":["1"],"_StreamControllerLifecycle":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_AsyncStreamController":{"_AsyncStreamControllerDispatch":["1"],"_StreamController":["1"],"StreamController":["1"],"Sink":["1"],"_StreamControllerLifecycle":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_ControllerStream":{"_StreamImpl":["1"],"Stream":["1"],"Stream.T":"1"},"_ControllerSubscription":{"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"],"_EventSink":["1"],"_EventDispatch":["1"],"_BufferingStreamSubscription.T":"1"},"_BufferingStreamSubscription":{"StreamSubscription":["1"],"_EventSink":["1"],"_EventDispatch":["1"],"_BufferingStreamSubscription.T":"1"},"_StreamImpl":{"Stream":["1"]},"_DelayedData":{"_DelayedEvent":["1"]},"_DelayedError":{"_DelayedEvent":["@"]},"_DelayedDone":{"_DelayedEvent":["@"]},"_ForwardingStream":{"Stream":["2"]},"_ForwardingStreamSubscription":{"_BufferingStreamSubscription":["2"],"StreamSubscription":["2"],"_EventSink":["2"],"_EventDispatch":["2"],"_BufferingStreamSubscription.T":"2"},"_MapStream":{"_ForwardingStream":["1","2"],"Stream":["2"],"Stream.T":"2"},"_Zone":{"Zone":[]},"_RootZone":{"_Zone":[],"Zone":[]},"_HashMap":{"MapBase":["1","2"],"HashMap":["1","2"],"Map":["1","2"],"MapBase.K":"1","MapBase.V":"2"},"_IdentityHashMap":{"_HashMap":["1","2"],"MapBase":["1","2"],"HashMap":["1","2"],"Map":["1","2"],"MapBase.K":"1","MapBase.V":"2"},"_CustomHashMap":{"_HashMap":["1","2"],"MapBase":["1","2"],"HashMap":["1","2"],"Map":["1","2"],"MapBase.K":"1","MapBase.V":"2"},"_HashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_HashMapKeyIterator":{"Iterator":["1"]},"_LinkedHashSet":{"_SetBase":["1"],"SetBase":["1"],"LinkedHashSet":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_LinkedHashSetIterator":{"Iterator":["1"]},"UnmodifiableListView":{"ListBase":["1"],"UnmodifiableListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListBase.E":"1","UnmodifiableListMixin.E":"1"},"ListBase":{"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"MapBase":{"Map":["1","2"]},"UnmodifiableMapBase":{"MapBase":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"]},"MapView":{"Map":["1","2"]},"UnmodifiableMapView":{"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":["1","2"],"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"]},"ListQueue":{"Queue":["1"],"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"_ListQueueIterator":{"Iterator":["1"]},"SetBase":{"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_SetBase":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_JsonMap":{"MapBase":["String","@"],"Map":["String","@"],"MapBase.K":"String","MapBase.V":"@"},"_JsonMapKeyIterable":{"ListIterable":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"Iterable.E":"String","ListIterable.E":"String"},"Base64Codec":{"Codec":["List<int>","String"],"Codec.S":"List<int>","Codec.T":"String"},"Base64Encoder":{"Converter":["List<int>","String"]},"ByteConversionSink":{"Sink":["List<int>"]},"_SimpleCallbackSink":{"Sink":["1"]},"Encoding":{"Codec":["String","List<int>"]},"JsonUnsupportedObjectError":{"Error":[]},"JsonCyclicError":{"Error":[]},"JsonCodec":{"Codec":["Object?","String"],"Codec.S":"Object?","Codec.T":"String"},"JsonEncoder":{"Converter":["Object?","String"]},"JsonDecoder":{"Converter":["String","Object?"]},"Utf8Codec":{"Codec":["String","List<int>"],"Codec.S":"String","Codec.T":"List<int>"},"Utf8Encoder":{"Converter":["String","List<int>"]},"Utf8Decoder":{"Converter":["List<int>","String"]},"BigInt":{"Comparable":["BigInt"]},"DateTime":{"Comparable":["DateTime"]},"double":{"num":[],"Comparable":["num"]},"Duration":{"Comparable":["Duration"]},"int":{"num":[],"Comparable":["num"]},"List":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"num":{"Comparable":["num"]},"RegExpMatch":{"Match":[]},"Set":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"String":{"Comparable":["String"],"Pattern":[]},"_BigIntImpl":{"BigInt":[],"Comparable":["BigInt"]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"IntegerDivisionByZeroException":{"Error":[]},"_StringStackTrace":{"StackTrace":[]},"Runes":{"Iterable":["int"],"Iterable.E":"int"},"RuneIterator":{"Iterator":["int"]},"StringBuffer":{"StringSink":[]},"_Uri":{"Uri":[]},"_SimpleUri":{"Uri":[]},"_DataUri":{"Uri":[]},"ByteData":{"TypedData":[]},"Int8List":{"TypedDataList":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"Iterable":["int"]},"Uint8List":{"TypedDataList":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"Iterable":["int"]},"Uint8ClampedList":{"TypedDataList":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"Iterable":["int"]},"Int16List":{"TypedDataList":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"Iterable":["int"]},"Uint16List":{"TypedDataList":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"Iterable":["int"]},"Int32List":{"TypedDataList":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"Iterable":["int"]},"Uint32List":{"TypedDataList":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"Iterable":["int"]},"Float32List":{"TypedDataList":["double"],"List":["double"],"EfficientLengthIterable":["double"],"TypedData":[],"Iterable":["double"]},"Float64List":{"TypedDataList":["double"],"List":["double"],"EfficientLengthIterable":["double"],"TypedData":[],"Iterable":["double"]},"Bip32PublicKey":{"Bip32Key":[],"ByteList":[],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"ChainCode":{"ByteList":[],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int"},"InvalidBip23Ed25519DerivationKeyError":{"Error":[]},"MaxDepthExceededBip23Ed25519DerivationKeyError":{"Error":[]},"Bip32VerifyKey":{"VerifyKey":[],"Bip32PublicKey":[],"Bip32Key":[],"ByteList":[],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int"},"Bip32SigningKey":{"Bip32PrivateKey":[],"Bip32Key":[],"ByteList":[],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int"},"InvalidSigningKeyError":{"Error":[]},"ExtendedSigningKey":{"ByteList":[],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"_CardanoTransactionInput":{"CardanoTransactionInput":[]},"_CardanoTransactionInputs":{"CardanoTransactionInputs":[]},"_RequiredSigner":{"RequiredSigners":[]},"_GovActionId":{"GovActionId":[]},"_Voter":{"Voter":[]},"_VotingProcedure":{"VotingProcedure":[]},"_VotingProcedures":{"VotingProcedures":[]},"OutputDatum_Hash":{"OutputDatum":[]},"OutputDatum_Inline":{"OutputDatum":[]},"CardanoTransactionOutput_Legacy":{"CardanoTransactionOutput":[]},"CardanoTransactionOutput_PostAlonzo":{"CardanoTransactionOutput":[]},"_Constitution":{"Constitution":[]},"GovAction_ParameterChange":{"GovAction":[]},"GovAction_HardForkInitiation":{"GovAction":[]},"GovAction_TreasuryWithdrawals":{"GovAction":[]},"GovAction_NoConfidence":{"GovAction":[]},"GovAction_UpdateCommittee":{"GovAction":[]},"GovAction_NewConstitution":{"GovAction":[]},"GovAction_InfoAction":{"GovAction":[]},"_ProposalProcedure":{"ProposalProcedure":[]},"_ProtocolParamUpdate":{"ProtocolParamUpdate":[]},"_ProtocolVersion":{"ProtocolVersion":[]},"Certificate_StakeRegistrationLegacy":{"Certificate":[]},"Certificate_StakeDeRegistrationLegacy":{"Certificate":[]},"Certificate_StakeDelegation":{"Certificate":[]},"Certificate_PoolRegistration":{"Certificate":[]},"Certificate_PoolRetirement":{"Certificate":[]},"Certificate_StakeRegistration":{"Certificate":[]},"Certificate_StakeDeRegistration":{"Certificate":[]},"Certificate_VoteDelegation":{"Certificate":[]},"Certificate_StakeVoteDelegation":{"Certificate":[]},"Certificate_StakeRegistrationDelegation":{"Certificate":[]},"Certificate_VoteRegistrationDelegation":{"Certificate":[]},"Certificate_StakeVoteRegistrationDelegation":{"Certificate":[]},"Certificate_AuthorizeCommitteeHot":{"Certificate":[]},"Certificate_ResignCommitteeCold":{"Certificate":[]},"Certificate_RegisterDRep":{"Certificate":[]},"Certificate_UnregisterDRep":{"Certificate":[]},"Certificate_UpdateDRep":{"Certificate":[]},"_Credential":{"Credential":[]},"_PoolMetadata":{"PoolMetadata":[]},"_StakePoolId":{"StakePoolId":[]},"_Withdraw":{"Withdraw":[]},"_CardanoTransactionBody":{"CardanoTransactionBody":[]},"_WitnessVKey":{"WitnessVKey":[]},"NativeScript_PubKey":{"NativeScript":[]},"NativeScript_All":{"NativeScript":[]},"NativeScript_Any":{"NativeScript":[]},"NativeScript_AtLeast":{"NativeScript":[]},"NativeScript_RequireTimeAfter":{"NativeScript":[]},"NativeScript_RequireTimeBefore":{"NativeScript":[]},"_WitnessBootstrap":{"WitnessBootstrap":[]},"_PlutusScriptV1":{"PlutusScriptV1":[]},"PlutusData_BigInt":{"PlutusData":[]},"PlutusData_DefiniteBytes":{"PlutusData":[]},"PlutusData_IndefiniteBytes":{"PlutusData":[]},"PlutusData_Constr":{"PlutusData":[]},"PlutusData_List":{"PlutusData":[]},"PlutusData_Map":{"PlutusData":[]},"_ExUnits":{"ExUnits":[]},"Redeemer_PreConway":{"Redeemer":[]},"Redeemer_Conway":{"Redeemer":[]},"_PlutusScriptV2":{"PlutusScriptV2":[]},"_PlutusScriptV3":{"PlutusScriptV3":[]},"ListWithCborType":{"_$ListWithCborType":["1"]},"_ListWithCborType":{"ListWithCborType":["1"],"_$ListWithCborType":["1"]},"_WitnessSet":{"WitnessSet":[]},"_CBORMetadata":{"CBORMetadata":[]},"_Anchor":{"Anchor":[]},"_MultiAsset":{"MultiAsset":[]},"_Asset":{"Asset":[]},"Value_v0":{"Value":[]},"Value_v1":{"Value":[]},"Drep_AddrKeyHash":{"Drep":[]},"Drep_ScriptHash":{"Drep":[]},"Drep_Abstain":{"Drep":[]},"Drep_NoConfidence":{"Drep":[]},"_Nonce":{"Nonce":[]},"_RationalNumber":{"RationalNumber":[]},"_Utxo":{"Utxo":[]},"_CardanoTransaction":{"CardanoTransaction":[]},"_CoseHeaderMap":{"CoseHeaderMap":[]},"_CoseHeaders":{"CoseHeaders":[]},"_CoseProtectedHeaderMap":{"CoseProtectedHeaderMap":[]},"_DataSignature":{"DataSignature":[]},"CardanoValueParseException":{"Error":[]},"TransactionOutputParseException":{"Error":[]},"TransactionBodyParseException":{"Error":[]},"WitnessBootstrapParseException":{"Error":[]},"WitnessPlutusScriptV1ParseException":{"Error":[]},"WitnessPlutusScriptV2ParseException":{"Error":[]},"WitnessPlutusScriptV3ParseException":{"Error":[]},"PlutusDataParseException":{"Error":[]},"ExUnitsParseException":{"Error":[]},"RedeemerParseException":{"Error":[]},"NativeScriptParseException":{"Error":[]},"TransactionParseException":{"Error":[]},"WitnessParseException":{"Error":[]},"SigningAddressNotFoundException":{"Error":[]},"UnexpectedSigningAddressTypeException":{"Error":[]},"SigningAddressNotValidException":{"Error":[]},"CardanoAddressByron":{"CardanoAddress":[]},"CardanoAddressPointer":{"CardanoAddress":[]},"CardanoAddressBase":{"CardanoAddress":[]},"CardanoAddressEnterprise":{"CardanoAddress":[]},"CardanoAddressReward":{"CardanoAddress":[]},"_DRepDerivation":{"DRepDerivation":[]},"_CardanoPubAccount":{"CardanoPubAccount":[]},"CardanoAddressKit":{"Bip32KeyPair":[]},"_DRepDiffInfo":{"DRepDiffInfo":[]},"_ProposalDiffInfo":{"ProposalDiffInfo":[]},"_TxDiff":{"TxDiff":[]},"_TxSigningBundle":{"TxSigningBundle":[]},"_TxSignedBundle":{"TxSignedBundle":[]},"_TxPreparedForSigning":{"TxPreparedForSigning":[]},"_TxAndSignature":{"TxAndSignature":[]},"_VoteInfo":{"VoteInfo":[]},"CardanoWalletImpl":{"CardanoWallet":[]},"WalletTasksWorker":{"Worker":[],"Releasable":[],"WorkerService":[]},"_$WalletTasks$WorkerService":{"WorkerService":[]},"WalletTasksWorkerPool":{"WorkerPool":["WalletTasksWorker"],"Releasable":[],"WorkerService":[],"WorkerPool.W":"WalletTasksWorker"},"_$Deser":{"MarshalingContext":[]},"_$Ser":{"MarshalingContext":[]},"CborCodec":{"Codec":["CborValue","List<int>"],"Codec.S":"CborValue","Codec.T":"List<int>"},"CborDecoder":{"Converter":["List<int>","CborValue"]},"RawSink":{"Sink":["List<int>"]},"RawSinkTagged":{"Sink":["RawValue"]},"CborSink":{"Sink":["RawValueTagged"]},"_ValueBuilder":{"_Builder0":[]},"_ListBuilder":{"_Builder0":[]},"_MapBuilder":{"_Builder0":[]},"_IndefiniteLengthByteBuilder":{"_Builder0":[]},"_IndefiniteLengthStringBuilder":{"_Builder0":[]},"_IndefiniteLengthListBuilder":{"_Builder0":[]},"_IndefiniteLengthMapBuilder":{"_Builder0":[]},"CborEncoder":{"Converter":["CborValue","List<int>"]},"EncodeSink":{"Sink":["List<int>"]},"_BufferEncodeSink":{"EncodeSink":[],"Sink":["List<int>"]},"CborCyclicError":{"Error":[]},"_ArgIndefiniteLength":{"Arg":[]},"_ArgInt":{"Arg":[]},"_ArgBigInt":{"Arg":[]},"CborBytes":{"CborValue":[]},"_CborBytesImpl":{"CborBytes":[],"CborValue":[]},"_CborBytesIndefiniteLengthImpl":{"CborBytes":[],"CborValue":[]},"_CborEncodeIndefiniteLengthBytesImpl":{"CborValue":[]},"_CborEncodeDefiniteLengthBytesImpl":{"CborValue":[]},"_CborBigIntImpl":{"CborBytes":[],"CborInt":[],"CborValue":[]},"_CborFloatImpl":{"CborValue":[]},"_CborDateTimeFloatImpl":{"CborValue":[]},"CborInt":{"CborValue":[]},"CborSmallInt":{"CborInt":[],"CborValue":[]},"_CborSmallIntImpl":{"CborSmallInt":[],"CborInt":[],"CborValue":[]},"_LargeInt":{"CborInt":[],"CborValue":[]},"_CborDateTimeIntImpl":{"CborSmallInt":[],"CborInt":[],"CborValue":[]},"Break":{"CborValue":[]},"CborList":{"List":["CborValue"],"EfficientLengthIterable":["CborValue"],"CborValue":[],"Iterable":["CborValue"]},"_CborListImpl":{"DelegatingList":["CborValue"],"CborList":[],"List":["CborValue"],"_DelegatingIterableBase":["CborValue"],"EfficientLengthIterable":["CborValue"],"Iterable":["CborValue"],"CborValue":[],"_DelegatingIterableBase.E":"CborValue","DelegatingList.E":"CborValue"},"_CborEncodeIndefiniteLengthListImpl":{"CborValue":[]},"_CborEncodeDefiniteLengthListImpl":{"CborValue":[]},"_CborDecimalFractionImpl":{"DelegatingList":["CborValue"],"CborList":[],"List":["CborValue"],"_DelegatingIterableBase":["CborValue"],"EfficientLengthIterable":["CborValue"],"Iterable":["CborValue"],"CborValue":[],"_DelegatingIterableBase.E":"CborValue","DelegatingList.E":"CborValue"},"_CborRationalNumberImpl":{"DelegatingList":["CborValue"],"CborList":[],"List":["CborValue"],"_DelegatingIterableBase":["CborValue"],"EfficientLengthIterable":["CborValue"],"Iterable":["CborValue"],"CborValue":[],"_DelegatingIterableBase.E":"CborValue","DelegatingList.E":"CborValue"},"_CborBigFloatImpl":{"DelegatingList":["CborValue"],"CborList":[],"List":["CborValue"],"_DelegatingIterableBase":["CborValue"],"EfficientLengthIterable":["CborValue"],"Iterable":["CborValue"],"CborValue":[],"_DelegatingIterableBase.E":"CborValue","DelegatingList.E":"CborValue"},"CborMap":{"Map":["CborValue","CborValue"],"CborValue":[]},"_CborMapImpl":{"DelegatingMap":["CborValue","CborValue"],"CborMap":[],"Map":["CborValue","CborValue"],"CborValue":[],"DelegatingMap.K":"CborValue","DelegatingMap.V":"CborValue"},"_CborEncodeIndefiniteLengthMapImpl":{"CborValue":[]},"_CborEncodeDefiniteLengthMapImpl":{"CborValue":[]},"CborBool":{"CborSimpleValue":[],"CborValue":[]},"_CborSimpleValueImpl":{"CborSimpleValue":[],"CborValue":[]},"_CborNullImpl":{"CborSimpleValue":[],"CborValue":[]},"_CborUndefinedImpl":{"CborSimpleValue":[],"CborValue":[]},"_CborBoolImpl":{"CborBool":[],"CborSimpleValue":[],"CborValue":[]},"CborString":{"CborValue":[]},"_CborStringImpl":{"CborString":[],"CborValue":[]},"_CborIndefiniteLengthStringImpl":{"CborString":[],"CborValue":[]},"_CborEncodeIndefiniteLengthStringImpl":{"CborValue":[]},"_CborEncodeDefiniteLengthStringImpl":{"CborValue":[]},"_CborDateTimeStringImpl":{"CborString":[],"CborValue":[]},"_CborUriImpl":{"CborString":[],"CborValue":[]},"_CborBase64Impl":{"CborString":[],"CborValue":[]},"_CborBase64UrlImpl":{"CborString":[],"CborValue":[]},"_CborRegexImpl":{"CborString":[],"CborValue":[]},"_CborMimeImpl":{"CborString":[],"CborValue":[]},"StringCharacters":{"Iterable":["String"],"Iterable.E":"String"},"StringCharacterRange":{"Iterator":["String"]},"DefaultEquality":{"Equality":["1"]},"IterableEquality":{"Equality":["Iterable<1>"]},"ListEquality":{"Equality":["List<1>"]},"_UnorderedEquality":{"Equality":["2"]},"UnorderedIterableEquality":{"_UnorderedEquality":["1","Iterable<1>"],"Equality":["Iterable<1>"],"_UnorderedEquality.E":"1","_UnorderedEquality.T":"Iterable<1>"},"SetEquality":{"_UnorderedEquality":["1","Set<1>"],"Equality":["Set<1>"],"_UnorderedEquality.E":"1","_UnorderedEquality.T":"Set<1>"},"MapEquality":{"Equality":["Map<1,2>"]},"DeepCollectionEquality":{"Equality":["@"]},"UnmodifiableSetView":{"_UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin":["1"],"DelegatingSet":["1"],"UnmodifiableSetMixin":["1"],"Set":["1"],"_DelegatingIterableBase":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_DelegatingIterableBase":{"Iterable":["1"]},"DelegatingList":{"List":["1"],"_DelegatingIterableBase":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"DelegatingSet":{"Set":["1"],"_DelegatingIterableBase":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"_DelegatingIterableBase.E":"1"},"DelegatingMap":{"Map":["1","2"]},"DigestSink":{"Sink":["Digest"]},"Hash":{"Converter":["List<int>","Digest"]},"HashSink":{"Sink":["List<int>"]},"_Sha256":{"Converter":["List<int>","Digest"]},"_Sha32BitSink":{"Sink":["List<int>"]},"_Sha256Sink":{"Sink":["List<int>"]},"EqualUnmodifiableListView":{"UnmodifiableListView":["1"],"ListBase":["1"],"UnmodifiableListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListBase.E":"1","UnmodifiableListMixin.E":"1"},"EqualUnmodifiableSetView":{"UnmodifiableSetView":["1"],"_UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin":["1"],"DelegatingSet":["1"],"UnmodifiableSetMixin":["1"],"Set":["1"],"_DelegatingIterableBase":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"_DelegatingIterableBase.E":"1"},"EqualUnmodifiableMapView":{"UnmodifiableMapView":["1","2"],"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":["1","2"],"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"],"_UnmodifiableMapMixin.K":"1","_UnmodifiableMapMixin.V":"2"},"HexCodec":{"Codec":["List<int>","String"],"Codec.S":"List<int>","Codec.T":"String"},"HexEncoder":{"Converter":["List<int>","String"]},"HexDecoder":{"Converter":["String","List<int>"]},"_Codec16":{"Codec0":[]},"_Codec32":{"Codec0":[]},"_Codec64":{"Codec0":[]},"_FloatParts":{"FloatParts":[]},"_Decoding":{"FloatParts":[]},"_FromDouble":{"FloatParts":[]},"_Nan":{"FloatParts":[]},"_Infinity":{"FloatParts":[]},"_IntInteger":{"Integer":[]},"_BigIntInteger":{"Integer":[]},"ByteList":{"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int"},"AsymmetricKey":{"ByteList":[],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"AsymmetricPublicKey":{"ByteList":[],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"AsymmetricPrivateKey":{"ByteList":[],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Bech32Encoder":{"Encoder":[]},"_Bech32Encoder":{"Converter":["_Bech32","String"]},"_Bech32Decoder":{"Converter":["String","_Bech32"]},"Signature":{"ByteList":[],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int"},"VerifyKey":{"ByteList":[],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int"},"SigningKey":{"ByteList":[],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"SignedMessage":{"ByteList":[],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int"},"_WebChannel":{"Channel":[]},"EntryPointUri":{"Releasable":[]},"_WebWorkerChannel":{"WorkerChannel":[]},"DisconnectedChannel":{"Channel":[]},"InternalLogger":{"Logger":[]},"_NoLogOutput":{"LogOutput":[]},"_DummyPrinter":{"LogPrinter":[]},"_LogAllFilter":{"LogFilter":[]},"CastConverter":{"Converter0":[]},"ContextAwareConverter":{"Converter0":[]},"NumConverter":{"Converter0":[]},"SquadronCanceledException":{"SquadronException":[],"CanceledException":[]},"SquadronCanceledExceptions":{"SquadronCanceledException":[],"SquadronException":[],"CanceledException":[]},"SquadronError":{"SquadronException":[]},"SquadronTimeoutException":{"SquadronCanceledException":[],"SquadronException":[],"CanceledException":[]},"TaskCanceledException":{"SquadronError":[],"SquadronException":[],"CanceledException":[]},"TaskTerminatedException":{"SquadronError":[],"SquadronException":[],"CanceledException":[]},"WorkerException":{"SquadronException":[]},"WorkerValueTask":{"WorkerTask":["1","2"],"ValueTask":["1"]},"WorkerPool":{"Releasable":[],"WorkerService":[]},"CancelationTokenReference":{"SquadronCancelationToken":[],"CancelationToken":[]},"SquadronCancelationToken":{"CancelationToken":[]},"Worker":{"Releasable":[],"WorkerService":[]},"TypedDataBuffer":{"ListBase":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_IntBuffer":{"TypedDataBuffer":["int"],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8Buffer":{"TypedDataBuffer":["int"],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int","TypedDataBuffer.E":"int"}}'));
  A._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"UnmodifiableListBase":1,"__CastListBase__CastIterableBase_ListMixin":2,"NativeTypedArray":1,"_DelayedEvent":1,"UnmodifiableMapBase":2,"_ListWithCborType_Object__$ListWithCborType":1}'));
  var string$ = {
    x00_____: "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u03f6\x00\u0404\u03f4 \u03f4\u03f6\u01f6\u01f6\u03f6\u03fc\u01f4\u03ff\u03ff\u0584\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u05d4\u01f4\x00\u01f4\x00\u0504\u05c4\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u0400\x00\u0400\u0200\u03f7\u0200\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u0200\u0200\u0200\u03f7\x00",
    x10_____: "\x10\x10\b\x04\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x04\x10\x10\x10\x10\x10\x02\x02\x02\x04\x04\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x02\x01\x01\x01\x01\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x02\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x02\x0e\x02\x02\x02\x0e\x0e\x0e\x0e\x02\x02\x10\x02\x10\x04\x10\x04\x04\x02\x10\x10\x10\x02\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x02\x02\x06\x02\x02\x02\x02\x06\x02\x06\x02\x02\x02\x02\x06\x06\x06\x02\x06\x02\x02\x02\x02\x02\x02\x02\x02\x04\x10\x10\x10\x10\x02\x02\x04\x04\x02\x02\x04\x04\x11\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x02\x02\x0e\x0e\x02\x0e\x10\x04\x04\x04\x04\x02\x10\x10\x10\x02\x10\x10\x10\x11\x02\x02\x02\x02\x02\x02\x02\x10\x10\x02\x0e\x0e\x0e\x02\x02\x02\x02\x02\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x0e\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x04\x10\x10\x10\x10\x10\x10\x02\x10\x10\x04\x04\x10\x10\x02\x10\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x04\x04\x04\x04\x04\x04\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x10\x10\x02\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x04\x10\x10\x10\x10\x10\x10\x10\x04\x04\x04\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x02\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x02\x02\x10\x02\x10\x10\x10\x02\x10\x10\x02\x02\x02\x02\x02\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x04\x04\x10\x02\x02\x02\x02\x04\x10\x10\x10\x10\x10\x10\x10\x10\x04\x04\x04\x04\x11\x04\x04\x02\x10\x10\x10\x10\x10\x10\x10\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\f\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\f\r\r\r\r\r\r\r\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\x02\x02\x02\x02\x04\x10\x10\x10\x10\x02\x04\x04\x04\x02\x04\x04\x04\x11\b\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x04\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x01\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x10\x10\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x10\x10\x10\x10\x10\x10\x10\x02\x10\x10\x02\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x02\x02\x02\x10\x10\x10\x10\x10\x10\x01\x01\x01\x01\x01\x01\x01\x01\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x02\x02\x02\x02\x02\x02\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x0e\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\x02\x02\x02\x06\x06\x06\x02\x02\x02\x02\x02\x10\x04\x04\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x04\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\x02\x02\x02\x04\x04\x10\x04\x04\x10\x04\x04\x02\x04\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x02\x02\x02\x02\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x02\x02\x02\x10\x04\x04\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x02\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x02\x0e\x0e\x02\x0e\x0e\x0e\x0e\x0e\x02\x02\x10\x02\x10\x10\x04\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x02\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x02\x0e\x0e\x02\x0e\x0e\x0e\x0e\x0e\x02\x02\x10\x02\x04\x04\x10\x10\x10\x10\x02\x02\x04\x04\x02\x02\x04\x04\x11\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x02\x02\x02\x02\x0e\x0e\x02\x0e\n\n\n\n\n\n\n\x02\x02\x02\x02\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\x10\x10\b\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x10\x10\x10\x10\x10\x10\x10\x02\x10\x10\x10\x10\x10\x10\x04\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x04\x10\x10\x10\x10\x10\x10\x10\x04\x10\x10\x04\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x02\x02\x02\x10\x02\x10\x10\x02\x10\x10\x10\x10\x10\x10\x10\b\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x04\x04\x04\x04\x02\x10\x10\x02\x04\x04\x10\x04\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x04\x04\x04\x04\x04\x02\x04\x04\x02\x02\x10\x10\x10\x10\b\x04\b\x04\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x04\x04\x10\x10\x10\x10\x02\x02\x10\x10\x04\x04\x04\x04\x10\x02\x02\x02\x04\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x06\x06\x06\x06\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x06\x06\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x06\x06\x06\x06\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x02\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\x06\x06\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x07\x01\x01\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x02\x02\x02\x02\x04\x04\x10\x10\x04\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\b\x02\x10\x10\x10\x10\x02\x10\x10\x10\x02\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x04\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x10\x04\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x10\x02\x02\x04\x10\x10\x02\x02\x02\x02\x02\x02\x10\x04\x10\x10\x04\x04\x04\x10\x04\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x01\x03\x0f\x01\x01\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x04\x04\x10\x10\x04\x04\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x01\x01\x01\x01\x01\x01\x01\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x02\x02\x02\x01\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x10\x10\x10\x02\x02\x10\x10\x02\x02\x02\x02\x02\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x0e\x0e\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x04\x10\x10\x02\x02\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x02\x02\x10\x04\x04\x10\x10\x10\x02\x10\x02\x04\x04\x04\x04\x04\x04\x04\x10\x04\x04\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x04\x10\x10\x10\x10\x04\x04\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x04\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x04\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x04\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x04\x04\x10\x10\x10\x10\x10\x10\x10\x10\x10\x04\x10\x02\b\b\x02\x02\x02\x02\x02\x10\x10\x10\x10\x02\x04\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x04\x04\x10\x10\x10\x10\x10\x10\x10\x10\x04\x04\x10\x04\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x04\x10\x04\x04\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x04\x04\x04\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x04\x04\x10\x10\x10\x10\x10\x10\x10\x10\x10\x04\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\b\b\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x04\x04\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x10\x10\x02\x10\x04\x04\x02\x02\x02\x04\x04\x04\x02\x04\x04\x04\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x10\x04\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x04\x04\x10\x10\x10\x10\x04\x04\x10\x10\x04\x04\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x02\x10\x04\x10\x04\x04\x04\x04\x02\x02\x04\x04\x02\x02\x04\x04\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x04\x02\x02\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x04\x04\x10\x10\x10\x10\x10\x10\x02\x10\x02\x02\x10\x02\x10\x10\x10\x04\x02\x04\x04\x10\x10\x10\b\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x04\x10\x10\x02\x02\x02\x02\x10\x10\x02\x02\x10\x10\x10\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\b\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x02\x10\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x04\x04\x04\x04\x10\x10\x04\x04\x04\x02\x02\x02\x02\x04\x04\x10\x04\x04\x04\x04\x04\x04\x10\x10\x10\x02\x02\x02\x02\x10\x10\x10\x04\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x10\x04\x10\x02\x04\x04\x10\x04\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x04\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x04\x04\x10\x10\x10\x10\x04\x04\x10\x10\x02\x02\b\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\b\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x10\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x04\x04\x10\x10\x10\x10\x02\x02\x04\x04\x04\x04\x10\x10\x04\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x04\x10\x02\x02\x10\x10\x10\x10\x04\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x04\x04\x10\x10\x10\x10\x10\x10\x10\x10\x04\x04\x10\x10\x10\x04\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x04\x04\x10\x10\x10\x10\x10\x10\x04\x10\x04\x04\x10\x04\x10\x10\x04\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x04\x04\x10\x10\x10\x04\x04\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x10\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x04\x04\x04\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x06\x06\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x02\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\b\b\b\b\b\b\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x01\x02\x02\x02\x10\x10\x02\x10\x10\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x02\x06\x02\x02\x02\x02\x02\x02\x06\x06\x06\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x02\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x04\b\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x04\x04\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\b\b\b\b\b\b\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x04\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\n\x02\x02\x02\n\n\n\n\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\x06\x02\x06\x02\x02\x02\x02\x02\x02\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\x06\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x10\x02\x10\x02\x02\x02\x02\x04\x04\x04\x04\x04\x04\x04\x04\x10\x10\x10\x10\x10\x10\x10\x10\x04\x04\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x10\x02\x04\x10\x10\x10\x10\x10\x10\x10\x10\x10\x02\x02\x02\x04\x10\x10\x10\x10\x10\x02\x10\x10\x04\x02\x04\x04\x11\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x04\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x04\x10\x10\x04\x04\x02\x02\x02\x02\x02\x04\x10\x02\x02\x02\x02\x02\x02\x02\x02\x02",
    x15_____: "\x15\x01)))\xb5\x8d\x01=Qeyey\xc9)))\xf1\xf0\x15\x01)))\xb5\x8d\x00=Qeyey\xc9)))\xf1\xf0\x15\x01)((\xb5\x8d\x01=Qeyey\xc9(((\xf1\xf0\x15\x01(((\xb4\x8c\x01<Pdxdx\xc8(((\xf1\xf0\x15\x01)((\xb5\x8d\x01=Pdydx\xc9(((\xf1\xf0\x15\x01)((\xb5\x8d\x01=Qdxey\xc9(((\xf1\xf0\x15\x01)((\xb5\x8d\x01=Qexey\xc9(((\xf1\xf0\x15\x01)\x8c(\xb5\x8d\x01=Qeyey\xc9\xa0\x8c\x8c\xf1\xf0\x15\x01)((\xb5\x8c\x01=Qeyey\xc9(((\xf1\xf0\x15\x01)(((\x8d\x01=Qeyey\xc9(((\xf1\xf0\x15\x01)((\xb5\x8d\x01=Qeyey\xc9\xc8\xc8\xdc\xf1\xf0\x15\x01)((\xb5\x8d\x01=Qeyey\xc8\xdc\xdc\xdc\xf1\xf0\x14\x00(((\xb4\x8c\x00<Pdxdx\xc8(((\xf0\xf0\x15\x01)))\xb5\x8d\x01=Qeyey\xc9)))\xf0\xf0\x15\x01(\u01b8(\u01e0\x8d\x01<Pdxdx\xc8\u012c\u0140\u0154\xf0\xf0\x15\x01)((\xb5\u011a\x01=Qeyey\u012e\u0190\u0190\u01a4\xf1\xf0\x15\x01)\u01b8(\xb5\x8d\x01=Qeyey\u012e\u0168\u0140\u0154\xf1\xf0\x15\x01)\u01b8(\xb5\x8d\x01=Qeyey\u0142\u017c\u0154\u0154\xf1\xf0\x15\x01)((\xb5\u011a\x01=Qeyey\xc9\u0190\u0190\u01a4\xf1\xf0\x15\x01)((\xb5\u011a\x01=Qeyey\u0142\u01a4\u01a4\u01a4\xf1\xf0\x15\x01)((\xb5\x8d\x01=Qeyey\u012e\u0190\u0190\u01a4\xf1\xf0\x15\x01)((\xb5\x8d\x01=Qeyey\u0142\u01a4\u01a4\u01a4\xf1\xf0\x15\x01)\u01b8(\xb5\x8d\x01=Qeyey\xc9\u01cc\u01b8\u01b8\xf1\xf0\x15\x01)((\xb5\u011a\x01=Qeyey\xc9(((\xf1\xf0\x15\x01)((\u0156\x8d\x01=Qeyey\xc9(((\xf1\xf0",
    x2c_crit: ", criticality: null, contentType: null, keyId: ",
    x2c_init: ", initVector: null, partialInitVector: null, counterSignature: ",
    ABCDEF: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    Cardan: "CardanoTransactionInput(transactionHash: ",
    Error_: "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a value of the returned future's type",
    GovActE: "GovActionId deserialization failed. Expected a cbor list but got ",
    GovActI: "GovActionId deserialization failed. Invalid number of DataItem(s) : ",
    Regist: "RegisterDRep deserialization failed. Invalid anchor cbor type : ",
    The_po: "The pool cannot accept new requests because it is stopped",
    Voting: "VotingProcedures deserialization failed. Invalid cbor type ",
    u1132_____: "\u1132\u166c\u166c\u206f\u11c0\u13fb\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u1bff\u1bff\u1bff\u1c36\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u1aee\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u1fb5\u059c\u266d\u166c\u264e\u166c\u0a70\u175c\u166c\u166c\u1310\u033a\u1ebd\u0a6b\u2302\u166c\u166c\u22fc\u166c\u1ef8\u269d\u132f\u03b8\u166c\u1be8\u166c\u0a71\u0915\u1f5a\u1f6f\u04a2\u0202\u086b\u021a\u029a\u1427\u1518\u0147\u1eab\u13b9\u089f\u08b6\u2a91\u02d8\u086b\u0882\u08d5\u0789\u176a\u251c\u1d6c\u166c\u0365\u037c\u02ba\u22af\u07bf\u07c3\u0238\u024b\u1d39\u1d4e\u054a\u22af\u07bf\u166c\u1456\u2a9f\u166c\u07ce\u2a61\u166c\u166c\u2a71\u1ae9\u166c\u0466\u2a2e\u166c\u133e\u05b5\u0932\u1766\u166c\u166c\u0304\u1e94\u1ece\u1443\u166c\u166c\u166c\u07ee\u07ee\u07ee\u0506\u0506\u051e\u0526\u0526\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u196b\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u1798\u1657\u046c\u046c\u166c\u0348\u146f\u166c\u0578\u166c\u166c\u166c\u22ac\u1763\u166c\u166c\u166c\u1f3a\u166c\u166c\u166c\u166c\u166c\u166c\u0482\u166c\u1364\u0322\u166c\u0a6b\u1fc6\u166c\u1359\u1f1f\u270e\u1ee3\u200e\u148e\u166c\u1394\u166c\u2a48\u166c\u166c\u166c\u166c\u0588\u137a\u166c\u166c\u166c\u166c\u166c\u166c\u1bff\u1bff\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u13a9\u13e8\u2574\u12b0\u166c\u166c\u0a6b\u1c35\u166c\u076b\u166c\u166c\u25a6\u2a23\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u0747\u2575\u166c\u166c\u2575\u166c\u256e\u07a0\u166c\u166c\u166c\u166c\u166c\u166c\u257b\u166c\u166c\u166c\u166c\u166c\u166c\u0757\u255d\u0c6d\u0d76\u28f0\u28f0\u28f0\u29ea\u28f0\u28f0\u28f0\u2a04\u2a19\u027a\u2693\u2546\u0832\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u074d\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u084c\u166c\u081e\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u165a\u166c\u166c\u166c\u174d\u166c\u166c\u166c\u1bff\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u0261\u166c\u166c\u0465\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u2676\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u26a4\u196a\u166c\u166c\u046e\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u1f13\u12dd\u166c\u166c\u14de\u12ea\u1306\u02f2\u166c\u2a62\u0563\u07f1\u200d\u1d8e\u198c\u1767\u166c\u13d0\u1d80\u1750\u166c\u140b\u176b\u2ab4\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u080e\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04d2\u04d6\u04da\u04c2\u04c6\u04ca\u04ce\u04f6\u08f5\u052a\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u174e\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u1c36\u1c36\u166c\u166c\u166c\u166c\u166c\u206f\u166c\u166c\u166c\u166c\u196a\u166c\u166c\u12c0\u166c\u166f\u168c\u1912\u166c\u166c\u166c\u166c\u166c\u166c\u0399\u166c\u166c\u1786\u2206\u22bc\u1f8e\u1499\u245b\u1daa\u2387\u20b4\u1569\u2197\u19e6\u0b88\u26b7\u166c\u09e9\u0ab8\u1c46\x00\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u205e\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u1868\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u1898\u1ac1\u166c\u2754\u166c\u0114\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166cc\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u1bff\u166c\u0661\u1627\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u0918\u166c\u166c\u166c\u166c\u166c\u05c6\u1ac1\u16be\u166c\u1af8\u21c3\u166c\u166c\u1a21\u1aad\u166c\u166c\u166c\u166c\u166c\u166c\u28f0\u254e\u0d89\u0f41\u28f0\u0efb\u0e39\u27e0\u0c7c\u28a9\u28f0\u166c\u28f0\u28f0\u28f0\u28f2\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u1140\u103c\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u11c0\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c\u166c"
  };
  var type$ = (function rtii() {
    var findType = A.findType;
    return {
      $env_1_1_CardanoAddressKit: findType("@<CardanoAddressKit>"),
      $env_1_1_void: findType("@<~>"),
      AddressType: findType("AddressType"),
      Asset: findType("Asset"),
      AsyncError: findType("AsyncError"),
      Base64Codec: findType("Base64Codec"),
      BigInt: findType("BigInt"),
      Bip32Key: findType("Bip32Key"),
      Bip32KeyPair: findType("Bip32KeyPair"),
      Bip32KeyRole: findType("Bip32KeyRole"),
      Bip32PrivateKey: findType("Bip32PrivateKey"),
      Bip32PublicKey: findType("Bip32PublicKey"),
      Bip32SigningKey: findType("Bip32SigningKey"),
      ByteBuffer: findType("ByteBuffer"),
      ByteData: findType("ByteData"),
      ByteList: findType("ByteList"),
      CancelationTokenReference: findType("CancelationTokenReference"),
      CanceledException: findType("CanceledException"),
      CardanoAddress: findType("CardanoAddress"),
      CardanoAddressKit: findType("CardanoAddressKit"),
      CardanoPubAccount: findType("CardanoPubAccount"),
      CardanoSigner: findType("CardanoSigner"),
      CardanoTransaction: findType("CardanoTransaction"),
      CardanoTransactionInput: findType("CardanoTransactionInput"),
      CardanoTransactionInputs: findType("CardanoTransactionInputs"),
      CardanoTransactionOutput: findType("CardanoTransactionOutput"),
      CardanoWallet: findType("CardanoWallet"),
      CborBytes: findType("CborBytes"),
      CborCodec: findType("CborCodec"),
      CborInt: findType("CborInt"),
      CborList: findType("CborList"),
      CborMap: findType("CborMap"),
      CborSimpleValue: findType("CborSimpleValue"),
      CborSmallInt: findType("CborSmallInt"),
      CborString: findType("CborString"),
      CborValue: findType("CborValue"),
      Certificate: findType("Certificate"),
      Channel: findType("Channel"),
      CodeUnits: findType("CodeUnits"),
      Comparable_dynamic: findType("Comparable<@>"),
      Completer_nullable_int: findType("Completer<int?>"),
      Converter_of_List_int_and_String: findType("Converter<List<int>,String>"),
      CoseSignature: findType("CoseSignature"),
      CredType: findType("CredType"),
      Credential: findType("Credential"),
      CredentialType: findType("CredentialType"),
      DRepDiffInfo: findType("DRepDiffInfo"),
      DataSignature: findType("DataSignature"),
      DateTime: findType("DateTime"),
      Drep: findType("Drep"),
      Duration: findType("Duration"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      EqualUnmodifiableListView_Asset: findType("EqualUnmodifiableListView<Asset>"),
      EqualUnmodifiableListView_CardanoTransactionInput: findType("EqualUnmodifiableListView<CardanoTransactionInput>"),
      EqualUnmodifiableListView_CardanoTransactionOutput: findType("EqualUnmodifiableListView<CardanoTransactionOutput>"),
      EqualUnmodifiableListView_Certificate: findType("EqualUnmodifiableListView<Certificate>"),
      EqualUnmodifiableListView_List_int: findType("EqualUnmodifiableListView<List<int>>"),
      EqualUnmodifiableListView_MultiAsset: findType("EqualUnmodifiableListView<MultiAsset>"),
      EqualUnmodifiableListView_NativeScript: findType("EqualUnmodifiableListView<NativeScript>"),
      EqualUnmodifiableListView_PlutusData: findType("EqualUnmodifiableListView<PlutusData>"),
      EqualUnmodifiableListView_ProposalDiffInfo: findType("EqualUnmodifiableListView<ProposalDiffInfo>"),
      EqualUnmodifiableListView_ProposalProcedure: findType("EqualUnmodifiableListView<ProposalProcedure>"),
      EqualUnmodifiableListView_TxAndSignature: findType("EqualUnmodifiableListView<TxAndSignature>"),
      EqualUnmodifiableListView_TxPreparedForSigning: findType("EqualUnmodifiableListView<TxPreparedForSigning>"),
      EqualUnmodifiableListView_Uint8List: findType("EqualUnmodifiableListView<Uint8List>"),
      EqualUnmodifiableListView_Utxo: findType("EqualUnmodifiableListView<Utxo>"),
      EqualUnmodifiableListView_VoteInfo: findType("EqualUnmodifiableListView<VoteInfo>"),
      EqualUnmodifiableListView_Withdraw: findType("EqualUnmodifiableListView<Withdraw>"),
      EqualUnmodifiableListView_int: findType("EqualUnmodifiableListView<int>"),
      EqualUnmodifiableMapView_Credential_int: findType("EqualUnmodifiableMapView<Credential,int>"),
      EqualUnmodifiableMapView_PlutusData_PlutusData: findType("EqualUnmodifiableMapView<PlutusData,PlutusData>"),
      EqualUnmodifiableMapView_of_Voter_and_Map_GovActionId_VotingProcedure: findType("EqualUnmodifiableMapView<Voter,Map<GovActionId,VotingProcedure>>"),
      EqualUnmodifiableSetView_Credential: findType("EqualUnmodifiableSetView<Credential>"),
      EqualUnmodifiableSetView_String: findType("EqualUnmodifiableSetView<String>"),
      Error: findType("Error"),
      EventBuffer_List_dynamic: findType("EventBuffer<List<@>>"),
      ExceptionManager: findType("ExceptionManager"),
      Float32List: findType("Float32List"),
      Float64List: findType("Float64List"),
      ForwardCompleter_dynamic: findType("ForwardCompleter<@>"),
      ForwardStreamController_dynamic: findType("ForwardStreamController<@>"),
      Function: findType("Function"),
      FutureOr_WorkerService_Function_List_dynamic: findType("WorkerService/(List<@>)"),
      Future_Bip32PublicKey: findType("Future<Bip32PublicKey>"),
      Future_CardanoSigner: findType("Future<CardanoSigner>"),
      Future_WorkerService: findType("Future<WorkerService>"),
      Future_nullable_Channel: findType("Future<Channel?>"),
      GovActionId: findType("GovActionId"),
      HdWallet: findType("HdWallet"),
      HexCodec: findType("HexCodec"),
      Int16List: findType("Int16List"),
      Int32List: findType("Int32List"),
      Int8List: findType("Int8List"),
      IterableEquality_dynamic: findType("IterableEquality<@>"),
      Iterable_SquadronCanceledException: findType("Iterable<SquadronCanceledException>"),
      Iterable_Utxo: findType("Iterable<Utxo>"),
      Iterable_dynamic: findType("Iterable<@>"),
      Iterable_int: findType("Iterable<int>"),
      JSArray_Asset: findType("JSArray<Asset>"),
      JSArray_CborValue: findType("JSArray<CborValue>"),
      JSArray_Future_dynamic: findType("JSArray<Future<@>>"),
      JSArray_Future_void: findType("JSArray<Future<~>>"),
      JSArray_List_Object: findType("JSArray<List<Object>>"),
      JSArray_List_int: findType("JSArray<List<int>>"),
      JSArray_MultiAsset: findType("JSArray<MultiAsset>"),
      JSArray_NativeScript: findType("JSArray<NativeScript>"),
      JSArray_PoolWorker_WalletTasksWorker: findType("JSArray<PoolWorker<WalletTasksWorker>>"),
      JSArray_ProposalDiffInfo: findType("JSArray<ProposalDiffInfo>"),
      JSArray_StreamController_List_dynamic: findType("JSArray<StreamController<List<@>>>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_VoteInfo: findType("JSArray<VoteInfo>"),
      JSArray_WorkerStat: findType("JSArray<WorkerStat>"),
      JSArray_double: findType("JSArray<double>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_CborValue: findType("JSArray<CborValue?>"),
      JSArray_nullable_MapEntry_CborSmallInt_CborValue: findType("JSArray<MapEntry<CborSmallInt,CborValue>?>"),
      JSArray_nullable_MapEntry_CborValue_CborValue: findType("JSArray<MapEntry<CborValue,CborValue>?>"),
      JSArray_nullable_Object: findType("JSArray<Object?>"),
      JSArray_of_void_Function: findType("JSArray<~()>"),
      JSIndexable_dynamic: findType("JSIndexable<@>"),
      JSNull: findType("JSNull"),
      JSObject: findType("JSObject"),
      JavaScriptBigInt: findType("JavaScriptBigInt"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      Lazy_Bip32KeyPair: findType("Lazy<Bip32KeyPair>"),
      Lazy_CardanoDerivedAddress: findType("Lazy<CardanoDerivedAddress>"),
      Lazy_ConstitutionalCommiteeCold: findType("Lazy<ConstitutionalCommiteeCold>"),
      Lazy_ConstitutionalCommiteeHot: findType("Lazy<ConstitutionalCommiteeHot>"),
      Lazy_CredentialType: findType("Lazy<CredentialType>"),
      Lazy_DRepDerivation: findType("Lazy<DRepDerivation>"),
      Lazy_String: findType("Lazy<String>"),
      Lazy_Uint8List: findType("Lazy<Uint8List>"),
      Level: findType("Level"),
      ListEquality_dynamic: findType("ListEquality<@>"),
      ListQueue_WorkerTask_dynamic_Worker: findType("ListQueue<WorkerTask<@,Worker>>"),
      ListWithCborType_NativeScript: findType("ListWithCborType<NativeScript>"),
      ListWithCborType_PlutusData: findType("ListWithCborType<PlutusData>"),
      ListWithCborType_PlutusScriptV1: findType("ListWithCborType<PlutusScriptV1>"),
      ListWithCborType_PlutusScriptV2: findType("ListWithCborType<PlutusScriptV2>"),
      ListWithCborType_PlutusScriptV3: findType("ListWithCborType<PlutusScriptV3>"),
      ListWithCborType_Redeemer: findType("ListWithCborType<Redeemer>"),
      ListWithCborType_WitnessBootstrap: findType("ListWithCborType<WitnessBootstrap>"),
      ListWithCborType_WitnessVKey: findType("ListWithCborType<WitnessVKey>"),
      List_Asset: findType("List<Asset>"),
      List_Bip32PublicKey: findType("List<Bip32PublicKey>"),
      List_CardanoTransaction: findType("List<CardanoTransaction>"),
      List_CborValue: findType("List<CborValue>"),
      List_CoseSignature: findType("List<CoseSignature>"),
      List_ProposalProcedure: findType("List<ProposalProcedure>"),
      List_String: findType("List<String>"),
      List_Uint8List: findType("List<Uint8List>"),
      List_Utxo: findType("List<Utxo>"),
      List_VoteInfo: findType("List<VoteInfo>"),
      List_dynamic: findType("List<@>"),
      List_int: findType("List<int>"),
      List_nullable_BigInt: findType("List<BigInt?>"),
      List_nullable_String: findType("List<String?>"),
      List_nullable_bool: findType("List<bool?>"),
      List_nullable_num: findType("List<num?>"),
      MapEntry_CborSmallInt_CborBytes: findType("MapEntry<CborSmallInt,CborBytes>"),
      MapEntry_CborSmallInt_CborInt: findType("MapEntry<CborSmallInt,CborInt>"),
      MapEntry_CborSmallInt_CborSmallInt: findType("MapEntry<CborSmallInt,CborSmallInt>"),
      MapEntry_CborSmallInt_CborValue: findType("MapEntry<CborSmallInt,CborValue>"),
      MapEntry_CborString_CborBool: findType("MapEntry<CborString,CborBool>"),
      MapEntry_CborValue_CborInt: findType("MapEntry<CborValue,CborInt>"),
      MapEntry_CborValue_CborList: findType("MapEntry<CborValue,CborList>"),
      MapEntry_CborValue_CborMap: findType("MapEntry<CborValue,CborMap>"),
      MapEntry_CborValue_CborValue: findType("MapEntry<CborValue,CborValue>"),
      MapEntry_Credential_int: findType("MapEntry<Credential,int>"),
      MapEntry_GovActionId_VotingProcedure: findType("MapEntry<GovActionId,VotingProcedure>"),
      MapEntry_PlutusData_PlutusData: findType("MapEntry<PlutusData,PlutusData>"),
      MapEntry_int_CborValue: findType("MapEntry<int,CborValue>"),
      MapEntry_of_String_and_nullable_Object: findType("MapEntry<String,Object?>"),
      MapEntry_of_Voter_and_Map_GovActionId_VotingProcedure: findType("MapEntry<Voter,Map<GovActionId,VotingProcedure>>"),
      MapEquality_dynamic_dynamic: findType("MapEquality<@,@>"),
      Map_GovActionId_VotingProcedure: findType("Map<GovActionId,VotingProcedure>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      Map_of_dynamic_and_nullable_BigInt: findType("Map<@,BigInt?>"),
      Map_of_dynamic_and_nullable_String: findType("Map<@,String?>"),
      Map_of_dynamic_and_nullable_bool: findType("Map<@,bool?>"),
      Map_of_dynamic_and_nullable_num: findType("Map<@,num?>"),
      Map_of_nullable_BigInt_and_dynamic: findType("Map<BigInt?,@>"),
      Map_of_nullable_String_and_dynamic: findType("Map<String?,@>"),
      Map_of_nullable_bool_and_dynamic: findType("Map<bool?,@>"),
      Map_of_nullable_num_and_dynamic: findType("Map<num?,@>"),
      MappedListIterable_String_dynamic: findType("MappedListIterable<String,@>"),
      MappedListIterable_String_int: findType("MappedListIterable<String,int>"),
      MultiAsset: findType("MultiAsset"),
      NativeScript: findType("NativeScript"),
      NativeTypedArrayOfInt: findType("NativeTypedArrayOfInt"),
      NativeTypedData: findType("NativeTypedData"),
      NativeUint8List: findType("NativeUint8List"),
      NetworkId: findType("NetworkId"),
      NonNullsIterable_Credential: findType("NonNullsIterable<Credential>"),
      NonNullsIterable_DRepDiffInfo: findType("NonNullsIterable<DRepDiffInfo>"),
      NonNullsIterable_Drep: findType("NonNullsIterable<Drep>"),
      NonNullsIterable_List_ProposalDiffInfo: findType("NonNullsIterable<List<ProposalDiffInfo>>"),
      NonNullsIterable_List_VoteInfo: findType("NonNullsIterable<List<VoteInfo>>"),
      NonNullsIterable_MapEntry_CborSmallInt_CborValue: findType("NonNullsIterable<MapEntry<CborSmallInt,CborValue>>"),
      NonNullsIterable_StakePoolId: findType("NonNullsIterable<StakePoolId>"),
      NonNullsIterable_String: findType("NonNullsIterable<String>"),
      NonNullsIterable_Utxo: findType("NonNullsIterable<Utxo>"),
      NonNullsIterable_bool: findType("NonNullsIterable<bool>"),
      Nonce: findType("Nonce"),
      Null: findType("Null"),
      Object: findType("Object"),
      OutputDatum: findType("OutputDatum"),
      OutputEvent: findType("OutputEvent"),
      Pattern: findType("Pattern"),
      PlutusData: findType("PlutusData"),
      PlutusScriptV1: findType("PlutusScriptV1"),
      PlutusScriptV2: findType("PlutusScriptV2"),
      PlutusScriptV3: findType("PlutusScriptV3"),
      PoolWorker_Worker: findType("PoolWorker<Worker>"),
      ProposalDiffInfo: findType("ProposalDiffInfo"),
      ProposalProcedure: findType("ProposalProcedure"),
      ProtocolVersion: findType("ProtocolVersion"),
      RationalNumber: findType("RationalNumber"),
      Record: findType("Record"),
      Record_0: findType("+()"),
      Redeemer: findType("Redeemer"),
      RedeemerTag: findType("RedeemerTag"),
      RegExpMatch: findType("RegExpMatch"),
      RequiredSigners: findType("RequiredSigners"),
      ReversedListIterable_String: findType("ReversedListIterable<String>"),
      Runes: findType("Runes"),
      SetEquality_dynamic: findType("SetEquality<@>"),
      Set_Bip32KeyPair: findType("Set<Bip32KeyPair>"),
      Set_Object: findType("Set<Object>"),
      Set_String: findType("Set<String>"),
      Set_dynamic: findType("Set<@>"),
      Set_nullable_BigInt: findType("Set<BigInt?>"),
      Set_nullable_String: findType("Set<String?>"),
      Set_nullable_bool: findType("Set<bool?>"),
      Set_nullable_num: findType("Set<num?>"),
      Sink_CborValue: findType("Sink<CborValue>"),
      Sink_Digest: findType("Sink<Digest>"),
      SquadronCancelationToken: findType("SquadronCancelationToken"),
      SquadronCanceledException: findType("SquadronCanceledException"),
      SquadronError: findType("SquadronError"),
      SquadronException: findType("SquadronException"),
      StackTrace: findType("StackTrace"),
      StakePoolId: findType("StakePoolId"),
      StreamController_List_dynamic: findType("StreamController<List<@>>"),
      String: findType("String"),
      TrustedGetRuntimeType: findType("TrustedGetRuntimeType"),
      TxAndSignature: findType("TxAndSignature"),
      TxPreparedForSigning: findType("TxPreparedForSigning"),
      TxSignedBundle: findType("TxSignedBundle"),
      TxSigningBundle: findType("TxSigningBundle"),
      TypeError: findType("TypeError"),
      TypedData: findType("TypedData"),
      Uint16List: findType("Uint16List"),
      Uint32List: findType("Uint32List"),
      Uint8ClampedList: findType("Uint8ClampedList"),
      Uint8List: findType("Uint8List"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      UnmodifiableListView_NativeScript: findType("UnmodifiableListView<NativeScript>"),
      UnmodifiableListView_PlutusData: findType("UnmodifiableListView<PlutusData>"),
      UnmodifiableListView_PlutusScriptV1: findType("UnmodifiableListView<PlutusScriptV1>"),
      UnmodifiableListView_PlutusScriptV2: findType("UnmodifiableListView<PlutusScriptV2>"),
      UnmodifiableListView_PlutusScriptV3: findType("UnmodifiableListView<PlutusScriptV3>"),
      UnmodifiableListView_Redeemer: findType("UnmodifiableListView<Redeemer>"),
      UnmodifiableListView_WitnessBootstrap: findType("UnmodifiableListView<WitnessBootstrap>"),
      UnmodifiableListView_WitnessVKey: findType("UnmodifiableListView<WitnessVKey>"),
      UnorderedIterableEquality_dynamic: findType("UnorderedIterableEquality<@>"),
      Uri: findType("Uri"),
      Utxo: findType("Utxo"),
      Value: findType("Value"),
      ValueTask_CardanoAddressKit: findType("ValueTask<CardanoAddressKit>"),
      Vote: findType("Vote"),
      VoteInfo: findType("VoteInfo"),
      Voter: findType("Voter"),
      VoterType: findType("VoterType"),
      VotingProcedure: findType("VotingProcedure"),
      VotingProcedures: findType("VotingProcedures"),
      WalletTasksWorker: findType("WalletTasksWorker"),
      WhereIterable_Level: findType("WhereIterable<Level>"),
      WhereTypeIterable_CborValue: findType("WhereTypeIterable<CborValue>"),
      WhereTypeIterable_MapEntry_CborValue_CborValue: findType("WhereTypeIterable<MapEntry<CborValue,CborValue>>"),
      Withdraw: findType("Withdraw"),
      WitnessBootstrap: findType("WitnessBootstrap"),
      WitnessVKey: findType("WitnessVKey"),
      WorkerService: findType("WorkerService"),
      WorkerTask_dynamic_Worker: findType("WorkerTask<@,Worker>"),
      _AsyncCompleter_CanceledException: findType("_AsyncCompleter<CanceledException>"),
      _AsyncCompleter_CardanoAddressKit: findType("_AsyncCompleter<CardanoAddressKit>"),
      _AsyncCompleter_SquadronCanceledException: findType("_AsyncCompleter<SquadronCanceledException>"),
      _AsyncCompleter__WebChannel: findType("_AsyncCompleter<_WebChannel>"),
      _AsyncCompleter_bool: findType("_AsyncCompleter<bool>"),
      _AsyncCompleter_dynamic: findType("_AsyncCompleter<@>"),
      _AsyncCompleter_void: findType("_AsyncCompleter<~>"),
      _Bech32: findType("_Bech32"),
      _BigIntImpl: findType("_BigIntImpl"),
      _Future_CanceledException: findType("_Future<CanceledException>"),
      _Future_CardanoAddressKit: findType("_Future<CardanoAddressKit>"),
      _Future_SquadronCanceledException: findType("_Future<SquadronCanceledException>"),
      _Future__WebChannel: findType("_Future<_WebChannel>"),
      _Future_bool: findType("_Future<bool>"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_int: findType("_Future<int>"),
      _Future_void: findType("_Future<~>"),
      _IdentityHashMap_of_nullable_Object_and_nullable_Object: findType("_IdentityHashMap<Object?,Object?>"),
      _ListWithCborType_NativeScript: findType("_ListWithCborType<NativeScript>"),
      _ListWithCborType_PlutusData: findType("_ListWithCborType<PlutusData>"),
      _ListWithCborType_PlutusScriptV1: findType("_ListWithCborType<PlutusScriptV1>"),
      _ListWithCborType_PlutusScriptV2: findType("_ListWithCborType<PlutusScriptV2>"),
      _ListWithCborType_PlutusScriptV3: findType("_ListWithCborType<PlutusScriptV3>"),
      _ListWithCborType_Redeemer: findType("_ListWithCborType<Redeemer>"),
      _ListWithCborType_WitnessBootstrap: findType("_ListWithCborType<WitnessBootstrap>"),
      _ListWithCborType_WitnessVKey: findType("_ListWithCborType<WitnessVKey>"),
      _MapEntry: findType("_MapEntry"),
      _SimpleCallbackSink_CborValue: findType("_SimpleCallbackSink<CborValue>"),
      _StreamControllerAddStreamState_nullable_Object: findType("_StreamControllerAddStreamState<Object?>"),
      _WebChannel: findType("_WebChannel"),
      __$AssetCopyWithImpl__Asset: findType("__$AssetCopyWithImpl<_Asset>"),
      __$MultiAssetCopyWithImpl__MultiAsset: findType("__$MultiAssetCopyWithImpl<_MultiAsset>"),
      bool: findType("bool"),
      bool_Function_Level: findType("bool(Level)"),
      bool_Function_Object: findType("bool(Object)"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function: findType("@()"),
      dynamic_Function_List_dynamic: findType("@(List<@>)"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      dynamic_Function_String: findType("@(String)"),
      int: findType("int"),
      int_Function_String: findType("int(String)"),
      nullable_CborInt: findType("CborInt?"),
      nullable_CborList: findType("CborList?"),
      nullable_Channel: findType("Channel?"),
      nullable_Credential: findType("Credential?"),
      nullable_DRepDiffInfo: findType("DRepDiffInfo?"),
      nullable_Drep: findType("Drep?"),
      nullable_FutureOr_bool: findType("bool/?"),
      nullable_Future_Null: findType("Future<Null>?"),
      nullable_JSObject: findType("JSObject?"),
      nullable_List_dynamic: findType("List<@>?"),
      nullable_Object: findType("Object?"),
      nullable_SquadronCancelationToken: findType("SquadronCancelationToken?"),
      nullable_SquadronException: findType("SquadronException?"),
      nullable_StackTrace: findType("StackTrace?"),
      nullable_StakePoolId: findType("StakePoolId?"),
      nullable_String: findType("String?"),
      nullable_Uint8List: findType("Uint8List?"),
      nullable_Utxo: findType("Utxo?"),
      nullable_WorkerChannel: findType("WorkerChannel?"),
      nullable_WorkerTask_dynamic_Worker: findType("WorkerTask<@,Worker>?"),
      nullable__DelayedEvent_dynamic: findType("_DelayedEvent<@>?"),
      nullable__FutureListener_dynamic_dynamic: findType("_FutureListener<@,@>?"),
      nullable__LinkedHashSetCell: findType("_LinkedHashSetCell?"),
      nullable_bool: findType("bool?"),
      nullable_double: findType("double?"),
      nullable_int: findType("int?"),
      nullable_num: findType("num?"),
      nullable_void_Function: findType("~()?"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_List_dynamic: findType("~(List<@>)"),
      void_Function_Object: findType("~(Object)"),
      void_Function_Object_$opt_nullable_StackTrace: findType("~(Object[StackTrace?])"),
      void_Function_Object_StackTrace: findType("~(Object,StackTrace)"),
      void_Function_String_dynamic: findType("~(String,@)"),
      void_Function_WorkerStat_bool: findType("~(WorkerStat,bool)"),
      void_Function_dynamic: findType("~(@)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    B.Interceptor_methods = J.Interceptor.prototype;
    B.JSArray_methods = J.JSArray.prototype;
    B.JSInt_methods = J.JSInt.prototype;
    B.JSNumber_methods = J.JSNumber.prototype;
    B.JSString_methods = J.JSString.prototype;
    B.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    B.JavaScriptObject_methods = J.JavaScriptObject.prototype;
    B.NativeFloat32List_methods = A.NativeFloat32List.prototype;
    B.NativeFloat64List_methods = A.NativeFloat64List.prototype;
    B.NativeUint16List_methods = A.NativeUint16List.prototype;
    B.NativeUint32List_methods = A.NativeUint32List.prototype;
    B.NativeUint8List_methods = A.NativeUint8List.prototype;
    B.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    B.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    B.AddressType_0 = new A.AddressType(0, "base");
    B.AddressType_1 = new A.AddressType(1, "pointer");
    B.AddressType_2 = new A.AddressType(2, "enterprise");
    B.AddressType_3 = new A.AddressType(3, "reward");
    B.AddressType_4 = new A.AddressType(4, "byron");
    B.Base64Encoder_false = new A.Base64Encoder(false);
    B.Base64Codec_Base64Encoder_false = new A.Base64Codec(B.Base64Encoder_false);
    B.Base64Encoder_true = new A.Base64Encoder(true);
    B.Base64Codec_Base64Encoder_true = new A.Base64Codec(B.Base64Encoder_true);
    B.Bech32Encoder_pool = new A.Bech32Encoder("pool");
    B.Bip32KeyRole_0_0_payment = new A.Bip32KeyRole(0, 0, "payment");
    B.Bip32KeyRole_1_1_change = new A.Bip32KeyRole(1, 1, "change");
    B.Bip32KeyRole_2_2_staking = new A.Bip32KeyRole(2, 2, "staking");
    B.Bip32KeyRole_3_3_drepCredential = new A.Bip32KeyRole(3, 3, "drepCredential");
    B.CONSTANT0 = new A.Instantiation1(A.asset___$identity$closure(), A.findType("Instantiation1<_Asset>"));
    B.CONSTANT = new A.Instantiation1(A.asset___$identity$closure(), A.findType("Instantiation1<_MultiAsset>"));
    B.C_Bip32Ed25519KeyDerivation = new A.Bip32Ed25519KeyDerivation();
    B.List_empty = makeConstList([], type$.JSArray_int);
    B.C_Break = new A.Break();
    B.C_CastConverter = new A.CastConverter();
    B.C_CborDecoder = new A.CborDecoder();
    B.C_CborEncoder = new A.CborEncoder();
    B.C_DefaultEquality = new A.DefaultEquality(A.findType("DefaultEquality<0&>"));
    B.C_EmptyIterator = new A.EmptyIterator(A.findType("EmptyIterator<0&>"));
    B.C_Endian = new A.Endian();
    B.C_Endian0 = new A.Endian();
    B.C_GovAction_InfoAction = new A.GovAction_InfoAction();
    B.C_HexCodec = new A.HexCodec();
    B.C_HexDecoder = new A.HexDecoder();
    B.C_IntegerDivisionByZeroException = new A.IntegerDivisionByZeroException();
    B.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    B.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof HTMLElement == "function";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    B.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var userAgent = navigator.userAgent;
    if (typeof userAgent != "string") return hooks;
    if (userAgent.indexOf("DumpRenderTree") >= 0) return hooks;
    if (userAgent.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    B.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    B.C_JS_CONST5 = function(hooks) {
  if (typeof navigator != "object") return hooks;
  var userAgent = navigator.userAgent;
  if (typeof userAgent != "string") return hooks;
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    B.C_JS_CONST4 = function(hooks) {
  if (typeof navigator != "object") return hooks;
  var userAgent = navigator.userAgent;
  if (typeof userAgent != "string") return hooks;
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    B.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    B.C_JS_CONST3 = function(hooks) { return hooks; }
;
    B.C_JsonCodec = new A.JsonCodec();
    B.C_NumConverter = new A.NumConverter();
    B.C_OutOfMemoryError = new A.OutOfMemoryError();
    B.C_SentinelValue = new A.SentinelValue();
    B.C_Utf8Codec = new A.Utf8Codec();
    B.C_Utf8Encoder = new A.Utf8Encoder();
    B.C__ArgIndefiniteLength = new A._ArgIndefiniteLength();
    B.C__DelayedDone = new A._DelayedDone();
    B.C__Nan = new A._Nan();
    B.C__RootZone = new A._RootZone();
    B.C__Sha256 = new A._Sha256();
    B.CborDeserializationException_rXJ = new A.CborDeserializationException("Certificate deserialization failed. Deprecated type : 5");
    B.CborDeserializationException_rXJ0 = new A.CborDeserializationException("Certificate deserialization failed. Deprecated type : 6");
    B.CborFloatPrecision_0 = new A.CborFloatPrecision(0, "automatic");
    B.CborLengthType_0 = new A.CborLengthType(0, "definite");
    B.CborLengthType_1 = new A.CborLengthType(1, "indefinite");
    B.CborLengthType_2 = new A.CborLengthType(2, "auto");
    B.ConcurrencySettings_1_10_4 = new A.ConcurrencySettings(1, 10, 4);
    B.ConcurrencySettings_2_2_2 = new A.ConcurrencySettings(2, 2, 2);
    B.CredentialType_0 = new A.CredentialType(0, "key");
    B.CredentialType_1 = new A.CredentialType(1, "script");
    B.DeepCollectionEquality_false = new A.DeepCollectionEquality(false);
    B.DeepCollectionEquality_true = new A.DeepCollectionEquality(true);
    B.Duration_0 = new A.Duration(0);
    B.GovKeyType_0_0_ccHot = new A.GovKeyType(0, 0, "ccHot");
    B.GovKeyType_16_1_ccCold = new A.GovKeyType(16, 1, "ccCold");
    B.HexEncoder_false = new A.HexEncoder(false);
    B.HexEncoder_true = new A.HexEncoder(true);
    B.JsonBytesEncoding_0 = new A.JsonBytesEncoding(0, "base64Url");
    B.JsonBytesEncoding_1 = new A.JsonBytesEncoding(1, "base64");
    B.JsonBytesEncoding_2 = new A.JsonBytesEncoding(2, "base16");
    B.JsonDecoder_null = new A.JsonDecoder(null);
    B.JsonEncoder_null_null = new A.JsonEncoder(null, null);
    B.Level_0_0_all = new A.Level(0, 0, "all");
    B.Level_10000_10_off = new A.Level(10000, 10, "off");
    B.Level_1000_2_trace = new A.Level(1000, 2, "trace");
    B.Level_2000_3_debug = new A.Level(2000, 3, "debug");
    B.Level_5000_6_error = new A.Level(5000, 6, "error");
    B.Level_9999_9_nothing = new A.Level(9999, 9, "nothing");
    B.ListEquality_DefaultEquality0 = new A.ListEquality(B.C_DefaultEquality, A.findType("ListEquality<int>"));
    B.ListEquality_DefaultEquality = new A.ListEquality(B.C_DefaultEquality, type$.ListEquality_dynamic);
    B.Bip32KeyRole_4_4_constitutionalCommitteeCold = new A.Bip32KeyRole(4, 4, "constitutionalCommitteeCold");
    B.Bip32KeyRole_5_5_constitutionalCommitteeHot = new A.Bip32KeyRole(5, 5, "constitutionalCommitteeHot");
    B.List_0lP = makeConstList([B.Bip32KeyRole_0_0_payment, B.Bip32KeyRole_1_1_change, B.Bip32KeyRole_2_2_staking, B.Bip32KeyRole_3_3_drepCredential, B.Bip32KeyRole_4_4_constitutionalCommitteeCold, B.Bip32KeyRole_5_5_constitutionalCommitteeHot], A.findType("JSArray<Bip32KeyRole>"));
    B.List_30 = makeConstList([30], type$.JSArray_int);
    B.List_4i6 = makeConstList([""], type$.JSArray_String);
    B.List_CredentialType_0_CredentialType_1 = makeConstList([B.CredentialType_0, B.CredentialType_1], A.findType("JSArray<CredentialType>"));
    B.VoterType_fvK = new A.VoterType(0, 0, "CONSTITUTIONAL_COMMITTEE_HOT_KEY_HASH");
    B.VoterType_Vfc = new A.VoterType(1, 1, "CONSTITUTIONAL_COMMITTEE_HOT_SCRIPT_HASH");
    B.VoterType_2_2_DREP_KEY_HASH = new A.VoterType(2, 2, "DREP_KEY_HASH");
    B.VoterType_3_3_DREP_SCRIPT_HASH = new A.VoterType(3, 3, "DREP_SCRIPT_HASH");
    B.VoterType_4_4_STAKING_POOL_KEY_HASH = new A.VoterType(4, 4, "STAKING_POOL_KEY_HASH");
    B.List_F7U = makeConstList([B.VoterType_fvK, B.VoterType_Vfc, B.VoterType_2_2_DREP_KEY_HASH, B.VoterType_3_3_DREP_SCRIPT_HASH, B.VoterType_4_4_STAKING_POOL_KEY_HASH], A.findType("JSArray<VoterType>"));
    B.List_H5O = makeConstList([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], type$.JSArray_int);
    B.List_INy = makeConstList([1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591], type$.JSArray_int);
    B.List_JAW = makeConstList([237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249, 222, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16], type$.JSArray_int);
    B.List_KbT = makeConstList([996825010, 642813549, 513874426, 1027748829, 705979059], type$.JSArray_int);
    B.List_L78 = makeConstList([92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92], type$.JSArray_int);
    B.CredType_0_0_ADDR_KEY_HASH = new A.CredType(0, 0, "ADDR_KEY_HASH");
    B.CredType_1_1_SCRIPT_HASH = new A.CredType(1, 1, "SCRIPT_HASH");
    B.List_V7i = makeConstList([B.CredType_0_0_ADDR_KEY_HASH, B.CredType_1_1_SCRIPT_HASH], A.findType("JSArray<CredType>"));
    B.NetworkId_0_0_testnet = new A.NetworkId(0, 0, "testnet");
    B.NetworkId_1_1_mainnet = new A.NetworkId(1, 1, "mainnet");
    B.List_W6V = makeConstList([B.NetworkId_0_0_testnet, B.NetworkId_1_1_mainnet], A.findType("JSArray<NetworkId>"));
    B.List_d43 = makeConstList([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3], type$.JSArray_int);
    B.List_dBO = makeConstList([54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54], type$.JSArray_int);
    B.List_empty0 = makeConstList([], type$.JSArray_MultiAsset);
    B.List_empty2 = makeConstList([], type$.JSArray_String);
    B.List_empty1 = makeConstList([], type$.JSArray_dynamic);
    B.List_j2A = makeConstList([4089235720, 1779033703, 2227873595, 3144134277, 4271175723, 1013904242, 1595750129, 2773480762, 2917565137, 1359893119, 725511199, 2600822924, 4215389547, 528734635, 327033209, 1541459225], type$.JSArray_int);
    B.Level_999_1_verbose = new A.Level(999, 1, "verbose");
    B.Level_3000_4_info = new A.Level(3000, 4, "info");
    B.Level_4000_5_warning = new A.Level(4000, 5, "warning");
    B.Level_5999_7_wtf = new A.Level(5999, 7, "wtf");
    B.Level_6000_8_fatal = new A.Level(6000, 8, "fatal");
    B.List_jnT = makeConstList([B.Level_0_0_all, B.Level_999_1_verbose, B.Level_1000_2_trace, B.Level_2000_3_debug, B.Level_3000_4_info, B.Level_4000_5_warning, B.Level_5000_6_error, B.Level_5999_7_wtf, B.Level_6000_8_fatal, B.Level_9999_9_nothing, B.Level_10000_10_off], A.findType("JSArray<Level>"));
    B.Vote_0_0_no = new A.Vote(0, 0, "no");
    B.Vote_1_1_yes = new A.Vote(1, 1, "yes");
    B.Vote_2_2_abstain = new A.Vote(2, 2, "abstain");
    B.List_nAW = makeConstList([B.Vote_0_0_no, B.Vote_1_1_yes, B.Vote_2_2_abstain], A.findType("JSArray<Vote>"));
    B.List_rlN = makeConstList(["abandon", "ability", "able", "about", "above", "absent", "absorb", "abstract", "absurd", "abuse", "access", "accident", "account", "accuse", "achieve", "acid", "acoustic", "acquire", "across", "act", "action", "actor", "actress", "actual", "adapt", "add", "addict", "address", "adjust", "admit", "adult", "advance", "advice", "aerobic", "affair", "afford", "afraid", "again", "age", "agent", "agree", "ahead", "aim", "air", "airport", "aisle", "alarm", "album", "alcohol", "alert", "alien", "all", "alley", "allow", "almost", "alone", "alpha", "already", "also", "alter", "always", "amateur", "amazing", "among", "amount", "amused", "analyst", "anchor", "ancient", "anger", "angle", "angry", "animal", "ankle", "announce", "annual", "another", "answer", "antenna", "antique", "anxiety", "any", "apart", "apology", "appear", "apple", "approve", "april", "arch", "arctic", "area", "arena", "argue", "arm", "armed", "armor", "army", "around", "arrange", "arrest", "arrive", "arrow", "art", "artefact", "artist", "artwork", "ask", "aspect", "assault", "asset", "assist", "assume", "asthma", "athlete", "atom", "attack", "attend", "attitude", "attract", "auction", "audit", "august", "aunt", "author", "auto", "autumn", "average", "avocado", "avoid", "awake", "aware", "away", "awesome", "awful", "awkward", "axis", "baby", "bachelor", "bacon", "badge", "bag", "balance", "balcony", "ball", "bamboo", "banana", "banner", "bar", "barely", "bargain", "barrel", "base", "basic", "basket", "battle", "beach", "bean", "beauty", "because", "become", "beef", "before", "begin", "behave", "behind", "believe", "below", "belt", "bench", "benefit", "best", "betray", "better", "between", "beyond", "bicycle", "bid", "bike", "bind", "biology", "bird", "birth", "bitter", "black", "blade", "blame", "blanket", "blast", "bleak", "bless", "blind", "blood", "blossom", "blouse", "blue", "blur", "blush", "board", "boat", "body", "boil", "bomb", "bone", "bonus", "book", "boost", "border", "boring", "borrow", "boss", "bottom", "bounce", "box", "boy", "bracket", "brain", "brand", "brass", "brave", "bread", "breeze", "brick", "bridge", "brief", "bright", "bring", "brisk", "broccoli", "broken", "bronze", "broom", "brother", "brown", "brush", "bubble", "buddy", "budget", "buffalo", "build", "bulb", "bulk", "bullet", "bundle", "bunker", "burden", "burger", "burst", "bus", "business", "busy", "butter", "buyer", "buzz", "cabbage", "cabin", "cable", "cactus", "cage", "cake", "call", "calm", "camera", "camp", "can", "canal", "cancel", "candy", "cannon", "canoe", "canvas", "canyon", "capable", "capital", "captain", "car", "carbon", "card", "cargo", "carpet", "carry", "cart", "case", "cash", "casino", "castle", "casual", "cat", "catalog", "catch", "category", "cattle", "caught", "cause", "caution", "cave", "ceiling", "celery", "cement", "census", "century", "cereal", "certain", "chair", "chalk", "champion", "change", "chaos", "chapter", "charge", "chase", "chat", "cheap", "check", "cheese", "chef", "cherry", "chest", "chicken", "chief", "child", "chimney", "choice", "choose", "chronic", "chuckle", "chunk", "churn", "cigar", "cinnamon", "circle", "citizen", "city", "civil", "claim", "clap", "clarify", "claw", "clay", "clean", "clerk", "clever", "click", "client", "cliff", "climb", "clinic", "clip", "clock", "clog", "close", "cloth", "cloud", "clown", "club", "clump", "cluster", "clutch", "coach", "coast", "coconut", "code", "coffee", "coil", "coin", "collect", "color", "column", "combine", "come", "comfort", "comic", "common", "company", "concert", "conduct", "confirm", "congress", "connect", "consider", "control", "convince", "cook", "cool", "copper", "copy", "coral", "core", "corn", "correct", "cost", "cotton", "couch", "country", "couple", "course", "cousin", "cover", "coyote", "crack", "cradle", "craft", "cram", "crane", "crash", "crater", "crawl", "crazy", "cream", "credit", "creek", "crew", "cricket", "crime", "crisp", "critic", "crop", "cross", "crouch", "crowd", "crucial", "cruel", "cruise", "crumble", "crunch", "crush", "cry", "crystal", "cube", "culture", "cup", "cupboard", "curious", "current", "curtain", "curve", "cushion", "custom", "cute", "cycle", "dad", "damage", "damp", "dance", "danger", "daring", "dash", "daughter", "dawn", "day", "deal", "debate", "debris", "decade", "december", "decide", "decline", "decorate", "decrease", "deer", "defense", "define", "defy", "degree", "delay", "deliver", "demand", "demise", "denial", "dentist", "deny", "depart", "depend", "deposit", "depth", "deputy", "derive", "describe", "desert", "design", "desk", "despair", "destroy", "detail", "detect", "develop", "device", "devote", "diagram", "dial", "diamond", "diary", "dice", "diesel", "diet", "differ", "digital", "dignity", "dilemma", "dinner", "dinosaur", "direct", "dirt", "disagree", "discover", "disease", "dish", "dismiss", "disorder", "display", "distance", "divert", "divide", "divorce", "dizzy", "doctor", "document", "dog", "doll", "dolphin", "domain", "donate", "donkey", "donor", "door", "dose", "double", "dove", "draft", "dragon", "drama", "drastic", "draw", "dream", "dress", "drift", "drill", "drink", "drip", "drive", "drop", "drum", "dry", "duck", "dumb", "dune", "during", "dust", "dutch", "duty", "dwarf", "dynamic", "eager", "eagle", "early", "earn", "earth", "easily", "east", "easy", "echo", "ecology", "economy", "edge", "edit", "educate", "effort", "egg", "eight", "either", "elbow", "elder", "electric", "elegant", "element", "elephant", "elevator", "elite", "else", "embark", "embody", "embrace", "emerge", "emotion", "employ", "empower", "empty", "enable", "enact", "end", "endless", "endorse", "enemy", "energy", "enforce", "engage", "engine", "enhance", "enjoy", "enlist", "enough", "enrich", "enroll", "ensure", "enter", "entire", "entry", "envelope", "episode", "equal", "equip", "era", "erase", "erode", "erosion", "error", "erupt", "escape", "essay", "essence", "estate", "eternal", "ethics", "evidence", "evil", "evoke", "evolve", "exact", "example", "excess", "exchange", "excite", "exclude", "excuse", "execute", "exercise", "exhaust", "exhibit", "exile", "exist", "exit", "exotic", "expand", "expect", "expire", "explain", "expose", "express", "extend", "extra", "eye", "eyebrow", "fabric", "face", "faculty", "fade", "faint", "faith", "fall", "false", "fame", "family", "famous", "fan", "fancy", "fantasy", "farm", "fashion", "fat", "fatal", "father", "fatigue", "fault", "favorite", "feature", "february", "federal", "fee", "feed", "feel", "female", "fence", "festival", "fetch", "fever", "few", "fiber", "fiction", "field", "figure", "file", "film", "filter", "final", "find", "fine", "finger", "finish", "fire", "firm", "first", "fiscal", "fish", "fit", "fitness", "fix", "flag", "flame", "flash", "flat", "flavor", "flee", "flight", "flip", "float", "flock", "floor", "flower", "fluid", "flush", "fly", "foam", "focus", "fog", "foil", "fold", "follow", "food", "foot", "force", "forest", "forget", "fork", "fortune", "forum", "forward", "fossil", "foster", "found", "fox", "fragile", "frame", "frequent", "fresh", "friend", "fringe", "frog", "front", "frost", "frown", "frozen", "fruit", "fuel", "fun", "funny", "furnace", "fury", "future", "gadget", "gain", "galaxy", "gallery", "game", "gap", "garage", "garbage", "garden", "garlic", "garment", "gas", "gasp", "gate", "gather", "gauge", "gaze", "general", "genius", "genre", "gentle", "genuine", "gesture", "ghost", "giant", "gift", "giggle", "ginger", "giraffe", "girl", "give", "glad", "glance", "glare", "glass", "glide", "glimpse", "globe", "gloom", "glory", "glove", "glow", "glue", "goat", "goddess", "gold", "good", "goose", "gorilla", "gospel", "gossip", "govern", "gown", "grab", "grace", "grain", "grant", "grape", "grass", "gravity", "great", "green", "grid", "grief", "grit", "grocery", "group", "grow", "grunt", "guard", "guess", "guide", "guilt", "guitar", "gun", "gym", "habit", "hair", "half", "hammer", "hamster", "hand", "happy", "harbor", "hard", "harsh", "harvest", "hat", "have", "hawk", "hazard", "head", "health", "heart", "heavy", "hedgehog", "height", "hello", "helmet", "help", "hen", "hero", "hidden", "high", "hill", "hint", "hip", "hire", "history", "hobby", "hockey", "hold", "hole", "holiday", "hollow", "home", "honey", "hood", "hope", "horn", "horror", "horse", "hospital", "host", "hotel", "hour", "hover", "hub", "huge", "human", "humble", "humor", "hundred", "hungry", "hunt", "hurdle", "hurry", "hurt", "husband", "hybrid", "ice", "icon", "idea", "identify", "idle", "ignore", "ill", "illegal", "illness", "image", "imitate", "immense", "immune", "impact", "impose", "improve", "impulse", "inch", "include", "income", "increase", "index", "indicate", "indoor", "industry", "infant", "inflict", "inform", "inhale", "inherit", "initial", "inject", "injury", "inmate", "inner", "innocent", "input", "inquiry", "insane", "insect", "inside", "inspire", "install", "intact", "interest", "into", "invest", "invite", "involve", "iron", "island", "isolate", "issue", "item", "ivory", "jacket", "jaguar", "jar", "jazz", "jealous", "jeans", "jelly", "jewel", "job", "join", "joke", "journey", "joy", "judge", "juice", "jump", "jungle", "junior", "junk", "just", "kangaroo", "keen", "keep", "ketchup", "key", "kick", "kid", "kidney", "kind", "kingdom", "kiss", "kit", "kitchen", "kite", "kitten", "kiwi", "knee", "knife", "knock", "know", "lab", "label", "labor", "ladder", "lady", "lake", "lamp", "language", "laptop", "large", "later", "latin", "laugh", "laundry", "lava", "law", "lawn", "lawsuit", "layer", "lazy", "leader", "leaf", "learn", "leave", "lecture", "left", "leg", "legal", "legend", "leisure", "lemon", "lend", "length", "lens", "leopard", "lesson", "letter", "level", "liar", "liberty", "library", "license", "life", "lift", "light", "like", "limb", "limit", "link", "lion", "liquid", "list", "little", "live", "lizard", "load", "loan", "lobster", "local", "lock", "logic", "lonely", "long", "loop", "lottery", "loud", "lounge", "love", "loyal", "lucky", "luggage", "lumber", "lunar", "lunch", "luxury", "lyrics", "machine", "mad", "magic", "magnet", "maid", "mail", "main", "major", "make", "mammal", "man", "manage", "mandate", "mango", "mansion", "manual", "maple", "marble", "march", "margin", "marine", "market", "marriage", "mask", "mass", "master", "match", "material", "math", "matrix", "matter", "maximum", "maze", "meadow", "mean", "measure", "meat", "mechanic", "medal", "media", "melody", "melt", "member", "memory", "mention", "menu", "mercy", "merge", "merit", "merry", "mesh", "message", "metal", "method", "middle", "midnight", "milk", "million", "mimic", "mind", "minimum", "minor", "minute", "miracle", "mirror", "misery", "miss", "mistake", "mix", "mixed", "mixture", "mobile", "model", "modify", "mom", "moment", "monitor", "monkey", "monster", "month", "moon", "moral", "more", "morning", "mosquito", "mother", "motion", "motor", "mountain", "mouse", "move", "movie", "much", "muffin", "mule", "multiply", "muscle", "museum", "mushroom", "music", "must", "mutual", "myself", "mystery", "myth", "naive", "name", "napkin", "narrow", "nasty", "nation", "nature", "near", "neck", "need", "negative", "neglect", "neither", "nephew", "nerve", "nest", "net", "network", "neutral", "never", "news", "next", "nice", "night", "noble", "noise", "nominee", "noodle", "normal", "north", "nose", "notable", "note", "nothing", "notice", "novel", "now", "nuclear", "number", "nurse", "nut", "oak", "obey", "object", "oblige", "obscure", "observe", "obtain", "obvious", "occur", "ocean", "october", "odor", "off", "offer", "office", "often", "oil", "okay", "old", "olive", "olympic", "omit", "once", "one", "onion", "online", "only", "open", "opera", "opinion", "oppose", "option", "orange", "orbit", "orchard", "order", "ordinary", "organ", "orient", "original", "orphan", "ostrich", "other", "outdoor", "outer", "output", "outside", "oval", "oven", "over", "own", "owner", "oxygen", "oyster", "ozone", "pact", "paddle", "page", "pair", "palace", "palm", "panda", "panel", "panic", "panther", "paper", "parade", "parent", "park", "parrot", "party", "pass", "patch", "path", "patient", "patrol", "pattern", "pause", "pave", "payment", "peace", "peanut", "pear", "peasant", "pelican", "pen", "penalty", "pencil", "people", "pepper", "perfect", "permit", "person", "pet", "phone", "photo", "phrase", "physical", "piano", "picnic", "picture", "piece", "pig", "pigeon", "pill", "pilot", "pink", "pioneer", "pipe", "pistol", "pitch", "pizza", "place", "planet", "plastic", "plate", "play", "please", "pledge", "pluck", "plug", "plunge", "poem", "poet", "point", "polar", "pole", "police", "pond", "pony", "pool", "popular", "portion", "position", "possible", "post", "potato", "pottery", "poverty", "powder", "power", "practice", "praise", "predict", "prefer", "prepare", "present", "pretty", "prevent", "price", "pride", "primary", "print", "priority", "prison", "private", "prize", "problem", "process", "produce", "profit", "program", "project", "promote", "proof", "property", "prosper", "protect", "proud", "provide", "public", "pudding", "pull", "pulp", "pulse", "pumpkin", "punch", "pupil", "puppy", "purchase", "purity", "purpose", "purse", "push", "put", "puzzle", "pyramid", "quality", "quantum", "quarter", "question", "quick", "quit", "quiz", "quote", "rabbit", "raccoon", "race", "rack", "radar", "radio", "rail", "rain", "raise", "rally", "ramp", "ranch", "random", "range", "rapid", "rare", "rate", "rather", "raven", "raw", "razor", "ready", "real", "reason", "rebel", "rebuild", "recall", "receive", "recipe", "record", "recycle", "reduce", "reflect", "reform", "refuse", "region", "regret", "regular", "reject", "relax", "release", "relief", "rely", "remain", "remember", "remind", "remove", "render", "renew", "rent", "reopen", "repair", "repeat", "replace", "report", "require", "rescue", "resemble", "resist", "resource", "response", "result", "retire", "retreat", "return", "reunion", "reveal", "review", "reward", "rhythm", "rib", "ribbon", "rice", "rich", "ride", "ridge", "rifle", "right", "rigid", "ring", "riot", "ripple", "risk", "ritual", "rival", "river", "road", "roast", "robot", "robust", "rocket", "romance", "roof", "rookie", "room", "rose", "rotate", "rough", "round", "route", "royal", "rubber", "rude", "rug", "rule", "run", "runway", "rural", "sad", "saddle", "sadness", "safe", "sail", "salad", "salmon", "salon", "salt", "salute", "same", "sample", "sand", "satisfy", "satoshi", "sauce", "sausage", "save", "say", "scale", "scan", "scare", "scatter", "scene", "scheme", "school", "science", "scissors", "scorpion", "scout", "scrap", "screen", "script", "scrub", "sea", "search", "season", "seat", "second", "secret", "section", "security", "seed", "seek", "segment", "select", "sell", "seminar", "senior", "sense", "sentence", "series", "service", "session", "settle", "setup", "seven", "shadow", "shaft", "shallow", "share", "shed", "shell", "sheriff", "shield", "shift", "shine", "ship", "shiver", "shock", "shoe", "shoot", "shop", "short", "shoulder", "shove", "shrimp", "shrug", "shuffle", "shy", "sibling", "sick", "side", "siege", "sight", "sign", "silent", "silk", "silly", "silver", "similar", "simple", "since", "sing", "siren", "sister", "situate", "six", "size", "skate", "sketch", "ski", "skill", "skin", "skirt", "skull", "slab", "slam", "sleep", "slender", "slice", "slide", "slight", "slim", "slogan", "slot", "slow", "slush", "small", "smart", "smile", "smoke", "smooth", "snack", "snake", "snap", "sniff", "snow", "soap", "soccer", "social", "sock", "soda", "soft", "solar", "soldier", "solid", "solution", "solve", "someone", "song", "soon", "sorry", "sort", "soul", "sound", "soup", "source", "south", "space", "spare", "spatial", "spawn", "speak", "special", "speed", "spell", "spend", "sphere", "spice", "spider", "spike", "spin", "spirit", "split", "spoil", "sponsor", "spoon", "sport", "spot", "spray", "spread", "spring", "spy", "square", "squeeze", "squirrel", "stable", "stadium", "staff", "stage", "stairs", "stamp", "stand", "start", "state", "stay", "steak", "steel", "stem", "step", "stereo", "stick", "still", "sting", "stock", "stomach", "stone", "stool", "story", "stove", "strategy", "street", "strike", "strong", "struggle", "student", "stuff", "stumble", "style", "subject", "submit", "subway", "success", "such", "sudden", "suffer", "sugar", "suggest", "suit", "summer", "sun", "sunny", "sunset", "super", "supply", "supreme", "sure", "surface", "surge", "surprise", "surround", "survey", "suspect", "sustain", "swallow", "swamp", "swap", "swarm", "swear", "sweet", "swift", "swim", "swing", "switch", "sword", "symbol", "symptom", "syrup", "system", "table", "tackle", "tag", "tail", "talent", "talk", "tank", "tape", "target", "task", "taste", "tattoo", "taxi", "teach", "team", "tell", "ten", "tenant", "tennis", "tent", "term", "test", "text", "thank", "that", "theme", "then", "theory", "there", "they", "thing", "this", "thought", "three", "thrive", "throw", "thumb", "thunder", "ticket", "tide", "tiger", "tilt", "timber", "time", "tiny", "tip", "tired", "tissue", "title", "toast", "tobacco", "today", "toddler", "toe", "together", "toilet", "token", "tomato", "tomorrow", "tone", "tongue", "tonight", "tool", "tooth", "top", "topic", "topple", "torch", "tornado", "tortoise", "toss", "total", "tourist", "toward", "tower", "town", "toy", "track", "trade", "traffic", "tragic", "train", "transfer", "trap", "trash", "travel", "tray", "treat", "tree", "trend", "trial", "tribe", "trick", "trigger", "trim", "trip", "trophy", "trouble", "truck", "true", "truly", "trumpet", "trust", "truth", "try", "tube", "tuition", "tumble", "tuna", "tunnel", "turkey", "turn", "turtle", "twelve", "twenty", "twice", "twin", "twist", "two", "type", "typical", "ugly", "umbrella", "unable", "unaware", "uncle", "uncover", "under", "undo", "unfair", "unfold", "unhappy", "uniform", "unique", "unit", "universe", "unknown", "unlock", "until", "unusual", "unveil", "update", "upgrade", "uphold", "upon", "upper", "upset", "urban", "urge", "usage", "use", "used", "useful", "useless", "usual", "utility", "vacant", "vacuum", "vague", "valid", "valley", "valve", "van", "vanish", "vapor", "various", "vast", "vault", "vehicle", "velvet", "vendor", "venture", "venue", "verb", "verify", "version", "very", "vessel", "veteran", "viable", "vibrant", "vicious", "victory", "video", "view", "village", "vintage", "violin", "virtual", "virus", "visa", "visit", "visual", "vital", "vivid", "vocal", "voice", "void", "volcano", "volume", "vote", "voyage", "wage", "wagon", "wait", "walk", "wall", "walnut", "want", "warfare", "warm", "warrior", "wash", "wasp", "waste", "water", "wave", "way", "wealth", "weapon", "wear", "weasel", "weather", "web", "wedding", "weekend", "weird", "welcome", "west", "wet", "whale", "what", "wheat", "wheel", "when", "where", "whip", "whisper", "wide", "width", "wife", "wild", "will", "win", "window", "wine", "wing", "wink", "winner", "winter", "wire", "wisdom", "wise", "wish", "witness", "wolf", "woman", "wonder", "wood", "wool", "word", "work", "world", "worry", "worth", "wrap", "wreck", "wrestle", "wrist", "write", "wrong", "yard", "year", "yellow", "you", "young", "youth", "zebra", "zero", "zone", "zoo"], type$.JSArray_String);
    B.RedeemerTag_0_0_spend = new A.RedeemerTag(0, 0, "spend");
    B.RedeemerTag_1_1_mint = new A.RedeemerTag(1, 1, "mint");
    B.RedeemerTag_2_2_cert = new A.RedeemerTag(2, 2, "cert");
    B.RedeemerTag_3_3_reward = new A.RedeemerTag(3, 3, "reward");
    B.RedeemerTag_4_4_voting = new A.RedeemerTag(4, 4, "voting");
    B.RedeemerTag_5_5_proposing = new A.RedeemerTag(5, 5, "proposing");
    B.List_unh = makeConstList([B.RedeemerTag_0_0_spend, B.RedeemerTag_1_1_mint, B.RedeemerTag_2_2_cert, B.RedeemerTag_3_3_reward, B.RedeemerTag_4_4_voting, B.RedeemerTag_5_5_proposing], A.findType("JSArray<RedeemerTag>"));
    B.List_y4T = makeConstList(["q", "p", "z", "r", "y", "9", "x", "8", "g", "f", "2", "t", "v", "d", "w", "0", "s", "3", "j", "n", "5", "4", "k", "h", "c", "e", "6", "m", "u", "a", "7", "l"], type$.JSArray_String);
    B.Map_XuhWz = new A.GeneralConstantMap([B.AddressType_0, "base", B.AddressType_1, "pointer", B.AddressType_2, "enterprise", B.AddressType_3, "reward", B.AddressType_4, "byron"], A.findType("GeneralConstantMap<AddressType,String>"));
    B.Operation_0 = new A.Operation(0, "add");
    B.Operation_1 = new A.Operation(1, "subtract");
    B.Record3_Vc5 = new A._Record_3_addr_keyCred_scriptCred("stake", "stake_vkh", "stake_vkh");
    B.Record3_rtd = new A._Record_3_addr_keyCred_scriptCred("addr", "addr_vkh", "addr_shared_vkh");
    B.SigContext_1_signature1 = new A.SigContext(1, "signature1");
    B.SquadronPlatformType_JavaScript_2_js = new A.SquadronPlatformType("JavaScript", 2, "js");
    B.SquadronPlatformType_wmw = new A.SquadronPlatformType("Web Assembly", 3, "wasm");
    B.StringCharacters_GVp = new A.StringCharacters("");
    B.Type_ByteBuffer_rqD = A.typeLiteral("ByteBuffer");
    B.Type_ByteData_9dB = A.typeLiteral("ByteData");
    B.Type_Float32List_9Kz = A.typeLiteral("Float32List");
    B.Type_Float64List_9Kz = A.typeLiteral("Float64List");
    B.Type_Int16List_s5h = A.typeLiteral("Int16List");
    B.Type_Int32List_O8Z = A.typeLiteral("Int32List");
    B.Type_Int8List_rFV = A.typeLiteral("Int8List");
    B.Type_JSObject_ttY = A.typeLiteral("JSObject");
    B.Type_Object_A4p = A.typeLiteral("Object");
    B.Type_Uint16List_kmP = A.typeLiteral("Uint16List");
    B.Type_Uint32List_kmP = A.typeLiteral("Uint32List");
    B.Type_Uint8ClampedList_04U = A.typeLiteral("Uint8ClampedList");
    B.Type_Uint8List_8Eb = A.typeLiteral("Uint8List");
    B.Type_double_JIQ = A.typeLiteral("double");
    B.Type_int_T7V = A.typeLiteral("int");
    B.Utf8Decoder_false = new A.Utf8Decoder(false);
    B.Utf8Decoder_true = new A.Utf8Decoder(true);
    B._ArgInt_2 = new A._ArgInt(2);
    B._CborBoolImpl_true_21_List_empty = new A._CborBoolImpl(true, 21, B.List_empty);
    B._CborNullImpl_22_List_empty = new A._CborNullImpl(22, B.List_empty);
    B._CborSmallIntImpl_0_List_empty = new A._CborSmallIntImpl(0, B.List_empty);
    B._CborSmallIntImpl_10_List_empty = new A._CborSmallIntImpl(10, B.List_empty);
    B._CborSmallIntImpl_11_List_empty = new A._CborSmallIntImpl(11, B.List_empty);
    B._CborSmallIntImpl_12_List_empty = new A._CborSmallIntImpl(12, B.List_empty);
    B._CborSmallIntImpl_13_List_empty = new A._CborSmallIntImpl(13, B.List_empty);
    B._CborSmallIntImpl_14_List_empty = new A._CborSmallIntImpl(14, B.List_empty);
    B._CborSmallIntImpl_15_List_empty = new A._CborSmallIntImpl(15, B.List_empty);
    B._CborSmallIntImpl_16_List_empty = new A._CborSmallIntImpl(16, B.List_empty);
    B._CborSmallIntImpl_17_List_empty = new A._CborSmallIntImpl(17, B.List_empty);
    B._CborSmallIntImpl_18_List_empty = new A._CborSmallIntImpl(18, B.List_empty);
    B._CborSmallIntImpl_19_List_empty = new A._CborSmallIntImpl(19, B.List_empty);
    B._CborSmallIntImpl_1_List_empty = new A._CborSmallIntImpl(1, B.List_empty);
    B._CborSmallIntImpl_20_List_empty = new A._CborSmallIntImpl(20, B.List_empty);
    B._CborSmallIntImpl_21_List_empty = new A._CborSmallIntImpl(21, B.List_empty);
    B._CborSmallIntImpl_22_List_empty = new A._CborSmallIntImpl(22, B.List_empty);
    B._CborSmallIntImpl_23_List_empty = new A._CborSmallIntImpl(23, B.List_empty);
    B._CborSmallIntImpl_24_List_empty = new A._CborSmallIntImpl(24, B.List_empty);
    B._CborSmallIntImpl_2_List_empty = new A._CborSmallIntImpl(2, B.List_empty);
    B._CborSmallIntImpl_3_List_empty = new A._CborSmallIntImpl(3, B.List_empty);
    B._CborSmallIntImpl_4_List_empty = new A._CborSmallIntImpl(4, B.List_empty);
    B._CborSmallIntImpl_5_List_empty = new A._CborSmallIntImpl(5, B.List_empty);
    B._CborSmallIntImpl_6_List_empty = new A._CborSmallIntImpl(6, B.List_empty);
    B._CborSmallIntImpl_7_List_empty = new A._CborSmallIntImpl(7, B.List_empty);
    B._CborSmallIntImpl_8_List_empty = new A._CborSmallIntImpl(8, B.List_empty);
    B._CborSmallIntImpl_9_List_empty = new A._CborSmallIntImpl(9, B.List_empty);
    B._CborSmallIntImpl_m1_List_empty = new A._CborSmallIntImpl(-1, B.List_empty);
    B._CborSmallIntImpl_m2_List_empty = new A._CborSmallIntImpl(-2, B.List_empty);
    B._CborSmallIntImpl_m8_List_empty = new A._CborSmallIntImpl(-8, B.List_empty);
    B._Codec16_10_5 = new A._Codec16(10, 5);
    B._Codec32_23_8 = new A._Codec32(23, 8);
    B._Codec64_52_11 = new A._Codec64(52, 11);
    B._Infinity_false = new A._Infinity(false);
    B._Infinity_true = new A._Infinity(true);
    B._Nonce_null = new A._Nonce(null);
    B._StringStackTrace_OdL = new A._StringStackTrace("");
  })();
  (function staticFields() {
    $._JS_INTEROP_INTERCEPTOR_TAG = null;
    $.toStringVisiting = A._setArrayType([], A.findType("JSArray<Object>"));
    $.Primitives__identityHashCodeProperty = null;
    $.BoundClosure__receiverFieldNameCache = null;
    $.BoundClosure__interceptorFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._Record__computedFieldKeys = A._setArrayType([], A.findType("JSArray<List<Object>?>"));
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = B.C__RootZone;
    $._BigIntImpl__lastDividendDigits = null;
    $._BigIntImpl__lastDividendUsed = null;
    $._BigIntImpl__lastDivisorDigits = null;
    $._BigIntImpl__lastDivisorUsed = null;
    $._BigIntImpl____lastQuoRemDigits = A._Cell$named("_lastQuoRemDigits");
    $._BigIntImpl____lastQuoRemUsed = A._Cell$named("_lastQuoRemUsed");
    $._BigIntImpl____lastRemUsed = A._Cell$named("_lastRemUsed");
    $._BigIntImpl____lastRem_nsh = A._Cell$named("_lastRem_nsh");
    $.Logger__logCallbacks = A.LinkedHashSet_LinkedHashSet$_empty(A.findType("~(LogEvent)"));
    $.Logger__outputCallbacks = A.LinkedHashSet_LinkedHashSet$_empty(A.findType("~(OutputEvent)"));
    $.builtinExceptions = A.LinkedHashMap_LinkedHashMap$_literal(["$C", A.squadron_canceled_exception__SquadronCanceledExceptionExt_deserialize$closure(), "$T", A.squadron_timeout_exception__SquadronTimeoutExceptionExt_deserialize$closure(), "$C*", A.squadron_canceled_exceptions__SquadronCanceledExceptionsExt_deserialize$closure(), "$C1", A.task_canceled_exception__TaskCanceledExceptionExt_deserialize$closure(), "$K", A.task_terminated_exception__TaskTerminatedExceptionExt_deserialize$closure(), "$!", A.squadron_error__SquadronErrorImpl_deserialize$closure(), "$#", A.worker_exception__WorkerExceptionImpl_deserialize$closure()], type$.String, A.findType("SquadronException?(List<@>)"));
    $.ReleasableTracker__releasables = A.LinkedHashSet_LinkedHashSet$_empty(A.findType("Releasable"));
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal,
      _lazy = hunkHelpers.lazy;
    _lazyFinal($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", () => A.getIsolateAffinityTag("_$dart_dartClosure"));
    _lazyFinal($, "nullFuture", "$get$nullFuture", () => B.C__RootZone.run$1$1(new A.nullFuture_closure(), A.findType("Future<~>")));
    _lazyFinal($, "_safeToStringHooks", "$get$_safeToStringHooks", () => A._setArrayType([new J.JSArraySafeToStringHook()], A.findType("JSArray<SafeToStringHook>")));
    _lazyFinal($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", () => A._AsyncRun__initializeScheduleImmediate());
    _lazyFinal($, "Future__nullFuture", "$get$Future__nullFuture", () => $.$get$nullFuture());
    _lazyFinal($, "_Utf8Decoder__reusableBuffer", "$get$_Utf8Decoder__reusableBuffer", () => A.NativeUint8List_NativeUint8List(4096));
    _lazyFinal($, "_Utf8Decoder__decoder", "$get$_Utf8Decoder__decoder", () => new A._Utf8Decoder__decoder_closure().call$0());
    _lazyFinal($, "_Utf8Decoder__decoderNonfatal", "$get$_Utf8Decoder__decoderNonfatal", () => new A._Utf8Decoder__decoderNonfatal_closure().call$0());
    _lazyFinal($, "_Base64Decoder__inverseAlphabet", "$get$_Base64Decoder__inverseAlphabet", () => A.NativeInt8List__create1(A._ensureNativeList(A._setArrayType([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, 62, -2, 62, -2, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -2, -2, -2, -1, -2, -2, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -2, -2, -2, -2, 63, -2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -2, -2, -2, -2, -2], type$.JSArray_int))));
    _lazyFinal($, "_BigIntImpl_zero", "$get$_BigIntImpl_zero", () => A._BigIntImpl__BigIntImpl$_fromInt(0));
    _lazyFinal($, "_BigIntImpl_one", "$get$_BigIntImpl_one", () => A._BigIntImpl__BigIntImpl$_fromInt(1));
    _lazyFinal($, "_BigIntImpl_two", "$get$_BigIntImpl_two", () => A._BigIntImpl__BigIntImpl$_fromInt(2));
    _lazyFinal($, "_BigIntImpl__minusOne", "$get$_BigIntImpl__minusOne", () => $.$get$_BigIntImpl_one().$negate(0));
    _lazyFinal($, "_BigIntImpl__bigInt10000", "$get$_BigIntImpl__bigInt10000", () => A._BigIntImpl__BigIntImpl$_fromInt(10000));
    _lazy($, "_BigIntImpl__parseRE", "$get$_BigIntImpl__parseRE", () => A.RegExp_RegExp("^\\s*([+-]?)((0x[a-f0-9]+)|(\\d+)|([a-z0-9]+))\\s*$", false));
    _lazyFinal($, "_BigIntImpl__bitsForFromDouble", "$get$_BigIntImpl__bitsForFromDouble", () => A.NativeUint8List_NativeUint8List(8));
    _lazyFinal($, "_hashSeed", "$get$_hashSeed", () => A.objectHashCode(B.Type_Object_A4p));
    _lazyFinal($, "Endian_host", "$get$Endian_host", () => A.ByteData_ByteData$view(B.NativeUint16List_methods.get$buffer(A.NativeUint16List__create1(A._ensureNativeList(A._setArrayType([1], type$.JSArray_int)))), 0).getInt8(0) === 1 ? B.C_Endian0 : B.C_Endian);
    _lazyFinal($, "CardanoPubAccountFactory_instanceSync", "$get$CardanoPubAccountFactory_instanceSync", () => new A._CardanoPubAccountSyncFactory(B.C_Bip32Ed25519KeyDerivation.get$ckdPub()));
    _lazyFinal($, "cardanoWorker", "$get$cardanoWorker", () => {
      var t1 = A.WalletTasksWorkerPool$(B.ConcurrencySettings_1_10_4);
      t1.start$0();
      return t1;
    });
    _lazy($, "support64", "$get$support64", () => false);
    _lazy($, "BTCAlphabet", "$get$BTCAlphabet", () => A.Alphabet$("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"));
    _lazyFinal($, "Integer_zero", "$get$Integer_zero", () => A._IntInteger$(0));
    _lazyFinal($, "Integer_one", "$get$Integer_one", () => A._IntInteger$(1));
    _lazyFinal($, "hostEndian", "$get$hostEndian", () => A.ByteData_ByteData$view(B.NativeFloat32List_methods.get$buffer(A.NativeFloat32List_NativeFloat32List$fromList(A._setArrayType([1], type$.JSArray_double))), 0).getInt8(0) === 0 ? B.C_Endian0 : B.C_Endian);
    _lazyFinal($, "Blake2b__sigma82", "$get$Blake2b__sigma82", () => A.NativeUint8List_NativeUint8List$fromList(B.JSArray_methods.map$1$1(B.List_d43, new A.Blake2b__sigma82_closure(), type$.int).toList$0(0)));
    _lazyFinal($, "TweetNaCl__gf0", "$get$TweetNaCl__gf0", () => A.NativeInt32List_NativeInt32List$fromList(A._setArrayType([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], type$.JSArray_int)));
    _lazyFinal($, "TweetNaCl__gf1", "$get$TweetNaCl__gf1", () => A.NativeInt32List_NativeInt32List$fromList(A._setArrayType([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], type$.JSArray_int)));
    _lazyFinal($, "TweetNaCl__D", "$get$TweetNaCl__D", () => A.NativeInt32List_NativeInt32List$fromList(A._setArrayType([30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585, 16505, 36039, 65139, 11119, 27886, 20995], type$.JSArray_int)));
    _lazyFinal($, "TweetNaCl__D2", "$get$TweetNaCl__D2", () => A.NativeInt32List_NativeInt32List$fromList(A._setArrayType([61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171, 33010, 6542, 64743, 22239, 55772, 9222], type$.JSArray_int)));
    _lazyFinal($, "TweetNaCl__X", "$get$TweetNaCl__X", () => A.NativeInt32List_NativeInt32List$fromList(A._setArrayType([54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982, 57905, 49316, 21502, 52590, 14035, 8553], type$.JSArray_int)));
    _lazyFinal($, "TweetNaCl__Y", "$get$TweetNaCl__Y", () => A.NativeInt32List_NativeInt32List$fromList(A._setArrayType([26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214], type$.JSArray_int)));
    _lazyFinal($, "TweetNaCl__I", "$get$TweetNaCl__I", () => A.NativeInt32List_NativeInt32List$fromList(A._setArrayType([41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207, 15867, 153, 11085, 57099, 20417, 9344, 11139], type$.JSArray_int)));
    _lazyFinal($, "_$JSProps_message", "$get$_$JSProps_message", () => "message");
    _lazyFinal($, "_$JSProps_error", "$get$_$JSProps_error", () => "error");
    _lazyFinal($, "_$JSProps_data", "$get$_$JSProps_data", () => "data");
    _lazyFinal($, "_$JSProps_next", "$get$_$JSProps_next", () => "next");
    _lazyFinal($, "_$JSProps_done", "$get$_$JSProps_done", () => "done");
    _lazyFinal($, "_$JSProps_value", "$get$_$JSProps_value", () => "value");
    _lazyFinal($, "UriChecker__headers", "$get$UriChecker__headers", () => {
      var t1 = type$.String;
      return A.NullableObjectUtilExtension_jsify(A.LinkedHashMap_LinkedHashMap$_literal(["method", "HEAD"], t1, t1));
    });
    _lazyFinal($, "_latestUPDEpoch", "$get$_latestUPDEpoch", () => {
      var t1 = A.Primitives_valueFromDecomposedDate(2020, 2, 2, 0, 0, 0, 0, 0, true);
      if (t1 == null)
        t1 = 864e14;
      if (t1 === 864e14)
        A.throwExpression(A.ArgumentError$("(2020, 2, 2, 0, 0, 0, 0, 0)", null));
      return new A.DateTime(t1, 0, true);
    });
    _lazyFinal($, "Squadron_platformType", "$get$Squadron_platformType", () => B.SquadronPlatformType_JavaScript_2_js);
    _lazyFinal($, "Squadron__platformConverter", "$get$Squadron__platformConverter", () => B.SquadronPlatformType_JavaScript_2_js.get$isJs() ? B.C_CastConverter : B.C_NumConverter);
    _lazy($, "Squadron__converter", "$get$Squadron__converter", () => $.$get$Squadron__platformConverter());
    _lazyFinal($, "CancelationTokenReference_noToken", "$get$CancelationTokenReference_noToken", () => {
      var t1 = new A.CancelationTokenReference("", A.Completer_Completer(type$.SquadronCanceledException), false);
      t1._refCount = 1;
      return t1;
    });
    _lazyFinal($, "WorkerService_noOperations", "$get$WorkerService_noOperations", () => A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.dynamic_Function_List_dynamic));
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({ArrayBuffer: A.NativeByteBuffer, SharedArrayBuffer: A.NativeByteBuffer, ArrayBufferView: A.NativeTypedData, DataView: A.NativeByteData, Float32Array: A.NativeFloat32List, Float64Array: A.NativeFloat64List, Int16Array: A.NativeInt16List, Int32Array: A.NativeInt32List, Int8Array: A.NativeInt8List, Uint16Array: A.NativeUint16List, Uint32Array: A.NativeUint32List, Uint8ClampedArray: A.NativeUint8ClampedList, CanvasPixelArray: A.NativeUint8ClampedList, Uint8Array: A.NativeUint8List});
    hunkHelpers.setOrUpdateLeafTags({ArrayBuffer: true, SharedArrayBuffer: true, ArrayBufferView: false, DataView: true, Float32Array: true, Float64Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false});
    A.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
  })();
  Function.prototype.call$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$2 = function(a, b) {
    return this(a, b);
  };
  Function.prototype.call$0 = function() {
    return this();
  };
  Function.prototype.call$1$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$3 = function(a, b, c) {
    return this(a, b, c);
  };
  Function.prototype.call$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$6 = function(a, b, c, d, e, f) {
    return this(a, b, c, d, e, f);
  };
  Function.prototype.call$2$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$1$0 = function() {
    return this();
  };
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != "undefined") {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i) {
        scripts[i].removeEventListener("load", onLoad, false);
      }
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i) {
      scripts[i].addEventListener("load", onLoad, false);
    }
  })(function(currentScript) {
    init.currentScript = currentScript;
    var callMain = A.main;
    if (typeof dartMainRunner === "function") {
      dartMainRunner(callMain, []);
    } else {
      callMain([]);
    }
  });
})();

//# sourceMappingURL=wallet_tasks.web.g.dart.js.map
